#pragma once

#include "Class.h"

enum class FrameStage;

class ClientClass;

class Client // CHLClient: IBaseClientDLL
{
public:
	INCONSTRUCTIBLE(Client);

	enum __vftable
	{
		// class IBaseClientDLL
		Connect,
		Disconnect,
		Init,
		PostInit,
		Shutdown,
		LevelInitPreEntity,
		LevelInitPostEntity,
		LevelShutdown,
		GetAllClasses,
		_9,
		HudVidInit,
		HudProcessInput,
		HudUpdate,
		HudReset,
		HudText,
		ShouldDrawDropdownConsole,
		IN_ActivateMouse,
		IN_DeactivateMouse,
		IN_Accumulate,
		IN_ClearStates,
		IN_IsKeyDown,
		IN_KeyEvent,
		CreateMove,
		ExtraMouseSample,
		WriteUsercmdDeltaToBuffer,
		EncodeUserCmdToBuffer,
		DecodeUserCmdFromBuffer,
		View_Render,
		RenderView,
		View_Fade,
		SetCrosshairAngle,
		InitSprite,
		ShutdownSprite,
		GetSpriteSize,
		VoiceStatus,
		PlayerAudible,
		InstallStringTableCallback,
		FrameStageNotify,
		DispatchUserMessage,
		SaveInit,
		SaveWriteFields,
		SaveReadFields,
		PreSave,
		Save,
		WriteSaveHeaders,
		ReadRestoreHeaders,
		Restore,
		DispatchOnRestore,
		GetStandardRecvProxies,
		WriteSaveGameScreenshot,
		EmitSentenceCloseCaption,
		EmitCloseCaption,
		CanRecordDemo,
		OnDemoRecordStart,
		OnDemoRecordStop,
		OnDemoPlaybackStart,
		OnDemoPlaybackRestart,
		OnDemoPlaybackStop,
		SetDemoPlaybackHighlightXuid,
		ShowHighlightSkippingMessage,
		RecordDemoPolishUserInput,
		CacheReplayRagdolls,
		ReplayUI_SendMessage,
		GetReplayFactory,
		ClearLocalPlayerReplayPtr,
		GetScreenWidth,
		GetScreenHeight,
		WriteSaveGameScreenshotOfSize,
		WriteReplayScreenshot,
		UpdateReplayScreenshotCache,
		GetPlayerView,
		ShouldHideLoadingPlaque,
		InvalidateMdlCache,
		IN_SetSampleTime,
		OnActiveSplitscreenPlayerChanged,
		OnSplitScreenStateChanged,
		GetSpectatorTarget,
		CenterStringOff,
		OnScreenSizeChanged,
		InstantiateMaterialProxy,
		GetFullscreenClientDLLVPanel,
		MarkEntitiesAsTouching,
		OnKeyBindingChanged,
		SetBlurFade,
		ResetHudCloseCaption,
		HandleGameUIEvent,
		GetSoundSpatialization,
		Hud_SaveStarted,
		ShutdownMovies,
		GetStatus,
		IsBuildWRThreaded,
		QueueBuildWorldListJob,
		CacheFrustumData,
		GetBuildViewFrustum,
		GetBuildViewAeraFrustums,
		IsSubscribedMap,
		IsFeaturedMap,
		DownloadCommunityMapFile,
		GetUGCFileDownloadProgress,
		RecordUIEvent,
		FindInventoryItemWithMaxAttributeValue,
		DetermineSubscriptionKvToAdvertise,
		ValidateSignedEvidenceHeader,
		PrepareSignedEvidenceData,
		ShouldSkipEvidencePlayback,
		GetScaleformSlotInitController,
		IsConnectedUserInfoChangeAllowed,
		GetRichPresenceStatusString,
		CanStopRecordDemo,
		OnHltvReplay,
		OnHltvReplayTick,
		GetHltvReplayDelay,
		OnDemoPlaybackTimeJump,
		OnCommandDuringPlayback,
		RetireAllPlayerDecals,
		EngineGotvSyncPacket,
		GetInEyeEntity,
		OnTickPre,
		__vftable = 125
	};

	VIRTUAL_METHOD(__vftable::GetAllClasses, getAllClasses, __stdcall, ClientClass*, (), (this));
	VIRTUAL_METHOD(__vftable::FrameStageNotify, frameStageNotify, __stdcall, void, (FrameStage stage), (this, stage));
	VIRTUAL_METHOD(__vftable::DispatchUserMessage, dispatchUserMessage, __stdcall, bool, (int messageType, int passthroughFlags, int size, const void* data), (this, messageType, passthroughFlags, size, data));
};