#pragma once

#include "Class.h"
#include "SDK/Struct/Vector3.h"

class NetworkChannel;
class PlayerInfo;
class SteamAPIContext;

struct Matrix4x4;

class Engine // CEngineClient: IVEngineClient
{
public:
	INCONSTRUCTIBLE(Engine);

	enum __vftable
	{
		// class IVEngineClient
		GetIntersectingSurfaces,
		GetLightForPoint,
		TraceLineMaterialAndLighting,
		ParseFile,
		CopyLocalFile,
		GetScreenSize,
		ServerCmd,
		ClientCmd,
		GetPlayerInfo,
		GetPlayerForUserID,
		TextMessageGet,
		Con_IsVisible,
		GetLocalPlayer,
		LoadModel,
		GetLastTimeStamp,
		GetSentence,
		GetSentenceLength,
		IsStreaming,
		GetViewAngles,
		SetViewAngles,
		GetMaxClients,
		Key_LookupBinding,
		Key_BindingForKey,
		Key_SetBinding,
		StartKeyTrapMode,
		CheckDoneKeyTrapping,
		IsInGame,
		IsConnected,
		IsDrawingLoadingImage,
		HideLoadingPlaque,
		Con_NPrintf,
		Con_NXPrintf,
		IsBoxVisible,
		IsBoxInViewCluster,
		CullBox,
		Sound_ExtraUpdate,
		GetGameDirectory,
		WorldToScreenMatrix,
		WorldToViewMatrix,
		GameLumpVersion,
		GameLumpSize,
		LoadGameLump,
		LevelLeafCount,
		GetBSPTreeQuery,
		LinearToGamma,
		LightStyleValue,
		ComputeDynamicLighting,
		GetAmbientLightColor,
		GetDXSupportLevel,
		SupportsHDR,
		Mat_Stub,
		GetChapterName,
		GetLevelName,
		GetLevelNameShort,
		GetMapGroupName,
		GetVoiceTweakAPI,
		SetVoiceCasterID,
		EngineStats_BeginFrame,
		EngineStats_EndFrame,
		FireEvents,
		GetLeavesArea,
		DoesBoxTouchAreaFrustum,
		GetFrustumList,
		ShouldUseAreaFrustum,
		SetAudioState,
		SentenceGroupPick,
		SentenceGroupPickSequential,
		SentenceIndexFromName,
		SentenceNameFromIndex,
		SentenceGroupIndexFromName,
		SentenceGroupNameFromIndex,
		SentenceLength,
		ComputeLighting,
		ActivateOccluder,
		IsOccluded,
		GetOcclusionViewId,
		SaveAllocMemory,
		SaveFreeMemory,
		GetNetChannelInfo,
		DebugDrawPhysCollide,
		CheckPoint,
		DrawPortals,
		IsPlayingDemo,
		IsRecordingDemo,
		IsPlayingTimeDemo,
		GetDemoRecordingTick,
		GetDemoPlaybackTick,
		GetDemoPlaybackStartTick,
		GetDemoPlaybackTimeScale,
		GetDemoPlaybackTotalTicks,
		IsPaused,
		GetTimescale,
		IsTakingScreenshot,
		IsHLTV,
		IsLevelMainMenuBackground,
		GetMainMenuBackgroundName,
		SetOcclusionParameters,
		GetUILanguage,
		IsSkyboxVisibleFromPoint,
		GetMapEntitiesString,
		IsInEditMode,
		GetScreenAspectRatio,
		REMOVED_SteamRefreshLogin,
		REMOVED_SteamProcessCall,
		GetEngineBuildNumber,
		GetProductVersionString,
		GrabPreColorCorrectedFrame,
		IsHammerRunning,
		ExecuteClientCmd,
		MapHasHDRLighting,
		MapHasLightMapAlphaData,
		GetAppID,
		GetLightForPointFast,
		ClientCmd_Unrestricted,
		ClientCmd_Unrestricted2,
		SetRestrictServerCommands,
		SetRestrictClientCommands,
		SetOverlayBindProxy,
		CopyFrameBufferToMaterial,
		ReadConfiguration,
		SetAchievementMgr,
		GetAchievementMgr,
		MapLoadFailed,
		SetMapLoadFailed,
		IsLowViolence,
		GetMostRecentSaveGame,
		SetMostRecentSaveGame,
		StartXboxExitingProcess,
		IsSaveInProgress,
		IsAutoSaveDangerousInProgress,
		OnStorageDeviceAttached,
		OnStorageDeviceDetached,
		GetSaveDirName,
		WriteScreenshot,
		ResetDemoInterpolation,
		GetActiveSplitScreenPlayerSlot,
		SetActiveSplitScreenPlayerSlot,
		SetLocalPlayerIsResolvable,
		IsLocalPlayerResolvable,
		GetSplitScreenPlayer,
		IsSplitScreenActive,
		IsValidSplitScreenSlot,
		FirstValidSplitScreenSlot,
		NextValidSplitScreenSlot,
		GetSinglePlayerSharedMemorySpace,
		ComputeLightingCube,
		RegisterDemoCustomDataCallback,
		RecordDemoCustomData,
		SetPitchScale,
		GetPitchScale,
		LoadFilmmaker,
		UnloadFilmmaker,
		SetLeafFlag,
		RecalculateBSPLeafFlags,
		DSPGetCurrentDASRoomNew,
		DSPGetCurrentDASRoomChanged,
		DSPGetCurrentDASRoomSkyAbove,
		DSPGetCurrentDASRoomSkyPercent,
		SetMixGroupOfCurrentMixer,
		GetMixLayerIndex,
		SetMixLayerLevel,
		GetMixGroupIndex,
		SetMixLayerTriggerFactor,
		SetMixLayerTriggerFactor2,
		IsCreatingReslist,
		IsCreatingXboxReslist,
		SetTimescale,
		SetGamestatsData,
		GetGamestatsData,
		Key_LookupBindingEx,
		Key_CodeForBinding,
		UpdateDAndELights,
		GetBugSubmissionCount,
		ClearBugSubmissionCount,
		DoesLevelContainWater,
		GetServerSimulationFrameTime,
		SolidMoved,
		TriggerMoved,
		ComputeLeavesConnected,
		IsInCommentaryMode,
		SetBlurFade,
		IsTransitioningToLoad,
		SearchPathsChangedAfterInstall,
		ConfigureSystemLevel,
		SetConnectionPassword,
		CSteamAPIContext,
		SubmitStatRecord,
		ServerCmdKeyValues,
		SendMessageToServer,
		SpherePaintSurface,
		HasPaintmap,
		EnablePaintmapRender,
		SphereTracePaintSurface,
		RemoveAllPaint,
		PaintAllSurfaces,
		RemovePaint,
		IsActiveApp,
		IsClientLocalToActiveServer,
		TickProgressBar,
		GetInputContext,
		GetStartupImage,
		IsUsingLocalNetworkBackdoor,
		SaveGame,
		GetGenericMemoryStats,
		GameHasShutdownAndFlushedMemory,
		GetLastAcknowledgedCommand,
		FinishContainerWrites,
		FinishAsyncSave,
		GetServerTick,
		GetModDirectory,
		AudioLanguageChanged,
		IsAutoSaveInProgress,
		StartLoadingScreenForCommand,
		StartLoadingScreenForKeyValues,
		SOSSetOpvarFloat,
		SOSGetOpvarFloat,
		IsSubscribedMap,
		IsFeaturedMap,
		GetDemoPlaybackParameters,
		GetClientVersion,
		IsDemoSkipping,
		SetDemoImportantEventData,
		ClearEvents,
		GetSafeZoneXMin,
		IsVoiceRecording,
		ForceVoiceRecordOn,
		GetConnectionDataProtocol,
		EngineGotvSyncPacket,
		AliasToCommandString,
		__vftable = 237
	};

	VIRTUAL_METHOD(__vftable::GetScreenSize, getScreenSize, __stdcall, void, (int& w, int& h), (this, std::ref(w), std::ref(h)));
	VIRTUAL_METHOD(__vftable::GetPlayerInfo, getPlayerInfo, __stdcall, bool, (int entityIndex, PlayerInfo& playerInfo), (this, entityIndex, std::ref(playerInfo)));
	VIRTUAL_METHOD(__vftable::GetPlayerForUserID, getPlayerForUserID, __stdcall, int, (int userId), (this, userId));
	VIRTUAL_METHOD(__vftable::GetViewAngles, getViewAngles, __stdcall, void, (Vector3& angles), (this, std::ref(angles)));
	VIRTUAL_METHOD(__vftable::SetViewAngles, setViewAngles, __stdcall, void, (const Vector3& angles), (this, std::cref(angles)));
	VIRTUAL_METHOD(__vftable::GetMaxClients, getMaxClients, __stdcall, int, (), (this));
	VIRTUAL_METHOD(__vftable::IsInGame, isInGame, __stdcall, bool, (), (this));
	VIRTUAL_METHOD(__vftable::IsConnected, isConnected, __stdcall, bool, (), (this));
	VIRTUAL_METHOD(__vftable::CullBox, cullBox, __stdcall, bool, (const Vector3& mins, const Vector3& maxs), (this, std::cref(mins), std::cref(maxs)));
	VIRTUAL_METHOD(__vftable::WorldToScreenMatrix, worldToScreenMatrix, __stdcall, const Matrix4x4&, (), (this));
	VIRTUAL_METHOD(__vftable::GetBSPTreeQuery, getBSPTreeQuery, __stdcall, void*, (), (this));
	VIRTUAL_METHOD(__vftable::GetLevelName, getLevelName, _stdcall, const char*, (), (this));
	VIRTUAL_METHOD(__vftable::GetNetChannelInfo, getNetChannelInfo, __stdcall, NetworkChannel*, (), (this));
	VIRTUAL_METHOD(__vftable::ClientCmd_Unrestricted2, clientCmdUnrestricted, __stdcall, void, (const char* cmd, bool fromConsoleOrKeybind = false), (this, cmd, fromConsoleOrKeybind));
	VIRTUAL_METHOD(__vftable::GetScreenAspectRatio, getScreenAspectRatio, __stdcall, float, (int width, int height), (this, width, height));
	VIRTUAL_METHOD(__vftable::CSteamAPIContext, cSteamAPIContext, __stdcall, const SteamAPIContext*, (), (this));

	[[nodiscard]] constexpr Vector3 getViewAngles() noexcept
	{
		Vector3 ang;
		getViewAngles(ang);
		return ang;
	}
};