#pragma once

// Remnant: From the Ashes SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "RFTA_GunfireRuntime_structs.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Classes
//---------------------------------------------------------------------------

// Class GunfireRuntime.CraftingRecipe_Base
// 0x0088 (0x00B0 - 0x0028)
class UCraftingRecipe_Base : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FGuid                                       Guid;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, NonPIEDuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       Tag;                                                      // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERecipeType                                        Type;                                                     // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	class UClass*                                      Ingredient1;                                              // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Ingredient1Quantity;                                      // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Ingredient1LevelRequirement;                              // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIngredient1HideIfMissing;                                // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	class UClass*                                      Ingredient2;                                              // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Ingredient2Quantity;                                      // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Ingredient2LevelRequirement;                              // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIngredient2HideIfMissing;                                // 0x0078(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0079(0x0007) MISSED OFFSET
	class UClass*                                      Ingredient3;                                              // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Ingredient3Quantity;                                      // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Ingredient3LevelRequirement;                              // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIngredient3HideIfMissing;                                // 0x0090(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0091(0x0007) MISSED OFFSET
	class UClass*                                      Ingredient4;                                              // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Ingredient4Quantity;                                      // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Ingredient4LevelRequirement;                              // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIngredient4HideIfMissing;                                // 0x00A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x7];                                       // 0x00A9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CraftingRecipe_Base");
		return ptr;
	}

};


// Class GunfireRuntime.ActorModifier
// 0x0090 (0x00B8 - 0x0028)
class UActorModifier : public UObject
{
public:
	struct FName                                       NameID;                                                   // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       Category;                                                 // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EActorModifierScope                                Scope;                                                    // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	struct FDataTableRowHandle                         Stats;                                                    // 0x0040(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FName>                               Tags;                                                     // 0x0050(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                Level;                                                    // 0x0060(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FText                                       Label;                                                    // 0x0068(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       Description;                                              // 0x0080(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UTexture2D*                                  Icon;                                                     // 0x0098(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      InspectStats;                                             // 0x00A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                      Owner;                                                    // 0x00A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStatsComponent*                             StatsComponent;                                           // 0x00B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ActorModifier");
		return ptr;
	}


	void SetOwner(class AActor** NewOwner);
	void SetLevel(int* NewLevel);
	void ScaleStat(struct FName* Stat, float* Scalar, bool* AutoInitValue);
	void PostComputeStats();
	void OnUnequipped();
	void OnTick(float* DeltaSeconds);
	void OnTakeDamage(struct FDamageInfo* DamageInfo);
	void OnRep_Level();
	void OnPostComputeStats();
	void OnLevelChanged();
	void OnHitTarget(struct FDamageInfo* DamageInfo);
	void OnEquipped();
	void OnComputeStats();
	void OnComputeDerivedStats();
	void OnAdded();
	void NotifyTakeDamage(struct FDamageInfo* DamageInfo);
	void NotifyHitTarget(struct FDamageInfo* DamageInfo);
	void ModifyStat(struct FName* Stat, float* Value);
	void ModifyInspectInfo(class AActor** Actor, int* InspectLevel, struct FInspectInfo* Info, bool* Rtn);
	void ModifyDamage(struct FDamageInfo* Info, bool* Rtn);
	float GetStat(struct FName* Stat);
	class ACharacter* GetOwningCharacter();
	class AActor* GetOwner();
	struct FInspectInfo GetInspectInfo(class AActor** Actor, int* InspectLevel);
	void FilterIncomingFallDamage(float* Damage, float* DamageInfoOut, bool* ShouldApplyDamage);
	void FilterIncomingDamage(struct FDamageInfo* DamageInfo, struct FDamageInfo* DamageInfoOut, bool* ShouldApplyDamage);
	void ComputeStats();
	void ComputeDerivedStats();
};


// Class GunfireRuntime.ActionBase
// 0x0170 (0x0228 - 0x00B8)
class UActionBase : public UActorModifier
{
public:
	int                                                ActionID;                                                 // 0x00B8(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET
	struct FDamageInfo                                 DamageInfo;                                               // 0x00C0(0x0160) (BlueprintVisible, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                               ApplyOnKilled;                                            // 0x0220(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0221(0x0001) MISSED OFFSET
	bool                                               bStopOnCinematic;                                         // 0x0222(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x5];                                       // 0x0223(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ActionBase");
		return ptr;
	}


	void SetCause(class AActor** Cause);
	void OnCinematic(class APlayerControllerGunfire** Player, bool* bIsInCinematicMode);
	void OnActionStop();
	void OnActionStart();
	bool IsActionFinished();
	class AActor* GetTarget();
	struct FHitResult GetHitInfo();
	class UClass* GetDamageType();
	class AActor* GetCauseOwner();
	class AActor* GetCause();
	class UActionComponent* GetActionComponent();
	class AActor* FireProjectile(class AActor** CauseActor, struct FName* SourceSocket, class AActor** TargetActor, class UClass** ProjectileBP, float* Speed, bool* bOrientTowardsTarget, float* AutoArcHeight, float* GravityScale);
	void FinishAction();
	void STATIC_DoInstantHit(class AActor** CauseActor, struct FName* SourceSocket, float* Range, int* SprayCount, float* Spread, class UClass** DamageType, float* Damage, float* DamageMod, float* DamageScalar);
	void ApplyDamage(class AActor** CauseActor, class AActor** TargetActor, float* Damage, float* DamageMod, float* DamageScalar, class UClass** DamageType, struct FHitResult* HitInfo);
	bool AllowAction(class UClass** ActionBP, struct FDamageInfo* InDamageInfo);
};


// Class GunfireRuntime.Item
// 0x0180 (0x04B0 - 0x0330)
class AItem : public AActor
{
public:
	class UPersistenceComponent*                       PersistenceComp;                                          // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      Type;                                                     // 0x0338(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      Category;                                                 // 0x0340(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxStackCount;                                            // 0x0348(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x034C(0x0004) MISSED OFFSET
	class UItemInstanceData*                           InstanceData;                                             // 0x0350(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, SaveGame, IsPlainOldData, RepNotify, NoDestructor, AdvancedDisplay, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         Stats;                                                    // 0x0358(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bNeedsQuantityToSelect;                                   // 0x0368(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0369(0x0007) MISSED OFFSET
	struct FText                                       Label;                                                    // 0x0370(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                              // 0x0388(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	struct FText                                       PickupDescription;                                        // 0x03A0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Icon;                                                     // 0x03B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>                   LargeIcon;                                                // 0x03C0(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  HUDIcon;                                                  // 0x03E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Interactable;                                             // 0x03F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseInteractInfo;                                          // 0x03F1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x6];                                       // 0x03F2(0x0006) MISSED OFFSET
	struct FText                                       InteractLabel;                                            // 0x03F8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FName                                       InteractIconName;                                         // 0x0410(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  InteractIcon;                                             // 0x0418(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   PickupSound;                                              // 0x0420(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       PickupChanceApplyModStatName;                             // 0x0428(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       PickupModStatName;                                        // 0x0430(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       PickupScalarStatName;                                     // 0x0438(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LootFxAttachNode;                                         // 0x0440(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             LootFxOverride;                                           // 0x0448(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DoBounce;                                                 // 0x0450(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0451(0x0003) MISSED OFFSET
	struct FName                                       BounceAnimRoot;                                           // 0x0454(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x4];                                       // 0x045C(0x0004) MISSED OFFSET
	class USoundCue*                                   BounceFlipSound;                                          // 0x0460(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   BounceSound;                                              // 0x0468(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DroppedImpactEffect;                                      // 0x0470(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOnGround;                                                // 0x0478(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0479(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCollected;                                              // 0x0480(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*                    LootFxParticles;                                          // 0x0490(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               Inspecting;                                               // 0x0498(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x17];                                      // 0x0499(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Item");
		return ptr;
	}


	bool ValidateAdd(class UInventoryComponent** Inventory, int* DesiredQuantity, int* AllowedQuantity);
	void SetQuantity(int* Quantity);
	void SetLevel(unsigned char* Level);
	bool PreAdd(class UInventoryComponent** Inventory, int* Quantity);
	bool PickupPreAdd(class UInventoryComponent** Inventory, int* Quantity, int* Level);
	void OnRep_InstanceData(class UItemInstanceData** PrevData);
	void OnPickupFailed();
	void OnPickedUp();
	void OnDropped();
	void ModifyInspectInfo(class AActor** Actor, class UItemInstanceData** InInstanceData, struct FInspectInfo* Info, bool* Rtn);
	void InitializeLootFxForLocalPawn(class APawn** Pawn);
	int GetQuantity();
	int GetMaxQuantity();
	unsigned char GetLevel();
	struct FInspectInfo GetInspectInfo(class AActor** Actor, class UItemInstanceData** InInstanceData, int* LevelOverride);
	void DropBounce();
	void Bounce();
};


// Class GunfireRuntime.Equipment
// 0x00F8 (0x05A8 - 0x04B0)
class AEquipment : public AItem
{
public:
	struct FName                                       VisualID;                                                 // 0x04B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AnimationLayer;                                           // 0x04B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEquipmentAttachment>                Attachments;                                              // 0x04C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                               AutoEnableInput;                                          // 0x04D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldUnequip;                                            // 0x04D1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseEquipmentAnimTimings;                                  // 0x04D2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x5];                                       // 0x04D3(0x0005) MISSED OFFSET
	TArray<struct FEquipmentModSlot>                   ModSlots;                                                 // 0x04D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FName>                               ActiveTags;                                               // 0x04E8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FName>                               CharacterAnimTags;                                        // 0x04F8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FName                                       AdditionalAnimTag;                                        // 0x0508(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   EquipSound;                                               // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStatsComponent*                             StatsComp;                                                // 0x0518(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEquippedEvent;                                          // 0x0520(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUnequippedEvent;                                        // 0x0530(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FAnimationHandle                            CurrentAnimHandle;                                        // 0x0540(0x0020) (NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0560(0x0008) MISSED OFFSET
	class ACharacterGunfire*                           Character;                                                // 0x0568(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACharacterGunfire*                           CharacterReplicated;                                      // 0x0570(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0578(0x0010) MISSED OFFSET
	TArray<class AEquipmentMod*>                       ModInstances;                                             // 0x0588(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UVisualComponent*                            VisualComponent;                                          // 0x0598(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03 : 4;                                        // 0x05A0(0x0001)
	unsigned char                                      bIsActiveReplicated : 1;                                  // 0x05A0(0x0001) (Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bIsInHandReplicated : 1;                                  // 0x05A0(0x0001) (Net, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x7];                                       // 0x05A1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Equipment");
		return ptr;
	}


	bool ValidateEquip(class ACharacterGunfire** ToCharacter);
	void Unequip();
	void SetInputEnabled(bool* Enabled);
	void SetInHand(bool* InHand);
	void SetAttachmentsVisible(bool* Visible);
	void ServerSetInHand(bool* InHand);
	void ScaleStat(struct FName* Stat, float* Scalar, bool* AutoInitValue);
	void PostSetupInventory();
	void PostComputeStats();
	void PostComputeCharacterStats();
	float PlayAnimation(struct FName* AnimationID, float* PlayRate, bool* bCharacterOnly);
	void OnUnequipped();
	void OnTakeDamage(struct FDamageInfo* DamageInfo);
	void OnPostComputeStats();
	void OnNotInHand();
	void OnInHand();
	void OnHitTarget(struct FDamageInfo* DamageInfo);
	void OnEquipped();
	void OnDetached();
	void OnDeactivated();
	void OnComputeStats();
	void OnActivated();
	void ModifyStat(struct FName* Stat, float* Value);
	bool IsLocallyControlled();
	bool IsInHand();
	bool IsEquipped();
	bool IsActive();
	bool IsActionAllowed();
	void InstanceDataChanged();
	float GetStat(struct FName* Stat);
	int GetItemID();
	class UInventoryComponent* GetInventoryComponent();
	class AUIHud* GetHud();
	int GetEquipmentSlotIdx();
	class AEquipmentMod* GetEquipmentMod(unsigned char* Slot);
	struct FName GetCurrentAnimation();
	class ACharacterGunfire* GetCharacter();
	TArray<class AEquipmentMod*> GetAttachedMods();
	void Detach();
	void Deactivate();
	void ComputeStats();
	void ComputeCharacterStats();
	void Activate();
	void _NotifyTakeDamage(struct FDamageInfo* DamageInfo);
	void _NotifyHitTarget(struct FDamageInfo* DamageInfo);
};


// Class GunfireRuntime.UseableItem
// 0x0050 (0x05F8 - 0x05A8)
class AUseableItem : public AEquipment
{
public:
	class UConditionList*                              Conditions;                                               // 0x05A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       UseState;                                                 // 0x05B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       UseAnim;                                                  // 0x05B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       PlayRateStat;                                             // 0x05C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               UseTags;                                                  // 0x05C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EUsableActivationType                              ActivationType;                                           // 0x05D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bConsumeInput;                                            // 0x05D9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x05DA(0x0002) MISSED OFFSET
	float                                              HoldTime;                                                 // 0x05DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x10];                                      // 0x05E0(0x0010) MISSED OFFSET
	struct FTimerHandle                                HoldTimerHandle;                                          // 0x05F0(0x0008) (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.UseableItem");
		return ptr;
	}


	bool ValidateUse(class AActor** Actor);
	void UseItem();
	void Use();
	void ServerKeyPressed();
	void RemoveItem();
	void OnUse();
	void MulticastSetState(unsigned char* NewState);
};


// Class GunfireRuntime.ItemInstanceData
// 0x0018 (0x0040 - 0x0028)
class UItemInstanceData : public UObject
{
public:
	unsigned char                                      Level;                                                    // 0x0028(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                Quantity;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnChanged;                                                // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ItemInstanceData");
		return ptr;
	}


	void OnRep_InstanceData();
};


// Class GunfireRuntime.EquipmentInstanceData
// 0x0010 (0x0050 - 0x0040)
class UEquipmentInstanceData : public UItemInstanceData
{
public:
	struct FEquipmentMods                              Mods;                                                     // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, SaveGame, RepNotify, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EquipmentInstanceData");
		return ptr;
	}

};


// Class GunfireRuntime.StateMachineSubobject
// 0x0000 (0x0028 - 0x0028)
class UStateMachineSubobject : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.StateMachineSubobject");
		return ptr;
	}

};


// Class GunfireRuntime.Condition
// 0x0008 (0x0030 - 0x0028)
class UCondition : public UStateMachineSubobject
{
public:
	bool                                               InvertCondition;                                          // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Condition");
		return ptr;
	}

};


// Class GunfireRuntime.ItemType
// 0x0058 (0x0080 - 0x0028)
class UItemType : public UObject
{
public:
	class UClass*                                      BaseType;                                                 // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ItemStats;                                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CharacterStats;                                           // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       Label;                                                    // 0x0040(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Icon;                                                     // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               Tags;                                                     // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              AdditionalTypes;                                          // 0x0070(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ItemType");
		return ptr;
	}


	TArray<struct FItemQueryResult> STATIC_QueryRelevantItems(TArray<class UInventoryComponent*>* Inventories, struct FItemQueryFilter* Filter, EItemQuerySortMethod* SortMethod);
	TArray<class UInventoryComponent*> STATIC_GetRelevantInventoriesForType(class AActor** Actor, class UClass** Type);
};


// Class GunfireRuntime.WeaponBase
// 0x0018 (0x05C0 - 0x05A8)
class AWeaponBase : public AEquipment
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x05A8(0x0008) MISSED OFFSET
	class UClass*                                      DamageType;                                               // 0x05B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ImpactEffect;                                             // 0x05B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WeaponBase");
		return ptr;
	}


	float GetProcChance();
	class UClass* GetImpactEffect();
	float GetAttackSpeed();
	void ComputeDamage(class AActor** Actor, float* Damage, float* AttackRating);
	bool AttemptProc(float* BonusChance);
};


// Class GunfireRuntime.AnimInstanceGunfire
// 0x0840 (0x0AB0 - 0x0270)
class UAnimInstanceGunfire : public UAnimInstance
{
public:
	float                                              TurnSpeed;                                                // 0x0270(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GroundSlope;                                              // 0x0274(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Direction;                                                // 0x0278(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputDirection;                                           // 0x027C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VerticalDirection;                                        // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimYaw;                                                   // 0x0284(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimPitch;                                                 // 0x0288(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    LookRotation;                                             // 0x028C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0298(0x0008) MISSED OFFSET
	TArray<struct FAnimationLayer>                     AnimationLayers;                                          // 0x02A0(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FName>                               AnimationTags;                                            // 0x02B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                               UseVelocityOverride;                                      // 0x02C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x02C1(0x0003) MISSED OFFSET
	struct FVector                                     VelocityOverride;                                         // 0x02C4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLegIkEffector>                      LegIkEffectors;                                           // 0x02D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                               UseTargetForAim;                                          // 0x02E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAdjustTargetDirectionByMeshOrientation;                  // 0x02E1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCalculateGroundSlope;                                    // 0x02E2(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bClearTimeDilationOnStateChange;                          // 0x02E3(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x02E4(0x0004) MISSED OFFSET
	class APawn*                                       OwningPawn;                                               // 0x02E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACharacterGunfire*                           OwningCharacter;                                          // 0x02F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputStateComponent*                        Input;                                                    // 0x02F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x30];                                      // 0x0300(0x0030) MISSED OFFSET
	class UAnimInstanceGunfire*                        ParentAnimInstance;                                       // 0x0330(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UAnimInstanceGunfire*>                ChildAnimInstances;                                       // 0x0338(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x6D0];                                     // 0x0348(0x06D0) MISSED OFFSET
	class UStateMachineComponent*                      CachedStateMachine;                                       // 0x0A18(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bDoNotifyTriggerRateOptimizations;                        // 0x0A20(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableRateOptimizationsDuringCinematics;                // 0x0A21(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0A22(0x0002) MISSED OFFSET
	int                                                MinNotifiesPerFrame;                                      // 0x0A24(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxNotifiesPerFrame;                                      // 0x0A28(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                QueuedNotifyFlushThreshold;                               // 0x0A2C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DefaultBone;                                              // 0x0A30(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x78];                                      // 0x0A38(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimInstanceGunfire");
		return ptr;
	}


	void UpdateLegIkEffector(struct FLegIkEffector* Effector);
	void STATIC_StopAnimation(struct FAnimationHandle* Handle);
	void SetParentAnimInstance(class UAnimInstanceGunfire** AnimInstance);
	void RemoveLegIkEffector(struct FName* IkBone);
	void RemoveChildAnimInstance(class UAnimInstanceGunfire** AnimInstance);
	void RemoveAnimationTag(struct FName* AnimTag);
	struct FAnimationHandle PlayAnimationByID(struct FName* AnimationLayer, struct FName* AnimationID);
	bool HasAnimationTag(struct FName* AnimTag);
	class UStateMachineComponent* GetStateMachine();
	float GetMoveInputDir();
	float GetMoveDir();
	class UAnimInstanceGunfire* STATIC_GetMasterAnimInstance(class AActor** Actor);
	struct FLegIkEffector GetLegIkEffector(struct FName* IkBone);
	float GetHeading();
	void GetAimAngles(struct FName* RefBone, float* Yaw, float* Pitch);
	void EnableLookPoses(bool* bEnabled);
	bool CompareAngles(float* Angle1, float* Angle2, float* Arc);
	bool AreLookPosesDisabled();
	void AddChildAnimInstance(class UAnimInstanceGunfire** AnimInstance);
	void AddAnimationTag(struct FName* AnimTag);
};


// Class GunfireRuntime.ItemCategory
// 0x0020 (0x0048 - 0x0028)
class UItemCategory : public UObject
{
public:
	struct FText                                       Label;                                                    // 0x0028(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Icon;                                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ItemCategory");
		return ptr;
	}

};


// Class GunfireRuntime.TraitsComponent
// 0x00C0 (0x01B8 - 0x00F8)
class UTraitsComponent : public UActorComponent
{
public:
	class UDataTable*                                  TraitPointsPerLevelTable;                                 // 0x00F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              AvailableTraits;                                          // 0x0100(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FTraitSlot>                          TraitSlots;                                               // 0x0110(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                DefaultTraitLevel;                                        // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TraitPoints;                                              // 0x0124(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TraitPointsSpent;                                         // 0x0128(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTraitUpdated;                                           // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTraitAdded;                                             // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTraitRemoved;                                           // 0x0150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTraitAddFailed;                                         // 0x0160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTraitLevelChanged;                                      // 0x0170(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTraitPointAdded;                                        // 0x0180(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0190(0x0008) MISSED OFFSET
	TArray<struct FTraitInfo>                          Traits;                                                   // 0x0198(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTraitInfo>                          OldTraits;                                                // 0x01A8(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TraitsComponent");
		return ptr;
	}


	bool UnlockTrait(class UClass** TraitBP, int* StartingLevel);
	void SetTraitLevel(class UClass** TraitBP, int* NewLevel, bool* bAwardTraitPoints);
	void SetAllTraitLevels(int* NewLevel, bool* bAwardTraitPoints);
	void ServerUnlockTrait(class UClass** TraitBP, int* StartingLevel);
	void Purchase(class UClass** TraitBP);
	void OnRep_Traits();
	void OnRep_TraitPointsSpent();
	void OnRep_TraitPoints();
	void OnLevelUp();
	void OnComputeStats();
	bool HasTraitByName(struct FName* NameID, int* RequiredLevel);
	bool HasTrait(class UClass** TraitBP, int* RequiredLevel);
	int GetTraitLevel(class UClass** TraitBP);
	int GetTotalTraitLevels();
	class UProgressionComponent* GetProgression();
	TArray<struct FTraitInfo> GetAvailableTraits();
	int GetAvailableTraitPoints();
	TArray<struct FTraitInfo> GetAllTraits();
	void Equip(class UClass** TraitBP, int* SlotIndex);
	bool CanPurchase(class UClass** TraitBP);
	bool CanEquip(class UClass** TraitBP, int* SlotIndex);
	void AddTraitPoints(int* Points);
	bool AddTrait(class UClass** TraitBP, int* Level);
};


// Class GunfireRuntime.PlayerStateGunfire
// 0x0040 (0x0498 - 0x0458)
class APlayerStateGunfire : public APlayerState
{
public:
	struct FScriptMulticastDelegate                    OnPawnChanged;                                            // 0x0458(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTalkingChanged;                                         // 0x0468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerNameChanged;                                      // 0x0478(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class APawn*                                       CachedPawn;                                               // 0x0488(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0490(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PlayerStateGunfire");
		return ptr;
	}


	class APawn* GetPlayerPawn();
	class ACharacterGunfire* GetPlayerCharacter();
	bool GetIsTalking();
};


// Class GunfireRuntime.RangedWeapon
// 0x05D8 (0x0B98 - 0x05C0)
class ARangedWeapon : public AWeaponBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x05C0(0x0008) MISSED OFFSET
	class UClass*                                      Profile;                                                  // 0x05C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReticule*                                   Reticule;                                                 // 0x05D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               FireWhileAimingOnly;                                      // 0x05D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowActionOnFlinch;                                      // 0x05D9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ReloadAfterStartLoop;                                     // 0x05DA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERangedWeaponTrajectoryMode                        TrajectoryMode;                                           // 0x05DB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ProjectileExtent;                                         // 0x05DC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ProjectileSocket;                                         // 0x05E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MuzzleObstructionDistance;                                // 0x05F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x05F4(0x0004) MISSED OFFSET
	class UClass*                                      ProjectileToVisualize;                                    // 0x05F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FProjectileVisualizationParams              VisualizationParams;                                      // 0x0600(0x0020) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class UClass*                                      AmmoType;                                                 // 0x0620(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AmmoPool;                                                 // 0x0628(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       FireInput;                                                // 0x0630(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ReloadInput;                                              // 0x0638(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ReloadOnRelease;                                          // 0x0640(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0641(0x0003) MISSED OFFSET
	struct FName                                       AimInput;                                                 // 0x0644(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ScopeInput;                                               // 0x064C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DoubleClickScopeInput;                                    // 0x0654(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0xC];                                       // 0x065C(0x000C) MISSED OFFSET
	float                                              MinimumAimTime;                                           // 0x0668(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x14];                                      // 0x066C(0x0014) MISSED OFFSET
	class UReticule*                                   ScopeReticule;                                            // 0x0680(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ScopeWidget;                                              // 0x0688(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>           ScopePostProcess;                                         // 0x0690(0x0028) (Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  ScopeInSound;                                             // 0x06B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  ScopeOutSound;                                            // 0x06C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseCameraWhenAimingWithScope;                            // 0x06C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x06C9(0x0003) MISSED OFFSET
	struct FVector                                     CameraRelativeScopeOffset;                                // 0x06CC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AimScopeInput;                                            // 0x06D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumAimDelayForScope;                                  // 0x06E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x4];                                       // 0x06E4(0x0004) MISSED OFFSET
	struct FCustomWeaponSpread                         CustomSpread;                                             // 0x06E8(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              ReadyTime;                                                // 0x0710(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReloadStartTime;                                          // 0x0714(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReloadLoopTime;                                           // 0x0718(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReloadEndTime;                                            // 0x071C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReloadTime;                                               // 0x0720(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReloadSpeed;                                              // 0x0724(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       MuzzleAttachPoint;                                        // 0x0728(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             MuzzleFX;                                                 // 0x0730(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AttachMuzzleFX;                                           // 0x0738(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0739(0x0003) MISSED OFFSET
	struct FName                                       OutOfAmmoSoundIDName;                                     // 0x073C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0744(0x0004) MISSED OFFSET
	class USoundBase*                                  OutOfAmmoSoundCue;                                        // 0x0748(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseLowAmmoSounds;                                         // 0x0750(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0751(0x0003) MISSED OFFSET
	int                                                LowAmmoCount;                                             // 0x0754(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundBase*                                  BulletWhizBySoundCue;                                     // 0x0758(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BulletWhizByRadius;                                       // 0x0760(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0764(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnReload;                                                 // 0x0768(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData11[0x160];                                     // 0x0778(0x0160) MISSED OFFSET
	class UVitalityComponent*                          AmmoPoolComponent;                                        // 0x08D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             Muzzle;                                                   // 0x08E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FProjectileVisualizationContext             VisualizationContext;                                     // 0x08E8(0x0028) (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0x20];                                      // 0x0910(0x0020) MISSED OFFSET
	struct FRangedWeaponMode                           DefaultWeaponMode;                                        // 0x0930(0x0120) (Transient, Protected, NativeAccessSpecifierProtected)
	struct FRangedWeaponMode                           OverrideWeaponMode;                                       // 0x0A50(0x0120) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData13[0x18];                                      // 0x0B70(0x0018) MISSED OFFSET
	TArray<class AProjectileBase*>                     FiredProjectiles;                                         // 0x0B88(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.RangedWeapon");
		return ptr;
	}


	void TriggerSoundAwareness(float* Radius);
	void ToggleScopeInput(bool* bRequiresAimInput);
	void SetFireInput(struct FName* FireInputName);
	void ServerSetState(unsigned char* InState);
	void ServerFire(struct FVector_NetQuantize* from, struct FReplicatedLocation* to, float* WeaponSpread, uint32_t* RandomSeed, struct FReplicatedHits* ClientHits);
	void Reload();
	void PlayMuzzleFX(class UParticleSystem** WeaponMuzzleFX, bool* Attach);
	void PlayFireAnimation(struct FName* AnimationID);
	void OnScopeInputPressed();
	void OnReloaded();
	void OnPreFireEnd();
	void OnPreFireBegin();
	void OnFireEnd();
	void OnFireBegin();
	void OnFire(struct FVector* from, struct FVector* to, float* WeaponSpread);
	void OnFinishLoadingScopePostProcess();
	void OnDoubleClickScopeInputReleased();
	void OnDoubleClickScopeInputPressed();
	void MulticastSetStateNS(unsigned char* InState);
	void MulticastSetState(unsigned char* InState);
	void MulticastFire(struct FVector_NetQuantize* from, struct FReplicatedLocation* to, float* WeaponSpread, uint32_t* RandomSeed);
	bool IsScopeInputEnabled();
	bool IsReloading();
	bool IsFiring();
	bool IsBusy();
	bool IsAimingWithScope();
	bool IsAiming();
	bool HasScope();
	struct FRangedWeaponMode GetWeaponMode();
	int GetSprayCount();
	float GetScopeFOV();
	float GetRateOfFire();
	float GetRange(bool* bIncludeFalloff);
	struct FRandomStream GetRandomStream();
	struct FProjectileVisualizationContext GetProjectileVisualization();
	float GetNormalizedSpread();
	struct FHitResult GetMuzzleObstruction();
	void GetMuzzleFXPointAndDirection(struct FVector* MuzzlePoint, struct FVector* MuzzleDirection);
	int GetMaxAmmo();
	float GetFalloff(bool* bPrimaryFalloffOnly);
	float GetDamageScalar(float* Distance);
	float GetCurrentSpread();
	float GetBurstRateOfFire();
	int GetBurstCount();
	int GetAmmoPerReload();
	int GetAmmoPerClip();
	int GetAmmoInClip();
	int GetAmmo();
	void GetAimVector(bool* bApplyAimAssist, bool* bOverrideTrajectoryMode, ERangedWeaponTrajectoryMode* TrajectoryModeOverride, struct FVector* from, struct FVector* to);
	struct FVector GetAimTargetLocation();
	struct FHitResult GetAimTarget();
	class AActor* FireProjectile(class AActor** Cause, struct FVector* Origin, struct FVector* End, float* WeaponSpread, class UClass** ProjectileBP, float* Velocity, bool* bGroup);
	void FillClip(int* Amount);
	void EndUse();
	void DoInstantHit(struct FVector* Origin, struct FVector* End, float* WeaponSpread);
	void DoImpact(struct FHitResult* Hit);
	void ConsumeAmmo(int* Amount);
	void ClearDoubleClickTimer();
	bool CanStopAiming();
	bool CanReload();
	bool CanFire();
	void BeginUse();
	void BeginReload();
	void ApplySpread(float* Scalar);
	void ApplyRecoil(float* Scalar);
	void AddAmmo(int* Amount, bool* FillClip);
};


// Class GunfireRuntime.CharacterGunfire
// 0x0350 (0x0AA0 - 0x0750)
class ACharacterGunfire : public ACharacter
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0750(0x0010) MISSED OFFSET
	class UStatsComponent*                             StatsComp;                                                // 0x0760(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActionComponent*                            ActionComp;                                               // 0x0768(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHitLogComponent*                            HitLogComp;                                               // 0x0770(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReplicatedMovementComponent*                ReplicatedMovementComp;                                   // 0x0778(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                         Data;                                                     // 0x0780(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class UDataTable*>                          AdditionalStats;                                          // 0x0790(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UClass*                                      InspectStats;                                             // 0x07A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      Faction;                                                  // 0x07A8(0x0008) (Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DefaultDamageType;                                        // 0x07B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AimBone;                                                  // 0x07B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DefaultImpactEffect;                                      // 0x07C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DefaultBlockEffect;                                       // 0x07C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FootEffect;                                               // 0x07D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FootSprintEffect;                                         // 0x07D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HandEffect;                                               // 0x07E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HandSprintEffect;                                         // 0x07E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      LandEffect;                                               // 0x07F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SlamEffect;                                               // 0x07F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      BodyEffect;                                               // 0x0800(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GlobalFootImpactOffset;                                   // 0x0808(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x080C(0x0004) MISSED OFFSET
	struct FActiveRagdollInfo                          ActiveRagdollInfo;                                        // 0x0810(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	EDecalReceiverType                                 ReceiveDecals;                                            // 0x0840(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               NetNotifyHitTarget;                                       // 0x0841(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0842(0x0002) MISSED OFFSET
	uint32_t                                           SpawnID;                                                  // 0x0844(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AggroGroup;                                               // 0x0848(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0850(0x0010) MISSED OFFSET
	struct FName                                       SpawnState;                                               // 0x0860(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Level;                                                    // 0x0868(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0869(0x0003) MISSED OFFSET
	int                                                Seed;                                                     // 0x086C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HealthNormalized;                                         // 0x0870(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0874(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTargetChanged;                                          // 0x0878(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTargeted;                                               // 0x0888(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSpectatorAdded;                                         // 0x0898(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSpectatorRemoved;                                       // 0x08A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFactionChanged;                                         // 0x08B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnNotifyHitTarget;                                        // 0x08C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnNotifyTakeDamage;                                       // 0x08D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnNotifyHealthChanged;                                    // 0x08E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPreDead;                                                // 0x08F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDead;                                                   // 0x0908(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEvent;                                                  // 0x0918(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnViewportFocusEvent;                                     // 0x0928(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               EnableCharacterOptimizations;                             // 0x0938(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0939(0x0003) MISSED OFFSET
	float                                              ActivationHalfHeightInflation;                            // 0x093C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ActivationRadiusInflation;                                // 0x0940(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumTimeDilation;                                      // 0x0944(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStateMachineComponent*                      CachedStateMachine;                                       // 0x0948(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryComponent*                         CachedInventory;                                          // 0x0950(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    ViewRotation;                                             // 0x0958(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0964(0x0004) MISSED OFFSET
	class AActor*                                      Target;                                                   // 0x0968(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACharacterGunfire*                           CharacterTarget;                                          // 0x0970(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                      AimTarget;                                                // 0x0978(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x90];                                      // 0x0980(0x0090) MISSED OFFSET
	struct FWeaponPhantomProvider                      WeaponPhantomProvider;                                    // 0x0A10(0x0040) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x1];                                       // 0x0A50(0x0001) MISSED OFFSET
	bool                                               bSkipWallChecks;                                          // 0x0A51(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData10[0x3B];                                      // 0x0A52(0x003B) MISSED OFFSET
	bool                                               bPauseClothSimulationOnTimeDilation;                      // 0x0A8D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bResetAnimDynamicsOnResumeClothingSim;                    // 0x0A8E(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData11[0x1];                                       // 0x0A8F(0x0001) MISSED OFFSET
	float                                              ClothSimulationPauseThreshold;                            // 0x0A90(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData12[0x4];                                       // 0x0A94(0x0004) MISSED OFFSET
	class UCharacterManager*                           CharacterManager;                                         // 0x0A98(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CharacterGunfire");
		return ptr;
	}


	void StopWeaponPhantom(class UShapeComponent** Shape);
	void StopAllWeaponPhantoms();
	void StartWeaponPhantom(class UShapeComponent** Shape, class AActor** Cause, class UClass** DamageType, class UClass** ImpactDirection, class UClass** ImpactEffect, struct FName* EffectBone, EEffectSpawnDirection* EffectSpawnDirection, struct FRotator* EffectOrientation, float* DamageMod, float* DamageScalar, bool* Blockable, bool* Evadable, int* PowerOverride, float* HitCooldown);
	void SortTags();
	void SetWeaponPhantomsSuspended(bool* bIsSuspended);
	void SetTarget(class AActor** Character);
	void SetIsTargetable(bool* Targetable);
	void SetHealth(float* Health);
	void SetGlobalCooldown(float* Time);
	void SetFaction(class UClass** NewFaction);
	void SetCooldown(struct FName* Cooldown, float* Time);
	void SetAimTarget(class AActor** InTarget);
	void ServerSetAimTarget(class AActor** InTarget);
	void ScaleStat(struct FName* Stat, float* Scalar, bool* AutoInitValue);
	void RestoreAggroGroup(struct FName* PreviousAggroGroup, bool* bRemoveAll);
	void ResetHealth(bool* bResetHitLocations);
	void ResetClothingSimulation(bool* FullReset);
	void RemoveTag(struct FName* Tag, bool* bRemoveAll);
	void ReinitializeCloth();
	void Ragdoll(struct FName* RootBoneName);
	void PostComputeStats();
	void OnRep_Target(class AActor** PreviousTarget);
	void OnRep_Health();
	void OnRagdollHit(class UPrimitiveComponent** HitComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, struct FVector* NormalImpulse, struct FHitResult* Hit);
	void OnPostComputeStats();
	void OnLocallyControlled();
	void OnGameViewportFocusChanged(bool* HasFocus);
	void OnComputeStats();
	void OnCharacterStateChanged(struct FName* StateName, struct FName* PreviousStateName);
	void OnCharacterDead(EDeadReason* Reason, class AActor** Cause);
	void ModifyStat(struct FName* Stat, float* Value);
	void MarkActorHit(class UObject** WorldContextObject, class UShapeComponent** Shape, class AActor** Actor);
	bool IsWounded();
	bool IsEditor();
	bool IsCinematicCharacter();
	bool IsAlive();
	void HitPause(float* Duration, float* Dilation, float* EaseInTime, float* EaseOutTime);
	bool HasRecentlyHitActor(class UObject** WorldContextObject, class UShapeComponent** Shape, class AActor** Actor);
	bool HasAnyOverlappingDamageable(TArray<class AActor*>* IgnoredActors, bool* bIgnoreDeadActors);
	struct FRotator GetViewRotation();
	class AActor* GetTarget();
	class UStateMachineComponent* GetStateMachine();
	float GetStat(struct FName* Stat);
	bool GetIsTargetable();
	struct FInspectStat GetInspectStatInfo(struct FName* Stat);
	struct FInspectInfo GetInspectInfo();
	float GetHealthPercentage();
	float GetHealthMax();
	float GetHealth();
	float GetCooldownPct(struct FName* Cooldown);
	class UInventoryComponent* GetCharacterInventory();
	class AActor* GetAimTarget();
	struct FName GetAggroGroup();
	void EnableClothingSimulation();
	void DisableClothingSimulation();
	void DifficultyChanged();
	void ComputeStats();
	void ClientNotifyTakeDamage(class AActor** Source, float* Damage, int* Power);
	void ClientNotifyHitTarget(class AActor** Cause, class AActor** InTarget, struct FVector* ImpactPoint, float* Damage, bool* Killed, bool* Critical, bool* WeakSpot, bool* Resisted);
	void ClearAggroGroup();
	bool CheckTags(TArray<struct FName>* TagsToCheck, bool* AllOrNothing);
	bool CheckTag(struct FName* Tag);
	bool CheckCooldown(struct FName* Cooldown);
	bool AreWeaponPhantomsSuspended();
	bool AreCharacterOptimizationsEnabled();
	void ApplyHealthDelta(float* Delta);
	void AddTag(struct FName* Tag);
	void AddAggroGroup(struct FName* NewAggroGroup, bool* bUniqueOnly);
};


// Class GunfireRuntime.PlayerGunfire
// 0x0000 (0x0AA0 - 0x0AA0)
class APlayerGunfire : public ACharacterGunfire
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PlayerGunfire");
		return ptr;
	}

};


// Class GunfireRuntime.CheatManagerGunfire
// 0x0068 (0x00E0 - 0x0078)
class UCheatManagerGunfire : public UCheatManager
{
public:
	TMap<class FString, struct FCheatCommands>         CheatCommandsByCategory;                                  // 0x0078(0x0050) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class FString>                              CheatCommandCategories;                                   // 0x00C8(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x8];                                       // 0x00D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CheatManagerGunfire");
		return ptr;
	}


	void UnlockAllTraits(int* StartingLevel);
	void ToggleSecondaryFlyCamera();
	void TogglePrimaryFlyCamera();
	void ToggleFollowPlayer();
	void TakeScreenShotWithDimensions(int* ResX, int* ResY);
	void TakeScreenShotCurrentResolutionScaled(int* ScaleResolution);
	void SpawnCharacter(class FString* NameOfCharBP);
	void SetPlayerState(struct FName* NewState);
	void SetPlayerNormalizedHealth(float* NewHealth);
	void SetKillRadius(float* NewKillRadius);
	void SendCommandToConsole(class FString* Command);
	void RemoveItem(class FString* NameOfBP, int* Quantity);
	void OnUseDebugCommandKey();
	void OnReleaseDebugCommandKey();
	void KillNearbyEnemies();
	void IncreasePlayerLevel(int* NumLevel);
	void GiveItem(class FString* NameOfBP, int* Quantity, int* LevelOverride, bool* bAutoEquip);
	void GiveAllItems(class FString* NameOfClassBP, int* Quantity, int* LevelOverride, bool* bOnlyUnique);
	TArray<class FString> STATIC_GetInputDescriptorForCheat(struct FName* ActionName);
	TArray<class FString> GetConsoleCommands(class FString* Category);
	struct FText GetConsoleCommandDescription(class FString* Command);
	TArray<class FString> GetConsoleCommandCategories();
	TArray<struct FCheatInputAction> STATIC_GetAllCheats();
	void ForceCrash();
	void ExecuteCheat(struct FName* ActionName);
	void EnablePrimaryFlyCamera();
	void DropItem(class FString* NameOfBP, int* Quantity, int* LevelOverride, int* Stacks);
	void DoAction(class FString* NameOfBP, bool* bApplyToTarget);
	void ClearAllDialogs();
	bool STATIC_AreCheatsEnabled();
	void AddTrait(class FString* NameOfBP, int* Level);
};


// Class GunfireRuntime.DifficultyScalingComponent
// 0x00B0 (0x01A8 - 0x00F8)
class UDifficultyScalingComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnDifficultyChanged;                                      // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UDataTable*                                  NumPlayersScalingTable;                                   // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  LevelScalingTable;                                        // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  DifficultyScalingTable;                                   // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               DifficultyTags;                                           // 0x0120(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int                                                NumPlayers;                                               // 0x0130(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                LevelOverride;                                            // 0x0134(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                Difficulty;                                               // 0x0138(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x64];                                      // 0x013C(0x0064) MISSED OFFSET
	class UDataTable*                                  OverrideDifficultyScalingTable;                           // 0x01A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DifficultyScalingComponent");
		return ptr;
	}


	void SetNumPlayers(int* NumPlayers);
	void SetLevelOverride(int* NewLevel);
	void SetDifficultyScalingTableOverride(class UDataTable** Table);
	void SetDifficulty(int* NewDifficulty);
	void RemoveExternalStatModifier(struct FName* Stat);
	void Invalidate();
	float GetSpawnQuantityScalar();
	int GetNumPlayers();
	int STATIC_GetLevelForActor(class AActor** Actor);
	int GetLevel(class AActor** Actor);
	int STATIC_GetItemLevelForActor(class AActor** Actor);
	int GetItemLevel(class AActor** Actor);
	float GetExperienceScalar(class AActor** Actor);
	float GetEnemyHealthScalar(class AActor** Actor, struct FName* Prefix);
	float GetEnemyDamageScalar(class AActor** Actor, struct FName* Prefix);
	class UDifficultyScalingComponent* STATIC_GetDifficultyScalingComponent(class UObject** WorldContextObject);
	int GetDifficulty();
	float GetCurrencyScalar(class AActor** Actor);
	void ComputeStats();
	void ClearExternalStatModifiers();
	void ClearDifficultyScalingTableOverride();
	void AddExternalStatModifier(struct FName* Stat, float* Value);
};


// Class GunfireRuntime.CameraState
// 0x0018 (0x0040 - 0x0028)
class UCameraState : public UObject
{
public:
	struct FName                                       NameID;                                                   // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FOV;                                                      // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	float                                              DefaultBlendTime;                                         // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CameraState");
		return ptr;
	}


	class AActor* ValidateCameraActor(class UStateCameraComponent** CameraManager, class AActor** CameraActor);
	void OnUpdate(class UStateCameraComponent** CameraManager, float* DeltaTime, struct FMinimalViewInfo* DesiredView);
	void OnLeave(class UStateCameraComponent** CameraManager);
	void OnEnter(class UStateCameraComponent** CameraManager, class UCameraState** PreviousState, float* TransitionTime);
};


// Class GunfireRuntime.FlyCameraState
// 0x00B0 (0x00F0 - 0x0040)
class UFlyCameraState : public UCameraState
{
public:
	float                                              PitchMin;                                                 // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchMax;                                                 // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchSpeed;                                               // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              YawSpeed;                                                 // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MoveSpeed;                                                // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SprintSpeedScalar;                                        // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StepFrameSimulateDelay;                                   // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	class AActor*                                      LastRequestedCameraActor;                                 // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                      LastRequestedExternalCameraActor;                         // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x70];                                      // 0x0070(0x0070) MISSED OFFSET
	TArray<class ACharacterGunfire*>                   CharacterBaseActorArr;                                    // 0x00E0(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FlyCameraState");
		return ptr;
	}

};


// Class GunfireRuntime.FogOfWarComponent
// 0x40E0 (0x46F0 - 0x0610)
class UFogOfWarComponent : public UStaticMeshComponent
{
public:
	struct FScriptMulticastDelegate                    OnFogOfWarChanged;                                        // 0x0610(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bLockChanges;                                             // 0x0620(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0621(0x0007) MISSED OFFSET
	class UMaterialInstanceDynamic*                    MatInst;                                                  // 0x0628(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                                  FogOfWarMaskTexture;                                      // 0x0630(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0638(0x0008) MISSED OFFSET
	class ACharacter*                                  OwningCharacter;                                          // 0x0640(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x40A8];                                    // 0x0648(0x40A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FogOfWarComponent");
		return ptr;
	}


	void ToggeleFogOfWar();
	void ShowVisitedCoordinates();
	void SetFogOfWar(bool* bHasFog);
	void Init(struct FBox* RelevantWorldBounds);
	bool HasFogOfWar();
	float GetWorldMaxDimension();
	struct FBox GetWorldBounds();
	float GetVisibilityAtLocation(struct FVector* WorldLocation);
	struct FVector GetLocationAtCoordinate(struct FVisibleCoordinate* Coordinate);
	void AddVisibleLocation(struct FVector* Location);
};


// Class GunfireRuntime.GameInstanceGunfire
// 0x0178 (0x02E0 - 0x0168)
class UGameInstanceGunfire : public UGameInstance
{
public:
	TSoftObjectPtr<class UWorld>                       MainMenuLevel;                                            // 0x0168(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MapLoaderClass;                                           // 0x0190(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      AssetCacheClass;                                          // 0x0198(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFadeIntoLevelCompletedEvent;                            // 0x01A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLocalPlayerPawnControlledEvent;                         // 0x01B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameInstanceStart;                                      // 0x01C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSaveStarted;                                            // 0x01D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSaveFinished;                                           // 0x01E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0xD8];                                      // 0x01F0(0x00D8) MISSED OFFSET
	class APawn*                                       LocalPlayerPawn;                                          // 0x02C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAmbientAudioManager*                        AmbientAudioManager;                                      // 0x02D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPathSharingManager*                         PathSharingManager;                                       // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.GameInstanceGunfire");
		return ptr;
	}


	void QuitToMainMenu();
	void OnShutdown();
	void OnPreQuitToMainMenu();
	bool IsSaving();
	bool IsInGameplay();
	bool ImmediatelyFadeScreen(bool* bIsFaded, struct FLinearColor* FadeColor, bool* bFadeAudio);
	class APawn* STATIC_GetLocalPlayerPawn(class UObject** WorldContextObject);
	class UGameInstanceGunfire* STATIC_GetInstance(class UObject** pWorldContextObject);
	class UAssetCache* STATIC_GetAssetCache();
	bool FadeScreen(EFadeDirection* FadeDirection, float* FadeTime, struct FLinearColor* FadeColor, bool* bFadeAudio, bool* bReset);
	bool CanSave();
};


// Class GunfireRuntime.GameModeGunfire
// 0x0118 (0x0530 - 0x0418)
class AGameModeGunfire : public AGameMode
{
public:
	struct FScriptMulticastDelegate                    OnNotifyHit;                                              // 0x0418(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnNotifyDead;                                             // 0x0428(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameShutdown;                                           // 0x0438(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UClass*                                      GameRulesClass;                                           // 0x0448(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UObject*>                             AssetReferences;                                          // 0x0450(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class AGameRules*                                  GameRules;                                                // 0x0460(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              LevelCollectionsClass;                                    // 0x0468(0x0010) (Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class APlayableLevelCollection*>            LevelCollections;                                         // 0x0478(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0xA8];                                      // 0x0488(0x00A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.GameModeGunfire");
		return ptr;
	}


	void RemoveLevelInstanceByName(class FString* UniqueInstanceName);
	void RemoveLevelInstance(class ULevelStreaming** LevelInstance);
	void OnPlayerDied(class APlayerController** Player);
	class APlayableLevelCollection* GetPlayableLevelCollection(struct FName* CollectionName);
	class APlayableLevel* GetPlayableLevelByPath(class FString* Path, struct FName* CollectionName);
	class APlayableLevel* GetPlayableLevelByName(class FString* Name, struct FName* CollectionName);
	void GetLevelInstance(class FString* UniqueInstanceName, class ULevelStreaming** LevelInstance);
	void ApplyDamage(class AActor** CauseActor, class AActor** TargetActor, float* Damage, float* DamageMod, float* DamageScalar, class UClass** DamageType, class UClass** ImpactDirection);
	void AddPlayableLevel(class APlayableLevel** Level, struct FName* CollectionName);
	void AddLevelInstance(class FString* UniqueInstanceName, class FString* PackageNameToLoad, struct FTransform* LevelTransform, class ULevelStreaming** LevelInstance);
};


// Class GunfireRuntime.GameStateGunfire
// 0x0080 (0x0410 - 0x0390)
class AGameStateGunfire : public AGameState
{
public:
	class UTimeDilationManager*                        TimeDilationManager;                                      // 0x0390(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerJoined;                                           // 0x0398(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerLeft;                                             // 0x03A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x58];                                      // 0x03B8(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.GameStateGunfire");
		return ptr;
	}


	void StartMatch();
	class AGameStateGunfire* STATIC_GetGunfireGameState(class UObject** WorldContextObject);
};


// Class GunfireRuntime.UIHud
// 0x0050 (0x0470 - 0x0420)
class AUIHud : public AHUD
{
public:
	bool                                               DisablePlayerInput;                                       // 0x0420(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0421(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnHudEventDelegate;                                       // 0x0428(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bAutoHideUMGWidgetsOnHidden;                              // 0x0438(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x17];                                      // 0x0439(0x0017) MISSED OFFSET
	class APawn*                                       PlayerPawn;                                               // 0x0450(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AUIActor*>                            UIActorStack;                                             // 0x0458(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0468(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.UIHud");
		return ptr;
	}


	void UnloadLargeIcons();
	void SetVisibility(bool* bVisible);
	class AUIActor* SetDialog(class UClass** DialogBP, EDialogLocation* Location, struct FText* Text, struct FText* Caption);
	void PushUIActor(class AUIActor** UIActor);
	class AUIActor* PopUIActor(class AUIActor** DialogToPop);
	void PawnChanged(class APawn** Pawn);
	void OnSetVisbility(bool* bIsVisible);
	void OnHudEvent(struct FName* EventID, class UObject** Context);
	void OnDialogEnd(class AUIActor** Dialog);
	void OnDialogBegin(class AUIActor** Dialog);
	void LoadLargeIcons(struct FScriptDelegate* OnIconsLoaded, struct FLatentActionInfo* LatentInfo);
	bool IsVisible();
	void InsertUIActor(class AUIActor** UIActor, int* StackIndex);
	class AUIActor* GetTopInputActor();
	class AUIActor* GetDialog(class UClass** DialogBP);
	class AUIActor* GetCurrentDialog();
	class APawn* GetControllingPawn();
	void EndDialog(struct FName* Result, class UObject** EndingDialogContext);
	void EndAllDialogs();
	class AUIActor* BeginDialog(class UClass** DialogBP, EDialogLocation* Location, struct FText* Text, struct FText* Caption, EDialogBeginMethod* Method);
	void AddUIToActorStack(class AUIActor** UIActor);
};


// Class GunfireRuntime.MapGenComponent
// 0x0218 (0x0310 - 0x00F8)
class UMapGenComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET
	int                                                Seed;                                                     // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Level;                                                    // 0x0104(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                       Template;                                                 // 0x0108(0x0028) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                      TemplateOverride;                                         // 0x0130(0x0010) (Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseLoadedLevelAsTemplate;                                 // 0x0140(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoInitialize;                                           // 0x0141(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0142(0x0002) MISSED OFFSET
	struct FVector                                     MapOffset;                                                // 0x0144(0x000C) (Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                      MapInstanceName;                                          // 0x0150(0x0010) (Edit, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSetTileActive;                                          // 0x0160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSetTileVisible;                                         // 0x0170(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnOverallVisibilityChange;                                // 0x0180(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGenerationComplete;                                     // 0x0190(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFullyLoaded;                                            // 0x01A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUnloaded;                                               // 0x01B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInitialized;                                            // 0x01C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUninitialized;                                          // 0x01D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFailed;                                                 // 0x01E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AMapGenSettings*                             Settings;                                                 // 0x01F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class APlayerController*>                   Players;                                                  // 0x01F8(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0208(0x0020) MISSED OFFSET
	class ULevelStreaming*                             TemplateLevel;                                            // 0x0228(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ARuntimeNavMeshBoundsVolume*                 NavBounds;                                                // 0x0230(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               Generated;                                                // 0x0238(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0239(0x0007) MISSED OFFSET
	TArray<struct FTileBase>                           TilesBase;                                                // 0x0240(0x0010) (Net, ZeroConstructor, SaveGame, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                               NoTiles;                                                  // 0x0250(0x0001) (Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0251(0x0007) MISSED OFFSET
	TArray<struct FTile>                               Tiles;                                                    // 0x0258(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<int>                                        PreviousVisibleTiles;                                     // 0x0268(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMapGenAttribute>                    Attributes;                                               // 0x0278(0x0010) (Net, ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)
	EMapGenState                                       ServerState;                                              // 0x0288(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0289(0x0007) MISSED OFFSET
	class UClass*                                      MapACVClass;                                              // 0x0290(0x0008) (Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ULevelStreaming*>                     LevelsUnloading;                                          // 0x0298(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x30];                                      // 0x02A8(0x0030) MISSED OFFSET
	TArray<class AMapTileInfo*>                        TemplateTiles;                                            // 0x02D8(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class AMapTileEdge*>                        TemplateEdges;                                            // 0x02E8(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x10];                                      // 0x02F8(0x0010) MISSED OFFSET
	class AAudioCustomVolume*                          MapACV;                                                   // 0x0308(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MapGenComponent");
		return ptr;
	}


	void OnStartedVisualLogger();
	void OnRep_TilesBase();
	void OnRep_MapACVClass();
	bool IsTileVisited(int* TileID);
	bool IsTileActive(int* TileID);
	bool IsPositionInTile(struct FVector* WorldPosition, struct FTile* Tile);
	bool IsEdgeOpen(class AActor** Actor, float* Tolerance);
	class UTileSet* GetTileSet();
	bool GetTileForActor(class AActor** Actor, struct FTile* Out);
	int GetTileDistance(int* TileID);
	bool GetTileAtPosition(struct FVector* WorldPosition, struct FTile* Out);
	bool GetSpawnTagsAtPosition(struct FVector* WorldPosition, TArray<struct FName>* Out);
	class ULevel* STATIC_GetMapGenLevelForActor(class AActor** Actor);
	int GetMapGenDebugState();
	bool STATIC_GetMapGenAttributeForActor(EMapGenAttributeScope* Scope, class AActor** Actor, struct FName* Key, struct FMapGenAttribute* Out);
	class AAudioCustomVolume* GetMapACV();
	float GetLevelMaxSize(bool* IncludeVista);
	struct FVector GetLevelCenter(bool* IncludeVista);
	struct FBox GetLevelBounds(bool* IncludeVista);
	bool GetAttribute(EMapGenAttributeScope* Scope, struct FName* TileOrRegionID, struct FName* Key, struct FMapGenAttribute* Out);
	class UMapGenComponent* STATIC_FindMapGenComponentForActor(class AActor** Actor);
	void AddAttribute(struct FMapGenAttribute* Attribute);
};


// Class GunfireRuntime.MeleeWeapon
// 0x0010 (0x05D0 - 0x05C0)
class AMeleeWeapon : public AWeaponBase
{
public:
	bool                                               bOverridesReticule;                                       // 0x05C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x05C1(0x0007) MISSED OFFSET
	class UReticule*                                   Reticule;                                                 // 0x05C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MeleeWeapon");
		return ptr;
	}

};


// Class GunfireRuntime.MiniMapDisplayActor
// 0x0130 (0x0460 - 0x0330)
class AMiniMapDisplayActor : public AActor
{
public:
	float                                              DisplayRange;                                             // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMiniMapMode                                       MiniMapMode;                                              // 0x0334(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0335(0x0003) MISSED OFFSET
	float                                              DefaultScaleMini;                                         // 0x0338(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultScaleFull;                                         // 0x033C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       NameID;                                                   // 0x0340(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               AutoInit;                                                 // 0x0348(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0349(0x0003) MISSED OFFSET
	float                                              DisplayRangeVertical;                                     // 0x034C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EMiniMapStyle                                      MiniMapStyle;                                             // 0x0350(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0351(0x0003) MISSED OFFSET
	float                                              HorizontalDisplayPower;                                   // 0x0354(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ScaleMin;                                                 // 0x0358(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ScaleMax;                                                 // 0x035C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldClampPanOffset;                                    // 0x0360(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0361(0x0003) MISSED OFFSET
	struct FVector                                     PanOffsetMin;                                             // 0x0364(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     PanOffsetMax;                                             // 0x0370(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NumChangeVisibilityPerFrame;                              // 0x037C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       BoundsOverride;                                           // 0x0380(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     Origin;                                                   // 0x0388(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CurrentScale;                                             // 0x0394(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     CurrentPanOffset;                                         // 0x0398(0x000C) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    CurrentRotationOffset;                                    // 0x03A4(0x000C) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x38];                                      // 0x03B0(0x0038) MISSED OFFSET
	TArray<struct FMiniMapEntry>                       Actors;                                                   // 0x03E8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMiniMapActorRef>                    SelectedActors;                                           // 0x03F8(0x0010) (Net, ZeroConstructor, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMiniMapActorRef>                    CachedSelectedActors;                                     // 0x0408(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class AMiniMapActor*                               LockedActor;                                              // 0x0418(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0420(0x0008) MISSED OFFSET
	TArray<TWeakObjectPtr<class UMiniMapPanel>>        MiniMapPanels;                                            // 0x0428(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x18];                                      // 0x0438(0x0018) MISSED OFFSET
	class UMiniMapManager*                             MiniMapManager;                                           // 0x0450(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData07[0x8];                                       // 0x0458(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MiniMapDisplayActor");
		return ptr;
	}


	float WorldToMapScale(float* Scale);
	struct FVector WorldToMapCoord(struct FVector* Coord);
	void UnregisterMiniMapPanel(class UMiniMapPanel** Panel);
	void SetOriginLocation(struct FVector* WorldLocation);
	void SetOrigin(class AMiniMapActor** OriginActor);
	void SetMiniMapMode(EMiniMapMode* Mode);
	void SetIsIndicator(class AMiniMapActor** Actor, bool* Indicator);
	void SetDisplayLevel(int* NewLevel);
	void ServerSetScale(float* Scale);
	void ServerSetPanOffset(struct FVector* Offset);
	void ServerSelect(struct FMiniMapActorRef* Actor, bool* MultiSelect, bool* bStaySelected);
	void ServerScaleTo(float* NewScale, float* Time);
	void ServerPanTo(struct FVector* Offset, float* Time);
	void ServerDeSelectAll();
	void ServerDeSelect(struct FMiniMapActorRef* Actor);
	void Select(class AMiniMapActor** Actor, bool* MultiSelect, bool* bStaySelected);
	void ScaleTo(float* NewScale, float* Time);
	void Scale(float* Scale);
	void Rotate(struct FRotator* Rotation);
	void RegisterMiniMapPanel(class UMiniMapPanel** Panel);
	void PanToActor(class AActor** MiniMapActor, float* Time);
	void PanTo(struct FVector* Offset, float* Time);
	void Pan(struct FVector* Translation);
	void OnScale(float* Scale);
	void OnRotate(struct FRotator* Rotation);
	void OnRep_SelectedActors();
	void OnRemoveMiniMapActor(class AMiniMapActor** Actor);
	void OnPreInitMap(class AActor** MiniMapRefActor);
	void OnPostInitMap(class AActor** MiniMapRefActor);
	void OnPan(struct FVector* Translation);
	void OnMiniMapActorRemoved(int* ID);
	void OnMiniMapActorLevelChanged(int* ID, int* NewLevel);
	void OnMiniMapActorAdded(int* ID);
	void OnAddMiniMapActor(class AMiniMapActor** Actor);
	void MulticastSelectDeselect(struct FMiniMapActorRef* Actor);
	float MapToWorldScale(float* Scale);
	struct FVector MapToWorldCoord(struct FVector* Coord);
	bool IsSelected(class AMiniMapActor** Actor);
	bool IsActorOnMiniMap(class AActor** RefActor);
	void InitMap(class AActor** MiniMapRefActor);
	TArray<class UUserWidget*> GetWidgetsForActor(struct FMiniMapEntry* MiniMapActor);
	struct FBox GetTotalBoundingBox();
	TArray<class AMiniMapActor*> GetSelectedActors();
	class AMiniMapActor* GetSelectedActor();
	void GetMiniMapScreenWindow(struct FVector2D* OutOffset, float* OutScale);
	struct FTransform GetMiniMapScreenTransform(struct FMiniMapEntry* ReferenceActor);
	class AActor* GetMiniMapRefActor();
	TArray<struct FMiniMapActorInfo> GetMinimapActors();
	class AMiniMapActor* GetMiniMapActorFor(class AActor** Actor);
	class AMiniMapActor* GetLockedActor();
	int GetDisplayLevel();
	bool GetActorByContext(int* Context, struct FMiniMapEntry* OutMiniMapActor);
	bool GetActor(class AActor** RefActor, struct FMiniMapEntry* OutMiniMapActor);
	void DeSelectAll();
	void DeSelect(class AMiniMapActor** Actor);
	void CenterToOrigin();
	void Center(class AMiniMapActor** ActorToCenterOn, bool* bLock);
};


// Class GunfireRuntime.MiniMapLevelRegion
// 0x0028 (0x0358 - 0x0330)
class AMiniMapLevelRegion : public AActor
{
public:
	EMiniMapLevelRegionType                            RegionType;                                               // 0x0330(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0331(0x0003) MISSED OFFSET
	int                                                MiniMapLevel;                                             // 0x0334(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     RegionSize;                                               // 0x0338(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     RegionBuffer;                                             // 0x0344(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PlaneBuffer;                                              // 0x0350(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0354(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MiniMapLevelRegion");
		return ptr;
	}


	bool IsInRegion(class AActor** RefActor, int* CurrentLevel, float* AdditionalZ);
	int GetRegionLevel();
	bool STATIC_AreConcurrentMiniMapLevels(int* LevelA, int* LevelB, bool* bCheckBelow, bool* bCheckAbove);
};


// Class GunfireRuntime.MiniMapWidget
// 0x0028 (0x0268 - 0x0240)
class UMiniMapWidget : public UUserWidget
{
public:
	struct FVector2D                                   DefaultWidgetCullBounds;                                  // 0x0240(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ZOrder;                                                   // 0x0248(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x024C(0x0004) MISSED OFFSET
	class AMiniMapDisplayActor*                        MiniMap;                                                  // 0x0250(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                      CachedRefActor;                                           // 0x0258(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                Context;                                                  // 0x0260(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0264(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MiniMapWidget");
		return ptr;
	}


	struct FWidgetTransform UpdateMiniMapWidget(struct FWidgetTransform* InTransform);
	void UpdateLevelVisibility(int* DisplayLevel, int* MyLevel);
	void SetDynamicSize(struct FVector2D* DynamicSize);
	void SetCullBounds(struct FVector2D* CullBounds);
	void OnRegisteredToPanel(class UMiniMapPanel** MiniMapPanel);
	int GetZOrder();
	class AActor* GetMiniMapRefActor();
	class AMiniMapDisplayActor* GetMiniMap();
	struct FVector2D GetDefaultWidgetCullBounds();
	int GetContext();
};


// Class GunfireRuntime.PlayerControllerGunfire
// 0x0040 (0x06B8 - 0x0678)
class APlayerControllerGunfire : public APlayerController
{
public:
	struct FScriptMulticastDelegate                    OnStartedVisualLogger;                                    // 0x0678(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0688(0x0008) MISSED OFFSET
	class AActor*                                      SpectateActor;                                            // 0x0690(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnSpectateTargetChanged;                                  // 0x0698(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x06A8(0x0008) MISSED OFFSET
	class UPlayStateComponent*                         PlayState;                                                // 0x06B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PlayerControllerGunfire");
		return ptr;
	}


	void SpectateTarget(class AActor** Actor);
	void SpectatePrevPlayer();
	void SpectateNextPlayer();
	void SetGameInputEnabled(bool* bEnabled);
	void ServerUnlockAllTraits(int* StartingLevel);
	void ServerSpectateTarget(class AActor** Actor);
	void ServerRequestTime(uint16_t* ClientTime);
	void ServerOnLevelTransition(int* LevelID, ELevelTransition* TransitionType);
	void ServerDropItem(class FString* NameOfBP, int* Quantity, int* LevelOverride, int* Stacks);
	void ServerDoAction(class FString* NameOfBP, bool* bApplyToTarget);
	void ServerBeginSpectate();
	void ServerAddTrait(class FString* NameOfBP, int* Level);
	void RestoreSpectateViewTarget();
	void ResetPauseRefCount();
	void STATIC_RemoveCinematicListener(struct FScriptDelegate* Event);
	void QuitGame();
	void ProposeToSkipCutscene(class ULevelSequence** InSequence);
	void OnRep_SpectateTarget();
	void MulticastUnlockAchievement(unsigned char* Idx, unsigned char* Type, int* Amount);
	bool IsInCinematic();
	bool IsGameInputEnabled();
	class AActor* GetSpectateTarget();
	class APawn* GetRelevantViewTarget();
	class APawn* GetRelevantPawn();
	class FString GetPlayerIdentifier();
	void ClientTimeReply(uint16_t* ServerTime, uint16_t* ClientTime);
	void BeginSpectate();
	void BeginPlaying();
	void STATIC_AddCinematicListener(struct FScriptDelegate* Event);
};


// Class GunfireRuntime.PlayStateEffect
// 0x0008 (0x0030 - 0x0028)
class UPlayStateEffect : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PlayStateEffect");
		return ptr;
	}


	bool TickTransition(class UPlayStateComponent** Component, float* DeltaSeconds);
	class FString GetEditorLabel();
	void Apply(class UPlayStateComponent** Component, class UPlayStateEffect** Previous);
};


// Class GunfireRuntime.InventoryComponent
// 0x0168 (0x0260 - 0x00F8)
class UInventoryComponent : public UActorComponent
{
public:
	bool                                               IsMerchant;                                               // 0x00F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInventoryAccess                                   Accessibility;                                            // 0x00F9(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00FA(0x0006) MISSED OFFSET
	class UClass*                                      EquipmentInHand;                                          // 0x0100(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      LastEquipmentInHand;                                      // 0x0108(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CurrencyType;                                             // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MetalType;                                                // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                             DefaultLootFX;                                            // 0x0120(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoEquipMods;                                            // 0x0128(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0129(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnInventoryChanged;                                       // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLeveledUp;                                              // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAddItem;                                                // 0x0150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPickupItem;                                             // 0x0160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPickupItemServer;                                       // 0x0170(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUpgradeItem;                                            // 0x0180(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInventoryFull;                                          // 0x0190(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEquipmentActivated;                                     // 0x01A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEquipmentDeactivated;                                   // 0x01B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEquippedItem;                                           // 0x01C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUnequippedItem;                                         // 0x01D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                IDGen;                                                    // 0x01E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x01E4(0x0004) MISSED OFFSET
	TArray<struct FInventoryItem>                      Items;                                                    // 0x01E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, RepNotify, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FEquipmentSlot>                      EquipmentSlots;                                           // 0x01F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0208(0x0010) MISSED OFFSET
	TArray<struct FInventoryScalingInfo>               PriceScalingInfo;                                         // 0x0218(0x0010) (Net, ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)
	bool                                               DoPriceScaling;                                           // 0x0228(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x37];                                      // 0x0229(0x0037) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.InventoryComponent");
		return ptr;
	}


	bool UseItem(class UClass** ItemBP);
	bool UnequipItemByID(int* ItemID);
	bool UnequipItemAtSlotIndex(int* SlotIndex);
	bool UnequipItem(class UClass** ItemBP);
	void ToggleActiveItem(class UClass** Type);
	void TakeItemByID(class AActor** OtherActor, int* ItemID, int* Quantity, int* LevelOverride);
	void TakeAll(class AActor** OtherActor);
	void SwapItem(class UClass** from, class UClass** to);
	bool SetQuantity(class UClass** ItemBP, int* Quantity, int* ItemLevel, EItemNotifyReason* Reason);
	bool SetItemLevel(class UClass** ItemBP, int* LevelToSet);
	void SetEquipmentInHandById(int* EquipmentId);
	void SetEquipmentInHandByClass(class UClass** Equipment);
	void SetEquipmentInHand(class UClass** Type);
	void ServerUseItem(class UClass** ItemBP);
	void ServerUnequipMod(int* ItemID, unsigned char* Slot, bool* AddToInventory);
	void ServerUnequipItemByID(int* ItemID);
	void ServerToggleActiveItem(class UClass** Type);
	void ServerTakeItemByID(class AActor** OtherActor, int* ItemID, int* Quantity);
	void ServerTakeAll(class AActor** OtherActor);
	void ServerSetEquipmentInHand(class UClass** Type);
	void ServerPutItemByID(class AActor** OtherActor, int* ItemID, int* Quantity);
	void ServerPickupItem(class AItem** Item);
	void ServerPickupAndEquipItem(class AItem** Item, int* SlotIndex, bool* InHand);
	void ServerEquipSkin(int* ItemID, int* SkinID);
	void ServerEquipItemByID(int* ItemID, int* SlotIndex);
	void ServerDropItemByID(int* ItemID, int* Quantity, bool* Force);
	void ServerDetachItem(int* ItemID);
	void RouteNotifyPickupItem(class UClass** ItemBP, int* Quantity, int* Level, EItemNotifyReason* Reason);
	bool RemoveItemSoft(TSoftObjectPtr<class UClass>* ItemBP, int* Quantity, int* ItemLevel);
	bool RemoveItemByID(int* ID, int* Quantity, int* ItemLevel);
	bool RemoveItem(class UClass** ItemBP, int* Quantity, int* ItemLevel);
	void RemoveAllItems();
	void PutItemByID(class AActor** OtherActor, int* ItemID, int* Quantity);
	void PickupItem(class AItem** Item);
	void PickupAndEquipItem(class AItem** Item, int* SlotIndex, bool* InHand);
	void OnRep_Items();
	void OnInstanceDataChanged();
	void MulticastOnInventoryChanged();
	void MarkNotNew(int* ItemID);
	bool IsInventoryItemInfiniteByType(class UClass** ItemBP);
	bool IsInventoryItemInfiniteByID(class UInventoryComponent** Inventory, int* ItemID);
	bool IsInventoryItemInfinite(struct FInventoryItem* InventoryItem);
	bool IsEquippedByID(int* ItemID);
	bool IsEquipped(class UClass** ItemBP);
	bool HasNewItemInInventory();
	bool HasItemSoft(TSoftObjectPtr<class UClass>* ItemBP);
	bool HasItemByType(class UClass** Type);
	bool HasItem(class UClass** ItemBP, int* Quantity, int* ItemLevel);
	bool HasEquippedItemByType(class UClass** Type);
	bool HasEquipmentSlot(struct FName* NameID);
	int GetSellValue(int* Cost, float* SellScalar);
	int GetQuantity(class UClass** ItemBP, int* ItemLevel);
	bool GetPreviousItem(int* CurrentID, class UClass** Type, bool* bWrapAround, struct FInventoryItem* OutItem);
	bool GetNextItem(int* CurrentID, class UClass** Type, bool* bWrapAround, struct FInventoryItem* OutItem);
	class AEquipment* GetNextActiveItem(class UClass** Type);
	int GetMaxBuyableFromInfo(struct FInspectInfo* Info, int* CurrencyCap);
	class UClass* GetItemTypeBySlotName(struct FName* NameID);
	TArray<struct FInventoryItem> GetItems();
	class UItemInstanceData* GetItemInstanceData(class UClass** ItemBP);
	int GetItemCount();
	class UInventoryComponent* STATIC_GetInventoryForItemType(class AActor** Actor, class UClass** ItemType);
	class UInventoryComponent* STATIC_GetInventoryForItem(class AActor** Actor, class UClass** Item);
	class AEquipment* GetEquippedItemBySlotName(struct FName* NameID);
	class AEquipment* GetEquippedItem(int* SlotIndex);
	int GetEquipmentSlotIndexByNameID(struct FName* SlotNameID);
	int GetEquipmentSlotIndex(class UClass** ItemBP);
	int GetEquipmentItemID(class AEquipment** EquippedActor);
	int GetBuyValueFromInfo(struct FInspectInfo* Info, int* Quantity);
	int GetBuyValue(class UClass** ItemBP, int* Quantity);
	class AEquipment* GetActiveItem(class UClass** Type);
	class UClass* GetActivationTypeBySlotName(struct FName* NameID);
	struct FInventoryItem FindItemByID(int* ID);
	struct FInventoryItem FindItemByEquipSlotNameID(struct FName* NameID);
	struct FInventoryItem FindItem(class UClass** ItemBP);
	void EquipSkin(int* ItemID, int* SkinID);
	bool EquipItemWithTransform(int* ItemID, int* SlotIndex, struct FTransform* Transform);
	bool EquipItemByID(int* ItemID, int* SlotIndex);
	bool EquipItem(class UClass** ItemBP, int* SlotIndex);
	void DropItemByID(int* ItemID, int* Quantity, bool* Force);
	void DropItem(class UClass** ItemBP, int* Quantity);
	void DropAll();
	bool DidActiveItemChange(class UClass** Type);
	void DetachItemByID(int* ItemID);
	int CountItemByType(class UClass** ItemType);
	void ClientNotifyUpgradeItem(class UClass** ItemBP, int* Level);
	void ClientNotifyPickupItemInstance(class AItem** Item, int* Quantity, int* Level, EItemNotifyReason* Reason, bool* bBroadcastNotify);
	void ClientNotifyPickupItem(class UClass** ItemBP, int* Quantity, int* Level, EItemNotifyReason* Reason);
	void ClientNotifyInventoryFull();
	void ClientForceUseItem(int* ItemID);
	bool CanEquipItemByID(int* ItemID, int* SlotIndex);
	bool CanAddItem(class UClass** ItemBP, int* Quantity, int* ItemLevel);
	bool AutoEquipItemByID(int* ItemID, bool* ForceEquip);
	bool AutoEquipItem(class UClass** ItemBP, bool* ForceEquip);
	void AddItemSoft(TSoftObjectPtr<class UClass>* ItemBP, int* Quantity, int* ItemLevel, EItemNotifyReason* Reason);
	struct FInventoryResult AddItem(class UClass** ItemBP, int* Quantity, int* ItemLevel, EItemNotifyReason* Reason);
	void AddInfiniteItem(class UClass** ItemBP);
};


// Class GunfireRuntime.ProgressionComponent
// 0x0050 (0x0148 - 0x00F8)
class UProgressionComponent : public UActorComponent
{
public:
	class UDataTable*                                  ExperienceTable;                                          // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                StartingLevel;                                            // 0x0100(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InitialRequiredExperience;                                // 0x0104(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RequiredExperienceInc;                                    // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RequiredExperienceExp;                                    // 0x010C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxRequiredExperience;                                    // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IncomingExperienceScalar;                                 // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RequiredExperienceRound;                                  // 0x0118(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxLevel;                                                 // 0x011C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Level;                                                    // 0x0120(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Experience;                                               // 0x0124(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                QueuedExperience;                                         // 0x0128(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoAcquireExperience;                                    // 0x012C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               QueueExperience;                                          // 0x012D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SharedExperience;                                         // 0x012E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x1];                                       // 0x012F(0x0001) MISSED OFFSET
	float                                              SharedExperienceRange;                                    // 0x0130(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0134(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnLevelUp;                                                // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ProgressionComponent");
		return ptr;
	}


	bool SetLevel(int* LevelToSet);
	void OnRep_Level();
	void OnRep_Experience();
	void OnComputeStats();
	float GetPercentageToNextLevel();
	int GetExperienceTowardsNextLevel();
	int GetExperienceToNextLevel();
	void CommitQueuedExperience();
	void ClearQueuedExperience();
	void AddExperience(int* ExperienceToAdd, EExperienceReason* Reason, int* ExperienceLevel);
};


// Class GunfireRuntime.Quest
// 0x00A8 (0x03D8 - 0x0330)
class AQuest : public AActor
{
public:
	struct FName                                       QuestNameID;                                              // 0x0330(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       Label;                                                    // 0x0338(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, Protected, NativeAccessSpecifierProtected)
	struct FText                                       Description;                                              // 0x0350(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>                   Icon;                                                     // 0x0368(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, AssetRegistrySearchable, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       QuestScope;                                               // 0x0390(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ID;                                                       // 0x0398(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                Seed;                                                     // 0x039C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EQuestState                                        QuestState;                                               // 0x03A0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EQuestResult                                       QuestResult;                                              // 0x03A1(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x6];                                       // 0x03A2(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnQuestCompleteEvent;                                     // 0x03A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UQuestObjective*>                     QuestObjectives;                                          // 0x03B8(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class AQuest*>                              ChildQuests;                                              // 0x03C8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Quest");
		return ptr;
	}


	void SetObjectiveCounterMax(struct FName* NameID, int* MaxCount);
	void ResetObjective(struct FName* NameID);
	void ResetAllObjectives(bool* ResetQuestState);
	void OnResetQuest();
	void OnQuestManagerReady();
	void OnQuestComplete(EQuestResult* Result);
	void OnPostInitializeQuest();
	void OnPostCreateQuest();
	void OnObjectivesUpdated();
	void OnObjectiveComplete(struct FName* NameID);
	void OnObjectiveActivate(struct FName* NameID);
	void OnInitializeQuest();
	void OnDestroyQuest();
	void OnDeinitializeQuest();
	void OnCreateQuest(struct FRandomStream* RandomStream);
	void OnBeginQuest();
	void NotifyQuestComplete(EQuestResult* Result);
	bool IsQuestComplete();
	bool IsQuestActive();
	bool IsObjectiveComplete(struct FName* NameID);
	bool IsObjectiveActive(struct FName* NameID);
	void IncrementObjectiveCounter(struct FName* NameID, bool* AutoComplete);
	bool HasActiveObjectives();
	struct FName GetUniqueName();
	class AQuest* GetRootQuestForScope();
	void GetQuestObjectives(TArray<class UQuestObjective*>* Objectives);
	class UQuestObjective* GetQuestObjective(struct FName* NameID);
	class AQuest* GetParentQuest();
	int GetObjectiveCountRemaining(struct FName* NameID);
	int GetObjectiveCounterMax(struct FName* NameID);
	int GetObjectiveCounter(struct FName* NameID);
	void CompleteQuest(EQuestResult* Result);
	void CompleteObjective(struct FName* NameID, EQuestResult* ObjectiveResult);
	bool AreAnyObjectivesActiveOrComplete();
	void ActivateObjective(struct FName* NameID, bool* AutoCompleteActiveObjectives);
};


// Class GunfireRuntime.QuestComponent
// 0x0040 (0x02A0 - 0x0260)
class UQuestComponent : public USceneComponent
{
public:
	struct FScriptMulticastDelegate                    OnQuestActivated;                                         // 0x0260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnQuestDeactivated;                                       // 0x0270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0280(0x0008) MISSED OFFSET
	TArray<class FString>                              Errors;                                                   // 0x0288(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0298(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.QuestComponent");
		return ptr;
	}


	void OnResetQuest();
	void OnQuestComplete(EQuestResult* Result);
	void OnPostInitializeQuest();
	void OnPostCreateQuest();
	void OnObjectiveComplete(struct FName* NameID);
	void OnObjectiveActivate(struct FName* NameID);
	void OnInitializeQuest();
	void OnDeinitializeQuest();
	void OnCreateQuest(struct FRandomStream* RandomStream);
	bool IsQuestActive();
	bool HasErrors();
	void GetDebugProperties(TArray<struct FQuestDebugProperty>* Properties);
	class FString GetDebugLabel();
	void DeactivateQuest();
	void ActivateQuest();
};


// Class GunfireRuntime.QuestEntity
// 0x0070 (0x0310 - 0x02A0)
class UQuestEntity : public UQuestComponent
{
public:
	struct FText                                       Label;                                                    // 0x02A0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UEventTree*                                  EventTree;                                                // 0x02B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQuestEntityOwnerContext                           OwnerContext;                                             // 0x02C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x02C1(0x0007) MISSED OFFSET
	TArray<struct FQuestEntityEventTree>               EventTrees;                                               // 0x02C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSpawned;                                                // 0x02D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDeSpawned;                                              // 0x02E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDestroyed;                                              // 0x02F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0308(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.QuestEntity");
		return ptr;
	}


	void StartEventTree(class UEventTree** NewEventTree);
	bool IsSpawned();
	bool HasEventTree(struct FName* NameID);
	class AQuest* GetQuest();
	class UEventTree* GetEventTreeByID(struct FName* NameID);
	class AActor* GetActor();
	void EndDialog();
	void DialogTrigger(struct FName* TriggerName, class AActor** Initiator, bool* Push, bool* AllowOverrideExistingStack);
	void BeginDialog(class AActor** Initiator);
};


// Class GunfireRuntime.QuestManager
// 0x0048 (0x0140 - 0x00F8)
class UQuestManager : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnQuestsUpdated;                                          // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnQuestObjectivesUpdated;                                 // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnQuestComplete;                                          // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class AQuest*>                              Quests;                                                   // 0x0128(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int                                                QuestIDGen;                                               // 0x0138(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x013C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.QuestManager");
		return ptr;
	}


	void SetupQuestVariables(class UEventTreeComponent** EventTreeComponent);
	void NotifyQuestsUpdated();
	bool STATIC_NotifyQuestByName(class UObject** WorldContextObject, struct FName* QuestNameID, struct FName* EventName);
	class AQuest* GetQuestByType(class UClass** QuestBP);
	class UQuestManager* STATIC_GetInstance(class UObject** WorldContextObject);
	TArray<class AQuest*> FindQuestsInLevel(class ULevel** Level);
	class AQuest* FindQuestByNameID(struct FName* QuestNameID);
	class AQuest* FindQuestByID(int* ID);
	void DestroyQuest(class AQuest** Quest);
	class AQuest* AddQuest(class UClass** QuestBP, int* SeedOverride);
};


// Class GunfireRuntime.SequencerManager
// 0x0048 (0x0140 - 0x00F8)
class USequencerManager : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnSkipVoteChange;                                         // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCinematicPlaying;                                       // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCinematicStopping;                                      // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UClass*                                      PossessedObjectAction;                                    // 0x0128(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USequenceInstance*>                   SequenceInstances;                                        // 0x0130(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SequencerManager");
		return ptr;
	}


	void UpdateSkipStatus(class ULevelSequence** InSequence, bool* ShouldSkip);
	void SkipSequence(class ULevelSequence** InSequence);
	void SetupSequence_Client(class UObject** WorldContextObject, class ULevelSequence** LevelSequence, struct FSequencerPlayerSettings* LevelSequenceSettings, class AActor** Instigator, class UEventTreeComponent** SourceComponent);
	void ProposeToSkip(class ULevelSequence** InSequence, class APlayerGunfire** Player);
	class USequencerManager* STATIC_GetInstance(class UObject** WorldContextObject);
};


// Class GunfireRuntime.SilhouetteComponent
// 0x0020 (0x0118 - 0x00F8)
class USilhouetteComponent : public UActorComponent
{
public:
	struct FName                                       RequiredTag;                                              // 0x00F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ViewerTag;                                                // 0x0100(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESilhouetteVisibility                              Visibility;                                               // 0x0108(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0109(0x0003) MISSED OFFSET
	float                                              MaxDistance;                                              // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      DefaultSilhouetteColorIdx;                                // 0x0110(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      WoundedSilhouetteColorIdx;                                // 0x0111(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAutoUpdateEquipment;                                     // 0x0112(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0113(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SilhouetteComponent");
		return ptr;
	}


	void OnInventoryChanged();
};


// Class GunfireRuntime.SpawnFilterManager
// 0x0010 (0x0108 - 0x00F8)
class USpawnFilterManager : public UActorComponent
{
public:
	TArray<class USpawnFilter*>                        ActiveSpawnFilters;                                       // 0x00F8(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnFilterManager");
		return ptr;
	}


	void STATIC_SetSpawnFilter(class UObject** WorldContextObject, class USpawnFilter** SpawnFilter);
	void STATIC_RemoveSpawnFilter(class UObject** WorldContextObject, class USpawnFilter** SpawnFilter);
	class USpawnFilterManager* STATIC_GetInstance(class UObject** WorldContextObject);
	void STATIC_ClearAllSpawnFilters(class UObject** WorldContextObject);
};


// Class GunfireRuntime.StateCameraComponent
// 0x0C40 (0x1440 - 0x0800)
class UStateCameraComponent : public UCameraComponent
{
public:
	class UClass*                                      DefaultCameraState;                                       // 0x0800(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FlyCameraState;                                           // 0x0808(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FixedCameraState;                                         // 0x0810(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       HMDComponentName;                                         // 0x0818(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AimBone;                                                  // 0x0820(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     AimBonePitchAxis;                                         // 0x0828(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimBoneScale;                                             // 0x0834(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinControllerSensitivityScalar;                           // 0x0838(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxControllerSensitivityScalar;                           // 0x083C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinMouseSensitivityScalar;                                // 0x0840(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxMouseSensitivityScalar;                                // 0x0844(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0848(0x0028) MISSED OFFSET
	float                                              MaxPlatformCamPivotSmoothTime;                            // 0x0870(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0874(0x0004) MISSED OFFSET
	class ACharacter*                                  Character;                                                // 0x0878(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraState*                                CurrentCamera;                                            // 0x0880(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraState*                                PreviousCamera;                                           // 0x0888(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                      ActiveCameraActor;                                        // 0x0890(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             HMDComponent;                                             // 0x0898(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0xB48];                                     // 0x08A0(0x0B48) MISSED OFFSET
	class AActor*                                      AnimatedCameraActor;                                      // 0x13E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x14];                                      // 0x13F0(0x0014) MISSED OFFSET
	float                                              MaxRecoveryAngle;                                         // 0x1404(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x38];                                      // 0x1408(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.StateCameraComponent");
		return ptr;
	}


	void ToggleSecondaryFlyCamera();
	void ToggleFlyCamera(bool* bUseSecondGamepad);
	void SetInputEnabled(bool* Enabled);
	void SetCameraState(class UCameraState** State, float* BlendTime);
	void SetAnimatedCameraFOV(float* CameraFOV);
	void ResetView(bool* bHardReset);
	void ResetFromCurrentView(float* BlendTime);
	void HardReset(struct FMinimalViewInfo* NewCameraParams, class UClass** NewState);
	class APlayerControllerGunfire* GetPlayerController();
	class UCameraState* GetCurrentCamera();
	class ACharacter* GetCharacter();
	struct FTransform GetCameraTransform();
	struct FRotator GetCameraRotation();
	struct FVector GetCameraLocation();
	class AActor* GetCameraActor();
	void ExitFlyCamera();
	void ExitAnimatedCamera();
	void EnterFlyCamera(bool* bUseSecondGamepad);
	void EnterAnimatedCamera(class AActor** RefActor, struct FName* CameraBone, bool* AllowInput, float* BlendTime, float* BlendOutTime, float* CameraFOV, bool* LockCameraState);
	void AnimatedCameraCut(class AActor** RefActor, struct FName* CameraBone, float* CameraFOV);
};


// Class GunfireRuntime.Trait
// 0x0038 (0x00F0 - 0x00B8)
class UTrait : public UActorModifier
{
public:
	class UClass*                                      Type;                                                     // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxLevel;                                                 // 0x00C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAddIfAlreadyUnlocked;                                    // 0x00C4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00C5(0x0003) MISSED OFFSET
	int                                                SubsequentUnlockLevelIncrement;                           // 0x00C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RequiredCharacterLevel;                                   // 0x00CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              RequiredTraits;                                           // 0x00D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class UConditionList*                              ConditionList;                                            // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELicensedContent                                   RequiredLicense;                                          // 0x00E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00E9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Trait");
		return ptr;
	}

};


// Class GunfireRuntime.UIActor
// 0x0078 (0x03A8 - 0x0330)
class AUIActor : public AActor
{
public:
	class AUIHud*                                      HUD;                                                      // 0x0330(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      WidgetClass;                                              // 0x0338(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                                 WidgetInstance;                                           // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bHideParent;                                              // 0x0348(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0349(0x0003) MISSED OFFSET
	int                                                ViewPortZ;                                                // 0x034C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       Text;                                                     // 0x0350(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       Caption;                                                  // 0x0368(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              DistanceFromCamera;                                       // 0x0380(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ZOffsetFromCamera;                                        // 0x0384(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DialogLinger;                                             // 0x0388(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCaptureInput;                                            // 0x038C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPassInputToPlayer;                                       // 0x038D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAlwaysOnTop;                                             // 0x038E(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInvulnerable;                                            // 0x038F(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRemoveOnHidden;                                          // 0x0390(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRemoveWhenNotOnTop;                                      // 0x0391(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0392(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDialogResult;                                           // 0x0398(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.UIActor");
		return ptr;
	}


	void SetWidgetText(struct FName* Widget, struct FText* WidgetText);
	void OnPushDialog(class AUIActor** Next);
	void OnPopDialog(class AUIActor** Prev);
	void OnEndDialog();
	void OnDialogLayer(int* Depth);
	void OnBeginDialog();
	void Focus();
	void CreateInstance();
};


// Class GunfireRuntime.EquipmentMod
// 0x0030 (0x04E0 - 0x04B0)
class AEquipmentMod : public AItem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04B0(0x0008) MISSED OFFSET
	bool                                               Hidden;                                                   // 0x04B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ReplicateMod;                                             // 0x04B9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x2];                                       // 0x04BA(0x0002) MISSED OFFSET
	struct FName                                       VisualSlot;                                               // 0x04BC(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       VisualID;                                                 // 0x04C4(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanBeRemoved;                                             // 0x04CC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x04CD(0x0003) MISSED OFFSET
	class AEquipment*                                  _Equipment;                                               // 0x04D0(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      _Slot;                                                    // 0x04D8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      _Level;                                                   // 0x04D9(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x6];                                       // 0x04DA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EquipmentMod");
		return ptr;
	}


	bool STATIC_UnequipMod(class UInventoryComponent** Inventory, int* ItemID, unsigned char* Slot, bool* AddToInventory);
	void ScaleStat(struct FName* Stat, float* Scalar, bool* AutoInitValue);
	void OnPostComputeStats();
	void OnDetached();
	void OnComputeStats();
	void OnAttached();
	void ModifyStat(struct FName* Stat, float* Value);
	bool STATIC_HasItemOrEquippedMod(class UInventoryComponent** Inventory, class UClass** ItemBP);
	float GetStat(struct FName* Stat);
	unsigned char GetSlot();
	struct FInspectInfo STATIC_GetPreviewInspectInfoFromInventory(class AActor** Actor, class UInventoryComponent** Inventory, int* ItemID, unsigned char* Slot, int* ModItemID);
	struct FInspectInfo STATIC_GetPreviewInspectInfo(class AActor** Actor, class UInventoryComponent** Inventory, int* ItemID, unsigned char* Slot, class UClass** Mod, unsigned char* ModLevel);
	class AEquipment* GetEquipment();
	bool STATIC_FindEquippedModInInventory(class UInventoryComponent** Inventory, class UClass** Mod, int* OutItemID, struct FEquipmentModData* OutModData);
	bool STATIC_EquipModFromInventory(class UInventoryComponent** Inventory, int* ItemID, unsigned char* Slot, int* ModItemID);
	bool STATIC_EquipMod(class UInventoryComponent** Inventory, int* ItemID, unsigned char* Slot, class UClass** Mod, unsigned char* ModLevel);
};


// Class GunfireRuntime.ActorStateDecorator
// 0x0000 (0x0028 - 0x0028)
class UActorStateDecorator : public UStateMachineSubobject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ActorStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.ShowEquipmentAbstractDecorator
// 0x0008 (0x0030 - 0x0028)
class UShowEquipmentAbstractDecorator : public UActorStateDecorator
{
public:
	bool                                               SetOnEnter;                                               // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               SetOnExit;                                                // 0x0029(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               RestoreOnExit;                                            // 0x002A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x5];                                       // 0x002B(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ShowEquipmentAbstractDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.SpawnFilterEntry
// 0x0018 (0x0040 - 0x0028)
class USpawnFilterEntry : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	class FString                                      Comment;                                                  // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnFilterEntry");
		return ptr;
	}

};


// Class GunfireRuntime.SpawnFilterElement
// 0x0010 (0x0050 - 0x0040)
class USpawnFilterElement : public USpawnFilterEntry
{
public:
	TArray<class USpawnFilterList*>                    ModifierLists;                                            // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnFilterElement");
		return ptr;
	}

};


// Class GunfireRuntime.SpawnTableEntry
// 0x0060 (0x0088 - 0x0028)
class USpawnTableEntry : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	class FString                                      Comment;                                                  // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ChanceGroup;                                              // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Chance;                                                   // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ChanceDecayBelowMinLevel;                                 // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ChanceDecayAboveMaxLevel;                                 // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ChanceIncreaseOnFail;                                     // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               Tags;                                                     // 0x0058(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FName>                               RestrictedTags;                                           // 0x0068(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                LevelMin;                                                 // 0x0078(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LevelMax;                                                 // 0x007C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RatingMin;                                                // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                RatingMax;                                                // 0x0084(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnTableEntry");
		return ptr;
	}

};


// Class GunfireRuntime.SpawnTableElement
// 0x0000 (0x0088 - 0x0088)
class USpawnTableElement : public USpawnTableEntry
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnTableElement");
		return ptr;
	}

};


// Class GunfireRuntime.AchievementHelpers
// 0x0018 (0x0048 - 0x0030)
class UAchievementHelpers : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET
	class UAchievementList*                            AchievementListCached;                                    // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AchievementHelpers");
		return ptr;
	}

};


// Class GunfireRuntime.AchievementInfo
// 0x0018 (0x0040 - 0x0028)
class UAchievementInfo : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FName                                       AchievementId;                                            // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                UnlockAmount;                                             // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AchievementInfo");
		return ptr;
	}

};


// Class GunfireRuntime.AchievementList
// 0x0018 (0x0040 - 0x0028)
class UAchievementList : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	TArray<class UAchievementInfo*>                    Achievements;                                             // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AchievementList");
		return ptr;
	}

};


// Class GunfireRuntime.AchievementUpdateCallbackProxy
// 0x0008 (0x0080 - 0x0078)
class UAchievementUpdateCallbackProxy : public UAchievementWriteCallbackProxy
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0078(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AchievementUpdateCallbackProxy");
		return ptr;
	}

};


// Class GunfireRuntime.AchievementIncrementCallbackProxy
// 0x0000 (0x0080 - 0x0080)
class UAchievementIncrementCallbackProxy : public UAchievementUpdateCallbackProxy
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AchievementIncrementCallbackProxy");
		return ptr;
	}


	class UAchievementIncrementCallbackProxy* STATIC_IncrementAchievementProgress(class UObject** WorldContextObject, class APlayerController** PlayerController, struct FAchievementId* AchievementName, int* Progress);
};


// Class GunfireRuntime.AchievementSetCallbackProxy
// 0x0000 (0x0080 - 0x0080)
class UAchievementSetCallbackProxy : public UAchievementUpdateCallbackProxy
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AchievementSetCallbackProxy");
		return ptr;
	}


	class UAchievementSetCallbackProxy* STATIC_SetAchievementProgress(class UObject** WorldContextObject, class APlayerController** PlayerController, struct FAchievementId* AchievementName, int* Progress);
};


// Class GunfireRuntime.ActionComponent
// 0x0048 (0x0140 - 0x00F8)
class UActionComponent : public UActorComponent
{
public:
	TArray<class UActionBase*>                         Actions;                                                  // 0x00F8(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnActionAdded;                                            // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnActionRemoved;                                          // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0128(0x0008) MISSED OFFSET
	TArray<class UActionBase*>                         OldActions;                                               // 0x0130(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ActionComponent");
		return ptr;
	}


	void StopActionByType(class UClass** ActionBP);
	void StopAction(int* ActionID);
	void OnRep_Actions();
	bool IsActionTypeRunning(class UClass** ActionBP);
	bool IsActionRunning(int* ActionID);
	void InvokeEventOnAll(struct FName* EventName);
	void InvokeEvent(class UClass** ActionType, struct FName* EventName);
	int GetNumActionsOfType(class UClass** ActionBP);
	TArray<class UActionBase*> GetAllActionsOfType(class UClass** ActionBP);
	class UActionBase* GetActionOfType(class UClass** ActionBP);
	class UActionBase* GetActionByID(int* ID);
	int DoActionInternal(class UActionBase** Action, struct FDamageInfo* DamageInfo, TArray<struct FName>* AdditionalTags);
	int DoAction(class UClass** Action, class AActor** Cause, class AActor** Target, struct FHitResult* HitInfo, class UClass** DamageType);
	bool CanDoActionInternal(class UClass** ActionBP, struct FDamageInfo* DamageInfo);
};


// Class GunfireRuntime.ActorContextCondition
// 0x0020 (0x0050 - 0x0030)
class UActorContextCondition : public UCondition
{
public:
	EActorContext                                      Context;                                                  // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FConditions                                 Conditions;                                               // 0x0038(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ActorContextCondition");
		return ptr;
	}

};


// Class GunfireRuntime.ActorState
// 0x0080 (0x00A8 - 0x0028)
class UActorState : public UStateMachineSubobject
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0028(0x0004) MISSED OFFSET
	struct FActorStateID                               UniqueId;                                                 // 0x002C(0x0010) (DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       NameID;                                                   // 0x003C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsSwitch;                                                 // 0x0044(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsReentrant;                                              // 0x0045(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0046(0x0002) MISSED OFFSET
	TArray<struct FName>                               Tags;                                                     // 0x0048(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               IsInterruptible;                                          // 0x0058(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	int                                                InterruptPriority;                                        // 0x005C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                InterruptChance;                                          // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FConditions                                 Conditions;                                               // 0x0068(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FActorStateDecorators                       Decorators;                                               // 0x0080(0x0010) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UActorStateTransition*>               Transitions;                                              // 0x0090(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x8];                                       // 0x00A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ActorState");
		return ptr;
	}

};


// Class GunfireRuntime.ActorStateTransition
// 0x0058 (0x0080 - 0x0028)
class UActorStateTransition : public UStateMachineSubobject
{
public:
	bool                                               Enabled;                                                  // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	struct FName                                       DestinationState;                                         // 0x002C(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FActorStateID                               DestinationStateID;                                       // 0x0034(0x0010) (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	class FString                                      Comment;                                                  // 0x0048(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FConditions                                 Conditions;                                               // 0x0058(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bResetDestinationAnimationID;                             // 0x0070(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	class UActorState*                                 CachedState;                                              // 0x0078(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ActorStateTransition");
		return ptr;
	}

};


// Class GunfireRuntime.AdvancedDecalComponent
// 0x0010 (0x02B0 - 0x02A0)
class UAdvancedDecalComponent : public UDecalComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x02A0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AdvancedDecalComponent");
		return ptr;
	}

};


// Class GunfireRuntime.AdvImage
// 0x0010 (0x0230 - 0x0220)
class UAdvImage : public UImage
{
public:
	struct FName                                       NameID;                                                   // 0x0220(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0228(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AdvImage");
		return ptr;
	}


	void SetNameID(struct FName* InNameID);
	void OnResetIconCache();
	void OnDeviceChanged(int* ControllerId, EInputDevice* NewDevice);
};


// Class GunfireRuntime.AdvTextBlock
// 0x0378 (0x0490 - 0x0118)
class UAdvTextBlock : public UWidget
{
public:
	struct FScriptMulticastDelegate                    OnTextFilled;                                             // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWidgetReady;                                            // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPageSet;                                                // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FText                                       Text;                                                     // 0x0148(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                              Font;                                                     // 0x0160(0x0050) (Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoWrapText;                                             // 0x01B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<ETextJustify>                          Justification;                                            // 0x01B1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x01B2(0x0002) MISSED OFFSET
	struct FLinearColor                                Color;                                                    // 0x01B4(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ShadowOffset;                                             // 0x01C4(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                ShadowColor;                                              // 0x01CC(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WrapTextAt;                                               // 0x01DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                                     Margin;                                                   // 0x01E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	float                                              LineHeightPercentage;                                     // 0x01F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FillInSpeed;                                              // 0x01F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               RebuildAfterDeviceChange;                                 // 0x01F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAutoStartFillIn;                                         // 0x01F9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x296];                                     // 0x01FA(0x0296) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AdvTextBlock");
		return ptr;
	}


	void StartTextFill(bool* bStartFromBeginning);
	void SetText(struct FText* NewText, float* NewFillSpeed, bool* bShouldAutoStartFillIn);
	void SetLineHeightPercentage(float* InLineHeightPercentage);
	void SetCurrentPage(int* Page);
	void PauseTextFill();
	void OnDeviceChanged(int* ControllerId, EInputDevice* NewDevice);
	bool IsTextFillPaused();
	int GetNumPages();
	void ForceRecompute();
	struct FVector2D ComputeDesiredSize();
	void CompleteTextFill();
	void ClearText();
};


// Class GunfireRuntime.AdvTextBlockSettings
// 0x0010 (0x0038 - 0x0028)
class UAdvTextBlockSettings : public UObject
{
public:
	TArray<struct FFontStyleConfigEntry>               FontStyles;                                               // 0x0028(0x0010) (Edit, EditFixedSize, ZeroConstructor, Config, AdvancedDisplay, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AdvTextBlockSettings");
		return ptr;
	}

};


// Class GunfireRuntime.AIAttackStateDecorator
// 0x0010 (0x0038 - 0x0028)
class UAIAttackStateDecorator : public UActorStateDecorator
{
public:
	EAttackType                                        AttackType;                                               // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                AttackPressure;                                           // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               ValidatePressure;                                         // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIAttackStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.AIAwarenessComponent
// 0x0000 (0x00F8 - 0x00F8)
class UAIAwarenessComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIAwarenessComponent");
		return ptr;
	}

};


// Class GunfireRuntime.AIAwarenessManager
// 0x0020 (0x0118 - 0x00F8)
class UAIAwarenessManager : public UActorComponent
{
public:
	int                                                MaxUpdatesPerFrame;                                       // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldUpdateAwareness;                                   // 0x00FC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00FD(0x0003) MISSED OFFSET
	TArray<class AAIControllerGunfire*>                Controllers;                                              // 0x0100(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0110(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIAwarenessManager");
		return ptr;
	}


	void SendAwarenessSignalSegment(EAwarenessSignal* Type, class AActor** Source, struct FVector* from, struct FVector* to, float* Radius);
	void SendAwarenessSignal(EAwarenessSignal* Type, class AActor** Source, struct FVector* Position, float* Radius, bool* UseSourceForLastKnownPosition, bool* bApplySightRangeBonus);
	class UAIAwarenessManager* STATIC_GetInstance(class UObject** WorldContextObject);
};


// Class GunfireRuntime.AICharacter
// 0x0050 (0x0AF0 - 0x0AA0)
class AAICharacter : public ACharacterGunfire
{
public:
	class UBlackboardData*                             Blackboard;                                               // 0x0AA0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AAIPathPoint*                                SpawnPath;                                                // 0x0AA8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AAIPathPoint*                                PatrolPath;                                               // 0x0AB0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PerceptionScalar;                                         // 0x0AB8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0ABC(0x0004) MISSED OFFSET
	class UClass*                                      CombatClass;                                              // 0x0AC0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     SpawnLocation;                                            // 0x0AC8(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       POITag;                                                   // 0x0AD4(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       POIAnimationTag;                                          // 0x0ADC(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0AE4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AICharacter");
		return ptr;
	}


	void OnRep_POIAnimationTag(struct FName* PreviousTag);
};


// Class GunfireRuntime.AITargetSelector
// 0x0008 (0x0030 - 0x0028)
class UAITargetSelector : public UObject
{
public:
	bool                                               bScoreUnkownTargets;                                      // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AITargetSelector");
		return ptr;
	}

};


// Class GunfireRuntime.AICharacterNearbyTargetSelector
// 0x0010 (0x0040 - 0x0030)
class UAICharacterNearbyTargetSelector : public UAITargetSelector
{
public:
	float                                              Range;                                                    // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       RequireTag;                                               // 0x0034(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AICharacterNearbyTargetSelector");
		return ptr;
	}

};


// Class GunfireRuntime.AIGoalActor
// 0x0010 (0x0340 - 0x0330)
class AAIGoalActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	class APawn*                                       Pawn;                                                     // 0x0338(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIGoalActor");
		return ptr;
	}

};


// Class GunfireRuntime.AIControllerGunfire
// 0x0180 (0x05B8 - 0x0438)
class AAIControllerGunfire : public AAIController
{
public:
	class UClass*                                      NavigationFilter;                                         // 0x0438(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSeeksTargets;                                            // 0x0440(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Persistent;                                               // 0x0441(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0442(0x0002) MISSED OFFSET
	float                                              SightRange;                                               // 0x0444(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SightAngle;                                               // 0x0448(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LostSightRange;                                           // 0x044C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BonusLostSightRange;                                      // 0x0450(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NearSightRange;                                           // 0x0454(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bNearSightRequiresLoS;                                    // 0x0458(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0459(0x0003) MISSED OFFSET
	float                                              SphereLOSRadius;                                          // 0x045C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HearingScalar;                                            // 0x0460(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HearingOcclusionScalar;                                   // 0x0464(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThreatWindow;                                             // 0x0468(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ThreatBonus;                                              // 0x046C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlertTimeout;                                             // 0x0470(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlertGiveUpDistance;                                      // 0x0474(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlertGiveUpTimeout;                                       // 0x0478(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AwareDistanceThreshold;                                   // 0x047C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AwarePulseRadius;                                         // 0x0480(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               EvaluateFriendlyTargets;                                  // 0x0484(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ForceEvaluatePlayers;                                     // 0x0485(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               PathToLastKnownPosition;                                  // 0x0486(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0487(0x0001) MISSED OFFSET
	float                                              PerceptionScalar;                                         // 0x0488(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       EyeSocket;                                                // 0x048C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CoverAimAdjustDistance;                                   // 0x0494(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DefaultTargetSelector;                                    // 0x0498(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CurrentTargetSelector;                                    // 0x04A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENodePathStatus                                    NodePathStatus;                                           // 0x04A8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x7];                                       // 0x04A9(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPawnUnpossessed;                                        // 0x04B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x78];                                      // 0x04C0(0x0078) MISSED OFFSET
	class UClass*                                      RelevantActorClass;                                       // 0x0538(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0540(0x0004) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       CurrentTarget;                                            // 0x0544(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                       ThreatLeader;                                             // 0x054C(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x24];                                      // 0x0554(0x0024) MISSED OFFSET
	struct FAITacticalPoint                            TacticalPoint;                                            // 0x0578(0x0020) (Transient, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               TacticalPointIsValid;                                     // 0x0598(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0599(0x0007) MISSED OFFSET
	class AAIGoalActor*                                PathToActor;                                              // 0x05A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AAIPathPoint*                                PathPoint;                                                // 0x05A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x8];                                       // 0x05B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIControllerGunfire");
		return ptr;
	}


	void UpdateAwareness(float* DeltaSeconds);
	void UnlockCurrentTarget();
	void SetSpawnLocation(struct FVector* SpawnLocation);
	void SetRelevantActorFilterClass(class UClass** FilterClass);
	void SetCurrentTarget(class AActor** Actor, bool* bLockOn);
	void SendAwarenessSignal(EAwarenessSignal* Type, class AActor** Source, struct FVector* Position, float* Radius, bool* UseSourceForLastKnownPosition, bool* bApplySightRangeBonus);
	void ResetThreat();
	void ResetAwareness();
	void OnSetTacticalPoint(struct FAITacticalPoint* NewTacticalPoint);
	void OnFactionChanged(class ACharacterGunfire** InCharacter);
	void OnClearTacticalPoint();
	void LockCurrentTarget();
	bool HasLineOfSightToAnyPlayer();
	bool HasLineOfSight(class AActor** Actor);
	class AActor* GetThreatLeader();
	bool GetTargetChangedThisFrame();
	bool GetTacticalPointValid();
	struct FAITacticalPoint GetTacticalPoint();
	class AActor* GetPathTarget(struct FName* PathTargetName, struct FVector* TargetPos);
	class AAIPathPoint* GetPathPoint();
	TArray<class AAIControllerGunfire*> STATIC_GetNearbyAI(class UObject** WorldContextObject, struct FVector* Origin, float* Radius, TArray<class AAIControllerGunfire*>* IgnoreList);
	class AActor* GetCurrentTarget();
	void AddThreat(class AActor** ThreatCharacter, float* Amount, bool* bApplySightRangeBonus);
	void AddPersistentTarget(class AActor** Target);
};


// Class GunfireRuntime.AIConvergeToStateDecorator
// 0x0028 (0x0050 - 0x0028)
class UAIConvergeToStateDecorator : public UActorStateDecorator
{
public:
	EConvergeToType                                    ConvergeTo;                                               // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	struct FName                                       BlackboardKey;                                            // 0x002C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ConvergeTime;                                             // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               ConvergeXY;                                               // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               ConvergeZ;                                                // 0x0039(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               ConvergeHeading;                                          // 0x003A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               ConvereHeadingFaceTarget;                                 // 0x003B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               UpdateTarget;                                             // 0x003C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               StopUpdatingWhenConverged;                                // 0x003D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x2];                                       // 0x003E(0x0002) MISSED OFFSET
	struct FVector                                     ConvergeOffset;                                           // 0x0040(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIConvergeToStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.AICoordinator
// 0x0038 (0x0130 - 0x00F8)
class UAICoordinator : public UActorComponent
{
public:
	EFlockingStyle                                     FlockingStyle;                                            // 0x00F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET
	class UClass*                                      DefaultCombatClass;                                       // 0x0100(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PlayerCombatClass;                                        // 0x0108(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRegisterAttack;                                         // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0120(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AICoordinator");
		return ptr;
	}


	int GetWeightForTarget(class AActor** Target);
	int GetMaxWeightForTarget(class AActor** Target);
	class UAICoordinator* STATIC_GetAICoordinator(class UObject** WorldContextObject);
};


// Class GunfireRuntime.AIDataContainer
// 0x0040 (0x0068 - 0x0028)
class UAIDataContainer : public UObject
{
public:
	TArray<struct FAITacticalPoint>                    TacticalPoints;                                           // 0x0028(0x0010) (Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FAINavigationLink>                   NavLinks;                                                 // 0x0038(0x0010) (Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FSpawnPointList>                     SpawnPoints;                                              // 0x0048(0x0010) (Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FOwnedAIData>                        OwnedInfo;                                                // 0x0058(0x0010) (Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIDataContainer");
		return ptr;
	}

};


// Class GunfireRuntime.AIData
// 0x0060 (0x0390 - 0x0330)
class AAIData : public AActor
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0330(0x0020) MISSED OFFSET
	bool                                               DrawTacticalPoints;                                       // 0x0350(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DrawTraversalLinks;                                       // 0x0351(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DrawSpawnPoints;                                          // 0x0352(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0353(0x0005) MISSED OFFSET
	class UAIDataContainer*                            Data;                                                     // 0x0358(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x30];                                      // 0x0360(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIData");
		return ptr;
	}

};


// Class GunfireRuntime.AIDataComponent
// 0x0028 (0x0120 - 0x00F8)
class UAIDataComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x00F8(0x0020) MISSED OFFSET
	class AAIData*                                     AIData;                                                   // 0x0118(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIDataComponent");
		return ptr;
	}


	void SetState(bool* Enabled);
};


// Class GunfireRuntime.AIDataGenerationSettings
// 0x0068 (0x0090 - 0x0028)
class UAIDataGenerationSettings : public UObject
{
public:
	struct FName                                       NavAgentName;                                             // 0x0028(0x0008) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<ECollisionChannel>                     TraceChannel;                                             // 0x0030(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               QueryComplexCollision;                                    // 0x0031(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	float                                              CoverCheckIncrement;                                      // 0x0034(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumCoverWidth;                                        // 0x0038(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CoverTestDistance;                                        // 0x003C(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LongEdgeLength;                                           // 0x0040(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LowCoverHeight;                                           // 0x0044(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LowCoverOpenTestDistance;                                 // 0x0048(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LowCoverOpenTestHeight;                                   // 0x004C(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LowCoverOpenTestSize;                                     // 0x0050(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HighCoverHeight;                                          // 0x0054(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HighCornerCoverGap;                                       // 0x0058(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HighCornerCoverBottom;                                    // 0x005C(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      VaultOverNavArea;                                         // 0x0060(0x0008) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      VaultUpNavArea;                                           // 0x0068(0x0008) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FallNavArea;                                              // 0x0070(0x0008) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumFallDistance;                                      // 0x0078(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	TArray<struct FSpawnGenerator>                     SpawnGenerators;                                          // 0x0080(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIDataGenerationSettings");
		return ptr;
	}

};


// Class GunfireRuntime.AIDataRenderingComponent
// 0x0000 (0x0580 - 0x0580)
class UAIDataRenderingComponent : public UPrimitiveComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIDataRenderingComponent");
		return ptr;
	}

};


// Class GunfireRuntime.AIDefaultTargetSelector
// 0x0008 (0x0038 - 0x0030)
class UAIDefaultTargetSelector : public UAITargetSelector
{
public:
	bool                                               CullNotVisibleTargets;                                    // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CullNotVisibleTargetsWithNoPath;                          // 0x0031(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CullNoThreatTargetsWithNoPath;                            // 0x0032(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0033(0x0001) MISSED OFFSET
	float                                              WoundedAwarenessScalar;                                   // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIDefaultTargetSelector");
		return ptr;
	}

};


// Class GunfireRuntime.EncounterGroupInstance
// 0x0098 (0x00C0 - 0x0028)
class UEncounterGroupInstance : public UObject
{
public:
	int                                                ID;                                                       // 0x0028(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FEncounterGroup                             Group;                                                    // 0x0030(0x0060) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                               Active;                                                   // 0x0090(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0091(0x0007) MISSED OFFSET
	class UEncounterInstance*                          Encounter;                                                // 0x0098(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Cooldown;                                                 // 0x00A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AggroCooldown;                                            // 0x00A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumEncounters;                                            // 0x00A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Stopped;                                                  // 0x00AC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoManagePlayers;                                        // 0x00AD(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Explored;                                                 // 0x00AE(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Suspended;                                                // 0x00AF(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class APlayerController*>                   Players;                                                  // 0x00B0(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EncounterGroupInstance");
		return ptr;
	}

};


// Class GunfireRuntime.AIDirector
// 0x00E8 (0x01E0 - 0x00F8)
class UAIDirector : public UActorComponent
{
public:
	struct FAIDirectorParams                           Params;                                                   // 0x00F8(0x0048) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                Level;                                                    // 0x0140(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0144(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnGroupAdded;                                             // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGroupRemoved;                                           // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGroupEncounterComplete;                                 // 0x0168(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGroupActorSpawned;                                      // 0x0178(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGroupActorDead;                                         // 0x0188(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGroupEvent;                                             // 0x0198(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01A8(0x0004) MISSED OFFSET
	bool                                               Suspended;                                                // 0x01AC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x01AD(0x0003) MISSED OFFSET
	TArray<struct FAIDirectorPlayer>                   Players;                                                  // 0x01B0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UEncounterGroupInstance*>             EncounterGroups;                                          // 0x01C0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	EIntensityState                                    IntensityState;                                           // 0x01D0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3];                                       // 0x01D1(0x0003) MISSED OFFSET
	float                                              IntensityTimer;                                           // 0x01D4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              IntensityMax;                                             // 0x01D8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x4];                                       // 0x01DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIDirector");
		return ptr;
	}


	void Suspend();
	void StopEncounterGroup(class UEncounterGroupInstance** EncounterGroup, bool* DestroyActiveSpawns);
	class UEncounterGroupInstance* StartEncounterGroup(struct FEncounterGroup* Group);
	void Resume();
	void OnNotifyHit(struct FDamageInfo* DamageInfo);
	void OnEncounterEvent(class UEncounterInstance** Encounter, struct FName* EventName);
	void OnActorSpawned(class UEncounterInstance** Encounter, class AActor** Actor);
	void OnActorDead(class UEncounterInstance** Encounter, class AActor** Actor);
	bool HasActiveSpawns();
	int GetAIDirectorDebugState();
	void ClearAllGroups(bool* DestroyActiveSpawns);
};


// Class GunfireRuntime.AIDirectorSettings
// 0x0010 (0x0340 - 0x0330)
class AAIDirectorSettings : public AActor
{
public:
	TArray<struct FEncounterGroup>                     EncounterGroups;                                          // 0x0330(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIDirectorSettings");
		return ptr;
	}

};


// Class GunfireRuntime.AIDistanceCondition
// 0x0018 (0x0048 - 0x0030)
class UAIDistanceCondition : public UCondition
{
public:
	EAIDistanceType                                    Type;                                                     // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	struct FName                                       BlackboardKey;                                            // 0x0034(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECompareOp                                         Compare;                                                  // 0x003C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	float                                              Distance;                                                 // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               TwoDimensional;                                           // 0x0044(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0045(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIDistanceCondition");
		return ptr;
	}

};


// Class GunfireRuntime.AIEnvQueryStateDecorator
// 0x0050 (0x0078 - 0x0028)
class UAIEnvQueryStateDecorator : public UActorStateDecorator
{
public:
	TArray<struct FEnvQueryQuery>                      Queries;                                                  // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                              AcceptanceRadius;                                         // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MinTimeout;                                               // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxTimeout;                                               // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ValidateInterval;                                         // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              RetryInterval;                                            // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              NewPointScoreThreshold;                                   // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              NewPointScoreThresholdWhilePathing;                       // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               PathToTargetOnFail;                                       // 0x0054(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	float                                              PathToTargetOnFailCompleteRange;                          // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       BlackboardKey;                                            // 0x005C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x14];                                      // 0x0064(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIEnvQueryStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.AIFollowTargetStateDecorator
// 0x0030 (0x0058 - 0x0028)
class UAIFollowTargetStateDecorator : public UActorStateDecorator
{
public:
	struct FName                                       FollowTarget;                                             // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MinRadius;                                                // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxRadius;                                                // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MinHeight;                                                // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxHeight;                                                // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              FollowAngle;                                              // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               MatchSpeed;                                               // 0x0044(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	float                                              MaxSpeed;                                                 // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MatchDistance;                                            // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AcceptanceRadius;                                         // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              OutOfRangeScalar;                                         // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIFollowTargetStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.AIHasBetterTargetCondition
// 0x0000 (0x0030 - 0x0030)
class UAIHasBetterTargetCondition : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIHasBetterTargetCondition");
		return ptr;
	}

};


// Class GunfireRuntime.AIHasPatrolPathCondition
// 0x0000 (0x0030 - 0x0030)
class UAIHasPatrolPathCondition : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIHasPatrolPathCondition");
		return ptr;
	}

};


// Class GunfireRuntime.AIHealTargetSelector
// 0x0010 (0x0040 - 0x0030)
class UAIHealTargetSelector : public UAITargetSelector
{
public:
	float                                              HealthPctThreshold;                                       // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       RequireTag;                                               // 0x0034(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIHealTargetSelector");
		return ptr;
	}

};


// Class GunfireRuntime.AIJumpCondition
// 0x0010 (0x0040 - 0x0030)
class UAIJumpCondition : public UCondition
{
public:
	struct FActorStateID                               JumpState;                                                // 0x0030(0x0010) (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIJumpCondition");
		return ptr;
	}

};


// Class GunfireRuntime.AnimActorState
// 0x0058 (0x0100 - 0x00A8)
class UAnimActorState : public UActorState
{
public:
	struct FName                                       AnimationID;                                              // 0x00A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStatValue                                  AnimPlayRate;                                             // 0x00B0(0x000C) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	ECharacterFacing                                   Facing;                                                   // 0x00BC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00BD(0x0003) MISSED OFFSET
	float                                              FacingOffset;                                             // 0x00C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSpeed;                                                 // 0x00C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSpeedBackwards;                                        // 0x00C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStatValue                                  MaxSpeedScalar;                                           // 0x00CC(0x000C) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                              Acceleration;                                             // 0x00D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Deceleration;                                             // 0x00DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnSpeed;                                                // 0x00E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TurnSmoothTime;                                           // 0x00E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GravityScale;                                             // 0x00E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GroundFriction;                                           // 0x00EC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              JumpImpulse;                                              // 0x00F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAbsoluteJumpImpulse;                                     // 0x00F4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ERootMotionVelocityMethod                          RootMotionMethod;                                         // 0x00F5(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ConstrainToGround;                                        // 0x00F6(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseHeadingAsAccelDirection;                               // 0x00F7(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowVerticalInputAcceleration;                          // 0x00F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceDigitalInput;                                       // 0x00F9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x6];                                       // 0x00FA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimActorState");
		return ptr;
	}


	void UpdateMovementParams(class UStateMachineComponent** StateMachine);
};


// Class GunfireRuntime.AIJumpState
// 0x0028 (0x0128 - 0x0100)
class UAIJumpState : public UAnimActorState
{
public:
	EJumpType                                          Type;                                                     // 0x0100(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0101(0x0003) MISSED OFFSET
	struct FPositionValue                              Destination;                                              // 0x0104(0x000C) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              DestinationOffset;                                        // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EAutoArcType                                       ArcMethod;                                                // 0x0114(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0115(0x0003) MISSED OFFSET
	float                                              ArcHeight;                                                // 0x0118(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              JumpSpeed;                                                // 0x011C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               LeadTarget;                                               // 0x0120(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               RequirePath;                                              // 0x0121(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               ValidateJump;                                             // 0x0122(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bLockPositionToArc;                                       // 0x0123(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bSetMaxSpeedToLaunchSpeed;                                // 0x0124(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0125(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIJumpState");
		return ptr;
	}


	bool STATIC_IsAIJumpComplete(class UStateMachineComponent** StateMachine);
};


// Class GunfireRuntime.AIMoveForwardStateDecorator
// 0x0000 (0x0028 - 0x0028)
class UAIMoveForwardStateDecorator : public UActorStateDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIMoveForwardStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.AimTargetCondition
// 0x0000 (0x0030 - 0x0030)
class UAimTargetCondition : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AimTargetCondition");
		return ptr;
	}

};


// Class GunfireRuntime.AINavArea
// 0x0008 (0x0050 - 0x0048)
class UAINavArea : public UNavArea
{
public:
	TEnumAsByte<ENavAreaFlag>                          AreaFlag;                                                 // 0x0048(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AINavArea");
		return ptr;
	}

};


// Class GunfireRuntime.AINavAreaCondition
// 0x0010 (0x0040 - 0x0030)
class UAINavAreaCondition : public UCondition
{
public:
	class UClass*                                      AreaClass;                                                // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              LookAheadDistance;                                        // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AINavAreaCondition");
		return ptr;
	}

};


// Class GunfireRuntime.AINavLinkCondition
// 0x0008 (0x0038 - 0x0030)
class UAINavLinkCondition : public UCondition
{
public:
	TEnumAsByte<ENavAreaFlag>                          AreaFlag;                                                 // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              LookAheadDistance;                                        // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AINavLinkCondition");
		return ptr;
	}

};


// Class GunfireRuntime.AINavLinkState
// 0x0020 (0x0120 - 0x0100)
class UAINavLinkState : public UAnimActorState
{
public:
	bool                                               SnapStartPositionToGround;                                // 0x0100(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0101(0x0003) MISSED OFFSET
	struct FVector                                     Offset;                                                   // 0x0104(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              LerpTime;                                                 // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       CollisionEnableWindow;                                    // 0x0114(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               StopMovementOnExit;                                       // 0x011C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x3];                                       // 0x011D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AINavLinkState");
		return ptr;
	}

};


// Class GunfireRuntime.AINearbyPlayerTargetSelector
// 0x0010 (0x0040 - 0x0030)
class UAINearbyPlayerTargetSelector : public UAITargetSelector
{
public:
	float                                              Range;                                                    // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               HasPath;                                                  // 0x0034(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               CullNotVisible;                                           // 0x0035(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
	float                                              MaxPathInvalidTime;                                       // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AINearbyPlayerTargetSelector");
		return ptr;
	}

};


// Class GunfireRuntime.AINodePathCondition
// 0x0008 (0x0038 - 0x0030)
class UAINodePathCondition : public UCondition
{
public:
	ENodePathStatus                                    Status;                                                   // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AINodePathCondition");
		return ptr;
	}

};


// Class GunfireRuntime.AIPathPoint
// 0x0040 (0x0370 - 0x0330)
class AAIPathPoint : public AActor
{
public:
	class AAIPathPoint*                                Next;                                                     // 0x0330(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WaitTimeMin;                                              // 0x0338(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WaitTimeMax;                                              // 0x033C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               FacePathPointDirection;                                   // 0x0340(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0341(0x0007) MISSED OFFSET
	TArray<struct FName>                               WaitTags;                                                 // 0x0348(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FName>                               PathTags;                                                 // 0x0358(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FColor                                      PathColor;                                                // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x036C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIPathPoint");
		return ptr;
	}

};


// Class GunfireRuntime.AIPathResultCondition
// 0x0008 (0x0038 - 0x0030)
class UAIPathResultCondition : public UCondition
{
public:
	TEnumAsByte<EPathFollowingResult>                  Result;                                                   // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIPathResultCondition");
		return ptr;
	}

};


// Class GunfireRuntime.AIPathStatusCondition
// 0x0008 (0x0038 - 0x0030)
class UAIPathStatusCondition : public UCondition
{
public:
	TEnumAsByte<EPathFollowingStatus>                  Status;                                                   // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIPathStatusCondition");
		return ptr;
	}

};


// Class GunfireRuntime.AIPathToStateDecorator
// 0x0030 (0x0058 - 0x0028)
class UAIPathToStateDecorator : public UActorStateDecorator
{
public:
	struct FName                                       PathTarget;                                               // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AcceptanceRadius;                                         // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AcceptanceRadiusMax;                                      // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               StopOnOverlap;                                            // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              OrientToTargetRadius;                                     // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              PathRestartDistance;                                      // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               ProjectDestinationToNavMesh;                              // 0x0044(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	struct FVector                                     ProjectExtent;                                            // 0x0048(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIPathToStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.AIPatrolStateDecorator
// 0x0018 (0x0040 - 0x0028)
class UAIPatrolStateDecorator : public UActorStateDecorator
{
public:
	struct FName                                       Path;                                                     // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AcceptanceRadius;                                         // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               StartPathAtNearestPoint;                                  // 0x0034(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               AllowPartialPath;                                         // 0x0035(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               PingPong;                                                 // 0x0036(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               OverrideSpawnLocation;                                    // 0x0037(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               OverrideFacing;                                           // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIPatrolStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.AIPerceptionStateDecorator
// 0x0018 (0x0040 - 0x0028)
class UAIPerceptionStateDecorator : public UActorStateDecorator
{
public:
	float                                              PerceptionScalar;                                         // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              HearingScalar;                                            // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              SightRange;                                               // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              LostSightRange;                                           // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              SightAngle;                                               // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bRestoreOnExit;                                           // 0x003C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIPerceptionStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.AIPOIType
// 0x0010 (0x0038 - 0x0028)
class UAIPOIType : public UObject
{
public:
	int                                                Priority;                                                 // 0x0028(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AnimationTag;                                             // 0x002C(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIPOIType");
		return ptr;
	}

};


// Class GunfireRuntime.AIPointOfInterest
// 0x0040 (0x0370 - 0x0330)
class AAIPointOfInterest : public AActor
{
public:
	struct FName                                       Tag;                                                      // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      Type;                                                     // 0x0338(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinUseTime;                                               // 0x0340(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxUseTime;                                               // 0x0344(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CooldownMin;                                              // 0x0348(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CooldownMax;                                              // 0x034C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AAIPathPoint*                                PatrolPath;                                               // 0x0350(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      Occupant;                                                 // 0x0358(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               Enabled;                                                  // 0x0360(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0361(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIPointOfInterest");
		return ptr;
	}


	void SetEnabled(bool* IsEnabled);
	bool OnValidate(class AActor** Actor);
	void OnOccupied(class AActor** Actor);
	void OnEndUse();
	void OnBeginUse();
	void EndUse();
	void BeginUse();
};


// Class GunfireRuntime.AIPointOfInterestManager
// 0x0060 (0x0158 - 0x00F8)
class UAIPointOfInterestManager : public UActorComponent
{
public:
	TArray<class AAIPointOfInterest*>                  PointsOfInterest;                                         // 0x00F8(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0108(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIPointOfInterestManager");
		return ptr;
	}


	class UAIPointOfInterestManager* STATIC_GetInstance(class UObject** WorldContextObject);
};


// Class GunfireRuntime.AIPointOfInterestComponent
// 0x0028 (0x0120 - 0x00F8)
class UAIPointOfInterestComponent : public UActorComponent
{
public:
	TArray<class UClass*>                              ValidTypes;                                               // 0x00F8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class AAIPointOfInterest*                          DestinationPOI;                                           // 0x0108(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AAIPointOfInterest*                          QueuedPOI;                                                // 0x0110(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0118(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIPointOfInterestComponent");
		return ptr;
	}

};


// Class GunfireRuntime.AIPOICondition
// 0x0010 (0x0040 - 0x0030)
class UAIPOICondition : public UCondition
{
public:
	class UClass*                                      Type;                                                     // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               Any;                                                      // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIPOICondition");
		return ptr;
	}

};


// Class GunfireRuntime.AIResurrectTargetSelector
// 0x0008 (0x0038 - 0x0030)
class UAIResurrectTargetSelector : public UAITargetSelector
{
public:
	struct FName                                       RequireTag;                                               // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIResurrectTargetSelector");
		return ptr;
	}

};


// Class GunfireRuntime.AIShootStateDecorator
// 0x0060 (0x0088 - 0x0028)
class UAIShootStateDecorator : public UActorStateDecorator
{
public:
	class UClass*                                      WeaponType;                                               // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ReadyTime;                                                // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       ReadyStartEvent;                                          // 0x0034(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ReadyLingerTime;                                          // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      Pressure;                                                 // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	struct FName                                       Cooldown;                                                 // 0x0044(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CooldownMin;                                              // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CooldownMax;                                              // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               GlobalCooldown;                                           // 0x0054(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	float                                              GlobalCooldownMin;                                        // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              GlobalCooldownMax;                                        // 0x005C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               ShotRequiresLOS;                                          // 0x0060(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	float                                              BlindShootDivergeDistance;                                // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               ValidateArc;                                              // 0x0068(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	struct FName                                       ArcPivotBone;                                             // 0x006C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ArcYawMin;                                                // 0x0074(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ArcYawMax;                                                // 0x0078(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ArcPitchMin;                                              // 0x007C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ArcPitchMax;                                              // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0084(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIShootStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.AISpawnPointDecorator
// 0x0018 (0x0040 - 0x0028)
class UAISpawnPointDecorator : public UActorStateDecorator
{
public:
	struct FName                                       SpawnPointTag;                                            // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MinRangeToPlayers;                                        // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxRangeToPlayers;                                        // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       BlackboardKey;                                            // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AISpawnPointDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.AIStrafeTargetStateDecorator
// 0x0030 (0x0058 - 0x0028)
class UAIStrafeTargetStateDecorator : public UActorStateDecorator
{
public:
	float                                              MinRadius;                                                // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxRadius;                                                // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MinOutsiderRadius;                                        // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxOutsiderRadius;                                        // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MinHeight;                                                // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxHeight;                                                // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MinOutsiderHeight;                                        // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxOutsiderHeight;                                        // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AcceptanceRadius;                                         // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               StopOnOverlap;                                            // 0x004C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	float                                              OutOfRangeScalar;                                         // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIStrafeTargetStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.CombatClass
// 0x0040 (0x0068 - 0x0028)
class UCombatClass : public UObject
{
public:
	struct FName                                       NameID;                                                   // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECombatSize                                        Size;                                                     // 0x0030(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              Weight;                                                   // 0x0034(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultPressure;                                          // 0x0038(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PressureLockout;                                          // 0x003C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxMeleePressure;                                         // 0x0040(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ResidualPressureDecay;                                    // 0x0044(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxRangedPressure;                                        // 0x0048(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxInsiderWeight;                                         // 0x004C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinInsiderTime;                                           // 0x0050(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxInsiderTime;                                           // 0x0054(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxOutsiderRange;                                         // 0x0058(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	class UClass*                                      ComputedStats;                                            // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CombatClass");
		return ptr;
	}

};


// Class GunfireRuntime.AITacticalPointData
// 0x0018 (0x0348 - 0x0330)
class AAITacticalPointData : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	TArray<struct FAITacticalPoint>                    GeneratedPoints;                                          // 0x0338(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AITacticalPointData");
		return ptr;
	}

};


// Class GunfireRuntime.AICustomTacticalPoint
// 0x0028 (0x0358 - 0x0330)
class AAICustomTacticalPoint : public AActor
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0330(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AICustomTacticalPoint");
		return ptr;
	}

};


// Class GunfireRuntime.AITacticalPointDebugComponent
// 0x0000 (0x00F8 - 0x00F8)
class UAITacticalPointDebugComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AITacticalPointDebugComponent");
		return ptr;
	}

};


// Class GunfireRuntime.AITacticalPointCondition
// 0x0008 (0x0038 - 0x0030)
class UAITacticalPointCondition : public UCondition
{
public:
	EAITacticalPointType                               TacticalPointType;                                        // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              Range;                                                    // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AITacticalPointCondition");
		return ptr;
	}

};


// Class GunfireRuntime.AITacticalPointContainerInterface
// 0x0000 (0x0028 - 0x0028)
class UAITacticalPointContainerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AITacticalPointContainerInterface");
		return ptr;
	}

};


// Class GunfireRuntime.AITacticalPointManager
// 0x0118 (0x0210 - 0x00F8)
class UAITacticalPointManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x118];                                     // 0x00F8(0x0118) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AITacticalPointManager");
		return ptr;
	}

};


// Class GunfireRuntime.AITargetChangedCondition
// 0x0000 (0x0030 - 0x0030)
class UAITargetChangedCondition : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AITargetChangedCondition");
		return ptr;
	}

};


// Class GunfireRuntime.AITargetCondition
// 0x0010 (0x0040 - 0x0030)
class UAITargetCondition : public UCondition
{
public:
	class UClass*                                      TargetSelector;                                           // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EAwarenessState                                    AwarenessState;                                           // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AITargetCondition");
		return ptr;
	}

};


// Class GunfireRuntime.AITargetSelectorStateDecorator
// 0x0008 (0x0030 - 0x0028)
class UAITargetSelectorStateDecorator : public UActorStateDecorator
{
public:
	class UClass*                                      TargetSelector;                                           // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AITargetSelectorStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.AIUpdateTargetStateDecorator
// 0x0000 (0x0028 - 0x0028)
class UAIUpdateTargetStateDecorator : public UActorStateDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIUpdateTargetStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.AIWanderStateDecorator
// 0x0020 (0x0048 - 0x0028)
class UAIWanderStateDecorator : public UActorStateDecorator
{
public:
	float                                              WanderRangeMin;                                           // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              WanderRangeMax;                                           // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AcceptanceRadius;                                         // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               OneShot;                                                  // 0x0034(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	float                                              WaitTimeMin;                                              // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              WaitTimeMax;                                              // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       WanderOriginOverride;                                     // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AIWanderStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.AmbientAudioComponent
// 0x0030 (0x07A0 - 0x0770)
class UAmbientAudioComponent : public UAudioComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0770(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBeginActiveSound;                                       // 0x0778(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEndActiveSound;                                         // 0x0788(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0798(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AmbientAudioComponent");
		return ptr;
	}

};


// Class GunfireRuntime.AmbientAudioManager
// 0x0128 (0x0150 - 0x0028)
class UAmbientAudioManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0xB8];                                      // 0x0028(0x00B8) MISSED OFFSET
	TMap<class USoundMix*, struct FAmbientSoundMix>    ActiveMixes;                                              // 0x00E0(0x0050) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class UInterpolatedSoundMix>> InactiveMixes;                                            // 0x0130(0x0010) (ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class USoundMix*                                   BaseMix;                                                  // 0x0140(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0148(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AmbientAudioManager");
		return ptr;
	}

};


// Class GunfireRuntime.AmbientSpawnManager
// 0x0060 (0x0158 - 0x00F8)
class UAmbientSpawnManager : public UActorComponent
{
public:
	bool                                               Preload;                                                  // 0x00F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSpawned;                                                // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDestroyed;                                              // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class AAmbientSpawnRegion*>                 AmbientSpawnRegions;                                      // 0x0120(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                               Generated;                                                // 0x0130(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0131(0x0007) MISSED OFFSET
	TArray<struct FTileAmbientSpawns>                  AmbientSpawns;                                            // 0x0138(0x0010) (ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0148(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AmbientSpawnManager");
		return ptr;
	}


	void OnUninitialize();
	void OnSpawnListLoaded(int* TileID);
	void OnSetTileActive(int* TileID, bool* Active);
	void OnGenerateAmbientSpawns();
	void OnDead(unsigned char* Reason, class ACharacterGunfire** Character, class AActor** Cause);
	void OnActorDestroyed(class AActor** Actor);
	void OnActorDead(struct FDamageInfo* DamageInfo);
	int GetNumActiveActorsOfType(TSoftObjectPtr<class UClass>* ActorBP);
	int GetActiveCharacterCount();
};


// Class GunfireRuntime.VisualizableActor
// 0x0000 (0x0330 - 0x0330)
class AVisualizableActor : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VisualizableActor");
		return ptr;
	}

};


// Class GunfireRuntime.AmbientSpawnRegion
// 0x0028 (0x0358 - 0x0330)
class AAmbientSpawnRegion : public AVisualizableActor
{
public:
	struct FName                                       SpawnLayer;                                               // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Range;                                                    // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x033C(0x0004) MISSED OFFSET
	TArray<struct FName>                               SpawnTags;                                                // 0x0340(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UAmbientSpawnManager*                        AmbientSpawnManager;                                      // 0x0350(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AmbientSpawnRegion");
		return ptr;
	}

};


// Class GunfireRuntime.AngleDiffCondition
// 0x0018 (0x0048 - 0x0030)
class UAngleDiffCondition : public UCondition
{
public:
	EAngleComponent                                    AngleComponent;                                           // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EAngleRef                                          Angle1Ref;                                                // 0x0031(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	float                                              Angle1RefOffset;                                          // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EAngleRef                                          Angle2Ref;                                                // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              Angle2RefOffset;                                          // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              Arc;                                                      // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AngleDiffCondition");
		return ptr;
	}

};


// Class GunfireRuntime.AnimatedCameraComponent
// 0x0010 (0x0810 - 0x0800)
class UAnimatedCameraComponent : public UCameraComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0800(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimatedCameraComponent");
		return ptr;
	}


	void SetCamera(class APlayerController** TargetController);
	void SetAnimatedCameraFOV(float* CameraFOV);
	void RestoreCamera(class APlayerController** TargetController, bool* ResetToCurrentView);
	void ExitAnimatedCamera();
	void Exit();
	void EnterAnimatedCamera(struct FName* CameraBone, float* CameraFOV);
	void Enter();
	void AnimatedCameraCut(struct FName* CameraBone, float* CameraFOV);
};


// Class GunfireRuntime.AnimatedCameraState
// 0x0050 (0x0090 - 0x0040)
class UAnimatedCameraState : public UCameraState
{
public:
	class AActor*                                      RefActor;                                                 // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       CameraBone;                                               // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x40];                                      // 0x0050(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimatedCameraState");
		return ptr;
	}

};


// Class GunfireRuntime.AnimationSet
// 0x0070 (0x00A0 - 0x0030)
class UAnimationSet : public UDataAsset
{
public:
	class UAnimationSet*                               Template;                                                 // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeleton*                                   Skeleton;                                                 // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAnimationID>                        AnimationsIDs;                                            // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0050(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimationSet");
		return ptr;
	}

};


// Class GunfireRuntime.OptimizableNotifyInterface
// 0x0000 (0x0028 - 0x0028)
class UOptimizableNotifyInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.OptimizableNotifyInterface");
		return ptr;
	}

};


// Class GunfireRuntime.ConditionalAnimNotify
// 0x0028 (0x0060 - 0x0038)
class UConditionalAnimNotify : public UAnimNotify
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0038(0x0008) MISSED OFFSET
	ENotifyOptimizationType                            OptimizationType;                                         // 0x0040(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowInPreview;                                           // 0x0041(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
	struct FConditions                                 Conditions;                                               // 0x0048(0x0018) (Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ConditionalAnimNotify");
		return ptr;
	}

};


// Class GunfireRuntime.StateTransientAnimNotify
// 0x0000 (0x0060 - 0x0060)
class UStateTransientAnimNotify : public UConditionalAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.StateTransientAnimNotify");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_ActionEvent
// 0x0018 (0x0078 - 0x0060)
class UAnimNotify_ActionEvent : public UStateTransientAnimNotify
{
public:
	class UClass*                                      ActionType;                                               // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       EventName;                                                // 0x0068(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStateTransient;                                          // 0x0070(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_ActionEvent");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_AnimatedCameraCut
// 0x0010 (0x0070 - 0x0060)
class UAnimNotify_AnimatedCameraCut : public UConditionalAnimNotify
{
public:
	struct FName                                       CameraBone;                                               // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CameraFOV;                                                // 0x0068(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_AnimatedCameraCut");
		return ptr;
	}

};


// Class GunfireRuntime.ConditionalAnimNotifyState
// 0x0028 (0x0058 - 0x0030)
class UConditionalAnimNotifyState : public UAnimNotifyState
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	ENotifyOptimizationType                            OptimizationType;                                         // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShowInPreview;                                           // 0x0039(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
	struct FConditions                                 Conditions;                                               // 0x0040(0x0018) (Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ConditionalAnimNotifyState");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_AnimatedCameraCutFOVTransition
// 0x0020 (0x0078 - 0x0058)
class UAnimNotify_AnimatedCameraCutFOVTransition : public UConditionalAnimNotifyState
{
public:
	struct FName                                       CameraBone;                                               // 0x0058(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              StartingCameraFOV;                                        // 0x0060(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              EndingCameraFOV;                                          // 0x0064(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 FOVPercentCurve;                                          // 0x0068(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0070(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_AnimatedCameraCutFOVTransition");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_Awareness
// 0x0008 (0x0068 - 0x0060)
class UAnimNotify_Awareness : public UConditionalAnimNotify
{
public:
	EAwarenessSource                                   Source;                                                   // 0x0060(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EAwarenessSignal                                   SignalType;                                               // 0x0061(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0062(0x0002) MISSED OFFSET
	float                                              Radius;                                                   // 0x0064(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_Awareness");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_CameraShake
// 0x0020 (0x0080 - 0x0060)
class UAnimNotify_CameraShake : public UStateTransientAnimNotify
{
public:
	class UClass*                                      Shake;                                                    // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       RefBone;                                                  // 0x0068(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InnerRadius;                                              // 0x0070(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OuterRadius;                                              // 0x0074(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Falloff;                                                  // 0x0078(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               OrientShakeTowardsEpicenter;                              // 0x007C(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStateTransient;                                          // 0x007D(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreBlendOut;                                          // 0x007E(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x1];                                       // 0x007F(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_CameraShake");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_CharacterEvent
// 0x0010 (0x0070 - 0x0060)
class UAnimNotify_CharacterEvent : public UStateTransientAnimNotify
{
public:
	struct FName                                       EventName;                                                // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ServerOnly;                                               // 0x0068(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStateTransient;                                          // 0x0069(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x006A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_CharacterEvent");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_DoAction
// 0x0010 (0x0070 - 0x0060)
class UAnimNotify_DoAction : public UStateTransientAnimNotify
{
public:
	class UClass*                                      Action;                                                   // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               DoActionOnTarget;                                         // 0x0068(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bStateTransient;                                          // 0x0069(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x6];                                       // 0x006A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_DoAction");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_EnableHitLocation
// 0x0010 (0x0070 - 0x0060)
class UAnimNotify_EnableHitLocation : public UConditionalAnimNotify
{
public:
	struct FName                                       HitLocationNameID;                                        // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bEnable;                                                  // 0x0068(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_EnableHitLocation");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_PlayerEffect
// 0x0018 (0x0078 - 0x0060)
class UAnimNotify_PlayerEffect : public UStateTransientAnimNotify
{
public:
	bool                                               bAOE;                                                     // 0x0060(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIgnoreSelf;                                              // 0x0061(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0062(0x0002) MISSED OFFSET
	struct FName                                       Bone;                                                     // 0x0064(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              Radius;                                                   // 0x006C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bStateTransient;                                          // 0x0070(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_PlayerEffect");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_ForceFeedback
// 0x0008 (0x0080 - 0x0078)
class UAnimNotify_ForceFeedback : public UAnimNotify_PlayerEffect
{
public:
	class UForceFeedbackEffect*                        ForceFeedback;                                            // 0x0078(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_ForceFeedback");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_ImpactEffect
// 0x0028 (0x0088 - 0x0060)
class UAnimNotify_ImpactEffect : public UStateTransientAnimNotify
{
public:
	EAnimImpactType                                    Type;                                                     // 0x0060(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAnimImpactTraceDirection                          TraceDirection;                                           // 0x0061(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<ECollisionChannel>                     TraceChannel;                                             // 0x0062(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0063(0x0001) MISSED OFFSET
	float                                              TraceDistance;                                            // 0x0064(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UpTraceOffset;                                            // 0x0068(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       Bone;                                                     // 0x006C(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               PlaySoundAttached;                                        // 0x0074(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0075(0x0003) MISSED OFFSET
	float                                              MaxDistance;                                              // 0x0078(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxAngleBetweenNormalAndTraceDirection;                   // 0x007C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayAtAnyWaterSubmergeDepth;                             // 0x0080(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStateTransient;                                          // 0x0081(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0082(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_ImpactEffect");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_Impulse
// 0x0018 (0x0078 - 0x0060)
class UAnimNotify_Impulse : public UConditionalAnimNotify
{
public:
	bool                                               bIsJump;                                                  // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAbsoluteJumpImpulse;                                     // 0x0061(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0062(0x0002) MISSED OFFSET
	float                                              JumpImpulse;                                              // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     RelativeImpulse;                                          // 0x0068(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_Impulse");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_ItemEvent
// 0x0020 (0x0080 - 0x0060)
class UAnimNotify_ItemEvent : public UStateTransientAnimNotify
{
public:
	class UClass*                                      ItemType;                                                 // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       EventName;                                                // 0x0068(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               MustBeInHand;                                             // 0x0070(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIsModEvent;                                              // 0x0071(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0072(0x0002) MISSED OFFSET
	int                                                InvokeOnModSlot;                                          // 0x0074(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bStateTransient;                                          // 0x0078(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0079(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_ItemEvent");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_PlaySoundParameter
// 0x0028 (0x0088 - 0x0060)
class UAnimNotify_PlaySoundParameter : public UConditionalAnimNotify
{
public:
	bool                                               bFilterDuringCinematics;                                  // 0x0060(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	float                                              VolumeMultiplier;                                         // 0x0064(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchMultiplier;                                          // 0x0068(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFollow;                                                  // 0x006C(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	struct FName                                       AttachName;                                               // 0x0070(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundCue*                                   Sound;                                                    // 0x0078(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ParameterName;                                            // 0x0080(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_PlaySoundParameter");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_PlaySoundSetSound
// 0x0038 (0x0098 - 0x0060)
class UAnimNotify_PlaySoundSetSound : public UStateTransientAnimNotify
{
public:
	bool                                               bStateTransient;                                          // 0x0060(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFilterDuringCinematics;                                  // 0x0061(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0062(0x0002) MISSED OFFSET
	struct FName                                       SoundIDName;                                              // 0x0064(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	class UClass*                                      EquipmentType;                                            // 0x0070(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseMainMesh;                                             // 0x0078(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	int                                                EquipmentSocketIndex;                                     // 0x007C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VolumeMultiplier;                                         // 0x0080(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchMultiplier;                                          // 0x0084(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAttach;                                                  // 0x0088(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0089(0x0003) MISSED OFFSET
	struct FName                                       SocketName;                                               // 0x008C(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0094(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_PlaySoundSetSound");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_PlayVisualSetParticleEffect
// 0x0060 (0x00C0 - 0x0060)
class UAnimNotify_PlayVisualSetParticleEffect : public UConditionalAnimNotify
{
public:
	TArray<struct FTagParticleEffectPair>              ParticleSystems;                                          // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                                     LocationOffset;                                           // 0x0070(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    RotationOffset;                                           // 0x007C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     Scale;                                                    // 0x0088(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0094(0x001C) MISSED OFFSET
	unsigned char                                      Attached : 1;                                             // 0x00B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00B1(0x0003) MISSED OFFSET
	struct FName                                       SocketName;                                               // 0x00B4(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_PlayVisualSetParticleEffect");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_Ragdoll
// 0x0010 (0x0070 - 0x0060)
class UAnimNotify_Ragdoll : public UConditionalAnimNotify
{
public:
	bool                                               OnlyIfDead;                                               // 0x0060(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	struct FName                                       RootBoneName;                                             // 0x0064(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_Ragdoll");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_ScaleGravity
// 0x0008 (0x0068 - 0x0060)
class UAnimNotify_ScaleGravity : public UConditionalAnimNotify
{
public:
	float                                              GravityScale;                                             // 0x0060(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_ScaleGravity");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_SetComponentVisible
// 0x0010 (0x0070 - 0x0060)
class UAnimNotify_SetComponentVisible : public UConditionalAnimNotify
{
public:
	struct FName                                       ComponentName;                                            // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               Visible;                                                  // 0x0068(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_SetComponentVisible");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_StateParticleEffect
// 0x0030 (0x00C0 - 0x0090)
class UAnimNotify_StateParticleEffect : public UAnimNotify_PlayParticleEffect
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0090(0x0008) MISSED OFFSET
	bool                                               bIsStateTransient;                                        // 0x0098(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSoftDestroy;                                             // 0x0099(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENotifyOptimizationType                            OptimizationType;                                         // 0x009A(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowInPreview;                                           // 0x009B(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	struct FConditions                                 Conditions;                                               // 0x00A0(0x0018) (Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x8];                                       // 0x00B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_StateParticleEffect");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_StateSound
// 0x0030 (0x0090 - 0x0060)
class UAnimNotify_StateSound : public UStateTransientAnimNotify
{
public:
	bool                                               bIsStateTransient;                                        // 0x0060(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	float                                              FadeOut;                                                  // 0x0064(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bFilterDuringCinematics;                                  // 0x0068(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	class USoundBase*                                  Sound;                                                    // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VolumeMultiplier;                                         // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchMultiplier;                                          // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bAllowLooping : 1;                                        // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bFollow : 1;                                              // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bStopWhenAttachedToDestroyed : 1;                         // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0081(0x0003) MISSED OFFSET
	struct FName                                       AttachName;                                               // 0x0084(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x008C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_StateSound");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_StowWeapon
// 0x0010 (0x0070 - 0x0060)
class UAnimNotify_StowWeapon : public UStateTransientAnimNotify
{
public:
	class UClass*                                      Weapon;                                                   // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               Stowed;                                                   // 0x0068(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               ApplyToInventory;                                         // 0x0069(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIsStateTransient;                                        // 0x006A(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x5];                                       // 0x006B(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_StowWeapon");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_TargetConverge
// 0x0018 (0x0078 - 0x0060)
class UAnimNotify_TargetConverge : public UStateTransientAnimNotify
{
public:
	float                                              TargetConvergeDist;                                       // 0x0060(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TargetConvergeTime;                                       // 0x0064(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TargetConvergeMaxScale;                                   // 0x0068(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TargetConvergeDirectionOffset;                            // 0x006C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               TargetConvergeOnlyAffectForward;                          // 0x0070(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_TargetConverge");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_TimeDilation
// 0x0008 (0x0068 - 0x0060)
class UAnimNotify_TimeDilation : public UStateTransientAnimNotify
{
public:
	float                                              TimeDilation;                                             // 0x0060(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               Global;                                                   // 0x0064(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0065(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_TimeDilation");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_TriggerNearbyEmitters
// 0x0018 (0x0078 - 0x0060)
class UAnimNotify_TriggerNearbyEmitters : public UConditionalAnimNotify
{
public:
	float                                              Radius;                                                   // 0x0060(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              Height;                                                   // 0x0064(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                MinCount;                                                 // 0x0068(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                MaxCount;                                                 // 0x006C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       Tag;                                                      // 0x0070(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_TriggerNearbyEmitters");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotify_UpdateDynamics
// 0x0008 (0x0068 - 0x0060)
class UAnimNotify_UpdateDynamics : public UConditionalAnimNotify
{
public:
	bool                                               Pause;                                                    // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Reset;                                                    // 0x0061(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Teleport;                                                 // 0x0062(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0063(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotify_UpdateDynamics");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotifyState_AnimTag
// 0x0010 (0x0068 - 0x0058)
class UAnimNotifyState_AnimTag : public UConditionalAnimNotifyState
{
public:
	struct FName                                       Tag;                                                      // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               RemoveAtEnd;                                              // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotifyState_AnimTag");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotifyState_FaceTarget
// 0x0008 (0x0060 - 0x0058)
class UAnimNotifyState_FaceTarget : public UConditionalAnimNotifyState
{
public:
	ECharacterFacing                                   Facing;                                                   // 0x0058(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               SetFacingOnExit;                                          // 0x0059(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECharacterFacing                                   FacingOnExit;                                             // 0x005A(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               RestoreFacingOnExit;                                      // 0x005B(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TurnSpeed;                                                // 0x005C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotifyState_FaceTarget");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotifyState_MaterialParam
// 0x0028 (0x0080 - 0x0058)
class UAnimNotifyState_MaterialParam : public UConditionalAnimNotifyState
{
public:
	struct FName                                       ComponentName;                                            // 0x0058(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                          Material;                                                 // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       MaterialParam;                                            // 0x0068(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              from;                                                     // 0x0070(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              to;                                                       // 0x0074(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EEaseType                                          EaseType;                                                 // 0x0078(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	float                                              Exponent;                                                 // 0x007C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotifyState_MaterialParam");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotifyState_ResetLookPoses
// 0x0000 (0x0058 - 0x0058)
class UAnimNotifyState_ResetLookPoses : public UConditionalAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotifyState_ResetLookPoses");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotifyState_SetClothBlend
// 0x0018 (0x0070 - 0x0058)
class UAnimNotifyState_SetClothBlend : public UConditionalAnimNotifyState
{
public:
	struct FName                                       ComponentName;                                            // 0x0058(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              BlendAmount;                                              // 0x0060(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              FinalBlendAmount;                                         // 0x0064(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               ShouldReenableClothSimOnStart;                            // 0x0068(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotifyState_SetClothBlend");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotifyState_SoundTag
// 0x0010 (0x0068 - 0x0058)
class UAnimNotifyState_SoundTag : public UConditionalAnimNotifyState
{
public:
	struct FName                                       Tag;                                                      // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bRemoveAtEnd;                                             // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotifyState_SoundTag");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotifyState_StateTrail
// 0x0028 (0x0080 - 0x0058)
class UAnimNotifyState_StateTrail : public UAnimNotifyState_Trail
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0058(0x0008) MISSED OFFSET
	bool                                               bIsStateTransient;                                        // 0x0060(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSoftDestroy;                                             // 0x0061(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ENotifyOptimizationType                            OptimizationType;                                         // 0x0062(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowInPreview;                                           // 0x0063(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FConditions                                 Conditions;                                               // 0x0068(0x0018) (Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotifyState_StateTrail");
		return ptr;
	}

};


// Class GunfireRuntime.StateTransientAnimNotifyState
// 0x0000 (0x0058 - 0x0058)
class UStateTransientAnimNotifyState : public UConditionalAnimNotifyState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.StateTransientAnimNotifyState");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotifyState_StateWindow
// 0x0008 (0x0060 - 0x0058)
class UAnimNotifyState_StateWindow : public UStateTransientAnimNotifyState
{
public:
	struct FName                                       Window;                                                   // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotifyState_StateWindow");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotifyState_TagWindow
// 0x0008 (0x0060 - 0x0058)
class UAnimNotifyState_TagWindow : public UStateTransientAnimNotifyState
{
public:
	struct FName                                       CharacterTag;                                             // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotifyState_TagWindow");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotifyState_TargetAlign
// 0x0010 (0x0068 - 0x0058)
class UAnimNotifyState_TargetAlign : public UConditionalAnimNotifyState
{
public:
	float                                              PitchOffset;                                              // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              YawOffset;                                                // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AlignBoneOverride;                                        // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotifyState_TargetAlign");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotifyState_TimeDilationState
// 0x0028 (0x0080 - 0x0058)
class UAnimNotifyState_TimeDilationState : public UStateTransientAnimNotifyState
{
public:
	bool                                               Global;                                                   // 0x0058(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               OverrideStartTimeDilation;                                // 0x0059(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x005A(0x0002) MISSED OFFSET
	float                                              StartTimeDilation;                                        // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EndTimeDilation;                                          // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseOnExitDilation;                                       // 0x0064(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	float                                              OnExitDilation;                                           // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsEaseIn;                                                 // 0x006C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	float                                              SmoothingExponent;                                        // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0xC];                                       // 0x0074(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotifyState_TimeDilationState");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotifyState_VisualSetTrail
// 0x0010 (0x0090 - 0x0080)
class UAnimNotifyState_VisualSetTrail : public UAnimNotifyState_StateTrail
{
public:
	TArray<struct FTagParticleEffectPair>              ParticleSystems;                                          // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotifyState_VisualSetTrail");
		return ptr;
	}

};


// Class GunfireRuntime.AnimNotifyState_WeaponPhantom
// 0x0080 (0x00D8 - 0x0058)
class UAnimNotifyState_WeaponPhantom : public UConditionalAnimNotifyState
{
public:
	struct FName                                       ShapeName;                                                // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               SecondaryShapes;                                          // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	class UClass*                                      Cause;                                                    // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ImpactEffect;                                             // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ImpactDirection;                                          // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DamageType;                                               // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageMod;                                                // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageScalar;                                             // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Unblockable;                                              // 0x0098(0x0001) (BlueprintReadOnly, ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Blockable;                                                // 0x0099(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Evadable;                                                 // 0x009A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x1];                                       // 0x009B(0x0001) MISSED OFFSET
	int                                                PowerOverride;                                            // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitCooldown;                                              // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       EffectBone;                                               // 0x00A4(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEffectSpawnDirection                              EffectSpawnDirection;                                     // 0x00AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00AD(0x0003) MISSED OFFSET
	struct FRotator                                    EffectOrientation;                                        // 0x00B0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	EWeaponPhantomType                                 PhantomType;                                              // 0x00BC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00BD(0x0003) MISSED OFFSET
	float                                              discretePhantomFPS;                                       // 0x00C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIncludeRootMotion;                                       // 0x00C4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCacheDiscreteAnimation;                                  // 0x00C5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x2];                                       // 0x00C6(0x0002) MISSED OFFSET
	TArray<struct FPhantomKeyframe>                    DiscreteKeyframeCache;                                    // 0x00C8(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimNotifyState_WeaponPhantom");
		return ptr;
	}

};


// Class GunfireRuntime.AnimTagStateDecorator
// 0x0010 (0x0038 - 0x0028)
class UAnimTagStateDecorator : public UActorStateDecorator
{
public:
	TArray<struct FName>                               AnimationTags;                                            // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimTagStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.ApexCondition
// 0x0008 (0x0038 - 0x0030)
class UApexCondition : public UCondition
{
public:
	float                                              MaximumXYVelocity;                                        // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ApexCondition");
		return ptr;
	}

};


// Class GunfireRuntime.AssetCache
// 0x0048 (0x0070 - 0x0028)
class UAssetCache : public UObject
{
public:
	EAssetCachePreloadMethod                           PreloadMethod;                                            // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<TSoftObjectPtr<class UObject>>              Assets;                                                   // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPreloadComplete;                                        // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UObject*>                             LoadedAssets;                                             // 0x0050(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	int                                                PackageLoadedCount;                                       // 0x0060(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                PackageFailedCount;                                       // 0x0064(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               IsPreloaded;                                              // 0x0068(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0069(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AssetCache");
		return ptr;
	}


	void STATIC_PreloadAssets();
	bool IsAssetCachedPreloaded();
	class UAssetCache* STATIC_GetInstance();
};


// Class GunfireRuntime.AttributesComponent
// 0x00A8 (0x01A0 - 0x00F8)
class UAttributesComponent : public UActorComponent
{
public:
	TArray<struct FAttribute>                          Attributes;                                               // 0x00F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FAttributeLevel>                     AttributeLevels;                                          // 0x0108(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, RepNotify, NativeAccessSpecifierPublic)
	int                                                AttributePointsPerLevel;                                  // 0x0118(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AttributePoints;                                          // 0x011C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AttributePointsSpent;                                     // 0x0120(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0124(0x0004) MISSED OFFSET
	class UDataTable*                                  AttributePointsStats;                                     // 0x0128(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBeginPreview;                                           // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnEndPreview;                                             // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPreviewStats;                                           // 0x0150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPreAttributeIncreased;                                  // 0x0160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnPostAttributeIncreased;                                 // 0x0170(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0180(0x0018) MISSED OFFSET
	int                                                PreviewAttributePointsSpent;                              // 0x0198(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x019C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AttributesComponent");
		return ptr;
	}


	void SetAttributePoints(int* AvailablePoints);
	bool SetAttributeLevel(struct FName* ID, int* LevelToSet);
	void PreviewIncreaseAttribute(struct FName* ID);
	void PreviewDecreaseAttribute(struct FName* ID);
	void PreviewCommit();
	void OnRep_Attributes();
	void OnLevelUp();
	void OnComputeStats();
	void OnComputeDerivedStats();
	bool IsPreviewing();
	void IncreaseAttribute(struct FName* ID);
	float GetPreviewStatValue(struct FName* Stat, bool* ApplyMod);
	int GetPreviewAvailableAttributePoints();
	int GetPreviewAttributeLevel(struct FName* ID);
	int GetAvailableAttributePoints();
	int GetAttributeLevel(struct FName* ID);
	int GetAttributeCost(struct FName* ID);
	struct FAttribute GetAttributeByID(struct FName* ID);
	void EndPreview();
	void BeginPreview();
};


// Class GunfireRuntime.AudioStateID
// 0x0000 (0x0028 - 0x0028)
class UAudioStateID : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AudioStateID");
		return ptr;
	}

};


// Class GunfireRuntime.AudioState_Default
// 0x0000 (0x0028 - 0x0028)
class UAudioState_Default : public UAudioStateID
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AudioState_Default");
		return ptr;
	}

};


// Class GunfireRuntime.AudioCustomVolume
// 0x00A0 (0x0458 - 0x03B8)
class AAudioCustomVolume : public AAudioVolume
{
public:
	TArray<class AAudioCustomVolume*>                  HasPriorityOver;                                          // 0x03B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	bool                                               bInfiniteExtent;                                          // 0x03C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03C9(0x0003) MISSED OFFSET
	int                                                LevelDepth;                                               // 0x03CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWorldSoundSet*                              WorldSoundSet;                                            // 0x03D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWorldSound>                         WorldSounds;                                              // 0x03D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TEnumAsByte<EAttenuationShape>                     AttenShape;                                               // 0x03E8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x03E9(0x0003) MISSED OFFSET
	struct FVector                                     AttenExtents;                                             // 0x03EC(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMusicSet*                                   MusicSet;                                                 // 0x03F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAudioState>                         States;                                                   // 0x0400(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class USoundAttenuation*                           AttenuationSettings;                                      // 0x0410(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOverrideFalloff;                                         // 0x0418(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0419(0x0003) MISSED OFFSET
	float                                              FalloffOverride;                                          // 0x041C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      CurrentStateID;                                           // 0x0420(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0428(0x0008) MISSED OFFSET
	class UAmbientAudioComponent*                      PrimaryAudioComponent;                                    // 0x0430(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                             OnEnterAudioComponent;                                    // 0x0438(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioComponent*                             OnExitAudioComponent;                                     // 0x0440(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWorldSoundComponent*                        WorldSoundComponent;                                      // 0x0448(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0450(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AudioCustomVolume");
		return ptr;
	}


	void SetState(class UClass** StateID, bool* bPlayTransitions);
	void OnEndActiveVolume();
	void OnBeginActiveVolume();
	bool IsActiveVolume();
};


// Class GunfireRuntime.BlockEvadeStateDecorator
// 0x0038 (0x0060 - 0x0028)
class UBlockEvadeStateDecorator : public UActorStateDecorator
{
public:
	bool                                               Evade;                                                    // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              EvadeWindow;                                              // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       EvadeStateWindow;                                         // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              EvadeCounterWindow;                                       // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bLock;                                                    // 0x003C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               BlockCounter;                                             // 0x003D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x2];                                       // 0x003E(0x0002) MISSED OFFSET
	float                                              BlockArc;                                                 // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       BlockWindow;                                              // 0x0044(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       BlockInput;                                               // 0x004C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              BlockCounterWindow;                                       // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CounterAttackLockOut;                                     // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.BlockEvadeStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.BlueprintFunctionLibraryGunfire
// 0x0000 (0x0028 - 0x0028)
class UBlueprintFunctionLibraryGunfire : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.BlueprintFunctionLibraryGunfire");
		return ptr;
	}


	void STATIC_SetFadeScreenSize(class UDecalComponent** Decal, float* Size);
	void STATIC_SetDamageInfoVariableObject(struct FName* VariableName, class UObject** Value, struct FDamageInfo* DamageInfo);
	void STATIC_SetDamageInfoVariableInt(struct FName* VariableName, int* Value, struct FDamageInfo* DamageInfo);
	void STATIC_SetDamageInfoVariableFloat(struct FName* VariableName, float* Value, struct FDamageInfo* DamageInfo);
	void STATIC_SetDamageInfoVariableBool(struct FName* VariableName, bool* Value, struct FDamageInfo* DamageInfo);
	class UObject* STATIC_GetDefaultObject(class UClass** ObjectClass);
};


// Class GunfireRuntime.BoundsStateDecorator
// 0x0010 (0x0038 - 0x0028)
class UBoundsStateDecorator : public UActorStateDecorator
{
public:
	bool                                               bSetBoundsOnEnter;                                        // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              BoundsOnEnter;                                            // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bRestoreBounds;                                           // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bSetBoundsOnExit;                                         // 0x0031(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	float                                              BoundsOnExit;                                             // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.BoundsStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.BreakableImpulseComponent
// 0x0010 (0x0270 - 0x0260)
class UBreakableImpulseComponent : public USceneComponent
{
public:
	bool                                               bApplyFalloff;                                            // 0x0260(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0261(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.BreakableImpulseComponent");
		return ptr;
	}

};


// Class GunfireRuntime.BreakableComponent
// 0x00A0 (0x0300 - 0x0260)
class UBreakableComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0260(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBeginBreak;                                             // 0x0268(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEndBreak;                                               // 0x0278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnReset;                                                  // 0x0288(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              BreakDuration;                                            // 0x0298(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RandomImpulse;                                            // 0x029C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RandomTorque;                                             // 0x02A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       UnbrokenMeshComponent;                                    // 0x02A4(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bUnbrokenMeshSupportsCollisionQueries;                    // 0x02AC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPiecesSupportsCollisionQueries;                          // 0x02AD(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x2];                                       // 0x02AE(0x0002) MISSED OFFSET
	struct FName                                       PiecesCollisionProfileName;                               // 0x02B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x02B8(0x0008) MISSED OFFSET
	struct FTimerHandle                                HideHandle;                                               // 0x02C0(0x0008) (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x38];                                      // 0x02C8(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.BreakableComponent");
		return ptr;
	}


	void Reset();
	void OnHidePieces();
	bool IsUnbroken();
	bool IsBroken();
	bool IsBreaking();
	void Break();
};


// Class GunfireRuntime.BTDecorator_Condition
// 0x0018 (0x0080 - 0x0068)
class UBTDecorator_Condition : public UBTDecorator
{
public:
	struct FConditions                                 Conditions;                                               // 0x0068(0x0018) (Edit, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.BTDecorator_Condition");
		return ptr;
	}

};


// Class GunfireRuntime.BTTask_SetActorState
// 0x0010 (0x0080 - 0x0070)
class UBTTask_SetActorState : public UBTTaskNode
{
public:
	struct FName                                       StateNameID;                                              // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               WaitForComplete;                                          // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.BTTask_SetActorState");
		return ptr;
	}

};


// Class GunfireRuntime.GroundProbeComponent
// 0x0000 (0x0260 - 0x0260)
class UGroundProbeComponent : public USceneComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.GroundProbeComponent");
		return ptr;
	}

};


// Class GunfireRuntime.Builder
// 0x0618 (0x0BC0 - 0x05A8)
class ABuilder : public AEquipment
{
public:
	struct FDeployableAttributes                       DeployableAttributes;                                     // 0x05A8(0x0028) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class UMaterial*                                   HighlightMaterial;                                        // 0x05D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      PawnToDeploy;                                             // 0x05D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x5E0];                                     // 0x05E0(0x05E0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Builder");
		return ptr;
	}


	void TryPlace();
	void ServerTryPlace();
	void ExitBuilder();
};


// Class GunfireRuntime.ButtonCondition
// 0x0028 (0x0058 - 0x0030)
class UButtonCondition : public UCondition
{
public:
	struct FName                                       Name;                                                     // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EButtonState                                       State;                                                    // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              TimeInState;                                              // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputBufferTime;                                          // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WindowStart;                                              // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WindowEnd;                                                // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       Window;                                                   // 0x004C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               PersistValid;                                             // 0x0054(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               PersistNotValid;                                          // 0x0055(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0056(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ButtonCondition");
		return ptr;
	}

};


// Class GunfireRuntime.CameraModifier_SimulatedHMD
// 0x0058 (0x00A0 - 0x0048)
class UCameraModifier_SimulatedHMD : public UCameraModifier
{
public:
	float                                              PitchMin;                                                 // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              PitchMax;                                                 // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              PitchSpeed;                                               // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              YawSpeed;                                                 // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInputComponent*                             InputComponent;                                           // 0x0058(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x40];                                      // 0x0060(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CameraModifier_SimulatedHMD");
		return ptr;
	}

};


// Class GunfireRuntime.CameraStateDecorator
// 0x0020 (0x0048 - 0x0028)
class UCameraStateDecorator : public UActorStateDecorator
{
public:
	class UClass*                                      Camera;                                                   // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              BlendTime;                                                // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<struct FCustomCameraBlend>                  CustomBlends;                                             // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CameraStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.AnimatedCameraStateDecorator
// 0x0020 (0x0048 - 0x0028)
class UAnimatedCameraStateDecorator : public UActorStateDecorator
{
public:
	bool                                               ApplyToLocalPlayer;                                       // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               AllowInput;                                               // 0x0029(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               LockCameraStateChanges;                                   // 0x002A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002B(0x0001) MISSED OFFSET
	struct FName                                       CameraBone;                                               // 0x002C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CameraFOV;                                                // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CameraBlendTime;                                          // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CameraBlendOutTime;                                       // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECincematicMode                                    CinematicMode;                                            // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bAffectsInput;                                            // 0x0041(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bAffectsHUD;                                              // 0x0042(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0043(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AnimatedCameraStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.CapsuleSizeStateDecorator
// 0x0008 (0x0030 - 0x0028)
class UCapsuleSizeStateDecorator : public UActorStateDecorator
{
public:
	float                                              CapsuleHalfHeight;                                        // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CapsuleRadius;                                            // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CapsuleSizeStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.Challenge
// 0x0020 (0x0048 - 0x0028)
class UChallenge : public UObject
{
public:
	struct FName                                       NameID;                                                   // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Blocked;                                                  // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bVisibleByDefault;                                        // 0x0031(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
	TArray<struct FChallengeRank>                      ChallengeRanks;                                           // 0x0038(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Challenge");
		return ptr;
	}

};


// Class GunfireRuntime.ChallengeComponent
// 0x00B8 (0x01B0 - 0x00F8)
class UChallengeComponent : public UActorComponent
{
public:
	class UChallengeList*                              ListOfAllChallenges;                                      // 0x00F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FChallengeInstance>                  ChallengeInstances;                                       // 0x0100(0x0010) (ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0xA0];                                      // 0x0110(0x00A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ChallengeComponent");
		return ptr;
	}


	bool UnlockChallenge(struct FName* ChallengeID);
	bool IsChallengeComplete(struct FName* ChallengeID);
	void IncrementObjectivesFromActor(struct FName* EventType, class AActor** Actor);
	void IncrementObjectives(struct FName* EventType, struct FName* Tag);
	int GetChallengeRank(struct FName* ChallengeID);
};


// Class GunfireRuntime.ChallengeList
// 0x0010 (0x0038 - 0x0028)
class UChallengeList : public UObject
{
public:
	TArray<class UChallenge*>                          Challenges;                                               // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ChallengeList");
		return ptr;
	}

};


// Class GunfireRuntime.ChallengeObjective
// 0x0030 (0x0058 - 0x0028)
class UChallengeObjective : public UObject
{
public:
	struct FName                                       EventType;                                                // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       Tag;                                                      // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       Label;                                                    // 0x0038(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                Count;                                                    // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ChallengeObjective");
		return ptr;
	}

};


// Class GunfireRuntime.ChallengeReward
// 0x0000 (0x0028 - 0x0028)
class UChallengeReward : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ChallengeReward");
		return ptr;
	}

};


// Class GunfireRuntime.ChanceCondition
// 0x0010 (0x0040 - 0x0030)
class UChanceCondition : public UCondition
{
public:
	int                                                Chance;                                                   // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                ChanceIncreaseOnFail;                                     // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               StoreConditionState;                                      // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ChanceCondition");
		return ptr;
	}

};


// Class GunfireRuntime.CharacterManager
// 0x0010 (0x0108 - 0x00F8)
class UCharacterManager : public UActorComponent
{
public:
	TArray<class ACharacterGunfire*>                   Characters;                                               // 0x00F8(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CharacterManager");
		return ptr;
	}


	void KillAllCharactersForOwner(class AActor** Owner);
	class UCharacterManager* STATIC_GetInstance(class UObject** WorldContextObject);
	TArray<class ACharacterGunfire*> GetCharactersInAggroGroup(struct FName* AggroGroup);
	TArray<class ACharacterGunfire*> GetCharactersForOwner(class AActor** Owner);
	void DestroyAllCharactersForOwner(class AActor** Owner);
};


// Class GunfireRuntime.CharacterMovementComponentGunfire
// 0x0230 (0x0980 - 0x0750)
class UCharacterMovementComponentGunfire : public UCharacterMovementComponent
{
public:
	float                                              SoftCharacterCollisionWeight;                             // 0x0750(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SoftCharacterCollisionRadius;                             // 0x0754(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACharacterGunfire*                           SoftCharacterIgnore;                                      // 0x0758(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DoSpecialCharacterCollision;                              // 0x0760(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0761(0x0003) MISSED OFFSET
	int                                                SpecialCharacterCollisionIterations;                      // 0x0764(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpecialCharacterCollisionAlpha;                           // 0x0768(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x076C(0x0004) MISSED OFFSET
	TMap<TEnumAsByte<EMovementMode>, float>            MaxSpeedOverrides;                                        // 0x0770(0x0050) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                              TurnSmoothTime;                                           // 0x07C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CrouchedRadius;                                           // 0x07C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ConstrainToNavMesh;                                       // 0x07C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x07C9(0x0003) MISSED OFFSET
	float                                              PerchSimpleRadius;                                        // 0x07CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPerchFallingRadiusChange;                                // 0x07D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x07D1(0x0003) MISSED OFFSET
	float                                              PerchFallingRadius;                                       // 0x07D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PerchFallingThreshold;                                    // 0x07D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               PerchShowDebug;                                           // 0x07DC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x07DD(0x0003) MISSED OFFSET
	float                                              KnockBackImpulseScale;                                    // 0x07E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnockUpImpulseScale;                                      // 0x07E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallSlideDampenThresholdDeg;                              // 0x07E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WallSlideDampenMulti;                                     // 0x07EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AcceptanceRadiusScale;                                    // 0x07F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AcceptanceHeightScale;                                    // 0x07F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<ENavigationType>                       DefaultNavigationType;                                    // 0x07F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x07F9(0x0003) MISSED OFFSET
	float                                              FullTurnSpeedVelocity;                                    // 0x07FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x10];                                      // 0x0800(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPhysicsBoundsChangedEvent;                              // 0x0810(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWaterBoundsChangedEvent;                                // 0x0820(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bAutoSetSwimmingMode;                                     // 0x0830(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bStartWithSwimmingDisabled;                               // 0x0831(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x14E];                                     // 0x0832(0x014E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CharacterMovementComponentGunfire");
		return ptr;
	}


	void SetSwingConstraint(bool* Enabled, struct FVector* SwingPoint, float* RopeLength);
	void SetNavigationType(TEnumAsByte<ENavigationType>* NavigationType);
	void SetCanSwim(bool* bInCanSwim);
	bool Is3DNavigating();
	class AActor* GetWaterBoundsActor(bool* bConstrainToFluidFilled);
	class APhysicsBounds* GetWaterBounds(bool* bConstrainToFluidFilled);
	class AActor* GetPhysicsBoundsActor();
	class APhysicsBounds* GetPhysicsBounds();
	TEnumAsByte<ENavigationType> GetNavigationType();
	class FString GetDebugInfo(int* DebugLevel);
	class UClass* GetCurrentWaterBoundsType(bool* bConstrainToFluidFilled);
	class UClass* GetCurrentPhysicsBoundsType();
	void AddExternalVelocity(struct FVector* ExternalVelocityIn);
};


// Class GunfireRuntime.SpawnPointBase
// 0x0008 (0x0338 - 0x0330)
class ASpawnPointBase : public AActor
{
public:
	struct FName                                       SpawnState;                                               // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnPointBase");
		return ptr;
	}


	void Warp(class AActor** Actor);
	class AActor* SpawnActor(class UClass** ActorClass, bool* SpawnInRoot);
	void QueueSpawnActor(class UClass** ActorClass, class AActor** OwningActor, bool* SpawnInRoot);
	void PreSpawn(class AActor** Actor);
	void PostSpawn(class AActor** Actor);
	void OnPreSpawn(class AActor** Actor);
	void OnPostSpawn(class AActor** Actor);
	void NotifySpawnComplete(class AActor** Actor);
	void FinishSpawn(class AActor** Actor);
	class AActor* BeginSpawn(class AActor** OwningActor, class UClass** ActorClass, bool* SpawnInRoot);
};


// Class GunfireRuntime.CharacterSpawnPoint
// 0x0118 (0x0450 - 0x0338)
class ACharacterSpawnPoint : public ASpawnPointBase
{
public:
	bool                                               bStartEnabled;                                            // 0x0338(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0339(0x0007) MISSED OFFSET
	class UClass*                                      EnemyType;                                                // 0x0340(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEnabled;                                                // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharacterSpawned;                                       // 0x0358(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharacterDied;                                          // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      VisualComponent;                                          // 0x0378(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                             ArrowComponent;                                           // 0x0380(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCapsuleComponent*                           CapsuleComponent;                                         // 0x0388(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PerceptionScalar;                                         // 0x0390(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0394(0x0004) MISSED OFFSET
	class AAIPathPoint*                                PatrolPath;                                               // 0x0398(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AAIPathPoint*                                SpawnPath;                                                // 0x03A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bApplyThreat;                                             // 0x03A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x03A9(0x0003) MISSED OFFSET
	float                                              ThreatToApply;                                            // 0x03AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpawnDelayType                                    DelaySetting;                                             // 0x03B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x03B1(0x0003) MISSED OFFSET
	float                                              SpawnDelayMin;                                            // 0x03B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnDelayMax;                                            // 0x03B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x4];                                       // 0x03BC(0x0004) MISSED OFFSET
	TArray<struct FName>                               CharacterTags;                                            // 0x03C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int                                                DesiredCharacters;                                        // 0x03D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsesDeferredSpawnOptimization;                           // 0x03D4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpawnFromTrigger;                                        // 0x03D5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOneTimeTrigger;                                          // 0x03D6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x1];                                       // 0x03D7(0x0001) MISSED OFFSET
	TArray<class ATriggerVolume*>                      TriggerVolumes;                                           // 0x03D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                               bSpawnOnProximity;                                        // 0x03E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOneTimeProximity;                                        // 0x03E9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x2];                                       // 0x03EA(0x0002) MISSED OFFSET
	float                                              SpawnSphereRadius;                                        // 0x03EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                            Sphere;                                                   // 0x03F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACharacterGunfire*                           SpawnedCharacter;                                         // 0x03F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                                DeferredSpawnHandle;                                      // 0x0400(0x0008) (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseEditorVisuals;                                        // 0x0408(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0409(0x0003) MISSED OFFSET
	int                                                MaxRespawns;                                              // 0x040C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RespawnDelayMin;                                          // 0x0410(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RespawnDelayMax;                                          // 0x0414(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSpawningEnabled;                                         // 0x0418(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0419(0x0003) MISSED OFFSET
	int                                                SpawnCount;                                               // 0x041C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsPaused;                                                // 0x0420(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x7];                                       // 0x0421(0x0007) MISSED OFFSET
	class USpawnPointManager*                          SpawnPointManager;                                        // 0x0428(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ACharacterGunfire*>                   SpawnedCharactersList;                                    // 0x0430(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                              SpawnedCharacterProxies;                                  // 0x0440(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CharacterSpawnPoint");
		return ptr;
	}


	void Spawn(float* InDelay, bool* IsRespawn, bool* bUseDeferredOptimization);
	void ResumeSpawner();
	void ResetSpawn(bool* ResetOneTimeEvents, bool* ResetSpawnTimer, bool* DestroySpawnedActors);
	void RemoveCharacterProxy(class AActor** Actor);
	void PostInitSpawnPoint();
	void PauseSpawner();
	void OnTriggerEndOverlap(class AActor** OverlappedActor, class AActor** OtherActor);
	void OnTriggerBeginOverlap(class AActor** OverlappedActor, class AActor** OtherActor);
	void OnSphereEndOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex);
	void OnSphereBeginOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult);
	void OnProxyDestroyed(class AActor** DestroyedActor);
	void OnCharacterDestroyed(class AActor** DestroyedActor);
	void OnCharacterDead(unsigned char* Reason, class ACharacterGunfire** Character, class AActor** Cause);
	int GetNumAliveSpawns();
	class UClass* GetEnemyTypeOverride();
	void EnableSpawnPoint(bool* InEnabled);
	bool CanSpawnFromTriggers();
	bool CanSpawnFromDelay();
	bool CanSpawn();
	bool CanRespawn();
	void AddCharacterProxy(class AActor** Actor);
};


// Class GunfireRuntime.ChargeableItem
// 0x0050 (0x05F8 - 0x05A8)
class AChargeableItem : public AEquipment
{
public:
	class UConditionList*                              Conditions;                                               // 0x05A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EChargeableActivateType                            ActivationType;                                           // 0x05B0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ConsumeInput;                                             // 0x05B1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x05B2(0x0002) MISSED OFFSET
	float                                              HoldTime;                                                 // 0x05B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ChargeTimeInSeconds;                                      // 0x05B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ChargeState;                                              // 0x05BC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x05C4(0x0004) MISSED OFFSET
	struct FText                                       ChargeLabel;                                              // 0x05C8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	EChargeState                                       State;                                                    // 0x05E0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x05E1(0x0003) MISSED OFFSET
	float                                              Charge;                                                   // 0x05E4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                                HoldTimerHandle;                                          // 0x05E8(0x0008) (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x8];                                       // 0x05F0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ChargeableItem");
		return ptr;
	}


	bool ValidateUse();
	void ServerKeyReleased();
	void ServerKeyPressed();
	void RemoveItem();
	void OnRep_ChargeState();
	void OnChargeSuccess();
	void OnChargeFail();
	void OnChargeComplete();
	void OnChargeBegin();
	bool IsBusy();
};


// Class GunfireRuntime.ChargeCondition
// 0x0010 (0x0040 - 0x0030)
class UChargeCondition : public UCondition
{
public:
	EVelocityType                                      Type;                                                     // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              Threshold;                                                // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIgnoreTimeDilation;                                      // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ChargeCondition");
		return ptr;
	}

};


// Class GunfireRuntime.CheatInputSettings
// 0x0038 (0x0060 - 0x0028)
class UCheatInputSettings : public UObject
{
public:
	bool                                               bCheatsEnabled;                                           // 0x0028(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	TArray<struct FCheatInputAction>                   ActionMappings;                                           // 0x0030(0x0010) (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FInputActionKeyMapping>              DebugToggleKeys;                                          // 0x0040(0x0010) (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	TArray<struct FCheatInputAction>                   DebugActionMappings;                                      // 0x0050(0x0010) (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CheatInputSettings");
		return ptr;
	}

};


// Class GunfireRuntime.ChildAttachmentBroadcaster
// 0x0038 (0x0130 - 0x00F8)
class UChildAttachmentBroadcaster : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnChildAttachedEvent;                                     // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnChildDetachedEvent;                                     // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FAttachedChild>                      AttachedChildren;                                         // 0x0118(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0128(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ChildAttachmentBroadcaster");
		return ptr;
	}

};


// Class GunfireRuntime.CinematicCondition
// 0x0000 (0x0030 - 0x0030)
class UCinematicCondition : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CinematicCondition");
		return ptr;
	}

};


// Class GunfireRuntime.ClampVelocityDecorator
// 0x0020 (0x0048 - 0x0028)
class UClampVelocityDecorator : public UActorStateDecorator
{
public:
	bool                                               bClampVerticalVelocity;                                   // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              MinVerticalVelocity;                                      // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxVerticalVelocity;                                      // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bClampHorizontalVelocity;                                 // 0x0034(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	float                                              MinHorizontalVelocity;                                    // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxHorizontalVelocity;                                    // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bClampOnEntry;                                            // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bClampOnExit;                                             // 0x0041(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0042(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ClampVelocityDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.ClearLockTargetStateDecorator
// 0x0000 (0x0028 - 0x0028)
class UClearLockTargetStateDecorator : public UActorStateDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ClearLockTargetStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.CollisionModeStateDecorator
// 0x0010 (0x0038 - 0x0028)
class UCollisionModeStateDecorator : public UActorStateDecorator
{
public:
	bool                                               bSetCollisionOnEnter;                                     // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TEnumAsByte<ECollisionEnabled>                     CollisionOnEnter;                                         // 0x0029(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bOverrideSoftCollisionOnEnter;                            // 0x002A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECustomCollisionEnabled                            SoftCollisionOnEnter;                                     // 0x002B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bRestoreCollision;                                        // 0x002C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bRestoreSoftCollision;                                    // 0x002D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bSetCollisionOnExit;                                      // 0x002E(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TEnumAsByte<ECollisionEnabled>                     CollisionOnExit;                                          // 0x002F(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bOverrideSoftCollisionOnExit;                             // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECustomCollisionEnabled                            SoftCollisionOnExit;                                      // 0x0031(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CollisionModeStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.CombatUtil
// 0x0000 (0x0028 - 0x0028)
class UCombatUtil : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CombatUtil");
		return ptr;
	}


	struct FHitResult STATIC_WeaponTrace(class AActor** Cause, struct FVector* StartTrace, struct FVector* EndTrace);
	void STATIC_SpawnOverlapImpactEffects(class UObject** WorldContextObject, class UClass** Effect, struct FTransform* SpawnTransform, struct FHitResult* Hit);
	void STATIC_SpawnImpactEffectsFromTrace(class AActor** Cause, class UClass** ImpactEffect, struct FVector* Start, struct FVector* End, TEnumAsByte<ECollisionChannel>* TraceChannel, class AActor** Ignore);
	void STATIC_SpawnImpactEffects(class AActor** Cause, class UClass** ImpactEffect, struct FHitResult* Impact, bool* UseBodyPhysicsMaterial);
	bool STATIC_SpawnImpactEffectProjectile(class AActor** Projectile, class AActor** HitActor, class UClass** ImpactEffect);
	void STATIC_SpawnImpactEffectAOE(class AActor** HitActor, class UClass** ImpactEffect, struct FVector* AOESourceLocation);
	class UClass* STATIC_ResolveDamageType(class AActor** Cause, class AActor** Owner);
	class AActor* STATIC_ResolveDamageOwner(class AActor** Cause);
	struct FVector STATIC_PredictLocation(class ACharacter** Querier, class ACharacter** Target, float* Time, float* Offset);
	bool STATIC_IsFriendly(class AActor** Actor1, class AActor** Actor2);
	bool STATIC_IsEnemy(class AActor** Actor1, class AActor** Actor2);
	bool STATIC_IsDamageable(class AActor** Actor);
	bool STATIC_IsAlive(class AActor** Damageable);
	bool STATIC_HasDamageClass(class UClass** DamageType, class UClass** RequiredClass);
	bool STATIC_GetTargetVector(class AActor** Cause, struct FName* SourceSocket, class AActor** Target, bool* SnapToGround, struct FVector* Origin, struct FVector* End);
	bool STATIC_GetReticuleLocation(class APawn** Pawn, float* Range, float* Radius, struct FRotator* Direction, struct FVector* Location);
	bool STATIC_GetPlayerAimVector(class APawn** Cause, float* Range, struct FVector* Origin, struct FVector* End);
	class UClass* STATIC_GetFaction(class AActor** Actor);
	struct FVector STATIC_GetEyePos(class ACharacter** Character);
	struct FVector STATIC_GetChestPos(class ACharacter** Character);
	struct FVector STATIC_GetBasePos(class AActor** Actor);
	bool STATIC_GetAimVector(class AActor** Cause, struct FName* SourceSocket, float* Range, struct FVector* Origin, struct FVector* End);
	struct FVector STATIC_GetAimPos(class AActor** Actor, class AActor** Target);
	EAffiliation STATIC_GetAffiliation(class AActor** Actor1, class AActor** Actor2);
	void STATIC_FireProjectileAsync(class UObject** WorldContextObject, class UClass** ProjectileBP, struct FProjectileParams* Params, struct FLatentActionInfo* LatentInfo, EFireOutExec* Exec, struct FHitResult* HitResult);
	class AActor* STATIC_FireProjectile(class UClass** ProjectileBP, struct FProjectileParams* Params);
	struct FDamageInfo STATIC_CreateDamageInfoFromTarget(class AActor** Cause, class AActor** Target, float* Damage, float* DamageMod, float* DamageScalar, int* PowerOverride, class UClass** DamageType);
	struct FDamageInfo STATIC_CreateDamageInfoFromHit(class AActor** Cause, struct FHitResult* Hit, float* Damage, float* DamageMod, float* DamageScalar, int* PowerOverride, class UClass** DamageType);
	float STATIC_ComputeDamageFalloffFromDistance(float* Distance, float* InnerRadius, float* OuterRadius, float* Damage, float* DamageMin, class UCurveFloat** FalloffCurve);
	float STATIC_ComputeDamageFalloff(struct FVector* Source, class AActor** Target, float* InnerRadius, float* OuterRadius, float* Damage, float* DamageMin, class UCurveFloat** FalloffCurve);
	TArray<struct FVector> STATIC_ApplyWeaponSpread(class AActor** Cause, struct FVector* Origin, struct FVector* End, int* SprayCount, float* Spread, struct FRandomStream* RandomStream);
	void STATIC_ApplyDamageInfo(class UObject** WorldContextObject, struct FDamageInfo* DamageInfo, struct FDamageInfo* Result);
	void STATIC_ApplyDamage(class AActor** CauseActor, class AActor** TargetActor, float* Damage, float* DamageMod, float* DamageScalar, int* PowerOverride, class UClass** DamageType);
	TArray<struct FVector> STATIC_ApplyCustomWeaponSpread(class AActor** Cause, struct FVector* Origin, struct FVector* End, int* SprayCount, float* Spread, struct FRandomStream* RandomStream, struct FCustomWeaponSpread* CustomSpread);
	bool STATIC_AllowsWeakSpots(class UClass** DamageType);
	bool STATIC_AllowsCriticalHits(class UClass** DamageType);
};


// Class GunfireRuntime.CompoundState
// 0x0028 (0x00D0 - 0x00A8)
class UCompoundState : public UActorState
{
public:
	struct FName                                       DefaultState;                                             // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FActorStateID                               DefaultStateID;                                           // 0x00B0(0x0010) (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UActorState*>                         States;                                                   // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CompoundState");
		return ptr;
	}

};


// Class GunfireRuntime.ConditionList
// 0x0018 (0x0040 - 0x0028)
class UConditionList : public UStateMachineSubobject
{
public:
	struct FConditions                                 Conditions;                                               // 0x0028(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ConditionList");
		return ptr;
	}


	bool EvaluateConditions(class AActor** Actor);
};


// Class GunfireRuntime.RuleSet
// 0x0058 (0x0088 - 0x0030)
class URuleSet : public UDataAsset
{
public:
	class UDataTable*                                  RulesTable;                                               // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0038(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.RuleSet");
		return ptr;
	}

};


// Class GunfireRuntime.ContextualDialogSet
// 0x0058 (0x00E0 - 0x0088)
class UContextualDialogSet : public URuleSet
{
public:
	class UDataTable*                                  Responses;                                                // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0090(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ContextualDialogSet");
		return ptr;
	}

};


// Class GunfireRuntime.ContextualDialogComponent
// 0x0070 (0x0168 - 0x00F8)
class UContextualDialogComponent : public UActorComponent
{
public:
	class UContextualDialogSet*                        DialogSet;                                                // 0x00F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               ClientSideDialogTriggers;                                 // 0x0100(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnResponse;                                               // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USoundSetComponent*                          SoundSetComponent;                                        // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FContextualDialogResponse                   CurrentResponse;                                          // 0x0128(0x0038) (Transient, Protected, NativeAccessSpecifierProtected)
	class UDialogInstance*                             CurrentDialog;                                            // 0x0160(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ContextualDialogComponent");
		return ptr;
	}


	void STATIC_TriggerDialogResponseInProximity(struct FVector* Location, float* Radius, struct FName* DialogResponse);
	bool TriggerDialogResponse(struct FName* Trigger);
	void ServerTriggerDialogResponse(struct FName* Trigger);
	void OnNotifyTakeDamage(struct FDamageInfo* DamageInfo);
	void OnNotifyHit(struct FDamageInfo* DamageInfo);
	void OnEvent(struct FName* EventName);
	void OnDialogComplete(class UDialogInstance** Instance);
	void MulticastDialog(struct FSoftObjectPath* Dialog);
};


// Class GunfireRuntime.CooldownCondition
// 0x0008 (0x0038 - 0x0030)
class UCooldownCondition : public UCondition
{
public:
	struct FName                                       Cooldown;                                                 // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CooldownCondition");
		return ptr;
	}

};


// Class GunfireRuntime.CooldownStateDecorator
// 0x0020 (0x0048 - 0x0028)
class UCooldownStateDecorator : public UActorStateDecorator
{
public:
	bool                                               ValidateCooldown;                                         // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECooldownScope                                     Scope;                                                    // 0x0029(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	struct FName                                       Cooldown;                                                 // 0x002C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CooldownMin;                                              // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CooldownMax;                                              // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               GlobalCooldown;                                           // 0x003C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	float                                              GlobalCooldownMin;                                        // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              GlobalCooldownMax;                                        // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CooldownStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.CounterCondition
// 0x0008 (0x0038 - 0x0030)
class UCounterCondition : public UCondition
{
public:
	uint32_t                                           Counter;                                                  // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CounterCondition");
		return ptr;
	}

};


// Class GunfireRuntime.CraftingRecipe
// 0x0018 (0x00C8 - 0x00B0)
class UCraftingRecipe : public UCraftingRecipe_Base
{
public:
	class UClass*                                      Item;                                                     // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ItemLevel;                                                // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ItemQuantity;                                             // 0x00BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ItemTag;                                                  // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CraftingRecipe");
		return ptr;
	}

};


// Class GunfireRuntime.CraftingRecipeList
// 0x0018 (0x0040 - 0x0028)
class UCraftingRecipeList : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	TArray<class UCraftingRecipe_Base*>                Recipes;                                                  // 0x0030(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CraftingRecipeList");
		return ptr;
	}

};


// Class GunfireRuntime.CraftingRecipeManager
// 0x00A0 (0x0198 - 0x00F8)
class UCraftingRecipeManager : public UActorComponent
{
public:
	TMap<struct FName, struct FRecipeList>             Recipes;                                                  // 0x00F8(0x0050) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGuid, class UCraftingRecipe_Base*>    RecipeLookup;                                             // 0x0148(0x0050) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CraftingRecipeManager");
		return ptr;
	}


	class UCraftingRecipeManager* STATIC_GetInstance(class UObject** WorldContextObject);
	void STATIC_GetAllMaterials(class UObject** WorldContextObject);
	void STATIC_BuildRecipeList(class UObject** WorldContextObject);
};


// Class GunfireRuntime.CraftingComponent
// 0x0010 (0x0108 - 0x00F8)
class UCraftingComponent : public UActorComponent
{
public:
	TArray<struct FName>                               RecipeTags;                                               // 0x00F8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CraftingComponent");
		return ptr;
	}


	void UpgradeItem(class AActor** Source, int* ItemID, struct FGuid* RecipeID);
	bool HasRecipesOfType(class AActor** Source, ERecipeType* Type);
	bool HasAvailableUpgrades(TArray<struct FName>* Tags);
	bool HasAvailableRecipes(TArray<struct FName>* Tags);
	bool GetUpgrade(class AActor** Source, int* ItemID, struct FRecipeInfo* Info);
	TArray<struct FRecipeInfo> GetRecipesWithIngredient(class AActor** Source, class UClass** Ingredient, ERecipeType* Type, int* IngredientLevelRequirement);
	TArray<struct FRecipeInfo> GetRecipesForItem(class AActor** Source, class UClass** Item, ERecipeType* Type, int* ItemLevelRequirement);
	TArray<struct FRecipeInfo> GetRecipes(class AActor** Source, ERecipeType* Type);
	struct FRecipeInfo GetRecipeInfo(class AActor** Source, struct FGuid* RecipeID);
	void CraftItem(class AActor** Source, struct FGuid* RecipeID);
};


// Class GunfireRuntime.CustomCondition
// 0x0008 (0x0038 - 0x0030)
class UCustomCondition : public UCondition
{
public:
	struct FName                                       FunctionName;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CustomCondition");
		return ptr;
	}

};


// Class GunfireRuntime.CutsceneTransientActor
// 0x0008 (0x0338 - 0x0330)
class ACutsceneTransientActor : public AActor
{
public:
	bool                                               bIsInCutscene;                                            // 0x0330(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0331(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.CutsceneTransientActor");
		return ptr;
	}


	void OnLevelSequence(bool* Start, TArray<struct FName>* SequenceTags);
	void OnCinematic(bool* IsPlaying, TArray<struct FName>* SequenceTags);
	void ForceCutscene(TArray<struct FName>* SequenceTags, bool* bIsPlaying);
};


// Class GunfireRuntime.DamageableActor
// 0x00E8 (0x0418 - 0x0330)
class ADamageableActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	struct FVector                                     ImpulseLocationOffset;                                    // 0x0338(0x000C) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ImpulseRadius;                                            // 0x0344(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              ImpulseStrength;                                          // 0x0348(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               Invincible;                                               // 0x034C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EInvincibleHandlingMethod                          InvincibleMethod;                                         // 0x034D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               BeginNetDormant;                                          // 0x034E(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x1];                                       // 0x034F(0x0001) MISSED OFFSET
	float                                              HealthMax;                                                // 0x0350(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       AimTarget;                                                // 0x0354(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x035C(0x0004) MISSED OFFSET
	TArray<struct FName>                               VisualTags;                                               // 0x0360(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      Faction;                                                  // 0x0370(0x0008) (Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               DisablePersistence;                                       // 0x0378(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               UseLevelScaling;                                          // 0x0379(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      DamageableLevel;                                          // 0x037A(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x5];                                       // 0x037B(0x0005) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnHealthChanged;                                          // 0x0380(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTakeDamage;                                             // 0x0390(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDead;                                                   // 0x03A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              Health;                                                   // 0x03B0(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                DamageState;                                              // 0x03B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x8];                                       // 0x03B8(0x0008) MISSED OFFSET
	TArray<class USceneComponent*>                     DamageStates;                                             // 0x03C0(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class USceneComponent*                             AimTargetComponent;                                       // 0x03D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStatsComponent*                             DamageStats;                                              // 0x03D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>                  DamageMaterials;                                          // 0x03E0(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>                  RepairMaterials;                                          // 0x03F0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x18];                                      // 0x0400(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DamageableActor");
		return ptr;
	}


	void UpdateVisualState(struct FName* TransitionTag);
	void SetHealth(float* NewHealth);
	void PostComputeStats();
	void OnRep_Health();
	void OnNotifyTakeDamage(struct FDamageInfo* DamageInfo);
	void OnNotifyDead(struct FDamageInfo* DamageInfo);
	bool IsAlive();
	int GetNumDamageStates();
	float GetHealthPercentage();
	float GetHealthMax();
	float GetHealth();
	int GetDamageState();
	void DifficultyChanged();
	void ComputeStats();
	void ApplyHealthDelta(float* Delta);
};


// Class GunfireRuntime.DamageableInterface
// 0x0000 (0x0028 - 0x0028)
class UDamageableInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DamageableInterface");
		return ptr;
	}


	void FilterIncomingDamage(struct FDamageInfo* DamageInfo, struct FDamageInfo* DamageInfoOut, bool* ShouldApplyDamage);
};


// Class GunfireRuntime.DamageInfoUtil
// 0x0000 (0x0028 - 0x0028)
class UDamageInfoUtil : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DamageInfoUtil");
		return ptr;
	}


	void STATIC_SetPower(int* Power, struct FDamageInfo* Info);
	void STATIC_SetIsSecondaryDamage(bool* IsSecondaryDamage, struct FDamageInfo* Info);
	void STATIC_SetDamageType(class UClass** DamageType, struct FDamageInfo* Info);
	void STATIC_SetDamage(int* Damage, struct FDamageInfo* Info);
	void STATIC_ModifyDamage(float* Damage, float* DamageMod, float* DamageScalar, struct FDamageInfo* Info);
	void STATIC_ModifyCrit(float* CritChance, float* CritDamageMod, struct FDamageInfo* Info);
};


// Class GunfireRuntime.DamageNotifyInterface
// 0x0000 (0x0028 - 0x0028)
class UDamageNotifyInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DamageNotifyInterface");
		return ptr;
	}


	void OnNotifyTakeDamage(struct FDamageInfo* DamageInfo);
};


// Class GunfireRuntime.DamageSourceInterface
// 0x0000 (0x0028 - 0x0028)
class UDamageSourceInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DamageSourceInterface");
		return ptr;
	}


	void ResolveOwner(struct FDamageInfo* In, struct FDamageInfo* Out);
	void NotifyHitTarget(struct FDamageInfo* DamageInfo);
	void ModifyDamage(struct FDamageInfo* Info, bool* Rtn);
	class UClass* GetDamageType();
};


// Class GunfireRuntime.DamageStateDecorator
// 0x0020 (0x0048 - 0x0028)
class UDamageStateDecorator : public UActorStateDecorator
{
public:
	float                                              Damage;                                                   // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              DamageMod;                                                // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              DamageScalar;                                             // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	class UClass*                                      DamageType;                                               // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      ImpactDirection;                                          // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DamageStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.DamageClass
// 0x0048 (0x0070 - 0x0028)
class UDamageClass : public UObject
{
public:
	struct FName                                       DamageModStat;                                            // 0x0028(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DamageScalarStat;                                         // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       CritChanceStat;                                           // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       CritDamageModStat;                                        // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowsWeakSpots;                                         // 0x0048(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	struct FName                                       DamageReductionStat;                                      // 0x004C(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DamageResistanceStat;                                     // 0x0054(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                DamageResistConstant;                                     // 0x005C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                DamageResistLevelScalar;                                  // 0x0060(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	class UClass*                                      Action;                                                   // 0x0068(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DamageClass");
		return ptr;
	}

};


// Class GunfireRuntime.DamageTypeGunfire
// 0x00C8 (0x0108 - 0x0040)
class UDamageTypeGunfire : public UDamageType
{
public:
	TArray<class UClass*>                              DamageClasses;                                            // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	int                                                Power;                                                    // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageMod;                                                // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageScalar;                                             // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnockBackImpulse;                                         // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KnockUpImpulse;                                           // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PhysicsImpulse;                                           // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Unblockable;                                              // 0x0068(0x0001) (BlueprintReadOnly, ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Blockable;                                                // 0x0069(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               NoBlockCounter;                                           // 0x006A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Evadable;                                                 // 0x006B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HitFriendly;                                              // 0x006C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Modifiable;                                               // 0x006D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x006E(0x0002) MISSED OFFSET
	float                                              FriendlyDamageScalar;                                     // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               FriendlyDamageScalarOverridesGameScalar;                  // 0x0074(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               OnlyHitBreakable;                                         // 0x0075(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowCriticalHits;                                       // 0x0076(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0077(0x0001) MISSED OFFSET
	class UParticleSystem*                             TrailFX;                                                  // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      TracerBP;                                                 // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       TrailTargetParam;                                         // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SoundRadius;                                              // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bApplyBonusSightRangeForEnemies;                          // 0x0094(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0095(0x0003) MISSED OFFSET
	float                                              HitPause;                                                 // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitPauseIntensity;                                        // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitPauseEaseInTime;                                       // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitPauseEaseOutTime;                                      // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UForceFeedbackEffect*                        ForceFeedback;                                            // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHapticFeedbackEffect_Base*                  HapticEffect;                                             // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      CameraShake;                                              // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      Action;                                                   // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDamageNumbersVisibility                           Visibility;                                               // 0x00C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverrideVisuals;                                         // 0x00C9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x2];                                       // 0x00CA(0x0002) MISSED OFFSET
	struct FLinearColor                                ColorOverride;                                            // 0x00CC(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverrideCriticalVisuals;                                 // 0x00DC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x00DD(0x0003) MISSED OFFSET
	struct FLinearColor                                CriticalColorOverride;                                    // 0x00E0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bOverrideWeakSpotVisuals;                                 // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	struct FLinearColor                                WeakSpotColorOverride;                                    // 0x00F4(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0104(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DamageTypeGunfire");
		return ptr;
	}

};


// Class GunfireRuntime.DeployableComponent
// 0x0028 (0x0120 - 0x00F8)
class UDeployableComponent : public UActorComponent
{
public:
	struct FDeployableAttributes                       Attributes;                                               // 0x00F8(0x0028) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DeployableComponent");
		return ptr;
	}

};


// Class GunfireRuntime.DialogStage
// 0x0010 (0x0340 - 0x0330)
class ADialogStage : public AActor
{
public:
	class UDialogComponent*                            DialogComponent;                                          // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               StageActive;                                              // 0x0338(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0339(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DialogStage");
		return ptr;
	}


	void SetupStage(struct FEventTreeStage* Stage);
	void SetCameraByName(struct FName* Name, class APlayerController** TargetController);
	void SetCamera(class AActor** CameraActor, class APlayerController** TargetController);
	void SetActiveCameraComponent(class AActor** Actor, class UCameraComponent** Camera, class APlayerController** TargetController);
	void RestoreCamera(bool* ResetToCurrentView, class APlayerController** TargetController);
	void PositionActorAtMark(class AActor** Actor, struct FName* Mark);
	void PositionActor(class AActor** Actor, struct FTransform* Transform);
	class AActor* GetActor(struct FName* Name);
	void End();
	void Begin();
};


// Class GunfireRuntime.DialogCameraComponent
// 0x0050 (0x0930 - 0x08E0)
class UDialogCameraComponent : public UCineCameraComponent
{
public:
	struct FName                                       TargetCamera;                                             // 0x08E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EaseTime;                                                 // 0x08E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEaseType                                          EaseType;                                                 // 0x08EC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x08ED(0x0003) MISSED OFFSET
	float                                              EaseExponent;                                             // 0x08F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       FocusTarget;                                              // 0x08F4(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x34];                                      // 0x08FC(0x0034) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DialogCameraComponent");
		return ptr;
	}

};


// Class GunfireRuntime.DialogProviderInterface
// 0x0000 (0x0028 - 0x0028)
class UDialogProviderInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DialogProviderInterface");
		return ptr;
	}


	void SetupContextVariables(class UDialogComponent** DialogComponent);
	class UEventTree* QueryEventTree(class UDialogComponent** DialogComponent, EDialogType* Type);
	class UEventTree* GetEventTree(class AActor** Actor);
};


// Class GunfireRuntime.DialogInitiatorInterface
// 0x0000 (0x0028 - 0x0028)
class UDialogInitiatorInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DialogInitiatorInterface");
		return ptr;
	}


	bool ShouldExitDialogFromDamage(class UDialogComponent** Dialog, struct FDamageInfo* Damage);
	bool ShouldExitDialog(class UDialogComponent** Dialog);
};


// Class GunfireRuntime.EventTreeComponent
// 0x00E0 (0x01D8 - 0x00F8)
class UEventTreeComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnNodeEvent;                                              // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0108(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBegin;                                                  // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEnd;                                                    // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSetStage;                                               // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FEventTreeContext>                   ExecutionStack;                                           // 0x0148(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FEventTreeStage>                     StageStack;                                               // 0x0158(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x70];                                      // 0x0168(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeComponent");
		return ptr;
	}


	void Stop();
	void StartTree();
	void SetVariableAsObject(struct FName* Name, class UObject** Value);
	void SetVariableAsBool(struct FName* Name, bool* Value);
	void SetupContextVariables();
	void SetStage(struct FEventTreeStage* Stage);
	void PushStage(struct FEventTreeStage* Stage);
	void PopStage();
	class UEventTreeNode* PeekNextNode();
	bool IsRunning();
	bool HasPendingEvents();
	class UObject* GetVariableObject(struct FName* Name);
	class UEventTreeNode* GetCurrentNode();
	bool ExecuteTriggerFromEventTree(class UEventTree** EventTree, struct FName* TriggerName);
	void ExecuteSubroutine(struct FName* Name);
	void Clear(bool* ForceComplete);
	void BeginEventTree(class UEventTree** EventTree, bool* DeferredStart);
};


// Class GunfireRuntime.DialogComponent
// 0x01F8 (0x03D0 - 0x01D8)
class UDialogComponent : public UEventTreeComponent
{
public:
	class UEventTree*                                  EventTree;                                                // 0x01D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoPlayDialog;                                           // 0x01E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               EnableProximityTriggers;                                  // 0x01E1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x01E2(0x0006) MISSED OFFSET
	class UClass*                                      StageBP;                                                  // 0x01E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ADialogStage*                                Stage;                                                    // 0x01F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x8];                                       // 0x01F8(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDialogBegin;                                            // 0x0200(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDialogEnd;                                              // 0x0210(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDialogSetStage;                                         // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDialogEvent;                                            // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDialogUpdate;                                           // 0x0240(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnOptionsUpdate;                                          // 0x0250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               AllowMultipleSpeakers;                                    // 0x0260(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0261(0x0007) MISSED OFFSET
	class AActor*                                      DialogInitiator;                                          // 0x0268(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               DialogActive;                                             // 0x0270(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0271(0x0007) MISSED OFFSET
	struct FEventTreeStage                             DialogStage;                                              // 0x0278(0x0020) (BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FEventTreeAttrib>                    DialogAttributes;                                         // 0x0298(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FDialogInfo                                 Dialog;                                                   // 0x02A8(0x0068) (BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDialogOption>                       DialogOptions;                                            // 0x0310(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, Protected, NativeAccessSpecifierProtected)
	TArray<struct FDialogTokenValuePair>               TokenValuePairs;                                          // 0x0320(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x10];                                      // 0x0330(0x0010) MISSED OFFSET
	class UAudioComponent*                             DialogAudio;                                              // 0x0340(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UObject*>                             DialogProviders;                                          // 0x0348(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UDialogInstance*                             CurrentDialog;                                            // 0x0358(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x70];                                      // 0x0360(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DialogComponent");
		return ptr;
	}


	void TokenValueSet(struct FName* NameID, struct FText* Value);
	void SelectOptionByName(struct FName* OptionName);
	void SelectOption(unsigned char* OptionID);
	void ResetStageFromCinematic();
	void RemoveDialogProvider(class UObject** Provider);
	void OnRep_Stage();
	void OnRep_Options();
	void OnRep_Dialog();
	void OnRep_Active();
	void OnInitiatorTakeAnyDamage(struct FDamageInfo* Damage);
	void OnDialogFinished(class UDialogInstance** Instance);
	void JoinInProgressServer(class APlayerController** Controller);
	void JoinInProgressClient();
	bool HasOption(struct FName* NameID);
	bool HasAttributeValueForStage(struct FName* Key);
	bool HasAttributeValueForOption(struct FDialogOption* Option, struct FName* Key);
	bool HasAttributeValue(struct FName* Key);
	void HandleEvent(struct FName* EventName);
	struct FText GetTokenReplacedText();
	struct FText GetAttributeValueForStage(struct FName* Key);
	struct FText GetAttributeValueForOption(struct FDialogOption* Option, struct FName* Key);
	struct FText GetAttributeValue(struct FName* Key);
	class UEventTreeAsset* GetAttributeAssetForStage(struct FName* Key);
	bool ExecuteTrigger(struct FName* TriggerName, class AActor** Initiator, bool* Push, bool* AllowOverrideExistingStack);
	bool ExecuteItemTrigger(TSoftObjectPtr<class UClass>* ItemBP, class AActor** Initiator);
	void EventTreeStageEvent(struct FEventTreeStage* EventTreeStage);
	void EventTreeNodeEvent(class UEventTreeNode** Node, struct FName* EventName);
	void EventEnd();
	void EventBegin();
	void DialogAdvance();
	void BeginDialog(class AActor** Initiator);
	void AddDialogProvider(class UObject** Provider);
};


// Class GunfireRuntime.DialogInstance
// 0x0038 (0x0060 - 0x0028)
class UDialogInstance : public UObject
{
public:
	int                                                ID;                                                       // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnComplete;                                               // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UDialogManager*                              DialogManager;                                            // 0x0040(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USubtitleInstance*>                   Subtitles;                                                // 0x0048(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0058(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DialogInstance");
		return ptr;
	}


	void OnSubtitleComplete(class USubtitleInstance** Subtitle);
	void OnSubtitleAdded(class USubtitleInstance** Subtitle);
	bool IsDialogSource(class AActor** Source);
	void ForceComplete();
	void Complete();
};


// Class GunfireRuntime.DialogManager
// 0x0030 (0x0128 - 0x00F8)
class UDialogManager : public UActorComponent
{
public:
	float                                              DialogCullDistance;                                       // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCompleteAll;                                            // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0110(0x0008) MISSED OFFSET
	TArray<class UDialogInstance*>                     ActiveDialog;                                             // 0x0118(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DialogManager");
		return ptr;
	}


	bool StopDialog(class AActor** Source);
	bool StopActiveDialog();
	class UDialogInstance* PlayDialogFromSound(class AActor** Source, TSoftObjectPtr<class USoundBase>* Dialog);
	class UDialogInstance* PlayDialog(class AActor** Source, struct FDialogInfo* Info);
	class UDialogManager* STATIC_GetDialogManager(class UObject** WorldContextObject);
	class UDialogInstance* GetActiveDialog(class AActor** Source);
};


// Class GunfireRuntime.DialogVocalRange
// 0x0008 (0x0030 - 0x0028)
class UDialogVocalRange : public UObject
{
public:
	float                                              Range;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DialogVocalRange");
		return ptr;
	}

};


// Class GunfireRuntime.DisableInputDecorator
// 0x0000 (0x0028 - 0x0028)
class UDisableInputDecorator : public UActorStateDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DisableInputDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.DisableTargetLockStateDecorator
// 0x0000 (0x0028 - 0x0028)
class UDisableTargetLockStateDecorator : public UActorStateDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DisableTargetLockStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.DissolveComponent
// 0x00A8 (0x01A0 - 0x00F8)
class UDissolveComponent : public UActorComponent
{
public:
	TArray<struct FDissolveMaterial>                   Materials;                                                // 0x00F8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UParticleSystem*                             DissolveFX;                                               // 0x0108(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       DissolveFXPoint;                                          // 0x0110(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              DissolveFXThreshold;                                      // 0x0118(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               DistinctDissolveInFX;                                     // 0x011C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x011D(0x0003) MISSED OFFSET
	class UParticleSystem*                             DissolveInFX;                                             // 0x0120(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       DissolveInFXPoint;                                        // 0x0128(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              DissolveInFXThreshold;                                    // 0x0130(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               DestroyOnComplete;                                        // 0x0134(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bAutoHideMeshes;                                          // 0x0135(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0136(0x0002) MISSED OFFSET
	TArray<struct FName>                               IgnoreComponents;                                         // 0x0138(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FName>                               FXIgnoreComponents;                                       // 0x0148(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                               bFilterBySlotName;                                        // 0x0158(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0159(0x0007) MISSED OFFSET
	TArray<struct FName>                               ValidMaterialSlotNames;                                   // 0x0160(0x0010) (Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0170(0x0010) MISSED OFFSET
	TArray<class UMeshComponent*>                      DissolveMeshes;                                           // 0x0180(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UParticleSystemComponent*>            DissolveFXComps;                                          // 0x0190(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DissolveComponent");
		return ptr;
	}


	void DissolveOut(float* Time);
	void DissolveIn(float* Time);
	void Dissolve(float* Time, float* DissolveFXLingerAfterDeathTime);
};


// Class GunfireRuntime.DiveCondition
// 0x0010 (0x0040 - 0x0030)
class UDiveCondition : public UCondition
{
public:
	TArray<class UClass*>                              Types;                                                    // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.DiveCondition");
		return ptr;
	}

};


// Class GunfireRuntime.EffectsPreviewSettings
// 0x0058 (0x0080 - 0x0028)
class UEffectsPreviewSettings : public UObject
{
public:
	class UClass*                                      FootImpactEffectClass;                                    // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FootSprintImpactEffectClass;                              // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HandImpactEffectClass;                                    // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      HandSprintImpactEffectClass;                              // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      LandImpactEffectClass;                                    // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      BodyImpactEffectClass;                                    // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SlamImpactEffectClass;                                    // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPhysicalMaterial*                           PreviewImpactMaterial;                                    // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USoundSet*                                   PreviewSoundSet;                                          // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               PreviewTags;                                              // 0x0070(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EffectsPreviewSettings");
		return ptr;
	}

};


// Class GunfireRuntime.EncounterInstance
// 0x00A8 (0x00D0 - 0x0028)
class UEncounterInstance : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnEvent;                                                  // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSpawned;                                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDead;                                                   // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnComplete;                                               // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UEncounterManager*                           EncounterManager;                                         // 0x0068(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class APlayerController*>                   Players;                                                  // 0x0070(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	struct FSpawnList                                  SpawnList;                                                // 0x0080(0x0010) (NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                       Owner;                                                    // 0x0090(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                       Target;                                                   // 0x0098(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AggroGroup;                                               // 0x00A0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumSpawned;                                               // 0x00A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Counter;                                                  // 0x00AC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Streaming;                                                // 0x00B0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Paused;                                                   // 0x00B1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00B2(0x0002) MISSED OFFSET
	int                                                PerpetualSpawnCount;                                      // 0x00B4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x18];                                      // 0x00B8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EncounterInstance");
		return ptr;
	}


	void StopEncounter(bool* DestroyActiveSpawns);
	void SetAggroGroup(struct FName* NewAggroGroup);
	void ResumeEncounter();
	void PauseEncounter();
	void OnSpawnListLoaded();
	int NumQueuedSpawns();
	int NumActiveSpawns();
	bool IsComplete();
	void InvokeEventOnActors(struct FName* EventName);
	TArray<class AActor*> GetSpawnedActors();
};


// Class GunfireRuntime.SpawnTableEncounterParams
// 0x0018 (0x00A0 - 0x0088)
class USpawnTableEncounterParams : public USpawnTableEntry
{
public:
	bool                                               ChooseNewSpawnDirection;                                  // 0x0088(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0089(0x0003) MISSED OFFSET
	float                                              SpawnWeightMultiplier;                                    // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnDelayMin;                                            // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnDelayMax;                                            // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       EventName;                                                // 0x0098(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnTableEncounterParams");
		return ptr;
	}

};


// Class GunfireRuntime.EncounterManager
// 0x0088 (0x0180 - 0x00F8)
class UEncounterManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x00F8(0x0038) MISSED OFFSET
	TArray<class APlayerController*>                   Players;                                                  // 0x0130(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UEncounterInstance*>                  Encounters;                                               // 0x0140(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FEncounterSpawn>                     SpawnQueue;                                               // 0x0150(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FEncounterSpawn>                     ActiveSpawns;                                             // 0x0160(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0170(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EncounterManager");
		return ptr;
	}


	void StopEncounter(int* encounterid);
	void StopAllEncountersForOwner(class AActor** Owner, bool* DestroyActiveSpawns);
	void ResumeEncounter(int* encounterid);
	void PauseEncounter(int* encounterid);
	void OnSpawnDestroyed(class AActor** DestroyedActor);
	void OnNotifyDead(struct FDamageInfo* DamageInfo);
	bool IsFullyExplored();
	bool IsComplete(int* encounterid);
	int GetNumEncountersForOwner(class AActor** Owner);
	int GetFrontTileID();
	int GetCurrentTileID();
	int GetBehindTileID();
	class UEncounterInstance* DoEncounter(class USpawnTable** SpawnTable, int* Level, int* Rating, TArray<struct FName>* Tags, class AActor** Target, int* Flags);
};


// Class GunfireRuntime.EnvQueryContext_SpawnLocation
// 0x0000 (0x0028 - 0x0028)
class UEnvQueryContext_SpawnLocation : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EnvQueryContext_SpawnLocation");
		return ptr;
	}

};


// Class GunfireRuntime.EnvQueryContext_TargetBase
// 0x0000 (0x0028 - 0x0028)
class UEnvQueryContext_TargetBase : public UEnvQueryContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EnvQueryContext_TargetBase");
		return ptr;
	}

};


// Class GunfireRuntime.EnvQueryContext_Target
// 0x0000 (0x0028 - 0x0028)
class UEnvQueryContext_Target : public UEnvQueryContext_TargetBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EnvQueryContext_Target");
		return ptr;
	}

};


// Class GunfireRuntime.EnvQueryContext_TargetAimPos
// 0x0000 (0x0028 - 0x0028)
class UEnvQueryContext_TargetAimPos : public UEnvQueryContext_TargetBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EnvQueryContext_TargetAimPos");
		return ptr;
	}

};


// Class GunfireRuntime.EnvQueryContext_TargetLastKnownPosition
// 0x0000 (0x0028 - 0x0028)
class UEnvQueryContext_TargetLastKnownPosition : public UEnvQueryContext_TargetBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EnvQueryContext_TargetLastKnownPosition");
		return ptr;
	}

};


// Class GunfireRuntime.EnvQueryGenerator_AITacticalPoint
// 0x00D0 (0x0120 - 0x0050)
class UEnvQueryGenerator_AITacticalPoint : public UEnvQueryGenerator
{
public:
	struct FAIDataProviderFloatValue                   MaxDistance;                                              // 0x0050(0x0030) (Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue                    LowCover;                                                 // 0x0080(0x0030) (Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue                    CornerCover;                                              // 0x00B0(0x0030) (Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FAIDataProviderBoolValue                    Custom;                                                   // 0x00E0(0x0030) (Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FName                                       CustomTag;                                                // 0x0110(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      GenerateAround;                                           // 0x0118(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EnvQueryGenerator_AITacticalPoint");
		return ptr;
	}

};


// Class GunfireRuntime.EnvQueryItemType_AITacticalPoint
// 0x0000 (0x0030 - 0x0030)
class UEnvQueryItemType_AITacticalPoint : public UEnvQueryItemType_VectorBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EnvQueryItemType_AITacticalPoint");
		return ptr;
	}

};


// Class GunfireRuntime.EnvQueryGenerator_SinglePoint
// 0x0000 (0x0050 - 0x0050)
class UEnvQueryGenerator_SinglePoint : public UEnvQueryGenerator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EnvQueryGenerator_SinglePoint");
		return ptr;
	}

};


// Class GunfireRuntime.EnvQueryTest_AITacticalPoint
// 0x0000 (0x01C0 - 0x01C0)
class UEnvQueryTest_AITacticalPoint : public UEnvQueryTest
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EnvQueryTest_AITacticalPoint");
		return ptr;
	}

};


// Class GunfireRuntime.EnvQueryTest_Cover
// 0x0038 (0x01F8 - 0x01C0)
class UEnvQueryTest_Cover : public UEnvQueryTest
{
public:
	class UClass*                                      WeaponType;                                               // 0x01C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               UseLastKnownPosition;                                     // 0x01C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01C9(0x0003) MISSED OFFSET
	float                                              OptimalDistance;                                          // 0x01CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TooCloseFactor;                                           // 0x01D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TravelDistanceFactor;                                     // 0x01D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CurrentPointFactor;                                       // 0x01D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TargetHeightDiffFactor;                                   // 0x01DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MinDistanceFromCurrentPoint;                              // 0x01E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MinAngleDiff;                                             // 0x01E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxAngleDiff;                                             // 0x01E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AngleDiffFactor;                                          // 0x01EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CoverBufferRadius;                                        // 0x01F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CoverBufferFactor;                                        // 0x01F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EnvQueryTest_Cover");
		return ptr;
	}

};


// Class GunfireRuntime.EnvQueryTest_FieldOfView
// 0x0070 (0x0230 - 0x01C0)
class UEnvQueryTest_FieldOfView : public UEnvQueryTest
{
public:
	struct FAIDataProviderFloatValue                   ItemHeightOffset;                                         // 0x01C0(0x0030) (Edit, DisableEditOnInstance, ContainsInstancedReference, AdvancedDisplay, NativeAccessSpecifierPrivate)
	struct FAIDataProviderFloatValue                   FOV;                                                      // 0x01F0(0x0030) (Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UClass*                                      ViewFromContext;                                          // 0x0220(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               RequireAll;                                               // 0x0228(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0229(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EnvQueryTest_FieldOfView");
		return ptr;
	}

};


// Class GunfireRuntime.EnvQueryTest_GroundMaterial
// 0x0028 (0x01E8 - 0x01C0)
class UEnvQueryTest_GroundMaterial : public UEnvQueryTest
{
public:
	TEnumAsByte<ECollisionChannel>                     TraceChannel;                                             // 0x01C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET
	float                                              TraceDistance;                                            // 0x01C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MinDistance;                                              // 0x01CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxDistance;                                              // 0x01D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01D4(0x0004) MISSED OFFSET
	TArray<TEnumAsByte<EPhysicalSurface>>              ValidSurfaceTypes;                                        // 0x01D8(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EnvQueryTest_GroundMaterial");
		return ptr;
	}

};


// Class GunfireRuntime.EnvQueryTest_LineOfSight
// 0x0008 (0x01C8 - 0x01C0)
class UEnvQueryTest_LineOfSight : public UEnvQueryTest
{
public:
	bool                                               UseLastKnownPosition;                                     // 0x01C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               SnapToGround;                                             // 0x01C1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x6];                                       // 0x01C2(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EnvQueryTest_LineOfSight");
		return ptr;
	}

};


// Class GunfireRuntime.EnvQueryTest_Outside
// 0x0010 (0x01D0 - 0x01C0)
class UEnvQueryTest_Outside : public UEnvQueryTest
{
public:
	TEnumAsByte<ECollisionChannel>                     TraceChannel;                                             // 0x01C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01C1(0x0003) MISSED OFFSET
	int                                                NumRays;                                                  // 0x01C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              Angle;                                                    // 0x01C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                InsideThresh;                                             // 0x01CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EnvQueryTest_Outside");
		return ptr;
	}

};


// Class GunfireRuntime.EquipmentSkinInstanceData
// 0x0008 (0x0048 - 0x0040)
class UEquipmentSkinInstanceData : public UItemInstanceData
{
public:
	bool                                               Equipped;                                                 // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EquipmentSkinInstanceData");
		return ptr;
	}

};


// Class GunfireRuntime.EquipmentSkin
// 0x0030 (0x04E0 - 0x04B0)
class AEquipmentSkin : public AItem
{
public:
	TSoftObjectPtr<class UClass>                       EquipmentBP;                                              // 0x04B0(0x0028) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       VisualID;                                                 // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EquipmentSkin");
		return ptr;
	}


	bool STATIC_IsSkinEquipped(class UInventoryComponent** Inventory, int* SkinID);
	TArray<int> STATIC_GetSkinsForItem(class UInventoryComponent** Inventory, int* ItemID);
	class AEquipmentSkin* STATIC_GetSkinForBP(class UInventoryComponent** Inventory, TSoftObjectPtr<class UClass>* ItemBP);
	void STATIC_EquipSkin(class UInventoryComponent** Inventory, int* ItemID, int* SkinID);
};


// Class GunfireRuntime.EquipItemDecorator
// 0x0010 (0x0038 - 0x0028)
class UEquipItemDecorator : public UActorStateDecorator
{
public:
	class UClass*                                      ItemBP;                                                   // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                SlotIndex;                                                // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bUnequip;                                                 // 0x0034(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EquipItemDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.EquippedItemChangedCondition
// 0x0008 (0x0038 - 0x0030)
class UEquippedItemChangedCondition : public UCondition
{
public:
	class UClass*                                      ItemType;                                                 // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EquippedItemChangedCondition");
		return ptr;
	}

};


// Class GunfireRuntime.EventHandlerInterface
// 0x0000 (0x0028 - 0x0028)
class UEventHandlerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventHandlerInterface");
		return ptr;
	}


	void HandleEvent(struct FName* EventName);
};


// Class GunfireRuntime.EventStateDecorator
// 0x0010 (0x0038 - 0x0028)
class UEventStateDecorator : public UActorStateDecorator
{
public:
	struct FName                                       EnterEvent;                                               // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       ExitEvent;                                                // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.EventTree
// 0x0028 (0x0050 - 0x0028)
class UEventTree : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	TArray<class UEventTreeNode*>                      Nodes;                                                    // 0x0030(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	class UClass*                                      DefaultSpeaker;                                           // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DefaultVocalRange;                                        // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTree");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeAsset
// 0x0000 (0x0030 - 0x0030)
class UEventTreeAsset : public UDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeAsset");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_Base
// 0x0040 (0x0068 - 0x0028)
class UEventTreeNode_Base : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	bool                                               Enabled;                                                  // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	TArray<struct FEventTreeNodeCondition>             Conditions;                                               // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FName                                       WriteKey;                                                 // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ValidKey;                                                 // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       NotValidKey;                                              // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Seed;                                                     // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_Base");
		return ptr;
	}


	class FString GetEditorLabel();
};


// Class GunfireRuntime.EventTreeNode
// 0x0000 (0x0068 - 0x0068)
class UEventTreeNode : public UEventTreeNode_Base
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode");
		return ptr;
	}


	bool Validate(class UEventTreeComponent** Component);
	void Loop(class UEventTreeComponent** Component);
	void Join(class UEventTreeComponent** Component, class APlayerController** JoiningController);
	bool IsComplete(class UEventTreeComponent** Component);
	void End(class UEventTreeComponent** Component);
	void Begin(class UEventTreeComponent** Component);
};


// Class GunfireRuntime.EventTreeNode_Achievement
// 0x0010 (0x0078 - 0x0068)
class UEventTreeNode_Achievement : public UEventTreeNode
{
public:
	struct FAchievementId                              Achievement;                                              // 0x0068(0x0008) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	EAchievementUpdateType                             Type;                                                     // 0x0070(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	int                                                Amount;                                                   // 0x0074(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_Achievement");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeContextObject
// 0x0008 (0x0030 - 0x0028)
class UEventTreeContextObject : public UObject
{
public:
	struct FName                                       NameID;                                                   // 0x0028(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeContextObject");
		return ptr;
	}

};


// Class GunfireRuntime.Branch
// 0x0010 (0x0078 - 0x0068)
class UBranch : public UEventTreeNode_Base
{
public:
	TArray<class UEventTreeNode*>                      Nodes;                                                    // 0x0068(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Branch");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_Branch
// 0x0010 (0x0078 - 0x0068)
class UEventTreeNode_Branch : public UEventTreeNode
{
public:
	TArray<class UBranch*>                             Branches;                                                 // 0x0068(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_Branch");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_Delay
// 0x0008 (0x0070 - 0x0068)
class UEventTreeNode_Delay : public UEventTreeNode
{
public:
	float                                              Delay;                                                    // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_Delay");
		return ptr;
	}

};


// Class GunfireRuntime.Dialog_Speaker
// 0x0030 (0x0058 - 0x0028)
class UDialog_Speaker : public UObject
{
public:
	struct FName                                       NameID;                                                   // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                      Name;                                                     // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                      Description;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDialogSpeakerGender                               Gender;                                                   // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Speaks;                                                   // 0x0051(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0052(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Dialog_Speaker");
		return ptr;
	}

};


// Class GunfireRuntime.Dialog_Emote
// 0x0008 (0x0030 - 0x0028)
class UDialog_Emote : public UObject
{
public:
	struct FName                                       AnimationTag;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Dialog_Emote");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_Dialog
// 0x0080 (0x00E8 - 0x0068)
class UEventTreeNode_Dialog : public UEventTreeNode
{
public:
	class UClass*                                      Speaker;                                                  // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       Text;                                                     // 0x0070(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UClass*                                      Emote;                                                    // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoComplete;                                             // 0x0090(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CompleteAfterDialog;                                      // 0x0091(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0092(0x0002) MISSED OFFSET
	float                                              WaitTimeAfterComplete;                                    // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundBase>                   Dialog;                                                   // 0x0098(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEventTreeAttrib>                    Attributes;                                               // 0x00C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UClass*                                      VocalRange;                                               // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsDefaultSpeaker;                                         // 0x00D8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               IsDefaultVocalRange;                                      // 0x00D9(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x6];                                       // 0x00DA(0x0006) MISSED OFFSET
	struct FTimerHandle                                WaitTimerHandle;                                          // 0x00E0(0x0008) (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_Dialog");
		return ptr;
	}


	void OnFinishedWaiting(class UEventTreeComponent** Component);
	void OnDialogComplete(class UEventTreeComponent** Component);
	void Complete(class UEventTreeComponent** Component);
};


// Class GunfireRuntime.EventTreeNode_DialogInterrupt
// 0x0000 (0x0068 - 0x0068)
class UEventTreeNode_DialogInterrupt : public UEventTreeNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_DialogInterrupt");
		return ptr;
	}

};


// Class GunfireRuntime.Branch_DialogOption
// 0x0048 (0x00C0 - 0x0078)
class UBranch_DialogOption : public UBranch
{
public:
	struct FName                                       DialogID;                                                 // 0x0078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Priority;                                                 // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	struct FText                                       Label;                                                    // 0x0088(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                CompletionPercent;                                        // 0x00A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	TArray<struct FEventTreeAttrib>                    Attributes;                                               // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               Hidden;                                                   // 0x00B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Branch_DialogOption");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_DialogOptions
// 0x0010 (0x0088 - 0x0078)
class UEventTreeNode_DialogOptions : public UEventTreeNode_Branch
{
public:
	struct FName                                       DialogTag;                                                // 0x0078(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoCompleteDialog;                                       // 0x0080(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0081(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_DialogOptions");
		return ptr;
	}


	void SelectOption(class UEventTreeComponent** Component, unsigned char* Option);
};


// Class GunfireRuntime.EventTreeNode_List
// 0x0010 (0x0078 - 0x0068)
class UEventTreeNode_List : public UEventTreeNode
{
public:
	TArray<class UEventTreeNode*>                      Nodes;                                                    // 0x0068(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_List");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_DialogOption
// 0x0040 (0x00B8 - 0x0078)
class UEventTreeNode_DialogOption : public UEventTreeNode_List
{
public:
	struct FName                                       DialogID;                                                 // 0x0078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Priority;                                                 // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	struct FText                                       Label;                                                    // 0x0088(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FName                                       DialogTag;                                                // 0x00A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEventTreeAttrib>                    Attributes;                                               // 0x00A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_DialogOption");
		return ptr;
	}

};


// Class GunfireRuntime.HasDialogOptionsCondition
// 0x0008 (0x0038 - 0x0030)
class UHasDialogOptionsCondition : public UCondition
{
public:
	struct FName                                       DialogTag;                                                // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.HasDialogOptionsCondition");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_Event
// 0x0010 (0x0078 - 0x0068)
class UEventTreeNode_Event : public UEventTreeNode
{
public:
	struct FName                                       Context;                                                  // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       EventName;                                                // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_Event");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_ExecSubroutine
// 0x0008 (0x0070 - 0x0068)
class UEventTreeNode_ExecSubroutine : public UEventTreeNode
{
public:
	struct FName                                       Subroutine;                                               // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_ExecSubroutine");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_Exit
// 0x0000 (0x0068 - 0x0068)
class UEventTreeNode_Exit : public UEventTreeNode
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_Exit");
		return ptr;
	}

};


// Class GunfireRuntime.Branch_SequenceOption
// 0x0008 (0x0080 - 0x0078)
class UBranch_SequenceOption : public UBranch
{
public:
	struct FName                                       EventName;                                                // 0x0078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Branch_SequenceOption");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_LevelSequence
// 0x0068 (0x00E0 - 0x0078)
class UEventTreeNode_LevelSequence : public UEventTreeNode_Branch
{
public:
	TSoftObjectPtr<class ULevelSequence>               LevelSequence;                                            // 0x0078(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               SequenceTags;                                             // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               HideOtherPlayers;                                         // 0x00B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ResetNonMVPs;                                             // 0x00B1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ResetCameraOnComplete;                                    // 0x00B2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShowSkipCinematic;                                        // 0x00B3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DefaultToPlayerCameraOnFinish;                            // 0x00B4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00B5(0x0003) MISSED OFFSET
	struct FMovieSceneSequencePlaybackSettings         PlaybackSettings;                                         // 0x00B8(0x0014) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET
	class UEventTreeComponent*                         StoredComponent;                                          // 0x00D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x8];                                       // 0x00D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_LevelSequence");
		return ptr;
	}


	void OnSequenceTriggerForEventTree(struct FName* TriggerName);
	void OnSequenceFinishedCallback();
};


// Class GunfireRuntime.EventTreeNode_Link
// 0x0008 (0x0070 - 0x0068)
class UEventTreeNode_Link : public UEventTreeNode
{
public:
	class UEventTreeNode*                              LinkedNode;                                               // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_Link");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_ActivateObjective
// 0x0010 (0x0078 - 0x0068)
class UEventTreeNode_ActivateObjective : public UEventTreeNode
{
public:
	struct FName                                       Objective;                                                // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoCompleteActiveObjectives;                             // 0x0070(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_ActivateObjective");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_CompleteObjective
// 0x0008 (0x0070 - 0x0068)
class UEventTreeNode_CompleteObjective : public UEventTreeNode
{
public:
	struct FName                                       Objective;                                                // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_CompleteObjective");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_CompleteQuest
// 0x0008 (0x0070 - 0x0068)
class UEventTreeNode_CompleteQuest : public UEventTreeNode
{
public:
	EQuestResult                                       Result;                                                   // 0x0068(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_CompleteQuest");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_ProximityTrigger
// 0x0018 (0x0090 - 0x0078)
class UEventTreeNode_ProximityTrigger : public UEventTreeNode_List
{
public:
	float                                              RangeMin;                                                 // 0x0078(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RangeMax;                                                 // 0x007C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CooldownMin;                                              // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CooldownMax;                                              // 0x0084(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EYesNo                                             HasLOS;                                                   // 0x0088(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EYesNo                                             InView;                                                   // 0x0089(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x008A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_ProximityTrigger");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_ItemTrigger
// 0x0028 (0x00A0 - 0x0078)
class UEventTreeNode_ItemTrigger : public UEventTreeNode_List
{
public:
	TSoftObjectPtr<class UClass>                       ItemBP;                                                   // 0x0078(0x0028) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_ItemTrigger");
		return ptr;
	}

};


// Class GunfireRuntime.Branch_QuestSwitch
// 0x0018 (0x0090 - 0x0078)
class UBranch_QuestSwitch : public UBranch
{
public:
	EQuestSwitchResult                                 ValidForState;                                            // 0x0078(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET
	TArray<struct FName>                               ValidObjectives;                                          // 0x0080(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Branch_QuestSwitch");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_QuestSwitch
// 0x0000 (0x0078 - 0x0078)
class UEventTreeNode_QuestSwitch : public UEventTreeNode_Branch
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_QuestSwitch");
		return ptr;
	}

};


// Class GunfireRuntime.Branch_Random
// 0x0008 (0x0080 - 0x0078)
class UBranch_Random : public UBranch
{
public:
	int                                                Chance;                                                   // 0x0078(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Branch_Random");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_RandomBranch
// 0x0008 (0x0080 - 0x0078)
class UEventTreeNode_RandomBranch : public UEventTreeNode_Branch
{
public:
	bool                                               UseSeed;                                                  // 0x0078(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_RandomBranch");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_SetCooldown
// 0x0018 (0x0080 - 0x0068)
class UEventTreeNode_SetCooldown : public UEventTreeNode
{
public:
	struct FName                                       Context;                                                  // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       Cooldown;                                                 // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CooldownMin;                                              // 0x0078(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              CooldownMax;                                              // 0x007C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_SetCooldown");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_SetKey
// 0x0018 (0x0080 - 0x0068)
class UEventTreeNode_SetKey : public UEventTreeNode
{
public:
	struct FName                                       ContextActor;                                             // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       Key;                                                      // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       Value;                                                    // 0x0078(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_SetKey");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_RemoveKey
// 0x0010 (0x0078 - 0x0068)
class UEventTreeNode_RemoveKey : public UEventTreeNode
{
public:
	struct FName                                       ContextActor;                                             // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       Key;                                                      // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_RemoveKey");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_SetMultipleSpeakers
// 0x0008 (0x0070 - 0x0068)
class UEventTreeNode_SetMultipleSpeakers : public UEventTreeNode
{
public:
	bool                                               bAllowed;                                                 // 0x0068(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_SetMultipleSpeakers");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_SetVariable
// 0x0018 (0x0080 - 0x0068)
class UEventTreeNode_SetVariable : public UEventTreeNode
{
public:
	struct FName                                       ContextActor;                                             // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       VariableName;                                             // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               Value;                                                    // 0x0078(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_SetVariable");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_Stage
// 0x0020 (0x0088 - 0x0068)
class UEventTreeNode_Stage : public UEventTreeNode
{
public:
	EStageAction                                       Action;                                                   // 0x0068(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	struct FName                                       Stage;                                                    // 0x006C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               OnlyTargetInstigator;                                     // 0x0074(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0075(0x0003) MISSED OFFSET
	TArray<struct FEventTreeAttrib>                    Attributes;                                               // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_Stage");
		return ptr;
	}

};


// Class GunfireRuntime.Branch_Subroutine
// 0x0008 (0x0080 - 0x0078)
class UBranch_Subroutine : public UBranch
{
public:
	struct FName                                       SubroutineID;                                             // 0x0078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Branch_Subroutine");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_Subroutines
// 0x0000 (0x0078 - 0x0078)
class UEventTreeNode_Subroutines : public UEventTreeNode_Branch
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_Subroutines");
		return ptr;
	}

};


// Class GunfireRuntime.Branch_Switch
// 0x0000 (0x0078 - 0x0078)
class UBranch_Switch : public UBranch
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Branch_Switch");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_Switch
// 0x0000 (0x0078 - 0x0078)
class UEventTreeNode_Switch : public UEventTreeNode_Branch
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_Switch");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_TreeLink
// 0x0008 (0x0070 - 0x0068)
class UEventTreeNode_TreeLink : public UEventTreeNode
{
public:
	class UEventTree*                                  Tree;                                                     // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_TreeLink");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_Trigger
// 0x0008 (0x0080 - 0x0078)
class UEventTreeNode_Trigger : public UEventTreeNode_List
{
public:
	struct FName                                       TriggerName;                                              // 0x0078(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_Trigger");
		return ptr;
	}

};


// Class GunfireRuntime.EventTreeNode_ExecTrigger
// 0x0008 (0x0070 - 0x0068)
class UEventTreeNode_ExecTrigger : public UEventTreeNode
{
public:
	struct FName                                       Trigger;                                                  // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_ExecTrigger");
		return ptr;
	}

};


// Class GunfireRuntime.ExperienceReward
// 0x0008 (0x0030 - 0x0028)
class UExperienceReward : public UChallengeReward
{
public:
	int                                                ExperienceToGive;                                         // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ExperienceReward");
		return ptr;
	}

};


// Class GunfireRuntime.FaceCameraComponent
// 0x0008 (0x0100 - 0x00F8)
class UFaceCameraComponent : public UActorComponent
{
public:
	bool                                               Enabled;                                                  // 0x00F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FaceCameraComponent");
		return ptr;
	}

};


// Class GunfireRuntime.FacingOverrideDecorator
// 0x0020 (0x0048 - 0x0028)
class UFacingOverrideDecorator : public UActorStateDecorator
{
public:
	struct FConditions                                 Conditions;                                               // 0x0028(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	ECharacterFacing                                   NewFacing;                                                // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bOneTimeCheck;                                            // 0x0041(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0042(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FacingOverrideDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.Faction
// 0x0010 (0x0038 - 0x0028)
class UFaction : public UObject
{
public:
	class UClass*                                      InheritAffiliations;                                      // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAffiliation                                       AffiliationTowardsSameFaction;                            // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ApplyFriendlyFireDamageScalar;                            // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Faction");
		return ptr;
	}


	EAffiliation STATIC_GetAffiliationForActors(class AActor** Actor1, class AActor** Actor2);
	EAffiliation STATIC_GetAffiliation(class UClass** Faction1, class UClass** Faction2);
};


// Class GunfireRuntime.FactionSettings
// 0x0018 (0x0040 - 0x0028)
class UFactionSettings : public UObject
{
public:
	class UClass*                                      PlayerFaction;                                            // 0x0028(0x0008) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFactionAffiliation>                 Affiliatons;                                              // 0x0030(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FactionSettings");
		return ptr;
	}

};


// Class GunfireRuntime.FactionManager
// 0x0018 (0x0110 - 0x00F8)
class UFactionManager : public UActorComponent
{
public:
	float                                              FactionOverridePropogationRadius;                         // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	TArray<class UFactionComponent*>                   FactionComponents;                                        // 0x0100(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FactionManager");
		return ptr;
	}


	class UFactionManager* STATIC_GetFactionManager(class UObject** WorldContextObject);
};


// Class GunfireRuntime.FactionComponent
// 0x0038 (0x0130 - 0x00F8)
class UFactionComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnFactionAffiliationChanged;                              // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UClass*                                      CachedFaction;                                            // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FFactionOverride>                    FactionOverrides;                                         // 0x0110(0x0010) (Net, ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFactionDamageTracker>               DamageTrackers;                                           // 0x0120(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FactionComponent");
		return ptr;
	}


	void TakeDamage(struct FDamageInfo* DamageInfo);
	void SetFactionOverride(class UClass** Faction, EAffiliation* Affiliation);
	void SetFaction(class UClass** NewFaction);
	bool GetFactionOverride(class UClass** Faction, EAffiliation* Affiliation);
	class UClass* GetFaction();
	EAffiliation GetAffiliation(class AActor** OtherActor);
};


// Class GunfireRuntime.FallCondition
// 0x0008 (0x0038 - 0x0030)
class UFallCondition : public UCondition
{
public:
	EFallConditionCheck                                CheckBy;                                                  // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FallCondition");
		return ptr;
	}

};


// Class GunfireRuntime.FallDamageComponent
// 0x0090 (0x0188 - 0x00F8)
class UFallDamageComponent : public UActorComponent
{
public:
	bool                                               bStartEnabled;                                            // 0x00F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bServerAuthoritative;                                     // 0x00F9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00FA(0x0002) MISSED OFFSET
	float                                              SafeFallDistance;                                         // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TerminalFallDistance;                                     // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinFallDuration;                                          // 0x0104(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LandHealthPercent;                                        // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	class UClass*                                      FallDamageType;                                           // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      LandDamageType;                                           // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDamageFromLand;                                         // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDeathFromLand;                                          // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDeathFromFall;                                          // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               DoDamageOnLand;                                           // 0x0150(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSkipDamageWhileInWater;                                  // 0x0151(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0152(0x0006) MISSED OFFSET
	class UStatsComponent*                             StatsComponent;                                           // 0x0158(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharacterMovementComponent*                 MovementComponent;                                        // 0x0160(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x20];                                      // 0x0168(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FallDamageComponent");
		return ptr;
	}


	void TriggerFallDeath();
	void SetEnabled(bool* bEnabled);
	bool IsEnabled();
	void DisableUntilGrounded(bool* bDisable);
};


// Class GunfireRuntime.FallDamageDecorator
// 0x0008 (0x0030 - 0x0028)
class UFallDamageDecorator : public UActorStateDecorator
{
public:
	bool                                               bEnabled;                                                 // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bRestoreOnExit;                                           // 0x0029(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FallDamageDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.FixedCameraState
// 0x0000 (0x0040 - 0x0040)
class UFixedCameraState : public UCameraState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FixedCameraState");
		return ptr;
	}

};


// Class GunfireRuntime.FlinchCondition
// 0x0000 (0x0030 - 0x0030)
class UFlinchCondition : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FlinchCondition");
		return ptr;
	}

};


// Class GunfireRuntime.FlyCameraController
// 0x0000 (0x0678 - 0x0678)
class AFlyCameraController : public APlayerController
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FlyCameraController");
		return ptr;
	}

};


// Class GunfireRuntime.FocusableCanvasPanel
// 0x0000 (0x0140 - 0x0140)
class UFocusableCanvasPanel : public UCanvasPanel
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FocusableCanvasPanel");
		return ptr;
	}

};


// Class GunfireRuntime.FocusButtonSlot
// 0x0028 (0x0060 - 0x0038)
class UFocusButtonSlot : public UPanelSlot
{
public:
	struct FMargin                                     Padding;                                                  // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TEnumAsByte<EHorizontalAlignment>                  HorizontalAlignment;                                      // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<EVerticalAlignment>                    VerticalAlignment;                                        // 0x0049(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x16];                                      // 0x004A(0x0016) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FocusButtonSlot");
		return ptr;
	}


	void SetVerticalAlignment(TEnumAsByte<EVerticalAlignment>* InVerticalAlignment);
	void SetPadding(struct FMargin* InPadding);
	void SetHorizontalAlignment(TEnumAsByte<EHorizontalAlignment>* InHorizontalAlignment);
};


// Class GunfireRuntime.FocusButtonWidget
// 0x0598 (0x06C8 - 0x0130)
class UFocusButtonWidget : public UContentWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0130(0x0008) MISSED OFFSET
	struct FAdvButtonStyle                             WidgetStyle;                                              // 0x0138(0x0438) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FLinearColor                                ColorAndOpacity;                                          // 0x0570(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                BackgroundColor;                                          // 0x0580(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<EButtonClickMethod>                    ClickMethod;                                              // 0x0590(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<EButtonTouchMethod>                    TouchMethod;                                              // 0x0591(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<EButtonPressMethod>                    PressMethod;                                              // 0x0592(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               FocusOnMouseEnter;                                        // 0x0593(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsFocusable;                                              // 0x0594(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoNavigateFocus;                                        // 0x0595(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowMouseClick;                                          // 0x0596(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0597(0x0001) MISSED OFFSET
	struct FName                                       InputAction;                                              // 0x0598(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       InputAxis;                                                // 0x05A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bScrollWithInputAxis;                                     // 0x05A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bScrollOnlyWhenFocused;                                   // 0x05A9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x2];                                       // 0x05AA(0x0002) MISSED OFFSET
	float                                              ScrollVelocityPerSecond;                                  // 0x05AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFocus;                                                  // 0x05B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFocusLost;                                              // 0x05C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInactiveFocus;                                          // 0x05D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInactiveFocusLost;                                      // 0x05E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnClicked;                                                // 0x05F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDoubleClicked;                                          // 0x0600(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPressed;                                                // 0x0610(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnReleased;                                               // 0x0620(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnKey;                                                    // 0x0630(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnKeyUp;                                                  // 0x0640(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnNavigate;                                               // 0x0650(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMouseEnter;                                             // 0x0660(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMouseLeave;                                             // 0x0670(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMouseMove;                                              // 0x0680(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAxisInput;                                              // 0x0690(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x18];                                      // 0x06A0(0x0018) MISSED OFFSET
	class UFocusManager*                               CachedFocusManager;                                       // 0x06B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x8];                                       // 0x06C0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FocusButtonWidget");
		return ptr;
	}


	void SetTexture(class UTexture2D** Texture);
	void SetMaterial(class UMaterialInstance** Material);
	void SetIsFocusable(bool* Focusable);
	void SetForceFocusVisualState(bool* Force);
	void SetColorAndOpacity(struct FLinearColor* InColorAndOpacity);
	void SetBackgroundColor(struct FLinearColor* InBackgroundColor);
	void SetAllowMouseClick(bool* IsMouseClickable);
	bool IsPressed();
	bool HasInactiveFocus();
	bool HasFocus();
	struct FVector2D GetAbsoluteCoords();
};


// Class GunfireRuntime.FocusCameraSettings
// 0x0018 (0x0110 - 0x00F8)
class UFocusCameraSettings : public UActorComponent
{
public:
	float                                              DistanceMin;                                              // 0x00F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceMax;                                              // 0x00FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PivotRatioToTarget;                                       // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeightOffset;                                             // 0x0104(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LookAtOffset;                                             // 0x0108(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeftRightOffset;                                          // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FocusCameraSettings");
		return ptr;
	}

};


// Class GunfireRuntime.FocusCameraState
// 0x0088 (0x00C8 - 0x0040)
class UFocusCameraState : public UCameraState
{
public:
	float                                              DistanceMin;                                              // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceMax;                                              // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceAdjustSmoothTime;                                 // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PivotRatioToTarget;                                       // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchMin;                                                 // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchMax;                                                 // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchDefault;                                             // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               LockPitchToTarget;                                        // 0x005C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	float                                              PitchOffset;                                              // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeightOffset;                                             // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeftRightOffset;                                          // 0x0068(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeftRightOffsetAdjustSmoothTime;                          // 0x006C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PivotSmoothTimeOnGround;                                  // 0x0070(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PivotSmoothTimeInAir;                                     // 0x0074(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotationSmoothTime;                                       // 0x0078(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FadeCharacterDistance;                                    // 0x007C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              YawOffset;                                                // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              YawOffsetProjectDist;                                     // 0x0084(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              YawOffsetSmoothTime;                                      // 0x0088(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               LockNoTargetHeading;                                      // 0x008C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3B];                                      // 0x008D(0x003B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FocusCameraState");
		return ptr;
	}

};


// Class GunfireRuntime.FocusGroup
// 0x0008 (0x0148 - 0x0140)
class UFocusGroup : public UCanvasPanel
{
public:
	bool                                               AllowInactiveFocus;                                       // 0x0140(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0141(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FocusGroup");
		return ptr;
	}


	void ShowInactiveFocus(bool* Show);
	void Focus();
};


// Class GunfireRuntime.FocusManInputHandler
// 0x0018 (0x0040 - 0x0028)
class UFocusManInputHandler : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FocusManInputHandler");
		return ptr;
	}

};


// Class GunfireRuntime.FocusManInputAxisHandler
// 0x0018 (0x0040 - 0x0028)
class UFocusManInputAxisHandler : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FocusManInputAxisHandler");
		return ptr;
	}

};


// Class GunfireRuntime.FocusManager
// 0x00A8 (0x01A0 - 0x00F8)
class UFocusManager : public UActorComponent
{
public:
	struct FFocusInfo                                  CurrentFocus;                                             // 0x00F8(0x0010) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FFocusInfo                                  LastLostFocus;                                            // 0x0108(0x0010) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFocusInfo>                          DirtyFocus;                                               // 0x0118(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTabFocusInfo                               TabFocus;                                                 // 0x0128(0x0010) (Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FFocusInfo>                          FocusStack;                                               // 0x0138(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTabFocusInfo>                       TabFocusStack;                                            // 0x0148(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UUserWidget*>                         CurrentWidgetStack;                                       // 0x0158(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UInputComponent*                             InputComponent;                                           // 0x0168(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFocusManInputHandler*>               InputActionBindings;                                      // 0x0170(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UFocusManInputAxisHandler*>           InputAxisBindings;                                        // 0x0180(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class APlayerController*                           PlayerController;                                         // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               GivenSoleFocus;                                           // 0x0198(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0199(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FocusManager");
		return ptr;
	}


	bool STATIC_RestorePanelFocus(class APlayerController** Controller, class UWidget** Widget);
	void RestoreFocus();
	void ReleaseFocus();
	class UWidget* STATIC_GetWidgetByName(class UWidget** Widget, struct FName* WidgetName);
	class UWidget* STATIC_GetRoot(class UWidget** Widget);
	class UWidget* STATIC_GetParent(class UWidget** Widget);
	class UFocusManager* STATIC_GetInstance(class APlayerController** Controller);
	bool STATIC_FocusFirstAvailable(class APlayerController** Controller, class UWidget** Widget, int* UserIndex, class UWidget** OriginalWidget);
	class UWidget* STATIC_FindWidgetByName(class UWidget** Widget, struct FName* WidgetName);
	void EnableInput(class APlayerController** InPlayerController);
	void DisableInput(class APlayerController** InPlayerController);
	bool STATIC_AttemptSetButtonFocus(class APlayerController** Controller, class UFocusButtonWidget** Widget);
};


// Class GunfireRuntime.FocusVisual
// 0x0478 (0x05A8 - 0x0130)
class UFocusVisual : public UContentWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0130(0x0008) MISSED OFFSET
	struct FAdvButtonStyle                             Style;                                                    // 0x0138(0x0438) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FLinearColor                                ColorAndOpacity;                                          // 0x0570(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                BackgroundColor;                                          // 0x0580(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0590(0x0010) MISSED OFFSET
	class UContentWidget*                              CachedFocusButton;                                        // 0x05A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FocusVisual");
		return ptr;
	}


	void SetTexture(class UTexture2D** Texture);
	void SetColorAndOpacity(struct FLinearColor* InColorAndOpacity);
	void SetBackgroundColor(struct FLinearColor* InBackgroundColor);
};


// Class GunfireRuntime.FocusWidget
// 0x0070 (0x02B0 - 0x0240)
class UFocusWidget : public UUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnFocus;                                                  // 0x0240(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnClicked;                                                // 0x0250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnClickedContext;                                         // 0x0260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPressed;                                                // 0x0270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnReleased;                                               // 0x0280(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnKey;                                                    // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnNavigate;                                               // 0x02A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FocusWidget");
		return ptr;
	}


	void SetInactiveFocus();
	void Remove();
	void Focus();
	void ClearFocus();
};


// Class GunfireRuntime.FxActorDestroyerComponent
// 0x0040 (0x0138 - 0x00F8)
class UFxActorDestroyerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnSoftDestroyed;                                          // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FName>                               IgnoredComponents;                                        // 0x0108(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              ForceDestroyTimer;                                        // 0x0118(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x011C(0x0004) MISSED OFFSET
	TArray<class UActorComponent*>                     ActiveComponents;                                         // 0x0120(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0130(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FxActorDestroyerComponent");
		return ptr;
	}


	void SoftDestroyOwner();
	void STATIC_SoftDestroyActor(class AActor** Actor, TArray<struct FName>* InIgnoredComponents, float* InForceDestroyTimer);
	bool IsSoftDestroying();
};


// Class GunfireRuntime.GameRules
// 0x0000 (0x0330 - 0x0330)
class AGameRules : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.GameRules");
		return ptr;
	}


	float GetWeaponDamage(class AActor** ItemOwner, class AWeaponBase** Item, bool* ApplyModifiers);
	struct FDamageInfo GetDamageInfo(class AActor** ItemOwner, class AWeaponBase** Item);
};


// Class GunfireRuntime.UserSetting
// 0x0090 (0x00B8 - 0x0028)
class UUserSetting : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FName                                       NameID;                                                   // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       Label;                                                    // 0x0038(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                              // 0x0050(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FName                                       Category;                                                 // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       Group;                                                    // 0x0070(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                      ConsoleVariable;                                          // 0x0088(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowOnConsoles;                                          // 0x0098(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0099(0x0001) MISSED OFFSET
	unsigned char                                      Platforms;                                                // 0x009A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x5];                                       // 0x009B(0x0005) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnApplied;                                                // 0x00A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UGameUserSettingsGunfire*                    Settings;                                                 // 0x00B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.UserSetting");
		return ptr;
	}


	void ResetToDefault();
	struct FText GetDisplayValue();
	void Apply();
};


// Class GunfireRuntime.GameUserSettingsList
// 0x0018 (0x0040 - 0x0028)
class UGameUserSettingsList : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	TArray<class UUserSetting*>                        Settings;                                                 // 0x0030(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.GameUserSettingsList");
		return ptr;
	}

};


// Class GunfireRuntime.GameUserSettingsGunfire
// 0x0018 (0x0130 - 0x0118)
class UGameUserSettingsGunfire : public UGameUserSettings
{
public:
	TArray<class UUserSetting*>                        Settings;                                                 // 0x0118(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0128(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.GameUserSettingsGunfire");
		return ptr;
	}


	void OnSetUserSettingInt(struct FName* NameID, int* Value);
	void OnSetUserSettingFloat(struct FName* NameID, int* Value);
	TArray<class UUserSetting*> GetSettingsForCategory(struct FName* Category);
	void GetInputConflicts(class URebindableInputSetting** Setting, struct FGenericInput* Key, TArray<struct FName>* Categories, TArray<class URebindableInputSetting*>* Conflicts);
	class UUserSetting* FindUserSetting(struct FName* NameID);
	bool AllowsInputRebindings();
};


// Class GunfireRuntime.BinaryUserSetting
// 0x0038 (0x00F0 - 0x00B8)
class UBinaryUserSetting : public UUserSetting
{
public:
	struct FText                                       OffLabel;                                                 // 0x00B8(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       OnLabel;                                                  // 0x00D0(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               DefaultValue;                                             // 0x00E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInvertConsoleVariable;                                   // 0x00E9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00EA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.BinaryUserSetting");
		return ptr;
	}


	void SetValue(bool* Value);
	bool GetValue();
};


// Class GunfireRuntime.IntUserSetting
// 0x0008 (0x00C0 - 0x00B8)
class UIntUserSetting : public UUserSetting
{
public:
	int                                                DefaultValue;                                             // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.IntUserSetting");
		return ptr;
	}


	void SetValue(int* Value);
	int GetValue();
};


// Class GunfireRuntime.FloatUserSetting
// 0x0020 (0x00D8 - 0x00B8)
class UFloatUserSetting : public UUserSetting
{
public:
	float                                              DefaultValue;                                             // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinValue;                                                 // 0x00BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxValue;                                                 // 0x00C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Increment;                                                // 0x00C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ShowAsPercent;                                            // 0x00C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00C9(0x0003) MISSED OFFSET
	int                                                NumDecimals;                                              // 0x00CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x00D0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.FloatUserSetting");
		return ptr;
	}


	void SetValue(float* Value);
	float IncrementValue();
	float GetValue();
	float GetNormalizedValue();
	float GetMinValue();
	float GetMaxValue();
	float GetIncrement();
	float DecrementValue();
};


// Class GunfireRuntime.EnumUserSetting
// 0x0028 (0x00E8 - 0x00C0)
class UEnumUserSetting : public UIntUserSetting
{
public:
	TArray<struct FEnumUserSettingEntry>               Entries;                                                  // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bWraps;                                                   // 0x00D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET
	TArray<int>                                        DisabledValues;                                           // 0x00D8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EnumUserSetting");
		return ptr;
	}


	void SetValueEnum(struct FEnumUserSettingEntry* Entry);
	bool GetValueEnum(struct FEnumUserSettingEntry* OutEntry);
	int GetNumEntries();
	bool GetNextEntry(int* CurrentValue, bool* bForwards, struct FEnumUserSettingEntry* OutNext);
	bool GetEnumEntryByValue(int* Value, struct FEnumUserSettingEntry* OutEntry);
	bool GetEnumEntryByIndex(int* Index, struct FEnumUserSettingEntry* OutEntry);
	void EnableValue(int* InValue);
	void DisableValue(int* InValue);
};


// Class GunfireRuntime.AudioUserSetting
// 0x0010 (0x00E8 - 0x00D8)
class UAudioUserSetting : public UFloatUserSetting
{
public:
	class USoundClass*                                 SoundClass;                                               // 0x00D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowBoostedVolume;                                      // 0x00E0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00E1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AudioUserSetting");
		return ptr;
	}


	void SetSoundClassMultiplier(float* InMultiplier);
	float GetSoundClassMultiplier();
};


// Class GunfireRuntime.ResolutionUserSetting
// 0x0028 (0x00E0 - 0x00B8)
class UResolutionUserSetting : public UUserSetting
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B8(0x0010) MISSED OFFSET
	TArray<struct FIntPoint>                           AdditionalResolutions;                                    // 0x00C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bWraps;                                                   // 0x00D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00D9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ResolutionUserSetting");
		return ptr;
	}


	void SetValue(struct FIntPoint* NewResolution);
	void ResetList(bool* bMatchNativeAspectRatio);
	struct FIntPoint GetValue();
	struct FIntPoint GetNextResolution(struct FIntPoint* Current, bool* bForwards);
};


// Class GunfireRuntime.RebindableInputSetting
// 0x0068 (0x0120 - 0x00B8)
class URebindableInputSetting : public UUserSetting
{
public:
	struct FName                                       InputName;                                                // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsInputAction;                                           // 0x00C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00C1(0x0003) MISSED OFFSET
	float                                              AxisScale;                                                // 0x00C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGenericInput                               DefaultInput;                                             // 0x00C8(0x0020) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      ConflictGroup;                                            // 0x00E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00E9(0x0007) MISSED OFFSET
	TArray<struct FName>                               IgnoreInputs;                                             // 0x00F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0100(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.RebindableInputSetting");
		return ptr;
	}


	void SetValue(struct FGenericInput* NewKey);
	bool HasConflictGroup(EInputConflictGroup* InputGroup);
	struct FGenericInput GetValue();
};


// Class GunfireRuntime.InputAxisPropertiesSetting
// 0x0010 (0x00E8 - 0x00D8)
class UInputAxisPropertiesSetting : public UFloatUserSetting
{
public:
	TArray<struct FKey>                                AxisNames;                                                // 0x00D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.InputAxisPropertiesSetting");
		return ptr;
	}

};


// Class GunfireRuntime.ColorblindUserSetting
// 0x0018 (0x00D8 - 0x00C0)
class UColorblindUserSetting : public UIntUserSetting
{
public:
	TArray<struct FEnumCVDUserSettingEntry>            Entries;                                                  // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bWraps;                                                   // 0x00D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ColorblindUserSetting");
		return ptr;
	}


	bool GetValueEnumCVD(struct FEnumCVDUserSettingEntry* OutEntry);
	int GetNumEntries();
	int GetNextEntry(int* CurrentValue, bool* bForwards, struct FEnumCVDUserSettingEntry* OutNext);
	bool GetEnumCVDEntryByIndex(int* Index, struct FEnumCVDUserSettingEntry* OutEntry);
};


// Class GunfireRuntime.ToggleUserSetting
// 0x0040 (0x00F8 - 0x00B8)
class UToggleUserSetting : public UUserSetting
{
public:
	struct FText                                       OffLabel;                                                 // 0x00B8(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                OffValue;                                                 // 0x00D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00D4(0x0004) MISSED OFFSET
	struct FText                                       OnLabel;                                                  // 0x00D8(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                OnValue;                                                  // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DefaultValue;                                             // 0x00F4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00F5(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ToggleUserSetting");
		return ptr;
	}


	void SetValue(bool* Value);
	bool GetValue();
};


// Class GunfireRuntime.VoiceInputDeviceSetting
// 0x0000 (0x00E8 - 0x00E8)
class UVoiceInputDeviceSetting : public UEnumUserSetting
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VoiceInputDeviceSetting");
		return ptr;
	}

};


// Class GunfireRuntime.GameUtil
// 0x0000 (0x0028 - 0x0028)
class UGameUtil : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.GameUtil");
		return ptr;
	}


	struct FRotator STATIC_UE4ToAutodeskRotation(struct FRotator* Rotation);
	void STATIC_TransferPoseToSkeletalMesh(class USkeletalMeshComponent** Source, class USkeletalMeshComponent** Target);
	void STATIC_TransferPoseToPoseableMesh(class USkeletalMeshComponent** Source, class UPoseableMeshComponent** Target);
	bool STATIC_TestLineOfSightFromLocation(struct FVector* Origin, class AActor** to, TArray<class AActor*>* IgnoredActors);
	bool STATIC_TestLineOfSight(class AActor** from, class AActor** to, TArray<class AActor*>* IgnoredActors);
	bool STATIC_SweepCharacter(class UObject** WorldContextObject, class ACharacter** Character, struct FVector* Start, struct FVector* End, TArray<class AActor*>* IgnoredActors, TArray<TEnumAsByte<ECollisionChannel>>* IgnoreChannels, TArray<TEnumAsByte<ECollisionChannel>>* OverlapChannels, TArray<TEnumAsByte<ECollisionChannel>>* BlockChannels, float* RadiusOverride, float* HalfHeightOverride, struct FVector* SweepOffset, bool* bMoveCharacter, struct FHitResult* Hit);
	bool STATIC_StuckCheckForClass(class UObject** WorldContextObject, struct FVector* FeetLocation, class UClass** CharacterClass, TArray<class AActor*>* IgnoredActors, float* RadiusOverride);
	bool STATIC_StuckCheck(class UObject** WorldContextObject, struct FVector* FeetLocation, class ACharacter** Character, TArray<class AActor*>* IgnoredActors, float* RadiusOverride);
	void STATIC_StreamInTextures(struct FVector* Position);
	void STATIC_StopForceFeedback(class UObject** WorldContextObject, class UForceFeedbackEffect** ForceFeedbackEffect, struct FName* Tag, int* PlayerIndex);
	void STATIC_StopCameraShake(class UObject** WorldContextObject, class UClass** CameraShake, bool* bSkipBlendOut, int* PlayerIndex);
	class APawn* STATIC_SpawnAIEx(class UObject** WorldContextObject, class UClass** PawnClass, class UBehaviorTree** BehaviorTree, struct FVector* Location, struct FRotator* Rotation, bool* bNoCollisionFail, ELevelContextFallback* LevelContextFallback, class AActor** LevelContext);
	class UAdvancedDecalComponent* STATIC_SpawnAdvancedDecalAttached(class UMaterialInterface** DecalMaterial, struct FVector* DecalSize, class USceneComponent** AttachToComponent, struct FName* AttachPointName, struct FVector* Location, struct FRotator* Rotation, TEnumAsByte<EAttachLocation>* LocationType, float* LifeSpan, class UCurveFloat** EmissiveCurve, class UCurveFloat** OpacityCurve, bool* bSetLifespan);
	class UAdvancedDecalComponent* STATIC_SpawnAdvancedDecalAtLocation(class UObject** WorldContextObject, class UMaterialInterface** DecalMaterial, struct FVector* DecalSize, struct FVector* Location, struct FRotator* Rotation, float* LifeSpan, class UCurveFloat** EmissiveCurve, class UCurveFloat** OpacityCurve, bool* bSetLifespan);
	class AActor* STATIC_SpawnActorEx(class UObject** WorldContextObject, class UClass** ActorClass, struct FTransform* SpawnTransform, ESpawnActorCollisionHandlingMethod* CollisionHandling, class AActor** Owner, class APawn** Instigator, bool* Transient, ELevelContextFallback* LevelContextFallback, class AActor** LevelContext, class ULevel** OverrideLevel);
	void STATIC_SortObjectArray(struct FScriptDelegate* Predicate, TArray<class UObject*>* Objects);
	void STATIC_SortIntArray(TArray<int>* IntArray);
	void STATIC_SortFloatArray(TArray<float>* FloatArray);
	void STATIC_SortActorArrayByDistance(struct FVector* Location, TArray<class AActor*>* ActorArray);
	bool STATIC_SnapToNavMesh(class UObject** WorldContextObject, struct FVector* Position, float* Radius, struct FVector* SnappedPosition);
	bool STATIC_SnapToGround(class UObject** WorldContextObject, struct FVector* Position, float* Offset, float* CastDistance, bool* TraceComplex, struct FVector* SnappedPosition);
	bool STATIC_SnapCharacterToGround(class ACharacter** Character, struct FVector* Position, TArray<class AActor*>* IgnoredActors, float* Offset, float* CastDistance);
	void STATIC_ShowRandomMesh(class AActor** Actor, struct FName* Slot, bool* AllowNone);
	void STATIC_ShowComponents(TArray<class USceneComponent*>* Components);
	bool STATIC_ShouldAsyncLoad();
	void STATIC_SetVisible(class AActor** Actor, bool* Visible);
	void STATIC_SetVisibilityFlag(class AActor** Actor, bool* Active);
	void STATIC_SetTickableWhenPaused(class AActor** Actor, bool* TickWhenPaused);
	void STATIC_SetRenderCustomDepthForActor(class AActor** Actor, bool* bEnabled, unsigned char* Index, bool* bPropagateToInventory);
	void STATIC_SetMaterialVectorParam(class AActor** Actor, class UMaterialInterface** Material, struct FName* ParamName, struct FLinearColor* Value);
	void STATIC_SetMaterialScalarParam(class AActor** Actor, class UMaterialInterface** Material, struct FName* ParamName, float* Value);
	void STATIC_SetComponentMaterialVectorParamForAll(class UPrimitiveComponent** Component, struct FName* ParamName, struct FLinearColor* Value);
	void STATIC_SetComponentMaterialVectorParam(class UPrimitiveComponent** Component, class UMaterialInterface** Material, struct FName* ParamName, struct FLinearColor* Value);
	void STATIC_SetComponentMaterialScalarParamForAll(class UPrimitiveComponent** Component, struct FName* ParamName, float* Value);
	void STATIC_SetComponentMaterialScalarParam(class UPrimitiveComponent** Component, class UMaterialInterface** Material, struct FName* ParamName, float* Value);
	void STATIC_SetAllMaterialsTo(class AActor** Actor, class UMaterialInterface** Material, bool* RecurseChildren, TArray<struct FCachedMaterialState>* CachedMaterialStates);
	void STATIC_SetActorsVisible(TArray<class AActor*>* Actors, bool* Visible);
	void STATIC_SetActive(class AActor** Actor, bool* Active);
	void STATIC_ResetCachedMaterials(TArray<struct FCachedMaterialState>* MaterialStates);
	void STATIC_ResetActorDynamics(class AActor** Actor);
	void STATIC_RemoveTag(class AActor** Actor, struct FName* Tag);
	void STATIC_RemoveLevelInstanceByName(class UObject** WorldContextObject, class FString* UniqueInstanceName);
	void STATIC_RemoveLevelInstance(class UObject** WorldContextObject, class ULevelStreaming** LevelInstance);
	void STATIC_PlayForceFeedback(class UObject** WorldContextObject, class UForceFeedbackEffect** ForceFeedbackEffect, bool* bLooping, bool* bIgnoreTimeDilation, struct FName* Tag, int* PlayerIndex);
	void STATIC_PlayCameraShake(class UObject** WorldContextObject, class UClass** CameraShake, float* Scale, TEnumAsByte<ECameraAnimPlaySpace>* PlaySpace, struct FRotator* UserPlaySpaceRot, int* PlayerIndex);
	class UObject* STATIC_LoadSoftReference(TSoftObjectPtr<class UObject>* SoftObjRef);
	class UClass* STATIC_LoadSoftClassReference(TSoftObjectPtr<class UClass>* SoftClsRef);
	class UObject* STATIC_LoadObjectFromPath(struct FName* Path);
	void STATIC_LoadFileToString(class FString* File, class FString* Contents, bool* bSuccessful);
	bool STATIC_LineTraceByChannelWithContext(class UObject** WorldContextObject, struct FVector* Start, struct FVector* End, TEnumAsByte<ECollisionChannel>* TraceChannel, bool* TraceComplex, struct FHitResult* Hit);
	void STATIC_LatentDestroyActor(class AActor** Actor);
	bool STATIC_IsVisible(class AActor** Actor);
	bool STATIC_IsUsingTouchController();
	bool STATIC_IsUsingKeyboardAndMouse();
	bool STATIC_IsUsingGamepad();
	bool STATIC_IsSwimmingUnderwater(class AActor** Actor);
	bool STATIC_IsSwimmingOnSurface(class AActor** Actor);
	bool STATIC_IsSwimming(class AActor** Actor);
	bool STATIC_IsStereoEnabled();
	bool STATIC_IsSoftDestroyed(class AActor** Actor);
	bool STATIC_IsSingleplayerGame(class UObject** WorldContextObject);
	bool STATIC_IsShippingBuild();
	bool STATIC_IsPlayingCinematic(class UObject** WorldContextObject);
	bool STATIC_IsLocallyControlled(class AActor** Actor);
	bool STATIC_IsInWater(class ACharacter** Character);
	bool STATIC_IsInEditor();
	bool STATIC_IsHMDWorn();
	bool STATIC_IsHDREnabled();
	bool STATIC_IsChildOfSoftClasses(class AActor** Actor, TArray<TSoftObjectPtr<class UClass>>* Classes);
	void STATIC_InvokeEvent(class UObject** Object, struct FName* EventName);
	TArray<class USceneComponent*> STATIC_HideVisibleComponents(class AActor** Actor, class UClass** ComponentClass, bool* RecurseChildren);
	bool STATIC_HasAnyRootMotion(class ACharacter** Character);
	bool STATIC_HasAnyRenderedSlaveMeshes(class USkinnedMeshComponent** Mesh);
	bool STATIC_GetWaterSubmergeDepth(class AActor** Actor, float* OutSubmergeDepth);
	struct FColor STATIC_GetUniqueColor(int* ColorIndex);
	class FString STATIC_GetScriptStack();
	bool STATIC_GetPropertyValueAsFloat(class UObject** Object, struct FName* PropertyName, float* Value);
	struct FName STATIC_GetPrefix(struct FName* Name);
	TArray<class APlayerState*> STATIC_GetPlayerStates(class UObject** WorldContextObject);
	TArray<class APlayerController*> STATIC_GetPlayerControllers(class UObject** WorldContextObject);
	class APlayerController* STATIC_GetPlayerControllerForActor(class AActor** Actor);
	EPlatform STATIC_GetPlatformSubType();
	EPlatform STATIC_GetPlatform();
	class ACharacter* STATIC_GetOwningCharacter(class AActor** Actor);
	class UObject* STATIC_GetOwner(class UObject** Object);
	bool STATIC_GetObjectPath(class UObject** Object, class FString* Path);
	int STATIC_GetNumConnectedPlayers(class UObject** WorldContextObject);
	bool STATIC_GetNodeTransform(class AActor** Actor, struct FName* NodeName, TEnumAsByte<ERelativeTransformSpace>* TransformSpace, struct FTransform* Transform);
	ELocalizationLanguage STATIC_GetLocalizationLanguage();
	class ALevelScriptActor* STATIC_GetLevelScriptActor(class ULevel** Level);
	class FString STATIC_GetLevelPathName(class ULevel** Level);
	class ULevelStreaming* STATIC_GetLevelInstance(class UObject** WorldContextObject, class FString* UniqueInstanceName);
	class ULevel* STATIC_GetLevelForActor(class AActor** Actor);
	class UGameViewportClientGunfire* STATIC_GetGameViewport(class UObject** WorldContextObject);
	int64_t STATIC_GetFrameCounter();
	int STATIC_GetCurrentPlatformVRam();
	class UActorComponent* STATIC_GetComponentByTag(class AActor** Actor, struct FName* Tag);
	class UActorComponent* STATIC_GetComponentByName(class AActor** Actor, struct FName* NodeName);
	bool STATIC_GetClosestUnblockedPointBetweenActors(class AActor** Target, class AActor** Source, TEnumAsByte<ECollisionChannel>* TraceChannel, TEnumAsByte<ECollisionChannel>* CollisionChannel, struct FVector* OutClosestPoint);
	float STATIC_GetClosestPointInActor(class AActor** Actor, struct FVector* Point, TEnumAsByte<ECollisionChannel>* TraceChannel, struct FVector* OutClosestPoint);
	class FString STATIC_GetCleanLevelStreamingName(class UWorld** World, class ULevelStreaming** Level, bool* AppendBaseName);
	class FString STATIC_GetCleanLevelPackageName(class UWorld** World, class FString* LevelPackagePath, bool* AppendBaseName);
	EBuildType STATIC_GetBuildType();
	int STATIC_GetBuildNumber();
	bool STATIC_GetBoneTransform(class USkeletalMeshComponent** SkeletalMesh, struct FName* BoneName, TEnumAsByte<ERelativeTransformSpace>* TransformSpace, struct FTransform* Transform);
	bool STATIC_GetBoneRefTransform(class USkeletalMeshComponent** SkeletalMesh, struct FName* BoneName, struct FTransform* Transform);
	class AActor* STATIC_GetBestWaterBounds(class AActor** Actor, bool* bConstrainToFluidFilled);
	bool STATIC_GetAttachSocketName(class USceneComponent** Mesh, struct FName* OutSocketName);
	void STATIC_GetActorsWithTagEx(class UObject** WorldContextObject, struct FName* Tag, TArray<class AActor*>* OutResults);
	void STATIC_GetActorsInRangeEx(class UObject** WorldContextObject, struct FVector* Position, float* MinRange, float* MaxRange, class UClass** FilterClass, struct FActorQueryFilter* Filter, TArray<struct FActorQueryResult>* OutResults);
	void STATIC_GetActorsInRange(class UObject** WorldContextObject, struct FVector* Position, float* MinRange, float* MaxRange, class UClass** FilterClass, struct FActorQueryFilter* Filter, TArray<class AActor*>* OutResults);
	void STATIC_GetActorBoundsSafe(class AActor** Actor, bool* bOnlyCollidingComponents, struct FVector* Origin, struct FVector* Extents);
	void STATIC_ForceGarbageCollection();
	class AActor* STATIC_FinishSpawningDeferredActor(class AActor** Actor, struct FTransform* SpawnTransform);
	bool STATIC_FindTeleportPositionNear(class AActor** Actor, float* Distance, bool* InFOVOnly, struct FVector* OutPosition);
	class APlayerStart* STATIC_FindPlayerStart(class UObject** WorldContextObject, struct FName* PlayerStartTag);
	void STATIC_EnableStereo(bool* bEnable);
	void STATIC_DrawDebugArrow(class UObject** WorldContextObject, struct FVector* LineStart, struct FVector* LineEnd, struct FVector* ArrowAxis, struct FRotator* BasisRotation, struct FLinearColor* Color, float* Thickness, float* Duration, float* ArrowSize);
	bool STATIC_DoesPathIntersectWithBounds(class ACharacterGunfire** Character, struct FVector* Origin, struct FVector* Extents);
	bool STATIC_DoesGameHaveFocus(class UObject** WorldContextObject);
	void STATIC_DebugDrawShapeWithOrientation(class UObject** WorldContextObject, class UShapeComponent** Shape, struct FColor* Color, struct FVector* Location, struct FRotator* Rotation, bool* bPersistentLines, float* LifeTime, unsigned char* DepthPriority, float* Thickness);
	void STATIC_DebugDrawShape(class UObject** WorldContextObject, class UShapeComponent** Shape, struct FColor* Color, bool* bPersistentLines, float* LifeTime, unsigned char* DepthPriority, float* Thickness);
	void STATIC_DebugDrawCollision(class UObject** WorldContextObject, class UPrimitiveComponent** Primitive, struct FColor* Color, bool* bPersistentLines, float* LifeTime, unsigned char* DepthPriority, float* Thickness);
	void STATIC_CustomError(class AActor** ErrorContext, class FString* Message);
	bool STATIC_CheckInputAction(class APlayerController** PlayerController, struct FName* ActionName);
	void STATIC_CenterViewportCursor(class APlayerController** PlayerController);
	struct FVector STATIC_CalculateTraversableTeleportLocation(class UObject** WorldContextObject, class ACharacter** Character, struct FVector* AimStart, struct FVector* AimEnd, float* AimObstacleTolerance, float* GroundDistance, float* CliffTolerance, bool* bConstrainToLedges, float* ProbeDistance, float* StuckCheckHeightOffset, float* FlatSurfaceDistance, bool* bDebugDraw);
	void STATIC_ApplyLinearImpulseToActorAtLocation(class AActor** Actor, class UClass** DType, struct FVector* Direction, struct FVector* Location);
	void STATIC_ApplyLinearImpulseToActor(class AActor** Actor, class UClass** DType, struct FVector* Direction);
	void STATIC_AddTag(class AActor** Actor, struct FName* Tag);
	class ULevelStreaming* STATIC_AddLevelInstance(class UObject** WorldContextObject, class FString* UniqueInstanceName, class FString* PackageNameToLoad, struct FTransform* LevelTransform, bool* BlockOnLoad, bool* ShouldBeLoaded, bool* ShouldBeVisible, class UClass** LevelStreamingOverride);
	class UActorComponent* STATIC_AddComponent(class AActor** Actor, class UClass** ComponentClass, struct FName* Name, struct FName* AttachSocketName, class USceneComponent** AttachParent, EAttachmentRule* AttachRule, bool* bWeldSimulatedBodies, struct FVector* RelativeLocation, struct FRotator* RelativeRotation, bool* bSkipAttachment);
	void STATIC_ActivateSceneComponents(class AActor** Actor, struct FName* Slot, struct FName* Tag, bool* ActivateChildren, bool* UseVisibility);
	void STATIC_ActivateSceneComponent(class USceneComponent** SceneComponent, bool* Active, bool* ActivateChildren, bool* UseVisibility);
};


// Class GunfireRuntime.GameViewportClientGunfire
// 0x0018 (0x0300 - 0x02E8)
class UGameViewportClientGunfire : public UGameViewportClient
{
public:
	struct FScriptMulticastDelegate                    OnGameViewportFocusEvent;                                 // 0x02E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x02F8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.GameViewportClientGunfire");
		return ptr;
	}

};


// Class GunfireRuntime.GlobalObjectPool
// 0x0060 (0x0158 - 0x00F8)
class UGlobalObjectPool : public UActorComponent
{
public:
	TArray<struct FSimplePoolPrecache>                 StartingPools;                                            // 0x00F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<struct FSoftObjectPath, class USingleObjectPool*> Pools;                                                    // 0x0108(0x0050) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.GlobalObjectPool");
		return ptr;
	}


	class UGlobalObjectPool* STATIC_GetInstance(class UWorld** World);
	void Empty();
};


// Class GunfireRuntime.GroupCondition
// 0x0018 (0x0048 - 0x0030)
class UGroupCondition : public UCondition
{
public:
	struct FConditions                                 Conditions;                                               // 0x0030(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.GroupCondition");
		return ptr;
	}

};


// Class GunfireRuntime.GunfireSettings
// 0x0188 (0x01B0 - 0x0028)
class UGunfireSettings : public UObject
{
public:
	TEnumAsByte<ECollisionChannel>                     GroundChannel;                                            // 0x0028(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<ECollisionChannel>                     WaterChannel;                                             // 0x0029(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseComplexCollisionForWaterSurfaceTraces;                // 0x002A(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x5];                                       // 0x002B(0x0005) MISSED OFFSET
	TArray<TEnumAsByte<ECollisionChannel>>             WaterObjectTypes;                                         // 0x0030(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig, NativeAccessSpecifierPublic)
	TEnumAsByte<ECollisionChannel>                     ProjectileChannel;                                        // 0x0040(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<ECollisionChannel>                     AOEChannel;                                               // 0x0041(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<ECollisionChannel>                     PawnChannel;                                              // 0x0042(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<ECollisionChannel>                     SpecialCollisionChannel;                                  // 0x0043(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<ECollisionChannel>                     CameraChannel;                                            // 0x0044(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<ECollisionChannel>                     SwimmingCameraChannel;                                    // 0x0045(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<ECollisionChannel>                     WallChannel;                                              // 0x0046(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<EPhysicalSurface>                      WaterSurfaceType;                                         // 0x0047(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                             UserSettings;                                             // 0x0048(0x0018) (Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UClass>                       VisiblitySkipComponent;                                   // 0x0060(0x0028) (Edit, Config, GlobalConfig, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                             VisualLoggerDefaultMap;                                   // 0x0088(0x0018) (Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHitPauseMode                                      HitPauseMode;                                             // 0x00A0(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAutoMarkDamageAsResisted;                                // 0x00A1(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x2];                                       // 0x00A2(0x0002) MISSED OFFSET
	float                                              ResistedDamageThreshold;                                  // 0x00A4(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TargetWeaponPhantomFrameTime;                             // 0x00A8(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WeaponPhantomIgnoreDelay;                                 // 0x00AC(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayForceFeedbackOnEvironmentHits;                       // 0x00B0(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPlayCameraShakeOnEvironmentHits;                         // 0x00B1(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x2];                                       // 0x00B2(0x0002) MISSED OFFSET
	int                                                RedloadInteractiveMode;                                   // 0x00B4(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               EnableInViewTargetChecks;                                 // 0x00B8(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00B9(0x0003) MISSED OFFSET
	float                                              MinimumTimeDilaton;                                       // 0x00BC(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeDilationStepSize;                                     // 0x00C0(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KeyboardAndMouseAimAdjustScale;                           // 0x00C4(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KeyboardAndMouseSnapToTargetScale;                        // 0x00C8(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GlobalTargetableRadiusScale;                              // 0x00CC(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GlobalSnapRadiusScale;                                    // 0x00D0(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FalloffDamagePenalty;                                     // 0x00D4(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GlobalSwayScale;                                          // 0x00D8(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                      NoTargetColor;                                            // 0x00DC(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                      HostileTargetColor;                                       // 0x00E0(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                      NeutralTargetColor;                                       // 0x00E4(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                      FriendlyTargetColor;                                      // 0x00E8(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                      ProjectileNoTargetColor;                                  // 0x00EC(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                      ProjectileHostileTargetColor;                             // 0x00F0(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                      ProjectileNeutralTargetColor;                             // 0x00F4(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                      ProjectileFriendlyTargetColor;                            // 0x00F8(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	TArray<TSoftObjectPtr<class UClass>>               BreakableClasses;                                         // 0x0100(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                               bUsesUniqueAimSensitivity;                                // 0x0110(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsesUniqueScopeSensitivity;                              // 0x0111(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0112(0x0002) MISSED OFFSET
	float                                              AreaFactor;                                               // 0x0114(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxNodesToOccupy;                                         // 0x0118(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PenaltyBase;                                              // 0x011C(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAmbientPriorityPolicy                             AmbientPriorityPolicy;                                    // 0x0120(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0121(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UBlueprint>                   MinimapThumbnailActor;                                    // 0x0128(0x0028) (Edit, Config, GlobalConfig, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimapCaptureOffset;                                     // 0x0150(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SoftCollisionAbsoluteWeightDifference;                    // 0x0154(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoNotifyRateOptimzations;                                // 0x0158(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0159(0x0003) MISSED OFFSET
	int                                                GlobalNotifyMaximumRate;                                  // 0x015C(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bEnableMeshActivationOptimizations;                       // 0x0160(0x0001) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0161(0x0003) MISSED OFFSET
	float                                              MeshActivationLingerTime;                                 // 0x0164(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshActivationBoneOnlyLingerTime;                         // 0x0168(0x0004) (Edit, ZeroConstructor, Config, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData09[0x4];                                       // 0x016C(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       PossessedObjectAction;                                    // 0x0170(0x0028) (Edit, Config, GlobalConfig, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                             Achievements;                                             // 0x0198(0x0018) (Edit, ZeroConstructor, Config, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.GunfireSettings");
		return ptr;
	}

};


// Class GunfireRuntime.HasInteractiveCondition
// 0x0000 (0x0030 - 0x0030)
class UHasInteractiveCondition : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.HasInteractiveCondition");
		return ptr;
	}

};


// Class GunfireRuntime.HasItemByTypeCondition
// 0x0010 (0x0040 - 0x0030)
class UHasItemByTypeCondition : public UCondition
{
public:
	class UClass*                                      Type;                                                     // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      Quantity;                                                 // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EYesNo                                             Equipped;                                                 // 0x0039(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EYesNo                                             Active;                                                   // 0x003A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EYesNo                                             InHand;                                                   // 0x003B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.HasItemByTypeCondition");
		return ptr;
	}

};


// Class GunfireRuntime.HasItemCondition
// 0x0010 (0x0040 - 0x0030)
class UHasItemCondition : public UCondition
{
public:
	class UClass*                                      Item;                                                     // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               IncludedSubClassess;                                      // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               IncludeMyChildClassess;                                   // 0x0039(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      Quantity;                                                 // 0x003A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EYesNo                                             Equipped;                                                 // 0x003B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EYesNo                                             Active;                                                   // 0x003C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EYesNo                                             InHand;                                                   // 0x003D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x2];                                       // 0x003E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.HasItemCondition");
		return ptr;
	}

};


// Class GunfireRuntime.HasPendingInterruptCondition
// 0x0000 (0x0030 - 0x0030)
class UHasPendingInterruptCondition : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.HasPendingInterruptCondition");
		return ptr;
	}

};


// Class GunfireRuntime.HasTargetCondition
// 0x0000 (0x0030 - 0x0030)
class UHasTargetCondition : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.HasTargetCondition");
		return ptr;
	}

};


// Class GunfireRuntime.HasTraitCondition
// 0x0010 (0x0040 - 0x0030)
class UHasTraitCondition : public UCondition
{
public:
	class UClass*                                      Trait;                                                    // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                RequiredLevel;                                            // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.HasTraitCondition");
		return ptr;
	}

};


// Class GunfireRuntime.HealthCondition
// 0x0010 (0x0040 - 0x0030)
class UHealthCondition : public UCondition
{
public:
	ECompareOp                                         Compare;                                                  // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              Value;                                                    // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               Normalized;                                               // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.HealthCondition");
		return ptr;
	}

};


// Class GunfireRuntime.HeuristicBoundsComponent
// 0x0030 (0x0290 - 0x0260)
class UHeuristicBoundsComponent : public USceneComponent
{
public:
	float                                              InnerRadius;                                              // 0x0260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     OuterExtent;                                              // 0x0264(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InnerExtentScale;                                         // 0x0270(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BracketScale;                                             // 0x0274(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSlidingBoundsLocation;                                   // 0x0278(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0279(0x0003) MISSED OFFSET
	float                                              SlidingMaxima;                                            // 0x027C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SlidingMinima;                                            // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0284(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.HeuristicBoundsComponent");
		return ptr;
	}


	void SetOuterExtent(struct FVector* NewExtent);
	struct FTransform GetWorldTransformForPanelAtSetDistance(struct FVector* ViewLocation, struct FVector2D* PanelSize, EHeuristicBoundsPanelAlignment* Alignment, float* ProjectionDistance);
	struct FTransform GetWorldTransformForPanel(struct FVector* ViewLocation, struct FVector2D* PanelSize, EHeuristicBoundsPanelAlignment* Alignment);
	TArray<struct FVector> GetBoundsBracketOnPlane(struct FVector* ViewLocation, float* PlaneDistance);
};


// Class GunfireRuntime.HierarchicalEditInterface
// 0x0000 (0x0028 - 0x0028)
class UHierarchicalEditInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.HierarchicalEditInterface");
		return ptr;
	}

};


// Class GunfireRuntime.HitLogComponent
// 0x0C58 (0x0D50 - 0x00F8)
class UHitLogComponent : public UActorComponent
{
public:
	float                                              WeakSpotDamageScalar;                                     // 0x00F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ResistSpotDamageScalar;                                   // 0x00FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FHitLocationInfo>                    HitLocations;                                             // 0x0100(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x968];                                     // 0x0110(0x0968) MISSED OFFSET
	uint32_t                                           RepDestroyedFlags;                                        // 0x0A78(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      LastHitLocation;                                          // 0x0A7C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0A7D(0x0003) MISSED OFFSET
	struct FDamageInfo                                 LastHitInfo;                                              // 0x0A80(0x0160) (Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FDamageInfo                                 LastDamageInfo;                                           // 0x0BE0(0x0160) (Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UAnimInstanceGunfire*                        AnimInstance;                                             // 0x0D40(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0D48(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.HitLogComponent");
		return ptr;
	}


	void ResetAllHitLocationHealth();
	void OnRep_LastHitLocation();
	void OnRep_DestroyedFlags();
	struct FDamageInfo GetLastHitInfo();
	struct FDamageInfo GetLastDamageInfo();
	float GetImpactDamageForHitLocation(struct FDateTime* Time, struct FName* HitLocation, bool* bIgnoreImpactScalar);
	float GetDamageForHitLocation(struct FDateTime* Time, struct FName* HitLocation);
	float GetDamage(struct FDateTime* Time);
	void ClearHitLog();
};


// Class GunfireRuntime.HitPauseInterface
// 0x0000 (0x0028 - 0x0028)
class UHitPauseInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.HitPauseInterface");
		return ptr;
	}

};


// Class GunfireRuntime.HitPauseUtil
// 0x0000 (0x0028 - 0x0028)
class UHitPauseUtil : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.HitPauseUtil");
		return ptr;
	}


	void STATIC_ApplyHitPause(class AActor** Actor, class UClass** DamageTypeClass, float* DurationScalar);
	bool STATIC_AllowsHitPause(class AActor** Actor, struct FDamageInfo* DamageInfo, bool* bCheckOwner);
};


// Class GunfireRuntime.HitReactionState
// 0x00B0 (0x01B0 - 0x0100)
class UHitReactionState : public UAnimActorState
{
public:
	EHitReactionType                                   Type;                                                     // 0x0100(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHitResult                                         HitResult;                                                // 0x0101(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0102(0x0002) MISSED OFFSET
	struct FName                                       Group;                                                    // 0x0104(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       HitLocation;                                              // 0x010C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0114(0x0004) MISSED OFFSET
	TArray<struct FName>                               ValidStates;                                              // 0x0118(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FName>                               InvalidStates;                                            // 0x0128(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FActorStateID>                       ValidStateIDs;                                            // 0x0138(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FActorStateID>                       InvalidStateIDs;                                          // 0x0148(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              ReferenceAngle;                                           // 0x0158(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Arc;                                                      // 0x015C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IgnoreNoImpact;                                           // 0x0160(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               OnlyIfBlocked;                                            // 0x0161(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SetLastHitReactionTimeOnExit;                             // 0x0162(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0163(0x0001) MISSED OFFSET
	int                                                MinPower;                                                 // 0x0164(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxPower;                                                 // 0x0168(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x016C(0x0004) MISSED OFFSET
	TArray<class UClass*>                              DamageClasses;                                            // 0x0170(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                              DamageScalar;                                             // 0x0180(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageWindow;                                             // 0x0184(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinDamagePercent;                                         // 0x0188(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDamagePercent;                                         // 0x018C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DamageAccumulationScalar;                                 // 0x0190(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreImpactScalar;                                      // 0x0194(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0195(0x0003) MISSED OFFSET
	struct FActorStateID                               LinkedHitReaction;                                        // 0x0198(0x0010) (Edit, DisableEditOnInstance, DuplicateTransient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EHitReactionInsertRule                             InsertRule;                                               // 0x01A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x7];                                       // 0x01A9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.HitReactionState");
		return ptr;
	}

};


// Class GunfireRuntime.IdleTimerComponent
// 0x0028 (0x0120 - 0x00F8)
class UIdleTimerComponent : public UActorComponent
{
public:
	float                                              Timeout;                                                  // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeoutUpdateInterval;                                    // 0x00FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTimeout;                                                // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              IdleTime;                                                 // 0x0110(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       InputAction;                                              // 0x0114(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x011C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.IdleTimerComponent");
		return ptr;
	}


	void Ping();
};


// Class GunfireRuntime.ImageEntry
// 0x00A8 (0x00D0 - 0x0028)
class UImageEntry : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	EInputDevice                                       Device;                                                   // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FSlateBrush                                 ImageBrush;                                               // 0x0038(0x0088) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UUserWidget*                                 Widget;                                                   // 0x00C0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                VerticalAlignmentOffset;                                  // 0x00C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ImageEntry");
		return ptr;
	}

};


// Class GunfireRuntime.ImageID
// 0x0020 (0x0048 - 0x0028)
class UImageID : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FName                                       NameID;                                                   // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UImageEntry*>                         ImageEntries;                                             // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ImageID");
		return ptr;
	}

};


// Class GunfireRuntime.ImageSet
// 0x0028 (0x0050 - 0x0028)
class UImageSet : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	class UImageSet*                                   ParentProfile;                                            // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInputDevice                                       PrimaryDevice;                                            // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	TArray<class UImageID*>                            ImageIDs;                                                 // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ImageSet");
		return ptr;
	}

};


// Class GunfireRuntime.ImageSetSettings
// 0x0030 (0x0058 - 0x0028)
class UImageSetSettings : public UObject
{
public:
	struct FSoftObjectPath                             ImageSetName;                                             // 0x0028(0x0018) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                             AltImageSetName;                                          // 0x0040(0x0018) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ImageSetSettings");
		return ptr;
	}

};


// Class GunfireRuntime.ImpactEffect
// 0x0158 (0x0488 - 0x0330)
class AImpactEffect : public AActor
{
public:
	struct FImpactFX                                   Default;                                                  // 0x0330(0x0048) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FImpactFX                                   OverlayImpact;                                            // 0x0378(0x0048) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FImpactFX>                           ImpactFX;                                                 // 0x03C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FHitResult                                  SurfaceHit;                                               // 0x03D0(0x0088) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                               OverrideSurfaceType;                                      // 0x0458(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<EPhysicalSurface>                      SurfaceTypeOverride;                                      // 0x0459(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x045A(0x0002) MISSED OFFSET
	float                                              SoundVolume;                                              // 0x045C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SoundAttachBoneName;                                      // 0x0460(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      ParentSkeletalMesh;                                       // 0x0468(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SortPriority;                                             // 0x0470(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0474(0x0004) MISSED OFFSET
	bool                                               AutomaticallySetLifespan;                                 // 0x0478(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0479(0x0007) MISSED OFFSET
	class AActor*                                      SoundOwner;                                               // 0x0480(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ImpactEffect");
		return ptr;
	}

};


// Class GunfireRuntime.Tracer
// 0x0018 (0x0348 - 0x0330)
class ATracer : public AActor
{
public:
	float                                              Speed;                                                    // 0x0330(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxFlightTime;                                            // 0x0334(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0338(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Tracer");
		return ptr;
	}

};


// Class GunfireRuntime.InInteractiveCondition
// 0x0000 (0x0030 - 0x0030)
class UInInteractiveCondition : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.InInteractiveCondition");
		return ptr;
	}

};


// Class GunfireRuntime.InPhysicsBoundsCondition
// 0x0018 (0x0048 - 0x0030)
class UInPhysicsBoundsCondition : public UCondition
{
public:
	bool                                               bFallbackToWaterBounds;                                   // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	TArray<class UClass*>                              Types;                                                    // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.InPhysicsBoundsCondition");
		return ptr;
	}

};


// Class GunfireRuntime.InputDeviceManager
// 0x0098 (0x00C0 - 0x0028)
class UInputDeviceManager : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnDeviceChangedDelegate;                                  // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnResetIconCache;                                         // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0048(0x0050) MISSED OFFSET
	class UImageSet*                                   ImageSet;                                                 // 0x0098(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x20];                                      // 0x00A0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.InputDeviceManager");
		return ptr;
	}


	void ResetKeyboardIconCache();
	void OnImageSetLoaded();
	bool IsUsingAltImageSet();
	class UInputDeviceManager* STATIC_GetInstance();
	class UObject* GetImage(struct FName* NameID);
	EInputDevice GetCurrentDeviceInUse(int* ControllerId);
};


// Class GunfireRuntime.InputHandler
// 0x0010 (0x0038 - 0x0028)
class UInputHandler : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.InputHandler");
		return ptr;
	}

};


// Class GunfireRuntime.InputRebindings
// 0x0020 (0x0048 - 0x0028)
class UInputRebindings : public UObject
{
public:
	TArray<struct FRebindedInputAction>                ActionRebindings;                                         // 0x0028(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	TArray<struct FRebindedInputAxis>                  AxisRebindings;                                           // 0x0038(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.InputRebindings");
		return ptr;
	}


	void STATIC_ResetInputRebindings();
	void STATIC_RemoveAxisRebinding(struct FInputAxisKeyMapping* Axis);
	void STATIC_RemoveActionRebinding(struct FInputActionKeyMapping* Action);
	void STATIC_AddAxisRebinding(struct FInputAxisKeyMapping* Axis);
	void STATIC_AddActionRebinding(struct FInputActionKeyMapping* Action);
};


// Class GunfireRuntime.InputStateComponent
// 0x00D0 (0x01C8 - 0x00F8)
class UInputStateComponent : public UActorComponent
{
public:
	TArray<struct FInputButton>                        Buttons;                                                  // 0x00F8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               StickyMovement;                                           // 0x0108(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0109(0x0003) MISSED OFFSET
	float                                              StickyMovementThreshold;                                  // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       WalkingToggleButton;                                      // 0x0110(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxWalkingInput;                                          // 0x0118(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x011C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    MoveInputEvent;                                           // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<struct FName, class UInputHandler*>           InputHandlerMap;                                          // 0x0130(0x0050) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x48];                                      // 0x0180(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.InputStateComponent");
		return ptr;
	}


	void SetWalking(bool* InIsWalking);
	void SetInputEnabled(bool* enable);
	void SetButtonStateByName(struct FName* Name, EButtonEvent* Event);
	void ResetButton(struct FName* ButtonName);
	void RemoveButtonListener(struct FName* Name, struct FScriptDelegate* Event);
	void OnSwitchCamera();
	bool IsInputEnabled();
	bool STATIC_IsActionPressed(class APlayerController** PlayerController, struct FName* ActionName);
	bool HasVerticalMoveInput();
	bool HasMoveInput();
	bool HasHorizontalMoveInput();
	struct FVector GetScreenRelativeMoveInput(struct FVector* Up, bool* bAllowSticky, bool* bAllowVerticalInput);
	struct FVector GetRelativeMoveInput(struct FRotator* Rotation, bool* bAllowVerticalInput);
	void GetMoveInput(struct FVector* OutMoveInput);
	bool GetIsWalking();
	bool GetCameraRotation(bool* bAllowSticky, struct FRotator* OutCameraRotation);
	struct FVector GetCameraRelativeMoveInput(struct FVector* Up, bool* bAllowSticky, bool* bAllowVerticalInput);
	EButtonEvent GetButtonStateByName(struct FName* Name);
	void AddButtonListener(struct FName* Name, struct FScriptDelegate* Event);
};


// Class GunfireRuntime.InspectableComponent
// 0x0098 (0x0190 - 0x00F8)
class UInspectableComponent : public UActorComponent
{
public:
	bool                                               bEnabled;                                                 // 0x00F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F9(0x0003) MISSED OFFSET
	float                                              TransitionTimeIn;                                         // 0x00FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<EViewTargetBlendFunction>              BlendIn;                                                  // 0x0100(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0101(0x0003) MISSED OFFSET
	float                                              ZoomInBlendExponent;                                      // 0x0104(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TransitionTimeOut;                                        // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<EViewTargetBlendFunction>              BlendOut;                                                 // 0x010C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x010D(0x0003) MISSED OFFSET
	float                                              ZoomOutBlendExponent;                                     // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bConsumeInput;                                            // 0x0114(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HidePawn;                                                 // 0x0115(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0116(0x0002) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTransitionBegin;                                        // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTransitionEnd;                                          // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBeginInspect;                                           // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEndInspect;                                             // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAnyoneEndInspect;                                       // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnNotifyCompleteInspect;                                  // 0x0168(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bIsOccupied;                                              // 0x0178(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bInTransition;                                            // 0x0179(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x6];                                       // 0x017A(0x0006) MISSED OFFSET
	class APlayerController*                           ActivePlayer;                                             // 0x0180(0x0008) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0188(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.InspectableComponent");
		return ptr;
	}


	void StartInspect(class APlayerController** PlayerController);
	void OnRep_IsOccupied();
	void OnRep_IsActivePlayer();
	bool IsOccupied();
	bool IsInTransition();
	bool IsInteractingActorLocal();
	bool IsInteracting();
	class APlayerController* GetActivePlayerController();
	void EndInspect();
};


// Class GunfireRuntime.InspectableCondition
// 0x0008 (0x0038 - 0x0030)
class UInspectableCondition : public UCondition
{
public:
	EInspectableConditionCheck                         CheckBy;                                                  // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.InspectableCondition");
		return ptr;
	}

};


// Class GunfireRuntime.Stats
// 0x0010 (0x0038 - 0x0028)
class UStats : public UObject
{
public:
	TArray<struct FStatInfo>                           Stats;                                                    // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Stats");
		return ptr;
	}

};


// Class GunfireRuntime.InspectUtil
// 0x0000 (0x0028 - 0x0028)
class UInspectUtil : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.InspectUtil");
		return ptr;
	}


	void STATIC_SetInspectStat(struct FName* NameID, struct FInspectStat* Stat, struct FInspectInfo* Info);
	bool STATIC_GetInspectStat(struct FInspectInfo* Info, struct FName* NameID, struct FInspectStat* OutStat);
	void STATIC_ClearStats(struct FInspectInfo* Info);
};


// Class GunfireRuntime.InteractiveState
// 0x0140 (0x01E8 - 0x00A8)
class UInteractiveState : public UActorState
{
public:
	struct FName                                       AnimationID;                                              // 0x00A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       InterruptState;                                           // 0x00B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AnimationOtherID;                                         // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       InterruptStateOther;                                      // 0x00C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInteractiveInitiator                              Initiator;                                                // 0x00C8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInteractiveInitiator                              Anchor;                                                   // 0x00C9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInitiatorIsSubject;                                      // 0x00CA(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInteractiveType                                   InteractType;                                             // 0x00CB(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       EventName;                                                // 0x00CC(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowHitReactions;                                        // 0x00D4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowDamage;                                              // 0x00D5(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowDeath;                                               // 0x00D6(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowOtherInteractives;                                   // 0x00D7(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GravityScale;                                             // 0x00D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bConvergeToAnchor;                                        // 0x00DC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00DD(0x0003) MISSED OFFSET
	float                                              ConvergeTime;                                             // 0x00E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AnchorFaceOtherOnStart;                                   // 0x00E4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAnchorFaceOtherMethod                             FaceOtherMethod;                                          // 0x00E5(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x2];                                       // 0x00E6(0x0002) MISSED OFFSET
	float                                              AnchorFaceOffset;                                         // 0x00E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DisableNonAnchorCollision;                                // 0x00EC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SnapNonAnchorToGround;                                    // 0x00ED(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IgnoreAnchorWhenSnappingToGround;                         // 0x00EE(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DisableNonAnchorOverlaps;                                 // 0x00EF(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               RestoreOtherDefaultMovement;                              // 0x00F0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	struct FName                                       CollisionEnableWindow;                                    // 0x00F4(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       InteractRefNode;                                          // 0x00FC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDisableNonAnchorSpecialCharacterCollision;               // 0x0104(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0105(0x0003) MISSED OFFSET
	struct FName                                       InteractValidatorNode;                                    // 0x0108(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InteractRange;                                            // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InteractRangeZ;                                           // 0x0114(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EInteractArcValidationType                         ArcValidationType;                                        // 0x0118(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0119(0x0003) MISSED OFFSET
	float                                              InteractRefAngle;                                         // 0x011C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InteractArc;                                              // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PositionArcAngleOffset;                                   // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ValidateLOS;                                              // 0x0128(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ValidateCapsule;                                          // 0x0129(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x2];                                       // 0x012A(0x0002) MISSED OFFSET
	float                                              CapsuleInflation;                                         // 0x012C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ValidateShape;                                            // 0x0130(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               ValidStates;                                              // 0x0138(0x0010) (ZeroConstructor, Deprecated, NativeAccessSpecifierPublic)
	TArray<struct FActorStateID>                       ValidStateIDs;                                            // 0x0148(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FName                                       InputAction;                                              // 0x0158(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputWindowStart;                                         // 0x0160(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputWindowEnd;                                           // 0x0164(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       InputActionLabel;                                         // 0x0168(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               InputMashEnable;                                          // 0x0180(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0181(0x0003) MISSED OFFSET
	float                                              InputMashStart;                                           // 0x0184(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputMashIncrement;                                       // 0x0188(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputMashDecay;                                           // 0x018C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputMashSuccessThreshold;                                // 0x0190(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputMashFailureThreshold;                                // 0x0194(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       UINode;                                                   // 0x0198(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       UILabel;                                                  // 0x01A0(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FName                                       UIIconName;                                               // 0x01B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  UIIcon;                                                   // 0x01C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDrawWhenNotFocus;                                        // 0x01C8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldDrawWhenOffScreen;                                 // 0x01C9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x6];                                       // 0x01CA(0x0006) MISSED OFFSET
	struct FConditions                                 ConditionsOther;                                          // 0x01D0(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.InteractiveState");
		return ptr;
	}

};


// Class GunfireRuntime.InteractiveResult
// 0x0008 (0x0038 - 0x0030)
class UInteractiveResult : public UCondition
{
public:
	EInteractiveResult                                 Result;                                                   // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.InteractiveResult");
		return ptr;
	}

};


// Class GunfireRuntime.InteractiveStateTransition
// 0x0028 (0x00A8 - 0x0080)
class UInteractiveStateTransition : public UActorStateTransition
{
public:
	struct FName                                       DestinationStateOther;                                    // 0x0080(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FConditions                                 ConditionsOther;                                          // 0x0088(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UActorState*                                 CachedStateOther;                                         // 0x00A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.InteractiveStateTransition");
		return ptr;
	}

};


// Class GunfireRuntime.InterpolatedSoundMix
// 0x0090 (0x0120 - 0x0090)
class UInterpolatedSoundMix : public USoundMix
{
public:
	struct FAudioEQEffect                              BeginEQ;                                                  // 0x0090(0x0038) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAudioEQEffect                              EndEQ;                                                    // 0x00C8(0x0038) (Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FInterpolatedSoundClassAdjuster>     InterpolatedSoundClassEffects;                            // 0x0100(0x0010) (Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 EQCurve;                                                  // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InitialInterpolatePos;                                    // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x011C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.InterpolatedSoundMix");
		return ptr;
	}


	void SetInterpolatePos(float* Pos);
};


// Class GunfireRuntime.InViewCondition
// 0x0008 (0x0038 - 0x0030)
class UInViewCondition : public UCondition
{
public:
	float                                              Delay;                                                    // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.InViewCondition");
		return ptr;
	}

};


// Class GunfireRuntime.ItemGenerator
// 0x0018 (0x0040 - 0x0028)
class UItemGenerator : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	int                                                Chance;                                                   // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LevelMin;                                                 // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                LevelMax;                                                 // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ItemGenerator");
		return ptr;
	}


	void GenerateItems(struct FItemGenRequest* Request, TArray<struct FItemGenResult>* Results);
};


// Class GunfireRuntime.ItemGeneratorItem
// 0x0030 (0x0070 - 0x0040)
class UItemGeneratorItem : public UItemGenerator
{
public:
	TSoftObjectPtr<class UClass>                       Item;                                                     // 0x0040(0x0028) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      QuantityMin;                                              // 0x0068(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      QuantityMax;                                              // 0x0069(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x006A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ItemGeneratorItem");
		return ptr;
	}

};


// Class GunfireRuntime.ItemGeneratorLink
// 0x0008 (0x0048 - 0x0040)
class UItemGeneratorLink : public UItemGenerator
{
public:
	class UItemGeneratorTable*                         Table;                                                    // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ItemGeneratorLink");
		return ptr;
	}

};


// Class GunfireRuntime.ItemGeneratorTable
// 0x0018 (0x0058 - 0x0040)
class UItemGeneratorTable : public UItemGenerator
{
public:
	EItemGenTableType                                  TableType;                                                // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	TArray<class UItemGenerator*>                      Entries;                                                  // 0x0048(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ItemGeneratorTable");
		return ptr;
	}

};


// Class GunfireRuntime.ItemManager
// 0x0010 (0x0108 - 0x00F8)
class UItemManager : public UActorComponent
{
public:
	TArray<class AItem*>                               Items;                                                    // 0x00F8(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ItemManager");
		return ptr;
	}


	void GetItemsInRangeByType(struct FVector* Position, float* Radius, TSoftObjectPtr<class UClass>* Type, TArray<class AItem*>* OutItems);
	class UItemManager* STATIC_GetInstance(class UObject** WorldContextObject);
};


// Class GunfireRuntime.ItemSocketComponent
// 0x0060 (0x02C0 - 0x0260)
class UItemSocketComponent : public USceneComponent
{
public:
	struct FItemSocketSlot                             Slot;                                                     // 0x0260(0x0028) (Edit, BlueprintVisible, SaveGame, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               Blocked;                                                  // 0x0288(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0289(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnItemSocketChanged;                                      // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnItemSocketed;                                           // 0x02A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnItemUnsocketed;                                         // 0x02B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ItemSocketComponent");
		return ptr;
	}


	void RequestReturnItemToInventory(class ACharacterGunfire** Subject);
	void RequestAddItemFromInventoryById(class UInventoryComponent** Inventory, int* ItemID);
	void RequestAddItemFromInventoryByClass(class UInventoryComponent** Inventory, class UClass** ItemClass);
	void RequestAddItemFromInventory(class ACharacterGunfire** Subject);
	void RemoveItem();
	bool IsValid(class UClass** ItemClass);
	bool IsFull();
	bool IsEmpty();
	bool HasInteractableSlot();
	void ForceFill();
	bool CanAddItemOfClass(class UClass** ItemClass);
	void AddItem(class UClass** ItemClass);
};


// Class GunfireRuntime.ItemUtil
// 0x0000 (0x0028 - 0x0028)
class UItemUtil : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ItemUtil");
		return ptr;
	}


	bool STATIC_ValidateDropPosition(class AActor** Source, struct FVector* Position, bool* SnapToGround, bool* TestStaticCollision, struct FVector* OutPosition);
	class AItem* STATIC_SpawnItem(class AActor** Source, class UClass** ItemBP, struct FTransform* SpawnTransform, unsigned char* Quantity, bool* Transient, bool* DoDrop);
	void STATIC_PreSpawnDroppedItem(class AItem** Item, unsigned char* Quantity);
	void STATIC_PostSpawnDroppedItem(class AItem** Item);
	struct FInspectInfo STATIC_GetInspectInfoFromInventory(class AActor** InspectActor, class UInventoryComponent** Inventory, int* ItemID, int* LevelOverride);
	struct FInspectInfo STATIC_GetInspectInfo(class AActor** InspectActor, class UClass** ItemBP, int* Level);
	void STATIC_DropLoot(class AActor** Source, class USpawnTable** SpawnTable, TArray<struct FName>* Tags, int* Rating, bool* bAsync, bool* bForce, bool* Transient);
	bool STATIC_DropItem(class AActor** Source, class UClass** ItemBP, unsigned char* Quantity, bool* Force, bool* Transient);
};


// Class GunfireRuntime.KeyCondition
// 0x0010 (0x0040 - 0x0030)
class UKeyCondition : public UCondition
{
public:
	struct FName                                       Key;                                                      // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       Value;                                                    // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.KeyCondition");
		return ptr;
	}

};


// Class GunfireRuntime.LadderParams
// 0x0020 (0x0048 - 0x0028)
class ULadderParams : public UObject
{
public:
	TEnumAsByte<ECollisionChannel>                     TraceChannel;                                             // 0x0028(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              TraceDistance;                                            // 0x002C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ValidArc;                                                 // 0x0030(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GrabHeight;                                               // 0x0034(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GrabOffset;                                               // 0x0038(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReverseGrabHeight;                                        // 0x003C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReverseGrabOffset;                                        // 0x0040(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RungSpacing;                                              // 0x0044(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.LadderParams");
		return ptr;
	}

};


// Class GunfireRuntime.TraversalCondition
// 0x0000 (0x0030 - 0x0030)
class UTraversalCondition : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TraversalCondition");
		return ptr;
	}

};


// Class GunfireRuntime.LadderCondition
// 0x0010 (0x0040 - 0x0030)
class ULadderCondition : public UTraversalCondition
{
public:
	class UClass*                                      LadderParams;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Reverse;                                                  // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                NumRungsFromTop;                                          // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.LadderCondition");
		return ptr;
	}

};


// Class GunfireRuntime.TraversalState
// 0x0018 (0x0118 - 0x0100)
class UTraversalState : public UAnimActorState
{
public:
	bool                                               bDisableCollisionOnEntry;                                 // 0x0100(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0101(0x0003) MISSED OFFSET
	struct FName                                       CollisionEnableWindow;                                    // 0x0104(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LerpTime;                                                 // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAttachToSurface;                                         // 0x0110(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bCollideWithSurface;                                      // 0x0111(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0112(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TraversalState");
		return ptr;
	}

};


// Class GunfireRuntime.LadderState
// 0x0010 (0x0128 - 0x0118)
class ULadderState : public UTraversalState
{
public:
	class UClass*                                      LadderParams;                                             // 0x0118(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              GrabHeight;                                               // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              GrabOffset;                                               // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.LadderState");
		return ptr;
	}

};


// Class GunfireRuntime.LastAttackCondition
// 0x0038 (0x0068 - 0x0030)
class ULastAttackCondition : public UCondition
{
public:
	ELastAttackCondition                               Condition;                                                // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class UClass*                                      RequiredCause;                                            // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                              AllowedDamageTypes;                                       // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FName>                               RequiredTargetTags;                                       // 0x0050(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	EYesNo                                             Critical;                                                 // 0x0060(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EYesNo                                             Killed;                                                   // 0x0061(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EYesNo                                             CurrentTarget;                                            // 0x0062(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EYesNo                                             RequiredResult;                                           // 0x0063(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.LastAttackCondition");
		return ptr;
	}

};


// Class GunfireRuntime.LastHitCondition
// 0x0018 (0x0048 - 0x0030)
class ULastHitCondition : public UCondition
{
public:
	TArray<class UClass*>                              DamageClasses;                                            // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	int                                                MinPower;                                                 // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                MaxPower;                                                 // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.LastHitCondition");
		return ptr;
	}

};


// Class GunfireRuntime.LedgeGrabCondition
// 0x0008 (0x0038 - 0x0030)
class ULedgeGrabCondition : public UTraversalCondition
{
public:
	ELedgeGrabType                                     LedgeGrabType;                                            // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.LedgeGrabCondition");
		return ptr;
	}

};


// Class GunfireRuntime.LedgeGrabState
// 0x0000 (0x0118 - 0x0118)
class ULedgeGrabState : public UTraversalState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.LedgeGrabState");
		return ptr;
	}

};


// Class GunfireRuntime.LevelInstance
// 0x00E8 (0x0110 - 0x0028)
class ULevelInstance : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnLevelLoadedEvent;                                       // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelUnloadedEvent;                                     // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelShownEvent;                                        // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelHiddenEvent;                                       // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelLoadedForAllEvent;                                 // 0x0068(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelUnloadedForAllEvent;                               // 0x0078(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelShownForAllEvent;                                  // 0x0088(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelHiddenForAllEvent;                                 // 0x0098(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelAllChildrenLoadedEvent;                            // 0x00A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelAllChildrenUnloadedEvent;                          // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelAllChildrenShownEvent;                             // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelAllChildrenHiddenEvent;                            // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ULevelStreaming*                             LevelStreaming;                                           // 0x00E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x20];                                      // 0x00F0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.LevelInstance");
		return ptr;
	}


	void OnLevelUnloaded();
	void OnLevelShown();
	void OnLevelLoaded();
	void OnLevelHidden();
	void OnChildUnloaded();
	void OnChildShown();
	void OnChildLoaded();
	void OnChildHidden();
};


// Class GunfireRuntime.LevelLoadingManager
// 0x0078 (0x0170 - 0x00F8)
class ULevelLoadingManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F8(0x0010) MISSED OFFSET
	TArray<struct FLevelInstanceInfo>                  LevelInstanceInfo;                                        // 0x0108(0x0010) (Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPrivate)
	TMap<int, struct FLevelInstanceStatus>             LevelInstanceStatus;                                      // 0x0118(0x0050) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0168(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.LevelLoadingManager");
		return ptr;
	}


	void OnRep_LevelInstanceInfo();
	void OnLevelUnloaded(int* LevelID);
	void OnLevelShown(int* LevelID);
	void OnLevelLoaded(int* LevelID);
	void OnLevelHidden(int* LevelID);
};


// Class GunfireRuntime.PlayableLevel
// 0x00E0 (0x0410 - 0x0330)
class APlayableLevel : public AActor
{
public:
	TSoftObjectPtr<class UWorld>                       Level;                                                    // 0x0330(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0358(0x0008) MISSED OFFSET
	struct FTransform                                  LevelTransform;                                           // 0x0360(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                      LevelName;                                                // 0x0390(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                      LevelPath;                                                // 0x03A0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelPreloadedEvent;                                    // 0x03B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelLoadedEvent;                                       // 0x03C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelUnloadedEvent;                                     // 0x03D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelShownEvent;                                        // 0x03E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelHiddenEvent;                                       // 0x03F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0400(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PlayableLevel");
		return ptr;
	}


	void ChangeLevelState(EPlayableLoadState* LoadState, EPlayableVisibleState* VisibleState);
};


// Class GunfireRuntime.PlayableLevelCollection
// 0x0088 (0x03B8 - 0x0330)
class APlayableLevelCollection : public AActor
{
public:
	TArray<class UClass*>                              LevelClasses;                                             // 0x0330(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class APlayableLevel*>                      Levels;                                                   // 0x0340(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	struct FName                                       NameID;                                                   // 0x0350(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelCollectionPreloadedEvent;                          // 0x0358(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelCollectionLoadedEvent;                             // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelCollectionUnloadedEvent;                           // 0x0378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelCollectionShownEvent;                              // 0x0388(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelCollectionHiddenEvent;                             // 0x0398(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x10];                                      // 0x03A8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PlayableLevelCollection");
		return ptr;
	}


	bool IsPreloaded();
	class APlayableLevel* GetPlayableLevelByPath(class FString* Path);
	class APlayableLevel* GetPlayableLevelByName(class FString* Name);
	void ChangeCollectionState(EPlayableLoadState* LoadState, EPlayableVisibleState* VisibleState);
	void AddPlayableLevel(class APlayableLevel** Level);
};


// Class GunfireRuntime.LODVolumeFilter
// 0x00B0 (0x00D8 - 0x0028)
class ULODVolumeFilter : public UObject
{
public:
	struct FLODVolumeSubFilter                         IgnoreFilter;                                             // 0x0028(0x00A0) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FLODVolumeDistanceFilter>            DistanceFilters;                                          // 0x00C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.LODVolumeFilter");
		return ptr;
	}

};


// Class GunfireRuntime.LODVolume
// 0x00B0 (0x03E0 - 0x0330)
class ALODVolume : public AActor
{
public:
	bool                                               Update;                                                   // 0x0330(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UpdateManuallyOnly;                                       // 0x0331(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0332(0x0002) MISSED OFFSET
	float                                              VolumePriority;                                           // 0x0334(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ELODVolumeVisibility                               DebugShowLOD;                                             // 0x0338(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0339(0x0007) MISSED OFFSET
	class UClass*                                      FilterBP;                                                 // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ModifyVisibilitySameFrame;                                // 0x0348(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               LODShouldApplyDistanceOveride;                            // 0x0349(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ApplyOcclusionOverride;                                   // 0x034A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ModifyVisibiltyByDistance;                                // 0x034B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldBeActivelyManaged;                                  // 0x034C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x034D(0x0003) MISSED OFFSET
	float                                              VisibiltyDistance;                                        // 0x0350(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HiddenDistance;                                           // 0x0354(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ActorTransitionPerFrame;                                  // 0x0358(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceMultiplier;                                       // 0x035C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                              NearActors;                                               // 0x0360(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	TArray<class AActor*>                              DistantActors;                                            // 0x0370(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	class UBoxComponent*                               Volume;                                                   // 0x0380(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bReadyForModifications;                                   // 0x0388(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bActorAddedtoWorld;                                       // 0x0389(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIsActive;                                                // 0x038A(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x1];                                       // 0x038B(0x0001) MISSED OFFSET
	struct FTileCoord                                  OwningTileCoord;                                          // 0x038C(0x000C) (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                OwningTileID;                                             // 0x0398(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ELODVolumeVisibility                               CurrentVisibility;                                        // 0x039C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0xB];                                       // 0x039D(0x000B) MISSED OFFSET
	bool                                               bPendingVisibility;                                       // 0x03A8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData05[0x3];                                       // 0x03A9(0x0003) MISSED OFFSET
	int                                                CurrentPendingVisibleIndex;                               // 0x03AC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                CurrentPendingHiddenIndex;                                // 0x03B0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData06[0x4];                                       // 0x03B4(0x0004) MISSED OFFSET
	TArray<class AActor*>                              PendingVisibleActors;                                     // 0x03B8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                              PendingHiddenActors;                                      // 0x03C8(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                               bEmptyPendingVisible;                                     // 0x03D8(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bEmptyPendingHidden;                                      // 0x03D9(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData07[0x6];                                       // 0x03DA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.LODVolume");
		return ptr;
	}


	void SetLODVisibility(ELODVolumeVisibility* LODType);
};


// Class GunfireRuntime.LODVolumeManager
// 0x0028 (0x0120 - 0x00F8)
class ULODVolumeManager : public UActorComponent
{
public:
	float                                              MaxUpdateInterval;                                        // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	struct FTimerHandle                                CooldownHandle;                                           // 0x0100(0x0008) (NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               OnCooldown;                                               // 0x0108(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0109(0x0007) MISSED OFFSET
	TArray<struct FLODVolumeInfo>                      Volumes;                                                  // 0x0110(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.LODVolumeManager");
		return ptr;
	}


	void UpdateVolumesVisibility();
	void UnregisterVolume(class ALODVolume** DestroyedVolume);
	void RegisterVolume(class ALODVolume** SpawnedVolume);
	void OnFinishCooldown();
	float GetPlayerRangeToVolume(class ALODVolume** Volume);
	class ULODVolumeManager* STATIC_GetInstance(class UObject** WorldContextObject);
};


// Class GunfireRuntime.RandomTileActorInterface
// 0x0000 (0x0028 - 0x0028)
class URandomTileActorInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.RandomTileActorInterface");
		return ptr;
	}


	void SetRandomSeed(int* Seed);
};


// Class GunfireRuntime.MapGenSettings
// 0x0048 (0x0378 - 0x0330)
class AMapGenSettings : public AActor
{
public:
	class UTileSet*                                    TileSet;                                                  // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTileSpawnList>                      SpawnLists;                                               // 0x0338(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FMapGenAttribute>                    Attributes;                                               // 0x0348(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FName>                               BorderTiles;                                              // 0x0358(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                               bOverrideAudioVolume;                                     // 0x0368(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0369(0x0007) MISSED OFFSET
	class UClass*                                      AudioVolumeOverride;                                      // 0x0370(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MapGenSettings");
		return ptr;
	}

};


// Class GunfireRuntime.MapGenGizmo
// 0x0010 (0x0590 - 0x0580)
class UMapGenGizmo : public UPrimitiveComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0580(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MapGenGizmo");
		return ptr;
	}

};


// Class GunfireRuntime.MapTileTemplateEdge
// 0x0000 (0x0590 - 0x0590)
class UMapTileTemplateEdge : public UMapGenGizmo
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MapTileTemplateEdge");
		return ptr;
	}

};


// Class GunfireRuntime.MapTileTemplate
// 0x0060 (0x0390 - 0x0330)
class AMapTileTemplate : public AActor
{
public:
	struct FName                                       ID;                                                       // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       RegionID;                                                 // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMapGenAttribute>                    Attributes;                                               // 0x0340(0x0010) (Edit, ZeroConstructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FName                                       TileTag;                                                  // 0x0350(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TileRating;                                               // 0x0358(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Overlay;                                                  // 0x035C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x035D(0x0003) MISSED OFFSET
	int                                                TileFlags;                                                // 0x0360(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Optional;                                                 // 0x0364(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               North;                                                    // 0x0365(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               East;                                                     // 0x0366(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               South;                                                    // 0x0367(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               West;                                                     // 0x0368(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               NorthEast;                                                // 0x0369(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SouthEast;                                                // 0x036A(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SouthWest;                                                // 0x036B(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               NorthWest;                                                // 0x036C(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETileDirection                                     Direction;                                                // 0x036D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x2];                                       // 0x036E(0x0002) MISSED OFFSET
	TArray<struct FTileSpawnList>                      SpawnLists;                                               // 0x0370(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FColor                                      DisplayColor;                                             // 0x0380(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0384(0x0004) MISSED OFFSET
	class UTileSet*                                    TileSet;                                                  // 0x0388(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MapTileTemplate");
		return ptr;
	}

};


// Class GunfireRuntime.MapRegionTemplate
// 0x0048 (0x0378 - 0x0330)
class AMapRegionTemplate : public AActor
{
public:
	struct FName                                       RegionID;                                                 // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMapGenAttribute>                    Attributes;                                               // 0x0338(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	int                                                TileWidth;                                                // 0x0348(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TileHeight;                                               // 0x034C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Maziness;                                                 // 0x0350(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PathIterations;                                           // 0x0354(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumTilesMin;                                              // 0x0358(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NumTilesMax;                                              // 0x035C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTileSpawnList>                      SpawnLists;                                               // 0x0360(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	class UTileSet*                                    TileSet;                                                  // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MapRegionTemplate");
		return ptr;
	}

};


// Class GunfireRuntime.MapTileEdge
// 0x0008 (0x0338 - 0x0330)
class AMapTileEdge : public AActor
{
public:
	class AMapTileInfo*                                Tile;                                                     // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MapTileEdge");
		return ptr;
	}

};


// Class GunfireRuntime.MapTileInfo
// 0x0040 (0x0370 - 0x0330)
class AMapTileInfo : public AActor
{
public:
	struct FName                                       NameID;                                                   // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>                   Image;                                                    // 0x0338(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                               Region;                                                   // 0x0360(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      OriginPointActor;                                         // 0x0368(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MapTileInfo");
		return ptr;
	}

};


// Class GunfireRuntime.MapTileNav
// 0x0020 (0x0390 - 0x0370)
class AMapTileNav : public ANavMeshBoundsVolume
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0370(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MapTileNav");
		return ptr;
	}

};


// Class GunfireRuntime.PlayableMap
// 0x0028 (0x0050 - 0x0028)
class UPlayableMap : public UObject
{
public:
	TSoftObjectPtr<class UWorld>                       PersistentLevel;                                          // 0x0028(0x0028) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PlayableMap");
		return ptr;
	}

};


// Class GunfireRuntime.MapLoader
// 0x00D0 (0x00F8 - 0x0028)
class UMapLoader : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnBeginLoadingNextMap;                                    // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UClass*                                      TransitionLevel;                                          // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FMapSettings>                        MapSettings;                                              // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FColor                                      FadeColor;                                                // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FadeTime;                                                 // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bShouldWaitToFadeIntoLevel;                               // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
	class UGameInstanceGunfire*                        GameInstance;                                             // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ULevel*>                              CurrentLevels;                                            // 0x0068(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class ULevel*>                              NextLevels;                                               // 0x0078(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class UWorld*                                      CurrentWorld;                                             // 0x0088(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWorld*                                      NextWorld;                                                // 0x0090(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x60];                                      // 0x0098(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MapLoader");
		return ptr;
	}


	void TravelToTransitionMap();
	void TravelToNextMap();
	bool STATIC_OpenMapByName(class UObject** WorldContextObject, class FString* MapName);
	bool STATIC_OpenMap(class UObject** WorldContextObject, class UClass** Map);
	void OnPlayerEnterTransitionMap(class UWorld** LoadedWorld);
	void OnPlayerEnterNextMapDelayed();
	void OnNextMapVisible();
	void OnFadeScreenCompleted();
	void LoadNotStreamableLevels();
	class FString STATIC_GetNotStreamableMapSuffix();
	class UMapLoader* STATIC_GetMapLoader(class UObject** WorldContextObject);
};


// Class GunfireRuntime.MathUtil
// 0x0000 (0x0028 - 0x0028)
class UMathUtil : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MathUtil");
		return ptr;
	}


	int STATIC_StableRandomInteger(class AActor** Actor);
	bool STATIC_SphereTriangleOverlap(struct FVector* Center, float* Radius, struct FVector* A, struct FVector* B, struct FVector* C);
	bool STATIC_SphereCapsuleIntersect(struct FVector* Origin, float* SphereRadius, struct FTransform* CapsuleTransform, float* CapsuleHalfHeight, float* CapsuleRadius);
	void STATIC_SmoothCDFloat(float* Val, float* ValRate, float* DeltaTime, float* to, float* SmoothTime, float* OutVal, float* OutValRate);
	bool STATIC_SegmentCapsuleIntersect(struct FVector* Start, struct FVector* End, struct FTransform* CapsuleTransform, float* CapsuleHalfHeight, float* CapsuleRadius);
	float STATIC_ScaleValueByLevel(int* Level, float* Value, float* Inc, float* Exp);
	bool STATIC_RayIntersectsSphere(struct FVector* LineOrigin, struct FVector* LineDirection, struct FVector* Center, float* Radius, float* Distance);
	float STATIC_NormalizeToRangeAndClamp(float* Value, float* Minimum, float* Maximum);
	bool STATIC_IsPointInBounds(struct FVector* Point, struct FVector* Origin, struct FVector* Extents);
	bool STATIC_IsInsideBox(class UBoxComponent** Box, struct FVector* Point);
	struct FVector STATIC_GetRandomPointInsideSphere(float* SphereRadius);
	struct FVector STATIC_GetRandomPointInsideHollowSphere(float* MinimumRadius, float* MaximumRadius);
	struct FVector STATIC_GetRandomPointInsideCircle(float* CircleRadius);
	struct FVector STATIC_GetPointAlongCircle(float* Radius, float* Angle);
	float STATIC_GetHeading(struct FVector* Direction);
	float STATIC_GetDistanceScalar(float* CurrentDistance, float* OptimalDistance, float* TotalDistance);
	struct FVector STATIC_GetDirectionVector(float* Heading);
	struct FRotator STATIC_GetCameraRelativeBasis(struct FVector* UpAxis, struct FRotator* CameraRotation);
	float STATIC_GetAngleDiff(float* A0, float* A1);
	float STATIC_GetAngleBetween(struct FVector* A0, struct FVector* A1);
	float STATIC_FindClosestPointOnSpline(class USplineComponent** Spline, struct FVector* PointInSpace, struct FVector* OutClosestPoint);
	bool STATIC_FindBestFitPlane(TArray<struct FVector>* Points, struct FVector* OutBase, struct FVector* OutNormal);
	float STATIC_ApplyMod(float* Value, float* Mod, float* Scalar);
};


// Class GunfireRuntime.MeshOutlinerComponent
// 0x0028 (0x0120 - 0x00F8)
class UMeshOutlinerComponent : public UActorComponent
{
public:
	bool                                               bStartOutlined;                                           // 0x00F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F9(0x0003) MISSED OFFSET
	struct FName                                       OutlineRoot;                                              // 0x00FC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                OutlineStencilValue;                                      // 0x0104(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       OutlineExclusionTag;                                      // 0x0108(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0110(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MeshOutlinerComponent");
		return ptr;
	}


	void SetOwnerOutlined(bool* bEnable);
	bool IsCurrentlyOutlined();
};


// Class GunfireRuntime.MiniMapActor
// 0x0078 (0x03A8 - 0x0330)
class AMiniMapActor : public AActor
{
public:
	struct FColor                                      Color;                                                    // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0334(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSelectedEvent;                                          // 0x0338(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDeSelectedEvent;                                        // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShownEvent;                                             // 0x0358(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHiddenEvent;                                            // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMiniMapSetEvent;                                        // 0x0378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                Context;                                                  // 0x0388(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x038C(0x0004) MISSED OFFSET
	class AActor*                                      RefActor;                                                 // 0x0390(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AMiniMapDisplayActor*                        MiniMap;                                                  // 0x0398(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               SnappedToEdge;                                            // 0x03A0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x7];                                       // 0x03A1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MiniMapActor");
		return ptr;
	}


	void UpdateLevelVisibility(int* DisplayLevel, int* MyLevel);
	void SetShown(bool* bShown);
	void Select(bool* MultiSelect, bool* bStaySelected);
	void OnShown();
	void OnSelected();
	void OnMiniMapSet(class AMiniMapDisplayActor** MiniMapActor);
	void OnHidden();
	void OnDeSelected();
	bool IsSelected();
	class AActor* GetRefActor();
	class AActor* GetMiniMapRefActor();
	class AMiniMapDisplayActor* GetMiniMap();
	bool GetIsActorVisibleOnMiniMap();
	int GetContext();
	void DeSelect();
	void DebugSetContext(int* Value);
	void Center(bool* bLock);
	bool CanSelect();
};


// Class GunfireRuntime.MiniMapComponent
// 0x0068 (0x0160 - 0x00F8)
class UMiniMapComponent : public UActorComponent
{
public:
	struct FName                                       MiniMapName;                                              // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMiniMapActorType                                  Type;                                                     // 0x0100(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0101(0x0007) MISSED OFFSET
	class UClass*                                      ActorClass;                                               // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      WidgetClass;                                              // 0x0110(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoAdd;                                                  // 0x0118(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0119(0x0003) MISSED OFFSET
	float                                              AutoAddRetryInterval;                                     // 0x011C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AbsoluteScale;                                            // 0x0120(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0121(0x0003) MISSED OFFSET
	float                                              Scale;                                                    // 0x0124(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMiniMapManager*                             MiniMapManager;                                           // 0x0128(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0130(0x0010) MISSED OFFSET
	bool                                               bAutoUpdateLevel;                                         // 0x0140(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0141(0x0003) MISSED OFFSET
	float                                              LevelUpdateAdditionalZ;                                   // 0x0144(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLevelChanged;                                           // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                MiniMapLevel;                                             // 0x0158(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x4];                                       // 0x015C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MiniMapComponent");
		return ptr;
	}


	void UpdateMiniMapLevel();
	void TryAutoAddToMiniMap();
	void SetMiniMapLevel(int* NewLevel);
	void RemoveFromMiniMap();
	void OnDead(unsigned char* Reason, class ACharacterGunfire** Character, class AActor** Cause);
	bool IsAddedToMiniMap();
	void AutoAddToMiniMap();
	void AddToMiniMap(class AActor** MiniMapRefActor);
};


// Class GunfireRuntime.MiniMapImage
// 0x0000 (0x0220 - 0x0220)
class UMiniMapImage : public UImage
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MiniMapImage");
		return ptr;
	}

};


// Class GunfireRuntime.MiniMapLookupActor
// 0x0018 (0x0348 - 0x0330)
class AMiniMapLookupActor : public AActor
{
public:
	class FString                                      MiniMapMeshOutputDirectory;                               // 0x0330(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                                  MeshLookupTable;                                          // 0x0340(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MiniMapLookupActor");
		return ptr;
	}

};


// Class GunfireRuntime.MiniMapManager
// 0x0068 (0x0160 - 0x00F8)
class UMiniMapManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x00F8(0x0040) MISSED OFFSET
	class AActor*                                      RefActor;                                                 // 0x0138(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       NameID;                                                   // 0x0140(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                IDGen;                                                    // 0x0148(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	TArray<struct FMiniMapActorInfo>                   MiniMapActors;                                            // 0x0150(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MiniMapManager");
		return ptr;
	}

};


// Class GunfireRuntime.MiniMapPanel
// 0x0010 (0x0150 - 0x0140)
class UMiniMapPanel : public UCanvasPanel
{
public:
	float                                              TargetPixelSize;                                          // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WidgetScale;                                              // 0x0144(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EMiniMapPanelScalingMethod                         ScalingMethod;                                            // 0x0148(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0149(0x0003) MISSED OFFSET
	int                                                ZAdjustPerLevel;                                          // 0x014C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MiniMapPanel");
		return ptr;
	}

};


// Class GunfireRuntime.MiniMapPanelSlot
// 0x0008 (0x0078 - 0x0070)
class UMiniMapPanelSlot : public UCanvasPanelSlot
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0070(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MiniMapPanelSlot");
		return ptr;
	}

};


// Class GunfireRuntime.MoveDetachedCameraState
// 0x0068 (0x00A8 - 0x0040)
class UMoveDetachedCameraState : public UCameraState
{
public:
	float                                              FadeCharacterDistance;                                    // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               SnapOnExit;                                               // 0x0044(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               SnapWhenOutOfSight;                                       // 0x0045(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               SnapOnFOV;                                                // 0x0046(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0047(0x0001) MISSED OFFSET
	float                                              SnapOnFOVDelay;                                           // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               TurnSmooth;                                               // 0x004C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	float                                              TurnRate;                                                 // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TurnIncrement;                                            // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               RoundToNearestIncrement;                                  // 0x0058(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ECameraFollow                                      Follow;                                                   // 0x0059(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x2];                                       // 0x005A(0x0002) MISSED OFFSET
	struct FRotator                                    RootRotation;                                             // 0x005C(0x000C) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x40];                                      // 0x0068(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MoveDetachedCameraState");
		return ptr;
	}


	void Snap(class UStateCameraComponent** CameraComponent, bool* UseInputDir);
	void Rotate(float* Angle);
};


// Class GunfireRuntime.MoveInputCondition
// 0x0008 (0x0038 - 0x0030)
class UMoveInputCondition : public UCondition
{
public:
	ECompareOp                                         Compare;                                                  // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EMoveInputType                                     Type;                                                     // 0x0031(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	float                                              Value;                                                    // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MoveInputCondition");
		return ptr;
	}

};


// Class GunfireRuntime.MovementTypeDecorator
// 0x0008 (0x0030 - 0x0028)
class UMovementTypeDecorator : public UActorStateDecorator
{
public:
	TEnumAsByte<EMovementMode>                         NewMovementMode;                                          // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               RestoreOnExit;                                            // 0x0029(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MovementTypeDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.MovieSceneDialogSection
// 0x0060 (0x0140 - 0x00E0)
class UMovieSceneDialogSection : public UMovieSceneSection
{
public:
	struct FText                                       DialogText;                                               // 0x00E0(0x0018) (Edit, NativeAccessSpecifierPublic)
	class USoundWave*                                  Dialog;                                                   // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      Emote;                                                    // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IgnoreVocalRange;                                         // 0x0108(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0109(0x0003) MISSED OFFSET
	struct FGuid                                       ObjectBindingId;                                          // 0x010C(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x4];                                       // 0x011C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDialogFinished;                                         // 0x0120(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnDialogPlaybackPercent;                                  // 0x0130(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MovieSceneDialogSection");
		return ptr;
	}

};


// Class GunfireRuntime.MovieSceneDialogTrack
// 0x0010 (0x0068 - 0x0058)
class UMovieSceneDialogTrack : public UMovieSceneNameableTrack
{
public:
	TArray<class UMovieSceneSection*>                  DialogSections;                                           // 0x0058(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MovieSceneDialogTrack");
		return ptr;
	}

};


// Class GunfireRuntime.MovieSceneEventTreeSection
// 0x0088 (0x0168 - 0x00E0)
class UMovieSceneEventTreeSection : public UMovieSceneSection
{
public:
	struct FMovieSceneEventTreeSectionData             EventData;                                                // 0x00E0(0x0088) (NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MovieSceneEventTreeSection");
		return ptr;
	}

};


// Class GunfireRuntime.MovieSceneEventTreeTrack
// 0x0038 (0x0090 - 0x0058)
class UMovieSceneEventTreeTrack : public UMovieSceneNameableTrack
{
public:
	unsigned char                                      bFireEventsWhenForwards : 1;                              // 0x0058(0x0001) (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bFireEventsWhenBackwards : 1;                             // 0x0058(0x0001) (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	EFireEventsAtPosition                              EventPosition;                                            // 0x005C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	TArray<struct FMovieSceneObjectBindingID>          EventReceivers;                                           // 0x0060(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTrackTriggerNotified;                                   // 0x0070(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UMovieSceneSection*>                  Sections;                                                 // 0x0080(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MovieSceneEventTreeTrack");
		return ptr;
	}

};


// Class GunfireRuntime.MovieSceneSoundSetSection
// 0x0048 (0x0128 - 0x00E0)
class UMovieSceneSoundSetSection : public UMovieSceneSection
{
public:
	struct FName                                       SoundIDName;                                              // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      Emote;                                                    // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IgnoreVocalRange;                                         // 0x00F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	struct FGuid                                       ObjectBindingId;                                          // 0x00F4(0x0010) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSoundSetFinished;                                       // 0x0108(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    OnSoundSetPlaybackPercent;                                // 0x0118(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MovieSceneSoundSetSection");
		return ptr;
	}

};


// Class GunfireRuntime.MovieSceneSoundSetTrack
// 0x0010 (0x0068 - 0x0058)
class UMovieSceneSoundSetTrack : public UMovieSceneNameableTrack
{
public:
	TArray<class UMovieSceneSection*>                  SoundSetSections;                                         // 0x0058(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MovieSceneSoundSetTrack");
		return ptr;
	}

};


// Class GunfireRuntime.MusicDirector
// 0x0018 (0x0110 - 0x00F8)
class UMusicDirector : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnMusicIntensityChanged;                                  // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	EMusicIntensity                                    MusicIntensity;                                           // 0x0108(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0109(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MusicDirector");
		return ptr;
	}


	void OnRep_MusicIntensity();
};


// Class GunfireRuntime.MusicSet
// 0x0030 (0x0060 - 0x0030)
class UMusicSet : public UDataAsset
{
public:
	int                                                Priority;                                                 // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FadeInTime;                                               // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FadeOutTime;                                              // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<struct FMusicState>                         States;                                                   // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FMusicStinger>                       Stingers;                                                 // 0x0050(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MusicSet");
		return ptr;
	}

};


// Class GunfireRuntime.MusicManager
// 0x0020 (0x0118 - 0x00F8)
class UMusicManager : public UActorComponent
{
public:
	class UMusicSet*                                   DefaultMusicSet;                                          // 0x00F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       CurrentState;                                             // 0x0100(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FActiveMusicSet>                     ActiveMusicSets;                                          // 0x0108(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MusicManager");
		return ptr;
	}


	void SetMusicState(class UMusicSet** Set, struct FName* State);
	bool IsMusicSetActive(class UMusicSet** Set);
	class UMusicManager* STATIC_GetMusicManager(class UObject** WorldContextObject);
	void DeactivateMusicSet(class UMusicSet** Set, struct FName* Outro);
	void ActivateMusicSet(class UMusicSet** Set, struct FName* InitialState);
};


// Class GunfireRuntime.NamedActorComponent
// 0x0010 (0x0108 - 0x00F8)
class UNamedActorComponent : public UActorComponent
{
public:
	struct FName                                       NameID;                                                   // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0100(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.NamedActorComponent");
		return ptr;
	}


	void SetNameID(struct FName* NewNameID);
};


// Class GunfireRuntime.NamedActorManager
// 0x0070 (0x0168 - 0x00F8)
class UNamedActorManager : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnActorRegistered;                                        // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnActorUnregistered;                                      // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0118(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.NamedActorManager");
		return ptr;
	}


	void RemoveActor(struct FName* NameID, class AActor** Actor);
	class UNamedActorManager* STATIC_GetInstance(class UObject** WorldContextObject);
	void STATIC_FindActorsByTags(class UObject** WorldContextObject, TArray<struct FName>* Tags, TArray<class AActor*>* Actors);
	class AActor* STATIC_FindActorByName(class UObject** WorldContextObject, struct FName* NameID);
	void AddActor(struct FName* NameID, class AActor** Actor);
};


// Class GunfireRuntime.NavigationSystemGunfire
// 0x0040 (0x0478 - 0x0438)
class UNavigationSystemGunfire : public UNavigationSystemV1
{
public:
	double                                             OctreeUpdateMaxMSPerFrame;                                // 0x0438(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ShouldWarnIfSingleElementsIsExpensive;                    // 0x0440(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0441(0x0007) MISSED OFFSET
	double                                             WarnIfSingleElementsExceedsMS;                            // 0x0448(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0450(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.NavigationSystemGunfire");
		return ptr;
	}

};


// Class GunfireRuntime.NavLinkGunfireComponent
// 0x0008 (0x01D8 - 0x01D0)
class UNavLinkGunfireComponent : public UNavLinkCustomComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01D0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.NavLinkGunfireComponent");
		return ptr;
	}


	void SetLinkEnabledArea(class UClass** AreaClass);
	void SetLinkEnabled(bool* bEnabled);
	void SetLinkDisableArea(class UClass** AreaClass);
	bool IsLinkEnabled();
	class UClass* GetLinkEnabledArea();
	class UClass* GetLinkDisabledArea();
};


// Class GunfireRuntime.NavMeshTestCondition
// 0x0008 (0x0038 - 0x0030)
class UNavMeshTestCondition : public UCondition
{
public:
	float                                              Direction;                                                // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              Distance;                                                 // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.NavMeshTestCondition");
		return ptr;
	}

};


// Class GunfireRuntime.NavModifierGunfireComponent
// 0x0030 (0x0290 - 0x0260)
class UNavModifierGunfireComponent : public USceneComponent
{
public:
	class UClass*                                      EnabledAreaClass;                                         // 0x0260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      DisabledAreaClass;                                        // 0x0268(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	ENavModifierGunfireShape                           Shape;                                                    // 0x0270(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0271(0x0003) MISSED OFFSET
	struct FVector                                     BoxExtent;                                                // 0x0274(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CylinderRadius;                                           // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CylinderHeight;                                           // 0x0284(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsEnabled;                                                // 0x0288(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0289(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.NavModifierGunfireComponent");
		return ptr;
	}


	void SetState(bool* Enabled);
};


// Class GunfireRuntime.NPCHeadTrackingComponent
// 0x0058 (0x0150 - 0x00F8)
class UNPCHeadTrackingComponent : public UActorComponent
{
public:
	ETrackingMode                                      TrackingMode;                                             // 0x00F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F9(0x0003) MISSED OFFSET
	struct FName                                       ReferenceNode;                                            // 0x00FC(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseNodeRotation;                                         // 0x0104(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0105(0x0003) MISSED OFFSET
	float                                              MinYaw;                                                   // 0x0108(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxYaw;                                                   // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinPitch;                                                 // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxPitch;                                                 // 0x0114(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InterpSpeed;                                              // 0x0118(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x011C(0x0004) MISSED OFFSET
	TArray<struct FName>                               NoTrackAnimTags;                                          // 0x0120(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bConsiderCharacterTarget;                                 // 0x0130(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	int                                                CharacterTargetPriority;                                  // 0x0134(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreViewpointYaw;                                      // 0x0138(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreViewpointPitch;                                    // 0x0139(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x6];                                       // 0x013A(0x0006) MISSED OFFSET
	TArray<struct FLookTarget>                         Targets;                                                  // 0x0140(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.NPCHeadTrackingComponent");
		return ptr;
	}


	void SetTrackingMode(ETrackingMode* NewMode);
	void ResetLookTargets();
	void ResetLookRotation();
	void RemoveLookTarget(class AActor** LookTarget);
	void STATIC_RemoveActorLookTarget(class AActor** Actor, class AActor** LookTarget);
	void AddLookTarget(class AActor** LookTarget, int* Priority, struct FName* Node, ELookTargetType* Type);
	void STATIC_AddActorLookTarget(class AActor** Actor, class AActor** LookTarget, int* Priority, struct FName* Node, ELookTargetType* Type);
};


// Class GunfireRuntime.GroundCheckParams
// 0x0020 (0x0048 - 0x0028)
class UGroundCheckParams : public UObject
{
public:
	EGroundCheckType                                   GroundCheckType;                                          // 0x0028(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              CastDistance;                                             // 0x002C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TraceCapsuleRadiusScale;                                  // 0x0030(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinGroundDistance;                                        // 0x0034(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TEnumAsByte<EPhysicalSurface>>              ValidSurfaceTypes;                                        // 0x0038(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.GroundCheckParams");
		return ptr;
	}

};


// Class GunfireRuntime.GroundCheckParams_Default
// 0x0000 (0x0048 - 0x0048)
class UGroundCheckParams_Default : public UGroundCheckParams
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.GroundCheckParams_Default");
		return ptr;
	}

};


// Class GunfireRuntime.OnGroundCondition
// 0x0028 (0x0058 - 0x0030)
class UOnGroundCondition : public UCondition
{
public:
	EGroundCheckType                                   GroundCheckType;                                          // 0x0030(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              CastDistance;                                             // 0x0034(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MinHitDistance;                                           // 0x0038(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TraceCapsuleRadiusScale;                                  // 0x003C(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TEnumAsByte<EPhysicalSurface>>              ValidSurfaceTypes;                                        // 0x0040(0x0010) (ZeroConstructor, Deprecated, NativeAccessSpecifierPrivate)
	class UClass*                                      GroundCheckParams;                                        // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.OnGroundCondition");
		return ptr;
	}

};


// Class GunfireRuntime.PathFollowingComponentGunfire
// 0x0018 (0x02B8 - 0x02A0)
class UPathFollowingComponentGunfire : public UPathFollowingComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x02A0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PathFollowingComponentGunfire");
		return ptr;
	}

};


// Class GunfireRuntime.PathSharingManager
// 0x0058 (0x0080 - 0x0028)
class UPathSharingManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x58];                                      // 0x0028(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PathSharingManager");
		return ptr;
	}

};


// Class GunfireRuntime.PathSharingFilter
// 0x0000 (0x0048 - 0x0048)
class UPathSharingFilter : public UNavigationQueryFilter
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PathSharingFilter");
		return ptr;
	}

};


// Class GunfireRuntime.PathSharingFilter_Default
// 0x0000 (0x0048 - 0x0048)
class UPathSharingFilter_Default : public UPathSharingFilter
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PathSharingFilter_Default");
		return ptr;
	}

};


// Class GunfireRuntime.PersistenceKeysComponent
// 0x0050 (0x0148 - 0x00F8)
class UPersistenceKeysComponent : public UActorComponent
{
public:
	TMap<struct FName, struct FName>                   KeyValues;                                                // 0x00F8(0x0050) (ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PersistenceKeysComponent");
		return ptr;
	}


	void SetKey(struct FName* Key, struct FName* Value);
	void RemoveKey(struct FName* Key);
	bool HasKey(struct FName* Key);
	struct FName GetKeyValue(struct FName* Key);
	void AddKey(struct FName* Key);
};


// Class GunfireRuntime.PhysCastCondition
// 0x0038 (0x0068 - 0x0030)
class UPhysCastCondition : public UCondition
{
public:
	TEnumAsByte<ECollisionChannel>                     TraceChannel;                                             // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	struct FName                                       RefNode;                                                  // 0x0034(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Distance;                                                 // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TraceComplex;                                             // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	TArray<class UClass*>                              ValidActorTypes;                                          // 0x0048(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TEnumAsByte<EPhysicalSurface>>              ValidSurfaceTypes;                                        // 0x0058(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PhysCastCondition");
		return ptr;
	}

};


// Class GunfireRuntime.PhysicsSoundInstance
// 0x0018 (0x0040 - 0x0028)
class UPhysicsSoundInstance : public UObject
{
public:
	class UAudioComponent*                             CurrentComponent;                                         // 0x0028(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PhysicsSoundInstance");
		return ptr;
	}


	void OnImpactTimerExpired();
	void AudioComponentFinished();
};


// Class GunfireRuntime.PhysicsActorGunfire
// 0x0030 (0x0360 - 0x0330)
class APhysicsActorGunfire : public AActor
{
public:
	TArray<struct FPhysicsImpactSoundInfo>             ActivePhysicsSoundInfoList;                               // 0x0330(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<class UPhysicsSoundInstance*>               SpawnedSoundInstances;                                    // 0x0340(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	int                                                SleepThreshold;                                           // 0x0350(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              VelocityNoiseFloor;                                       // 0x0354(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                LowVelocityEncountered;                                   // 0x0358(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x035C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PhysicsActorGunfire");
		return ptr;
	}


	void SoundInstanceFinished(class UObject** AudioComponent);
	void OnHitCallback(class UPrimitiveComponent** HitComp, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, struct FVector* NormalImpulse, struct FHitResult* Hit);
};


// Class GunfireRuntime.PhysicsBounds
// 0x00E0 (0x0410 - 0x0330)
class APhysicsBounds : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	class UClass*                                      Type;                                                     // 0x0338(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        MeshBounds;                                               // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBeginAffectCharacterEvent;                              // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEndAffectCharacterEvent;                                // 0x0358(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              TerminalVelocity;                                         // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GravityScale;                                             // 0x036C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              JumpImpulseScale;                                         // 0x0370(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Priority;                                                 // 0x0374(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FluidFriction;                                            // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bWaterVolume : 1;                                         // 0x037C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bPhysicsOnContact : 1;                                    // 0x037C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x037D(0x0003) MISSED OFFSET
	EPhysicsBoundsForceType                            XForceType;                                               // 0x0380(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0381(0x0003) MISSED OFFSET
	float                                              XPushForce;                                               // 0x0384(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              XPushMaxVelocity;                                         // 0x0388(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x038C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 XPushForceCurve;                                          // 0x0390(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              XPullForce;                                               // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              XPullFriction;                                            // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLimitXMinVelocity;                                       // 0x03A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x03A1(0x0003) MISSED OFFSET
	float                                              XMinVelocity;                                             // 0x03A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLimitXMaxVelocity;                                       // 0x03A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x03A9(0x0003) MISSED OFFSET
	float                                              XMaxVelocity;                                             // 0x03AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPhysicsBoundsForceType                            YForceType;                                               // 0x03B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x3];                                       // 0x03B1(0x0003) MISSED OFFSET
	float                                              YPushForce;                                               // 0x03B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              YPushMaxVelocity;                                         // 0x03B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x4];                                       // 0x03BC(0x0004) MISSED OFFSET
	class UCurveFloat*                                 YPushForceCurve;                                          // 0x03C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              YPullForce;                                               // 0x03C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              YPullFriction;                                            // 0x03CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLimitYMinVelocity;                                       // 0x03D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData08[0x3];                                       // 0x03D1(0x0003) MISSED OFFSET
	float                                              YMinVelocity;                                             // 0x03D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLimitYMaxVelocity;                                       // 0x03D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData09[0x3];                                       // 0x03D9(0x0003) MISSED OFFSET
	float                                              YMaxVelocity;                                             // 0x03DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EPhysicsBoundsForceType                            ZForceType;                                               // 0x03E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData10[0x3];                                       // 0x03E1(0x0003) MISSED OFFSET
	float                                              ZPushForce;                                               // 0x03E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ZPushMaxVelocity;                                         // 0x03E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x4];                                       // 0x03EC(0x0004) MISSED OFFSET
	class UCurveFloat*                                 ZPushForceCurve;                                          // 0x03F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ZPullForce;                                               // 0x03F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ZPullFriction;                                            // 0x03FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLimitZMinVelocity;                                       // 0x0400(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData12[0x3];                                       // 0x0401(0x0003) MISSED OFFSET
	float                                              ZMinVelocity;                                             // 0x0404(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLimitZMaxVelocity;                                       // 0x0408(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0409(0x0003) MISSED OFFSET
	float                                              ZMaxVelocity;                                             // 0x040C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PhysicsBounds");
		return ptr;
	}


	void OnEndAffectCharacter(class ACharacter** Character, class AActor** NewBounds);
	void OnBeginAffectCharacter(class ACharacter** Character, class AActor** OldBounds);
	float GetForceToApplyScale(class ACharacter** Character);
};


// Class GunfireRuntime.PhysicsBoundsType
// 0x0008 (0x0030 - 0x0028)
class UPhysicsBoundsType : public UObject
{
public:
	bool                                               bOverrideWaterSurfaceType;                                // 0x0028(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<EPhysicalSurface>                      WaterSurfaceType;                                         // 0x0029(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PhysicsBoundsType");
		return ptr;
	}

};


// Class GunfireRuntime.PhysicsBoundsInterface
// 0x0000 (0x0028 - 0x0028)
class UPhysicsBoundsInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PhysicsBoundsInterface");
		return ptr;
	}


	bool IsWaterBounds();
	float GetWaterLine();
	class UClass* GetBoundsType();
	int GetBoundsPriority();
	bool ConfirmOverlap(class USceneComponent** Component);
};


// Class GunfireRuntime.PhysicsBoundsUtil
// 0x0000 (0x0028 - 0x0028)
class UPhysicsBoundsUtil : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PhysicsBoundsUtil");
		return ptr;
	}


	bool STATIC_IsWaterBounds(class AActor** Bounds);
	TEnumAsByte<EPhysicalSurface> STATIC_GetWaterSurfaceType(class UClass** BoundsType);
	bool STATIC_GetWaterLine(class AActor** Bounds, float* OutWaterLine);
	class UClass* STATIC_GetBoundsType(class AActor** Bounds);
};


// Class GunfireRuntime.PhysicsUtil
// 0x0000 (0x0028 - 0x0028)
class UPhysicsUtil : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PhysicsUtil");
		return ptr;
	}


	void STATIC_RestoreRigidBodies(TArray<struct FCachedPhysicsComponent>* CachedComponents);
	void STATIC_ResetOverlaps(class UPrimitiveComponent** Component);
	class UPhysicalMaterial* STATIC_GetPhysicsMaterial(class UPrimitiveComponent** Component);
	int STATIC_DisableRigidBodies(class AActor** Actor, TArray<struct FCachedPhysicsComponent>* CachedComponents);
};


// Class GunfireRuntime.PlacementHelperComponent
// 0x0018 (0x0110 - 0x00F8)
class UPlacementHelperComponent : public UActorComponent
{
public:
	struct FName                                       AlignNode;                                                // 0x00F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlignTolerance;                                           // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlignRadius;                                              // 0x0104(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DesiredHeight;                                            // 0x0108(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUpdateOnLevelLoad;                                       // 0x010C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x010D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PlacementHelperComponent");
		return ptr;
	}


	void OnPostEditMove(bool* bFinished);
};


// Class GunfireRuntime.PlatformCameraState
// 0x0160 (0x01A0 - 0x0040)
class UPlatformCameraState : public UCameraState
{
public:
	float                                              DistanceMin;                                              // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceMax;                                              // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistancePitchScalarMin;                                   // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistancePitchScalarMax;                                   // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceAdjustSmoothTime;                                 // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              YawSpeed;                                                 // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchMin;                                                 // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchMax;                                                 // 0x005C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchSpeed;                                               // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraRotateSmoothTime;                                   // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeightOffset;                                             // 0x0068(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeftRightOffset;                                          // 0x006C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PivotSmoothTimeOnGround;                                  // 0x0070(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PivotSmoothTimeInAir;                                     // 0x0074(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PivotSmoothTimeOverride;                                  // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExtraSmooth;                                              // 0x007C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoCenter;                                               // 0x0080(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoCenterYaw;                                            // 0x0081(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0082(0x0002) MISSED OFFSET
	float                                              AutoCenterYawInterpSpeed;                                 // 0x0084(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoCenterPitchInterpSpeed;                               // 0x0088(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoCenterSmoothTime;                                     // 0x008C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoCenterDelay;                                          // 0x0090(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoCenterPitch;                                          // 0x0094(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoCenterFallPitch;                                      // 0x0098(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoCenterFallRefStart;                                   // 0x009C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoCenterFallRefEnd;                                     // 0x00A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GroundSlopeScalar;                                        // 0x00A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FadeCharacterDistance;                                    // 0x00A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     DesiredUp;                                                // 0x00AC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DoCameraAvoidance;                                        // 0x00B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00B9(0x0003) MISSED OFFSET
	float                                              CameraAvoidanceAngleThresh;                               // 0x00BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0xE0];                                      // 0x00C0(0x00E0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PlatformCameraState");
		return ptr;
	}

};


// Class GunfireRuntime.PlayerCameraManagerGunfire
// 0x0010 (0x2670 - 0x2660)
class APlayerCameraManagerGunfire : public APlayerCameraManager
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x2660(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PlayerCameraManagerGunfire");
		return ptr;
	}


	void SetFadeLock(bool* Enabled);
};


// Class GunfireRuntime.PlayStateComponent
// 0x0048 (0x0140 - 0x00F8)
class UPlayStateComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnStateChangedEvent;                                      // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnStateFinishedTransitioning;                             // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UPlayStateSet*                               StateSet;                                                 // 0x0118(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPlayStateContext>                   ActiveStates;                                             // 0x0120(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UPlayState*                                  CurrentState;                                             // 0x0130(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0138(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PlayStateComponent");
		return ptr;
	}


	bool IsLocallyControlled();
	class APlayerControllerGunfire* GetOwningPlayerController();
	float GetElapsedTransitionTime();
	class UPlayStateEffect* GetActiveEffect(class UClass** Class);
};


// Class GunfireRuntime.PlayStateUtils
// 0x0000 (0x0028 - 0x0028)
class UPlayStateUtils : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PlayStateUtils");
		return ptr;
	}


	void STATIC_RequestPlayStates(TArray<struct FName>* StateNames, class UObject** Context, struct FName* Reason);
	void STATIC_RequestPlayState(struct FName* NewStateName, class UObject** Context, struct FName* Reason);
	bool STATIC_IsTransitioningPlayStates(class UObject** WorldContextObject);
	struct FName STATIC_GetRequestedPlayStateName(class UObject** Context, struct FName* Reason);
	struct FName STATIC_GetCurrentPlayStateName(class UObject** WorldContextObject);
	class UPlayStateEffect* STATIC_GetActivePlayStateEffect(class UObject** WorldContextObject, class UClass** Class);
	void STATIC_ClearRequestedPlayStatesForAllReasons(class UObject** Context);
	void STATIC_ClearRequestedPlayState(class UObject** Context, struct FName* Reason);
};


// Class GunfireRuntime.PlayState
// 0x0020 (0x0048 - 0x0028)
class UPlayState : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FName                                       StateName;                                                // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPlayStateEffect*>                    Effects;                                                  // 0x0038(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PlayState");
		return ptr;
	}

};


// Class GunfireRuntime.PlayStateSet
// 0x0020 (0x0050 - 0x0030)
class UPlayStateSet : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	TArray<class UPlayState*>                          States;                                                   // 0x0038(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FName                                       DefaultState;                                             // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PlayStateSet");
		return ptr;
	}

};


// Class GunfireRuntime.PlayStateEffect_ScreenFade
// 0x0018 (0x0048 - 0x0030)
class UPlayStateEffect_ScreenFade : public UPlayStateEffect
{
public:
	float                                              FadeDuration;                                             // 0x0030(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bHideScreen;                                              // 0x0034(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bFadeAudio;                                               // 0x0035(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
	struct FLinearColor                                FadeColor;                                                // 0x0038(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PlayStateEffect_ScreenFade");
		return ptr;
	}


	bool IsHidingScreen();
};


// Class GunfireRuntime.PlayStateEffect_HideHUD
// 0x0008 (0x0038 - 0x0030)
class UPlayStateEffect_HideHUD : public UPlayStateEffect
{
public:
	bool                                               bHUDIsVisible;                                            // 0x0030(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PlayStateEffect_HideHUD");
		return ptr;
	}

};


// Class GunfireRuntime.PlayStateEffect_Input
// 0x0008 (0x0038 - 0x0030)
class UPlayStateEffect_Input : public UPlayStateEffect
{
public:
	bool                                               bAllowsGameInput;                                         // 0x0030(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PlayStateEffect_Input");
		return ptr;
	}

};


// Class GunfireRuntime.PooledItem
// 0x0010 (0x0038 - 0x0028)
class UPooledItem : public UObject
{
public:
	class UObject*                                     Value;                                                    // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Timeout;                                                  // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PooledItem");
		return ptr;
	}

};


// Class GunfireRuntime.PooledActor
// 0x0020 (0x0058 - 0x0038)
class UPooledActor : public UPooledItem
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0038(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PooledActor");
		return ptr;
	}

};


// Class GunfireRuntime.PooledTracer
// 0x0000 (0x0058 - 0x0058)
class UPooledTracer : public UPooledActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PooledTracer");
		return ptr;
	}

};


// Class GunfireRuntime.PooledSceneComponent
// 0x0020 (0x0058 - 0x0038)
class UPooledSceneComponent : public UPooledItem
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0038(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PooledSceneComponent");
		return ptr;
	}

};


// Class GunfireRuntime.PooledParticleSystemComponent
// 0x0000 (0x0058 - 0x0058)
class UPooledParticleSystemComponent : public UPooledSceneComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PooledParticleSystemComponent");
		return ptr;
	}

};


// Class GunfireRuntime.PossessableComponent
// 0x0010 (0x0108 - 0x00F8)
class UPossessableComponent : public UActorComponent
{
public:
	struct FName                                       TagForObjectToPossess;                                    // 0x00F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               PossessLocalMalePlayer;                                   // 0x0100(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               PossessLocalFemalePlayer;                                 // 0x0101(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DisableAI;                                                // 0x0102(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0103(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PossessableComponent");
		return ptr;
	}

};


// Class GunfireRuntime.PostProcessSkylightComponent
// 0x0010 (0x07B0 - 0x07A0)
class UPostProcessSkylightComponent : public UPostProcessComponent
{
public:
	class UClass*                                      SkyLightActorCls;                                         // 0x07A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkyLightComponent*                          SkyLight;                                                 // 0x07A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.PostProcessSkylightComponent");
		return ptr;
	}


	class USkyLightComponent* GetCurrentSkylight();
};


// Class GunfireRuntime.ProceduralDamageableActor
// 0x0040 (0x0458 - 0x0418)
class AProceduralDamageableActor : public ADamageableActor
{
public:
	TArray<class UClass*>                              TriggerDamageTypes;                                       // 0x0418(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FVector>                             Vertices;                                                 // 0x0428(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<int>                                        Triangles;                                                // 0x0438(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FLinearColor>                        VertexColors;                                             // 0x0448(0x0010) (BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ProceduralDamageableActor");
		return ptr;
	}


	bool IsTriggerDamageType(struct FDamageInfo* DamageInfo, TArray<class UClass*>* TriggerDamageClasses);
	void GetVertices(class UStaticMeshComponent** StaticMeshComponent);
	void GetTriangleIndices(class UStaticMeshComponent** StaticMeshComponent);
	void ApplyRadialVertexColor(struct FVector* CenterPoint, float* Radius, float* Falloff);
};


// Class GunfireRuntime.ProjectileBase
// 0x0158 (0x0488 - 0x0330)
class AProjectileBase : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	class AActor*                                      Cause;                                                    // 0x0338(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxLifetime;                                              // 0x0340(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0344(0x0004) MISSED OFFSET
	class UShapeComponent*                             Collision;                                                // 0x0348(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProjectileMovementComponentGunfire*         ProjectileMovement;                                       // 0x0350(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UReplicatedMovementComponent*                ProjectileReplication;                                    // 0x0358(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UActionComponent*                            ActionComp;                                               // 0x0360(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                             Loop;                                                     // 0x0368(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               DestroyAfterImpactEffects;                                // 0x0370(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               AttachOnHit;                                              // 0x0371(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0372(0x0006) MISSED OFFSET
	class FString                                      AttachIgnoreBones;                                        // 0x0378(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       TargetCooldown;                                           // 0x0388(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TargetCooldownTime;                                       // 0x0390(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0394(0x0004) MISSED OFFSET
	TArray<class UClass*>                              Actions;                                                  // 0x0398(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              PostImpactActions;                                        // 0x03A8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                               DestroyBreakables;                                        // 0x03B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bActivateNearbyCharacters;                                // 0x03B9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x2];                                       // 0x03BA(0x0002) MISSED OFFSET
	float                                              AdditionalActivateRadius;                                 // 0x03BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ApplyDamage;                                              // 0x03C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData05[0x3];                                       // 0x03C1(0x0003) MISSED OFFSET
	float                                              DamageScalar;                                             // 0x03C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DamageMod;                                                // 0x03C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData06[0x4];                                       // 0x03CC(0x0004) MISSED OFFSET
	class UClass*                                      DamageType;                                               // 0x03D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                PowerOverride;                                            // 0x03D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               Evadable;                                                 // 0x03DC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bPenetrate;                                               // 0x03DD(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData07[0x2];                                       // 0x03DE(0x0002) MISSED OFFSET
	int                                                MaxPenetrations;                                          // 0x03E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PenetrateDelay;                                           // 0x03E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PenetrationDamageScalarInitial;                           // 0x03E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PenetrationDamageScalarIncrement;                         // 0x03EC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UClass>>               PenetratableClasses;                                      // 0x03F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UClass>>               IgnoreClasses;                                            // 0x0400(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	class UClass*                                      CameraShake;                                              // 0x0410(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InnerRadius;                                              // 0x0418(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              OuterRadius;                                              // 0x041C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Falloff;                                                  // 0x0420(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LoopFadeInDuration;                                       // 0x0424(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoundBase*                                  ImpactSound;                                              // 0x0428(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      ImpactEffect;                                             // 0x0430(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             ImpactVFX;                                                // 0x0438(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData08[0x8];                                       // 0x0440(0x0008) MISSED OFFSET
	class UWorld*                                      SimulationWorld;                                          // 0x0448(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData09[0x18];                                      // 0x0450(0x0018) MISSED OFFSET
	bool                                               bIsDamageable;                                            // 0x0468(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData10[0x7];                                       // 0x0469(0x0007) MISSED OFFSET
	TArray<class AProjectileBase*>                     ProjectileGroup;                                          // 0x0470(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	bool                                               bHasGroupDoneHit;                                         // 0x0480(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData11[0x7];                                       // 0x0481(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ProjectileBase");
		return ptr;
	}


	bool ValidateHit(struct FHitResult* Hit, bool* bSimulating);
	void SetMaxLifeTime(float* NewMaxLifeTime);
	void OnStop(struct FHitResult* Hit);
	void OnProjectileStop();
	void OnProjectilePenetrate(struct FHitResult* Hit);
	void OnProjectileHit(struct FHitResult* Hit);
	void OnNotifyTakeDamage(struct FDamageInfo* DamageInfo);
	void OnHit(struct FHitResult* Hit);
	void MulticastStop();
	void MulticastImpactEffect(struct FReplicatedHit* ReplicatedHit, bool* bFinalHit);
	bool IsSprayHit(struct FHitResult* Hit);
	void IncrementNumPenetrations();
	int GetNumPenetrations();
};


// Class GunfireRuntime.ProjectileSphere
// 0x0000 (0x0488 - 0x0488)
class AProjectileSphere : public AProjectileBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ProjectileSphere");
		return ptr;
	}

};


// Class GunfireRuntime.ProjectileBox
// 0x0000 (0x0488 - 0x0488)
class AProjectileBox : public AProjectileBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ProjectileBox");
		return ptr;
	}

};


// Class GunfireRuntime.ProjectileMovementComponentGunfire
// 0x0040 (0x0240 - 0x0200)
class UProjectileMovementComponentGunfire : public UProjectileMovementComponent
{
public:
	bool                                               Penetrate;                                                // 0x0200(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0201(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnProjectileHit;                                          // 0x0208(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               bApplyPostBounceGravityScale;                             // 0x0218(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0219(0x0003) MISSED OFFSET
	float                                              PostBounceGravityScale;                                   // 0x021C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BounceNormalAlignmentAlpha;                               // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PenetrateVelocityModifier;                                // 0x0224(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bApplyPostBounceVelocityClamp;                            // 0x0228(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0229(0x0003) MISSED OFFSET
	struct FVector2D                                   PostBounceMinMaxVelocity;                                 // 0x022C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0xC];                                       // 0x0234(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ProjectileMovementComponentGunfire");
		return ptr;
	}


	struct FVector SimulateBounce(struct FVector* CurrentVelocity, struct FHitResult* Hit, float* OutGravityScale);
	void SetPenetrate(bool* bShouldPenetrate);
};


// Class GunfireRuntime.ProjectileVisualization
// 0x0078 (0x03A8 - 0x0330)
class AProjectileVisualization : public AActor
{
public:
	class UStaticMesh*                                 PathMesh;                                                 // 0x0330(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          PathMaterial;                                             // 0x0338(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MeshScale;                                                // 0x0340(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0344(0x0004) MISSED OFFSET
	class UClass*                                      ImpactActorClass;                                         // 0x0348(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseNoImpactActorClass;                                   // 0x0350(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0351(0x0007) MISSED OFFSET
	class UClass*                                      NoImpactActorClass;                                       // 0x0358(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ColorParameter;                                           // 0x0360(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUsesTargetColors;                                        // 0x0368(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bInterpolateTargetColor;                                  // 0x0369(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x2];                                       // 0x036A(0x0002) MISSED OFFSET
	struct FTargetingColorParams                       TargetingColors;                                          // 0x036C(0x0014) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bDrawPathAsMarquee;                                       // 0x0380(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0381(0x0003) MISSED OFFSET
	struct FVector2D                                   LineSizes;                                                // 0x0384(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MarqueeSpeed;                                             // 0x038C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      ImpactActor;                                              // 0x0390(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USplineMeshComponent*>                SplineMeshes;                                             // 0x0398(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ProjectileVisualization");
		return ptr;
	}


	void STATIC_VisualizeProjectileFromClass(class AActor** Cause, class UClass** ProjectileClass, struct FVector* StartLocation, struct FRotator* StartDirection, struct FProjectileVisualizationParams* Params, struct FProjectileVisualizationContext* Context);
	void STATIC_VisualizeProjectile(class AActor** Cause, class AActor** Projectile, struct FVector* StartLocation, struct FRotator* StartDirection, struct FProjectileVisualizationParams* Params, struct FProjectileVisualizationContext* Context);
	bool PreDraw(struct FProjectileVisualizationParams* Params, struct FProjectileVisualizationContext* Context);
	void PostDrawPath(struct FProjectileVisualizationParams* Params, struct FProjectileVisualizationContext* Context, struct FLinearColor* DrawColor);
	void STATIC_ClearProjectileVisualization(struct FProjectileVisualizationContext* Context);
};


// Class GunfireRuntime.QuestEntityComponent
// 0x0000 (0x00F8 - 0x00F8)
class UQuestEntityComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.QuestEntityComponent");
		return ptr;
	}

};


// Class GunfireRuntime.QuestLocation
// 0x0000 (0x02A0 - 0x02A0)
class UQuestLocation : public UQuestComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.QuestLocation");
		return ptr;
	}

};


// Class GunfireRuntime.QuestStateCondition
// 0x0010 (0x0040 - 0x0030)
class UQuestStateCondition : public UCondition
{
public:
	struct FName                                       QuestNameID;                                              // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EQuestState                                        QuestState;                                               // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.QuestStateCondition");
		return ptr;
	}

};


// Class GunfireRuntime.QuestObjective
// 0x0088 (0x0180 - 0x00F8)
class UQuestObjective : public UActorComponent
{
public:
	struct FText                                       Label;                                                    // 0x00F8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       Description;                                              // 0x0110(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                CounterMax;                                               // 0x0128(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Hidden;                                                   // 0x012C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Pinned;                                                   // 0x012D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQuestState                                        State;                                                    // 0x012E(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQuestResult                                       Result;                                                   // 0x012F(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Counter;                                                  // 0x0130(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              Timer;                                                    // 0x0134(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      RefActor;                                                 // 0x0138(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObjectiveActivated;                                     // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObjectiveCompleted;                                     // 0x0150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObjectiveTimerComplete;                                 // 0x0160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnObjectiveUpdated;                                       // 0x0170(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.QuestObjective");
		return ptr;
	}


	void SetTimer(float* Time);
	void SetRefActor(class AActor** Actor);
	void SetPinned(bool* ShouldBePinned);
	void SetCounter(int* Current, int* Max);
	void ResetObjective();
	void ResetCounter();
	void OnRep_ObjectiveData();
	void OnInitializeQuest();
	bool IsObjectiveComplete();
	bool IsObjectiveActive();
	void IncrementCounter(bool* AutoComplete);
	struct FName GetNameID();
	void CompleteObjective(EQuestResult* ObjectiveResult);
	void ClearTimer(bool* bSilent);
	void ActivateObjective(bool* AutoCompleteActiveObjectives);
};


// Class GunfireRuntime.RangedWeaponInstanceData
// 0x0010 (0x0060 - 0x0050)
class URangedWeaponInstanceData : public UEquipmentInstanceData
{
public:
	int                                                Ammo;                                                     // 0x0050(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                AmmoInClip;                                               // 0x0054(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0058(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.RangedWeaponInstanceData");
		return ptr;
	}

};


// Class GunfireRuntime.ReloadCondition
// 0x0000 (0x0030 - 0x0030)
class UReloadCondition : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ReloadCondition");
		return ptr;
	}

};


// Class GunfireRuntime.RangedWeaponProfile
// 0x0148 (0x0170 - 0x0028)
class URangedWeaponProfile : public UObject
{
public:
	float                                              FiringSpreadIncrement;                                    // 0x0028(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InitialFiringSpread;                                      // 0x002C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 IncrementCurve;                                           // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IncrementRecoveryDelay;                                   // 0x0038(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IncrementRecoveryTime;                                    // 0x003C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MoveRefIdleAdjustTime;                                    // 0x0040(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MoveRefMovingAdjustTime;                                  // 0x0044(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringSpreadDecay;                                        // 0x0048(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringSpreadDecayDelay;                                   // 0x004C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bApplyDecayWhileFiring;                                   // 0x0050(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseInitialFiringSpreadDecay;                             // 0x0051(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0052(0x0002) MISSED OFFSET
	float                                              InitialFiringSpreadDecay;                                 // 0x0054(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseInitialAimSnapFiringSpreadDecay;                      // 0x0058(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	float                                              InitialAimSnapFiringSpreadDecay;                          // 0x005C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringSpreadScopeDecay;                                   // 0x0060(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringSpreadScopeDecayDelay;                              // 0x0064(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseInitialFiringSpreadScopeDecay;                        // 0x0068(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	float                                              InitialFiringSpreadScopeDecay;                            // 0x006C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseInitialAimSnapFiringSpreadScopeDecay;                 // 0x0070(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	float                                              InitialAimSnapFiringSpreadScopeDecay;                     // 0x0074(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringSpreadMin;                                          // 0x0078(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringSpreadMax;                                          // 0x007C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringSpreadMoveRef;                                      // 0x0080(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringSpreadMoveMin;                                      // 0x0084(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringSpreadMoveMax;                                      // 0x0088(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringSpreadAimMin;                                       // 0x008C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringSpreadAimMax;                                       // 0x0090(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringSpreadAimMoveRef;                                   // 0x0094(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringSpreadAimMoveMin;                                   // 0x0098(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringSpreadAimMoveMax;                                   // 0x009C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringSpreadAimScopeMin;                                  // 0x00A0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FiringSpreadAimScopeMax;                                  // 0x00A4(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoilHorizontalMin;                                      // 0x00A8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoilHorizontalMax;                                      // 0x00AC(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoilVertical;                                           // 0x00B0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoilSpeed;                                              // 0x00B4(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoilRecover;                                            // 0x00B8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoilRecoverTime;                                        // 0x00BC(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoilHorizontalScopeScale;                               // 0x00C0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoilVerticalScopeScale;                                 // 0x00C4(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RecoilSpeedScopeScale;                                    // 0x00C8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InitialSwayDelay;                                         // 0x00CC(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InitialSwayBlendInTime;                                   // 0x00D0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwayScalar;                                               // 0x00D4(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwayScalarAim;                                            // 0x00D8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwayScalarScope;                                          // 0x00DC(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimAdjustMin;                                             // 0x00E0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimAdjustMax;                                             // 0x00E4(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimAdjustScopeMin;                                        // 0x00E8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimAdjustScopeMax;                                        // 0x00EC(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimAdjustDistance;                                        // 0x00F0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimAdjustFalloff;                                         // 0x00F4(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimAdjustScopeDistance;                                   // 0x00F8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimAdjustScopeFalloff;                                    // 0x00FC(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputDragDistance;                                        // 0x0100(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputDragFalloff;                                         // 0x0104(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputDragScopeDistance;                                   // 0x0108(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputDragScopeFalloff;                                    // 0x010C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SoundRadius;                                              // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WhizBySoundRadius;                                        // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceCameraScopeBlendInOutTime;                          // 0x0118(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0119(0x0003) MISSED OFFSET
	float                                              CameraScopeBlendInOutTime;                                // 0x011C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScopedCameraAimSpeedScalar;                               // 0x0120(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0124(0x0004) MISSED OFFSET
	class UClass*                                      CameraShake;                                              // 0x0128(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraShakeScale;                                         // 0x0130(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraShakeAimScale;                                      // 0x0134(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraShakeScopeScale;                                    // 0x0138(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AIShootTime;                                              // 0x013C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AISustainedFireTime;                                      // 0x0140(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      AIBurstCountMin;                                          // 0x0144(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      AIBurstCountMax;                                          // 0x0145(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x2];                                       // 0x0146(0x0002) MISSED OFFSET
	float                                              AIAimSpreadIncrement;                                     // 0x0148(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AIAimSpreadDecay;                                         // 0x014C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AIAimSpreadMin;                                           // 0x0150(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AIAimSpreadMax;                                           // 0x0154(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AIFiringSpreadScalar;                                     // 0x0158(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AIDamageScalar;                                           // 0x015C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AIOptimalRange;                                           // 0x0160(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AIReadyTime;                                              // 0x0164(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AIReadyLingerTime;                                        // 0x0168(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AIAttackPressure;                                         // 0x016C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.RangedWeaponProfile");
		return ptr;
	}

};


// Class GunfireRuntime.RangeToTargetCondition
// 0x0028 (0x0058 - 0x0030)
class URangeToTargetCondition : public UCondition
{
public:
	struct FName                                       BlackboardKey;                                            // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bIgnoreSoftTarget;                                        // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              RangeMin;                                                 // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              RangeMax;                                                 // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              HeightDiff;                                               // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              AngleRef;                                                 // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              Arc;                                                      // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EVisState                                          VisState;                                                 // 0x0050(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EYesNo                                             HasPath;                                                  // 0x0051(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EYesNo                                             HasDirectPath;                                            // 0x0052(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EYesNo                                             HasLOS;                                                   // 0x0053(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EYesNo                                             HasSphereLOS;                                             // 0x0054(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EYesNo                                             HasLOF;                                                   // 0x0055(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	EYesNo                                             InView;                                                   // 0x0056(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0057(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.RangeToTargetCondition");
		return ptr;
	}

};


// Class GunfireRuntime.RayCastCondition
// 0x0008 (0x0070 - 0x0068)
class URayCastCondition : public UPhysCastCondition
{
public:
	float                                              Angle;                                                    // 0x0068(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              HeightOffset;                                             // 0x006C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.RayCastCondition");
		return ptr;
	}

};


// Class GunfireRuntime.ReceptacleComponent
// 0x0070 (0x0168 - 0x00F8)
class UReceptacleComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET
	TArray<struct FReceptacleSlot>                     Slots;                                                    // 0x0100(0x0010) (Edit, ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	bool                                               Blocked;                                                  // 0x0110(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0111(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnReceptacleChanged;                                      // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnReceptacleFull;                                         // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnReceptacleEmpty;                                        // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    AfterItemAdded;                                           // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    AfterItemRemoved;                                         // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ReceptacleComponent");
		return ptr;
	}


	void RequestReturnItemToInventory(class ACharacterGunfire** Subject);
	void RequestAddItemFromInventoryById(class UInventoryComponent** Inventory, int* ItemID);
	void RequestAddItemFromInventoryByClass(class UInventoryComponent** Inventory, class UClass** ItemClass);
	void RequestAddItemFromInventory(class ACharacterGunfire** Subject);
	void RemoveItem(int* SlotID);
	bool IsValid(class UClass** ItemClass, struct FReceptacleSlot* Slot);
	bool IsFull();
	bool IsEmpty();
	bool HasInteractableSlot();
	TArray<struct FReceptacleSlot> GetSlots();
	bool CanAddItemOfClass(class UClass** ItemClass);
	void AddItem(int* SlotID, class UClass** ItemClass);
};


// Class GunfireRuntime.RegionNotifyInterface
// 0x0000 (0x0028 - 0x0028)
class URegionNotifyInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.RegionNotifyInterface");
		return ptr;
	}


	void OnNotifyRegionEntered(struct FName* Region);
};


// Class GunfireRuntime.ReplicatedMovementComponent
// 0x0068 (0x0160 - 0x00F8)
class UReplicatedMovementComponent : public UActorComponent
{
public:
	uint16_t                                           BufferTime;                                               // 0x00F8(0x0002) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00FA(0x0002) MISSED OFFSET
	float                                              ExtrapolationSmoothTime;                                  // 0x00FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExtrapolationTeleportThresh;                              // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FReplicatedMovementInfo                     MovementInfo;                                             // 0x0104(0x0030) (Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x2C];                                      // 0x0134(0x002C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ReplicatedMovementComponent");
		return ptr;
	}


	void ServerMoveUpdate(struct FReplicatedMovementInfo* Info);
	void OnRep_MovementInfo();
	void ClientAckMove(uint16_t* MoveTime);
};


// Class GunfireRuntime.ResourceDef
// 0x0010 (0x0038 - 0x0028)
class UResourceDef : public UObject
{
public:
	TArray<struct FResourceType>                       ResourceTypes;                                            // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ResourceDef");
		return ptr;
	}

};


// Class GunfireRuntime.ResourceSpawnManager
// 0x0030 (0x0128 - 0x00F8)
class UResourceSpawnManager : public UActorComponent
{
public:
	class UClass*                                      ResourceDef;                                              // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Level;                                                    // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0104(0x0001) MISSED OFFSET
	bool                                               Generated;                                                // 0x0105(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0106(0x0002) MISSED OFFSET
	TArray<struct FTileResources>                      Resources;                                                // 0x0108(0x0010) (ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0118(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ResourceSpawnManager");
		return ptr;
	}


	void OnUninitialize();
	void OnSpawnListLoaded(int* TileID);
	void OnSetTileActive(int* TileID, bool* Active);
	void OnGenerateResources();
};


// Class GunfireRuntime.ReticulePiece
// 0x0060 (0x0088 - 0x0028)
class UReticulePiece : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	EReticuleAlignment                                 Alignment;                                                // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              RadialOffset;                                             // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   ScreenOffset;                                             // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AxisAngle;                                                // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PositionScalar;                                           // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTargetingColorParams                       TargetingColors;                                          // 0x0048(0x0014) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                              DrawScale;                                                // 0x005C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EReticulePieceDisableMode                          DisableMode;                                              // 0x0060(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLimitToSpreadThreshold;                                  // 0x0061(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0062(0x0002) MISSED OFFSET
	float                                              SpreadThreshold;                                          // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLimitToMaxRelativeRange;                                 // 0x0068(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	float                                              MaxRelativeRange;                                         // 0x006C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLimitToCriticalRange;                                    // 0x0070(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsHitIndicator;                                          // 0x0071(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0072(0x0002) MISSED OFFSET
	float                                              HitScaleMin;                                              // 0x0074(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitScaleMax;                                              // 0x0078(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bForceDrawOnScreen;                                       // 0x007C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x007D(0x0003) MISSED OFFSET
	float                                              MinDistanceScale;                                         // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxDistanceScale;                                         // 0x0084(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ReticulePiece");
		return ptr;
	}

};


// Class GunfireRuntime.Reticule
// 0x0060 (0x0090 - 0x0030)
class UReticule : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	struct FTargetingColorParams                       TargetingColors;                                          // 0x0038(0x0014) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                              RadialOffset;                                             // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShowGhostReticule;                                       // 0x0050(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	struct FColor                                      GhostedCenterReticuleColor;                               // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                      GhostReticuleColor;                                       // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	struct FCanvasIcon                                 GhostIcon;                                                // 0x0060(0x0018) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               bUsePredictedEndLocation;                                 // 0x0078(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseWorldSpaceScale;                                      // 0x0079(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x2];                                       // 0x007A(0x0002) MISSED OFFSET
	float                                              WorldReticuleSize;                                        // 0x007C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UReticulePiece*>                      Pieces;                                                   // 0x0080(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Reticule");
		return ptr;
	}

};


// Class GunfireRuntime.ReticuleIcon
// 0x0018 (0x00A0 - 0x0088)
class UReticuleIcon : public UReticulePiece
{
public:
	struct FCanvasIcon                                 Icon;                                                     // 0x0088(0x0018) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ReticuleIcon");
		return ptr;
	}

};


// Class GunfireRuntime.ReticuleMaterial
// 0x0028 (0x00B0 - 0x0088)
class UReticuleMaterial : public UReticulePiece
{
public:
	class UMaterialInterface*                          Material;                                                 // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BaseMaterialSize;                                         // 0x0090(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ColorParameter;                                           // 0x0094(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SizeParameter;                                            // 0x009C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	class UMaterialInstanceDynamic*                    LastReticuleMaterial;                                     // 0x00A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ReticuleMaterial");
		return ptr;
	}

};


// Class GunfireRuntime.RimComponent
// 0x0038 (0x0130 - 0x00F8)
class URimComponent : public UActorComponent
{
public:
	struct FLinearColor                                RimColor;                                                 // 0x00F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RimFadeStartDist;                                         // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RimFadeFullDist;                                          // 0x010C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RimDistanceExp;                                           // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       RequiredTag;                                              // 0x0114(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x011C(0x0004) MISSED OFFSET
	TArray<class UMaterialInstanceDynamic*>            MaterialInstances;                                        // 0x0120(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.RimComponent");
		return ptr;
	}

};


// Class GunfireRuntime.RotatorComponent
// 0x0020 (0x0280 - 0x0260)
class URotatorComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0260(0x0008) MISSED OFFSET
	float                                              SmoothTime;                                               // 0x0268(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x14];                                      // 0x026C(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.RotatorComponent");
		return ptr;
	}


	void Stop(float* Smooth);
	void Play(float* Smooth);
};


// Class GunfireRuntime.RuntimeNavMeshBoundsVolume
// 0x0020 (0x0390 - 0x0370)
class ARuntimeNavMeshBoundsVolume : public ANavMeshBoundsVolume
{
public:
	struct FBox                                        Bounds;                                                   // 0x0370(0x001C) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x4];                                       // 0x038C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.RuntimeNavMeshBoundsVolume");
		return ptr;
	}

};


// Class GunfireRuntime.SequenceInstance
// 0x0118 (0x0140 - 0x0028)
class USequenceInstance : public UObject
{
public:
	struct FSequencerPlayerSettings                    SequenceSettings;                                         // 0x0028(0x0088) (NativeAccessSpecifierPublic)
	class ULevelSequence*                              CurrentSequence;                                          // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULevelSequencePlayer*                        CurrentSequencePlayer;                                    // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ALevelSequenceActor*                         CurrentSequenceActor;                                     // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      CurrentSequenceInstigator;                                // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLevelSequencePossession>            CurrentPossessions;                                       // 0x00D0(0x0010) (ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTransform                                  SequenceOffset;                                           // 0x00E0(0x0030) (IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UObject*                                     WorldContextObject;                                       // 0x0110(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInstanceComplete;                                       // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEventTreeSequenceTrigger;                               // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0138(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SequenceInstance");
		return ptr;
	}


	void OnFinished();
	void OnEventTreeTrackTriggerNotified(struct FName* TriggerName);
};


// Class GunfireRuntime.SequenceRenderSettings
// 0x0010 (0x0038 - 0x0028)
class USequenceRenderSettings : public UObject
{
public:
	TArray<class FString>                              CVars;                                                    // 0x0028(0x0010) (Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SequenceRenderSettings");
		return ptr;
	}

};


// Class GunfireRuntime.ShowEquipmentDecorator
// 0x0018 (0x0048 - 0x0030)
class UShowEquipmentDecorator : public UShowEquipmentAbstractDecorator
{
public:
	class UClass*                                      Type;                                                     // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      EquipmentType;                                            // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bCanEditType;                                             // 0x0040(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bCanEditEquipmentType;                                    // 0x0041(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0042(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ShowEquipmentDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.SilhouetteManager
// 0x0018 (0x0110 - 0x00F8)
class USilhouetteManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET
	TArray<class USilhouetteComponent*>                SilhouetteComponents;                                     // 0x0100(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SilhouetteManager");
		return ptr;
	}

};


// Class GunfireRuntime.SingleObjectPool
// 0x0068 (0x0090 - 0x0028)
class USingleObjectPool : public UObject
{
public:
	int                                                MaxSize;                                                  // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultTimeout;                                           // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GarbageCollectTimeout;                                    // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	class UClass*                                      ItemClass;                                                // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPooledItem*>                         Pool;                                                     // 0x0040(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<int>                                        Active;                                                   // 0x0050(0x0010) (ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<int>                                        Available;                                                // 0x0060(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<int>                                        Reclaimable;                                              // 0x0070(0x0010) (ZeroConstructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0080(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SingleObjectPool");
		return ptr;
	}

};


// Class GunfireRuntime.SnapToGroundComponent
// 0x0010 (0x0270 - 0x0260)
class USnapToGroundComponent : public USceneComponent
{
public:
	float                                              CastDistance;                                             // 0x0260(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               OrientToGround;                                           // 0x0264(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0xB];                                       // 0x0265(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SnapToGroundComponent");
		return ptr;
	}

};


// Class GunfireRuntime.SoftCollisionCapsuleComponent
// 0x0000 (0x05A0 - 0x05A0)
class USoftCollisionCapsuleComponent : public UCapsuleComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SoftCollisionCapsuleComponent");
		return ptr;
	}

};


// Class GunfireRuntime.SoftCollisionWeightStateDecorator
// 0x0008 (0x0030 - 0x0028)
class USoftCollisionWeightStateDecorator : public UActorStateDecorator
{
public:
	float                                              SoftCollisionWeight;                                      // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bShouldRestorePreviousWeight;                             // 0x002C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SoftCollisionWeightStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.SoundEntry
// 0x0030 (0x0058 - 0x0028)
class USoundEntry : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	TArray<struct FName>                               Tags;                                                     // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class USoundBase>>           Sounds;                                                   // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                               PreloadSounds;                                            // 0x0050(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0051(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SoundEntry");
		return ptr;
	}

};


// Class GunfireRuntime.SoundID
// 0x0030 (0x0058 - 0x0028)
class USoundID : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FName                                       NameID;                                                   // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USoundEntry*>                         Entries;                                                  // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class USoundBase*>                          PreloadSounds;                                            // 0x0048(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SoundID");
		return ptr;
	}

};


// Class GunfireRuntime.SoundSet
// 0x0070 (0x00A0 - 0x0030)
class USoundSet : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	TArray<class USoundID*>                            SoundIDs;                                                 // 0x0038(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	class USoundSet*                                   ParentSoundSet;                                           // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FName, class USoundID*>                SoundMap;                                                 // 0x0050(0x0050) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SoundSet");
		return ptr;
	}

};


// Class GunfireRuntime.SoundSetComponent
// 0x0048 (0x0140 - 0x00F8)
class USoundSetComponent : public UActorComponent
{
public:
	class USoundSet*                                   SoundSet;                                                 // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               SoundTags;                                                // 0x0100(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UMeshComponent*                              MeshComp;                                                 // 0x0110(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0118(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SoundSetComponent");
		return ptr;
	}


	void RemoveSoundTag(struct FName* SoundTag);
	void PlaySound2D(struct FName* SoundIDName, float* VolumeMultiplier, float* PitchMultiplier);
	void PlaySound(struct FName* SoundIDName, float* VolumeMultiplier, float* PitchMultiplier, bool* bAttach, struct FName* SocketName);
	bool HasSoundTag(struct FName* SoundTag);
	TArray<struct FName> GetSoundTags();
	TSoftObjectPtr<class USoundBase> GetSoundSoft(struct FName* SoundIDName);
	class USoundCue* GetSoundCue(struct FName* SoundIDName);
	class USoundBase* GetSound(struct FName* SoundIDName);
	void AddUniqueSoundTag(struct FName* SoundTag);
};


// Class GunfireRuntime.SoundTagStateDecorator
// 0x0010 (0x0038 - 0x0028)
class USoundTagStateDecorator : public UActorStateDecorator
{
public:
	TArray<struct FName>                               SoundTags;                                                // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SoundTagStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.SpawnFilterList
// 0x0000 (0x0040 - 0x0040)
class USpawnFilterList : public USpawnFilterEntry
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnFilterList");
		return ptr;
	}

};


// Class GunfireRuntime.SpawnFilter
// 0x0010 (0x0050 - 0x0040)
class USpawnFilter : public USpawnFilterEntry
{
public:
	TArray<class USpawnFilterElement*>                 FilterEntries;                                            // 0x0040(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnFilter");
		return ptr;
	}

};


// Class GunfireRuntime.SpawnFilterExceptionList
// 0x0010 (0x0050 - 0x0040)
class USpawnFilterExceptionList : public USpawnFilterList
{
public:
	TArray<class USpawnFilterElement*>                 FilterExceptions;                                         // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnFilterExceptionList");
		return ptr;
	}

};


// Class GunfireRuntime.SpawnFilterReplacementList
// 0x0018 (0x0058 - 0x0040)
class USpawnFilterReplacementList : public USpawnFilterList
{
public:
	bool                                               bSpawnItemOnReplacementFail;                              // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	int                                                ReplacementChance;                                        // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USpawnTable*>                         ReplacementTables;                                        // 0x0048(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnFilterReplacementList");
		return ptr;
	}

};


// Class GunfireRuntime.SpawnFilterItem
// 0x0028 (0x0078 - 0x0050)
class USpawnFilterItem : public USpawnFilterElement
{
public:
	TSoftObjectPtr<class UClass>                       ItemToFilter;                                             // 0x0050(0x0028) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnFilterItem");
		return ptr;
	}

};


// Class GunfireRuntime.SpawnPoint
// 0x0048 (0x0380 - 0x0338)
class ASpawnPoint : public ASpawnPointBase
{
public:
	bool                                               AutoRegisterSpawnPoint;                                   // 0x0338(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Enabled;                                                  // 0x0339(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpawnPointType                                    SpawnPointType;                                           // 0x033A(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x5];                                       // 0x033B(0x0005) MISSED OFFSET
	class USceneComponent*                             SpawnPosition;                                            // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             SpawnEndPosition;                                         // 0x0348(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               SpawnTags;                                                // 0x0350(0x0010) (Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                              SpawnMinCooldown;                                         // 0x0360(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnMaxCooldown;                                         // 0x0364(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnPointGroundCastDistance;                             // 0x0368(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Busy;                                                     // 0x036C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x13];                                      // 0x036D(0x0013) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnPoint");
		return ptr;
	}


	void StartPreSpawn(class AActor** Actor);
	void StartCoolDown();
	void SetBusy(bool* IsBusy);
	void OnPostEditMove();
	bool IsCooledDown();
	bool GetBusy();
};


// Class GunfireRuntime.SpawnPointManager
// 0x0110 (0x0208 - 0x00F8)
class USpawnPointManager : public UActorComponent
{
public:
	TArray<class ASpawnPoint*>                         SpawnPoints;                                              // 0x00F8(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class ASpawnPoint*>                         PlayerSpawnPoints;                                        // 0x0108(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0118(0x0010) MISSED OFFSET
	TArray<class ASpawnPoint*>                         SpawnPointDefaults;                                       // 0x0128(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FQueuedSpawn>                        SpawnQueue;                                               // 0x0138(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0148(0x0010) MISSED OFFSET
	class ARecastNavMesh*                              NavMesh;                                                  // 0x0158(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0xA8];                                      // 0x0160(0x00A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnPointManager");
		return ptr;
	}


	void SpawnCharacter(struct FSpawnEntry* Entry, class AActor** Owner, struct FVector* SpawnPos, bool* Transient);
	class AActor* STATIC_SpawnActorDeferred(class UObject** WorldContextObject, class UClass** ActorBP, struct FTransform* Transform);
	void Spawn(struct FBox* Region, struct FSpawnList* SpawnList, class ULevel** OwningLevel, bool* Transient, TArray<class AActor*>* SpawnedActors);
	class USpawnPointManager* STATIC_GetInstance(class UObject** WorldContextObject);
	bool FindSpawnPointOnNavMesh(class AActor** RefActor, struct FVector* RefPosition, float* RadiusMin, float* RadiusMax, bool* InFOV, struct FVector* OutPosition);
	bool STATIC_FindNearbySpawnPosition(class AActor** Actor, float* RadiusMin, float* RadiusMax, bool* InFOVOnly, struct FVector* OutPosition);
	void STATIC_FinalizeSpawnActor(class AActor** Actor, struct FTransform* Transform);
};


// Class GunfireRuntime.SpawnPointData
// 0x0038 (0x0368 - 0x0330)
class ASpawnPointData : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	TArray<struct FSpawnPointInfo>                     SpawnPoints;                                              // 0x0338(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	struct FBox                                        BoundingBox;                                              // 0x0348(0x001C) (ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0364(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnPointData");
		return ptr;
	}

};


// Class GunfireRuntime.SpawnTableCharacter
// 0x00A8 (0x0130 - 0x0088)
class USpawnTableCharacter : public USpawnTableElement
{
public:
	TSoftObjectPtr<class UClass>                       CharacterBP;                                              // 0x0088(0x0028) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UClass>>               RandomCharacterBP;                                        // 0x00B0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FName>                               ActorTags;                                                // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                QuantityMin;                                              // 0x00D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                QuantityMax;                                              // 0x00D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               QuantityScaling;                                          // 0x00D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D9(0x0007) MISSED OFFSET
	TArray<struct FName>                               SpawnPointTags;                                           // 0x00E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               SpawnOnNavmesh;                                           // 0x00F0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SpawnAccessibleOnly;                                      // 0x00F1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpawnVisibility                                   SpawnVisibility;                                          // 0x00F2(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x1];                                       // 0x00F3(0x0001) MISSED OFFSET
	float                                              SpawnDistanceMin;                                         // 0x00F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnDistanceMax;                                         // 0x00F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ForceSpawnDistance;                                       // 0x00FC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00FD(0x0003) MISSED OFFSET
	float                                              SpawnRateMin;                                             // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnRateMax;                                             // 0x0104(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpawnFrom                                         SpawnFrom;                                                // 0x0108(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0109(0x0003) MISSED OFFSET
	float                                              SpawnArc;                                                 // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      SpawnFaction;                                             // 0x0110(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpawnThrottling                                   SpawnThrottling;                                          // 0x0118(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0119(0x0003) MISSED OFFSET
	float                                              SpawnWeightMultiplier;                                    // 0x011C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseSpawnPointSpawnParams;                                 // 0x0120(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpawnVisibility                                   SpawnPointSpawnVisibility;                                // 0x0121(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0122(0x0002) MISSED OFFSET
	float                                              SpawnPointSpawnDistanceMin;                               // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnPointSpawnDistanceMax;                               // 0x0128(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x4];                                       // 0x012C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnTableCharacter");
		return ptr;
	}

};


// Class GunfireRuntime.SpawnTableItem
// 0x0058 (0x00E0 - 0x0088)
class USpawnTableItem : public USpawnTableElement
{
public:
	TSoftObjectPtr<class UClass>                       ItemBP;                                                   // 0x0088(0x0028) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                QuantityMin;                                              // 0x00B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                QuantityMax;                                              // 0x00B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              QuantityScalarPerLevel;                                   // 0x00B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ItemLevel;                                                // 0x00BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SetGeneratedItemLevel;                                    // 0x00C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00C1(0x0003) MISSED OFFSET
	int                                                GeneratedItemLevelOffsetMin;                              // 0x00C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                GeneratedItemLevelOffsetMax;                              // 0x00C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET
	TArray<struct FName>                               SpawnPointTags;                                           // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnTableItem");
		return ptr;
	}

};


// Class GunfireRuntime.SpawnTableActor
// 0x0050 (0x00D8 - 0x0088)
class USpawnTableActor : public USpawnTableElement
{
public:
	TSoftObjectPtr<class UClass>                       ActorBP;                                                  // 0x0088(0x0028) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                QuantityMin;                                              // 0x00B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                QuantityMax;                                              // 0x00B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               QuantityScaling;                                          // 0x00B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET
	TArray<struct FName>                               SpawnPointTags;                                           // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               SpawnAccessibleOnly;                                      // 0x00D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnTableActor");
		return ptr;
	}

};


// Class GunfireRuntime.SpawnTableLink
// 0x0020 (0x00A8 - 0x0088)
class USpawnTableLink : public USpawnTableEntry
{
public:
	class USpawnTable*                                 Table;                                                    // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               AdditionalTags;                                           // 0x0090(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int                                                QuantityMin;                                              // 0x00A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                QuantityMax;                                              // 0x00A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnTableLink");
		return ptr;
	}

};


// Class GunfireRuntime.SpawnTable
// 0x0020 (0x00A8 - 0x0088)
class USpawnTable : public USpawnTableEntry
{
public:
	ESpawnTableType                                    TableType;                                                // 0x0088(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0089(0x0007) MISSED OFFSET
	TArray<class USpawnTableEntry*>                    Entries;                                                  // 0x0090(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int                                                TableGroupRollMin;                                        // 0x00A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                TableGroupRollMax;                                        // 0x00A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnTable");
		return ptr;
	}


	void GenerateWithSeed(class UObject** WorldContextObject, int* Level, int* Rating, TArray<struct FName>* InTags, ESpawnType* Type, int* RandomSeed, struct FSpawnList* SpawnList);
	void Generate(class UObject** WorldContextObject, int* Level, int* Rating, TArray<struct FName>* InTags, ESpawnType* Type, struct FSpawnList* SpawnList);
};


// Class GunfireRuntime.SpawnUtil
// 0x0000 (0x0028 - 0x0028)
class USpawnUtil : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SpawnUtil");
		return ptr;
	}


	bool STATIC_PickSingleItem(class UObject** WorldContextObject, class USpawnTable** SpawnTable, int* Level, TArray<struct FName>* SpawnTags, struct FSpawnEntry* Out);
	bool STATIC_FindRadialSpawnPosition(class AActor** SpawnPoint, class AActor** Actor, float* Radius, int* Slots, struct FTransform* SpawnPosition);
};


// Class GunfireRuntime.SphereCastCondition
// 0x0020 (0x0088 - 0x0068)
class USphereCastCondition : public UPhysCastCondition
{
public:
	struct FVector                                     Offset;                                                   // 0x0068(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     Direction;                                                // 0x0074(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              Radius;                                                   // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0084(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SphereCastCondition");
		return ptr;
	}

};


// Class GunfireRuntime.SplineBase
// 0x0008 (0x0338 - 0x0330)
class ASplineBase : public AActor
{
public:
	bool                                               bInstanceToBeMerged;                                      // 0x0330(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0331(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SplineBase");
		return ptr;
	}

};


// Class GunfireRuntime.SplineCameraComponent
// 0x0000 (0x0260 - 0x0260)
class USplineCameraComponent : public USceneComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SplineCameraComponent");
		return ptr;
	}

};


// Class GunfireRuntime.SplineCameraSplineComponent
// 0x0000 (0x0660 - 0x0660)
class USplineCameraSplineComponent : public USplineComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SplineCameraSplineComponent");
		return ptr;
	}

};


// Class GunfireRuntime.SplineCameraVolume
// 0x0160 (0x0490 - 0x0330)
class ASplineCameraVolume : public AActor
{
public:
	class UBoxComponent*                               Volume;                                                   // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineCameraSplineComponent*                ReferenceSpline;                                          // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineCameraSplineComponent*                CameraSpline;                                             // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USplineCameraSplineComponent*                CameraBackwardSpline;                                     // 0x0348(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAutoActivateCamera;                                      // 0x0350(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0351(0x0003) MISSED OFFSET
	float                                              CameraSplineOffset;                                       // 0x0354(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraMaxSpeed;                                           // 0x0358(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x035C(0x0004) MISSED OFFSET
	struct FInterpCurveFloat                           CharacterToCameraReparamTable;                            // 0x0360(0x0018) (Edit, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInterpCurveFloat                           CharacterToCameraBackwardReparamTable;                    // 0x0378(0x0018) (Edit, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EntryBlendTime;                                           // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EntryPositionBlendFactor;                                 // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EntryRotationBlendFactor;                                 // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PositionBlendFactor;                                      // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotationBlendFactor;                                      // 0x03A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ExitBlendTime;                                            // 0x03A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseDirectionalCameraSplines;                             // 0x03A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x03A9(0x0003) MISSED OFFSET
	float                                              CutTimeThreshold;                                         // 0x03AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldCutCamera;                                         // 0x03B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bAllowAdditiveControls;                                   // 0x03B1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x2];                                       // 0x03B2(0x0002) MISSED OFFSET
	float                                              PlayerLookPitchMin;                                       // 0x03B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerLookPitchMax;                                       // 0x03B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerLookPitchSpeed;                                     // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerLookPitchMouseSpeed;                                // 0x03C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerLookYawMin;                                         // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerLookYawMax;                                         // 0x03C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerLookYawSpeed;                                       // 0x03CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PlayerLookYawMouseSpeed;                                  // 0x03D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoCenter;                                               // 0x03D4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x03D5(0x0003) MISSED OFFSET
	float                                              AutoCenterSmoothTime;                                     // 0x03D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoCenterDelay;                                          // 0x03DC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x20];                                      // 0x03E0(0x0020) MISSED OFFSET
	class USplineCameraComponent*                      SplineCameraComponent;                                    // 0x0400(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACharacterGunfire*                           Character;                                                // 0x0408(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APlayerController*                           PlayerController;                                         // 0x0410(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStateCameraComponent*                       CameraManager;                                            // 0x0418(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData06[0x70];                                      // 0x0420(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SplineCameraVolume");
		return ptr;
	}


	struct FVector GetCurrentSplinePosition();
	struct FVector GetCurrentSplineForwardVector();
	void EndOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex);
	void Deactivate();
	void BeginOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult);
	void Activate(class ACharacterGunfire** InCharacter);
};


// Class GunfireRuntime.SplineFollowingComponent
// 0x0040 (0x0138 - 0x00F8)
class USplineFollowingComponent : public UActorComponent
{
public:
	float                                              MovementSpeed;                                            // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<ESplineMovementDirection>              MovementDirection;                                        // 0x00FC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<ESplineAttachType>                     AttachType;                                               // 0x00FD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPingPong;                                                // 0x00FE(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsPaused;                                                // 0x00FF(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LocationOffset;                                           // 0x0100(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSplineFollowComplete;                                   // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0120(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SplineFollowingComponent");
		return ptr;
	}


	void SetSpline(class USplineComponent** Spline, TEnumAsByte<ESplineAttachmentRule>* Location, float* CustomTime);
	float GetCurrentSplineTime();
};


// Class GunfireRuntime.StaminaCondition
// 0x0008 (0x0038 - 0x0030)
class UStaminaCondition : public UCondition
{
public:
	ECompareOp                                         Compare;                                                  // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              Value;                                                    // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.StaminaCondition");
		return ptr;
	}

};


// Class GunfireRuntime.StaminaStateDecorator
// 0x0020 (0x0048 - 0x0028)
class UStaminaStateDecorator : public UActorStateDecorator
{
public:
	bool                                               ValidateStamina;                                          // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                StaminaStartFrame;                                        // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              StaminaOnStart;                                           // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              StaminaOnExit;                                            // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              StaminaPerSec;                                            // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                StaminaLockFrame;                                         // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              StaminaRegenDelay;                                        // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              StaminaRegenScalar;                                       // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.StaminaStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.StatCondition
// 0x0018 (0x0048 - 0x0030)
class UStatCondition : public UCondition
{
public:
	struct FName                                       StatName;                                                 // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECompareOp                                         Compare;                                                  // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              Value;                                                    // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               ApplyModifiers;                                           // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.StatCondition");
		return ptr;
	}

};


// Class GunfireRuntime.StateCompleteCondition
// 0x0000 (0x0030 - 0x0030)
class UStateCompleteCondition : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.StateCompleteCondition");
		return ptr;
	}

};


// Class GunfireRuntime.StateElapsedCondition
// 0x0008 (0x0038 - 0x0030)
class UStateElapsedCondition : public UCondition
{
public:
	float                                              ElapsedTime;                                              // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               Normalized;                                               // 0x0034(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.StateElapsedCondition");
		return ptr;
	}

};


// Class GunfireRuntime.StateEventCondition
// 0x0008 (0x0038 - 0x0030)
class UStateEventCondition : public UCondition
{
public:
	struct FName                                       Event;                                                    // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.StateEventCondition");
		return ptr;
	}

};


// Class GunfireRuntime.StateMachine
// 0x01A0 (0x01C8 - 0x0028)
class UStateMachine : public UStateMachineSubobject
{
public:
	struct FName                                       DefaultState;                                             // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UActorState*>                         States;                                                   // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UActorState*>                         HitReactions;                                             // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UActorState*>                         LinkedHitReactions;                                       // 0x0050(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x168];                                     // 0x0060(0x0168) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.StateMachine");
		return ptr;
	}


	class UActorState* GetStateParent(class UActorState** State);
	class UActorState* GetState(struct FName* NameID);
	class UActorState* GetRootState(class UActorState** State);
};


// Class GunfireRuntime.StateMachineComponent
// 0x0468 (0x0560 - 0x00F8)
class UStateMachineComponent : public UActorComponent
{
public:
	class UStateMachine*                               StateMachine;                                             // 0x00F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       StartState;                                               // 0x0100(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AnimationLayer;                                           // 0x0108(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       FlinchAnimationLayer;                                     // 0x0110(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Secondary;                                                // 0x0118(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x17];                                      // 0x0119(0x0017) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnStateChange;                                            // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnStateComplete;                                          // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnStateInterruptUpdate;                                   // 0x0150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInteractive;                                            // 0x0160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ACharacterGunfire*                           Character;                                                // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x148];                                     // 0x0178(0x0148) MISSED OFFSET
	struct FInteractiveInfo                            InteractiveInfo;                                          // 0x02C0(0x0010) (Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x02D0(0x0008) MISSED OFFSET
	class UActorState*                                 CurrentState;                                             // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FStateID                                    CurrentStateID;                                           // 0x02E0(0x0004) (Net, Transient, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x3C];                                      // 0x02E4(0x003C) MISSED OFFSET
	class UAnimInstanceGunfire*                        AnimInstance;                                             // 0x0320(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData04[0x238];                                     // 0x0328(0x0238) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.StateMachineComponent");
		return ptr;
	}


	void SetWindow(struct FName* Name);
	bool SetState(struct FName* NameID, bool* bOnlySetIfValid);
	void SetEvent(struct FName* Name);
	void ServerSetTraversalState(struct FStateID* StateID, float* Heading, struct FVector* Position, unsigned char* CurrentClientAck);
	void ServerSetState(struct FStateID* StateID, float* LockDirection, unsigned char* CurrentClientAck);
	void ServerSetInteractiveResult(unsigned char* State, float* MashValue);
	void ServerDoInteractive(struct FName* NameID, class AActor** Other);
	bool ResetStateToDefault(bool* bOnlySetIfValid);
	void ProcessStateMachine(float* DeltaTime);
	void OnRep_InteractiveInfo();
	void OnRep_CurrentStateID();
	void OnPostComputeStats();
	void MulticastDoFlinch(struct FName* NameID, struct FName* HitLocation);
	bool IsWindowSet(struct FName* Name);
	bool IsInterruptible();
	bool IsEventSet(struct FName* Name);
	void InitAnimInstance();
	bool InInteractive();
	struct FName GetStateName();
	class AActor* GetInteractiveOther();
	EHitReactionType GetHitReactionType();
	float GetElapsedStateTime();
	class FString GetDebugInfo(int* DebugLevel);
	class UActorState* GetCurrentState();
	bool DoInteractive(struct FName* NameID, class AActor** Other);
	void ClientSetState(struct FStateID* State, float* LockDirection, unsigned char* CurrentClientAck);
	void ClientDoInteractive(struct FInteractiveInfo* Info, struct FStateID* State, unsigned char* NewClientAck);
	void ClientAbortInteractive();
	void ClearWindow(struct FName* Name, bool* bClearAll);
	void BeginLerp(float* Time, bool* LerpPosition, bool* LerpRotation);
};


// Class GunfireRuntime.StateWindowCondition
// 0x0008 (0x0038 - 0x0030)
class UStateWindowCondition : public UCondition
{
public:
	struct FName                                       Window;                                                   // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.StateWindowCondition");
		return ptr;
	}

};


// Class GunfireRuntime.StaticProceduralMesh
// 0x0028 (0x0358 - 0x0330)
class AStaticProceduralMesh : public AActor
{
public:
	class USceneComponent*                             Scene;                                                    // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UArrowComponent*                             Arrow;                                                    // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProceduralMeshComponent*                    InitialProceduralMesh;                                    // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                        FinalStaticMesh;                                          // 0x0348(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsUsingStaticMesh;                                       // 0x0350(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0351(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.StaticProceduralMesh");
		return ptr;
	}

};


// Class GunfireRuntime.StationarySpectatorCameraState
// 0x0010 (0x0050 - 0x0040)
class UStationarySpectatorCameraState : public UCameraState
{
public:
	float                                              PitchMin;                                                 // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchMax;                                                 // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               LockRoll;                                                 // 0x0048(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.StationarySpectatorCameraState");
		return ptr;
	}

};


// Class GunfireRuntime.ComputedStats
// 0x0008 (0x0030 - 0x0028)
class UComputedStats : public UObject
{
public:
	class UStatsComponent*                             StatsComponent;                                           // 0x0028(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ComputedStats");
		return ptr;
	}


	float ScaleValueByLevel(int* Level, float* Value, float* Inc, float* Exp);
	void ScaleStat(struct FName* Stat, float* Scalar, bool* AutoInitValue);
	void PostComputeStats(class UStatsComponent** Stats);
	void OnPostComputeStats();
	void OnComputeStats();
	void OnComputeDerivedStats();
	void ModifyStat(struct FName* Stat, float* Value);
	bool HasStat(struct FName* Stat);
	class AActor* GetStatsOwner();
	float GetStat(struct FName* Stat);
	void ComputeStats(class UStatsComponent** Stats);
	void ComputeDerivedStats(class UStatsComponent** Stats);
};


// Class GunfireRuntime.StatsComponent
// 0x00C8 (0x01C0 - 0x00F8)
class UStatsComponent : public UActorComponent
{
public:
	struct FDataTableRowHandle                         StatData;                                                 // 0x00F8(0x0010) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              ComputedStats;                                            // 0x0108(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UDataTable*>                          AdditionalStats;                                          // 0x0118(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnComputeStats;                                           // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0138(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnComputeDerivedStats;                                    // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPostComputeStats;                                       // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x58];                                      // 0x0168(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.StatsComponent");
		return ptr;
	}


	void SetComputedStats(class UClass** NewComputedStats);
	void ScaleStat(struct FName* Name, float* Scalar, bool* AutoInitValue);
	float ModifyStat(struct FName* Name, float* Value);
	void Invalidate();
	bool HasStat(struct FName* Name);
	int GetStatAsInt(struct FName* Name, bool* ApplyMod);
	bool GetStatAsBool(struct FName* Name, bool* ApplyMod);
	float GetStat(struct FName* Name, bool* ApplyMod);
	class UClass* GetComputedStats();
	void ApplyStats(struct FDataTableRowHandle* DataTable, int* Level);
	void ApplyStatModsTo(struct FName* Stat, float* Value);
};


// Class GunfireRuntime.StatStateDecorator
// 0x0010 (0x0038 - 0x0028)
class UStatStateDecorator : public UActorStateDecorator
{
public:
	TArray<struct FStatDecoratorStat>                  StatsToModify;                                            // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.StatStateDecorator");
		return ptr;
	}


	void ComputeStats(class AActor** Actor);
};


// Class GunfireRuntime.SubtitleInstance
// 0x00A0 (0x00C8 - 0x0028)
class USubtitleInstance : public UObject
{
public:
	class USubtitlesComponent*                         Component;                                                // 0x0028(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ID;                                                       // 0x0030(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	class AActor*                                      Source;                                                   // 0x0038(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundBase>                   Audio;                                                    // 0x0040(0x0028) (BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       Emote;                                                    // 0x0068(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       Text;                                                     // 0x0070(0x0018) (BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FTimerHandle                                TimerHandle;                                              // 0x0088(0x0008) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoRemove;                                               // 0x0090(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0091(0x0007) MISSED OFFSET
	class UAudioComponent*                             AudioComponent;                                           // 0x0098(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Added;                                                    // 0x00A0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Completed;                                                // 0x00A1(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x16];                                      // 0x00A2(0x0016) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnComplete;                                               // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SubtitleInstance");
		return ptr;
	}


	void Remove();
	void OnSourceActorDestroyed(class AActor** DestroyedActor);
	void OnLoaded();
	void CompleteAndRemove();
	void Complete();
};


// Class GunfireRuntime.SubtitlesComponent
// 0x0038 (0x0130 - 0x00F8)
class USubtitlesComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnAddSubtitle;                                            // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRemoveSubtitle;                                         // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0118(0x0008) MISSED OFFSET
	TArray<class USubtitleInstance*>                   Subtitles;                                                // 0x0120(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SubtitlesComponent");
		return ptr;
	}


	void ServerRemoveSubtitle(int* ID);
	void RemoveSubtitle(int* ID);
	void ClientRemoveSubtitle(int* ID);
	void ClientAddSubtitle(struct FSubtitleInfo* Info);
	class USubtitleInstance* AddSubtitle(class AActor** Source, struct FText* Text, TSoftObjectPtr<class USoundBase>* Audio, struct FName* Emote, bool* AutoRemove);
};


// Class GunfireRuntime.SurfaceOrientComponent
// 0x0088 (0x0180 - 0x00F8)
class USurfaceOrientComponent : public UActorComponent
{
public:
	struct FName                                       ComponentToOrient;                                        // 0x00F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LeanLimit;                                                // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bIkEnabled;                                               // 0x0104(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0105(0x0003) MISSED OFFSET
	float                                              IkGroundOffset;                                           // 0x0108(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              IkEnableOffset;                                           // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSurfaceOrientFeeler>                Feelers;                                                  // 0x0110(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              TraceStartOffsetOverride;                                 // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TraceEndOffsetOverride;                                   // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                FrameFrequencyOffset;                                     // 0x0128(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	class USceneComponent*                             OrientRoot;                                               // 0x0130(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData02[0x48];                                      // 0x0138(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SurfaceOrientComponent");
		return ptr;
	}


	void SetEnableIK(bool* bEnable, bool* bReset);
};


// Class GunfireRuntime.SwimmingCondition
// 0x0008 (0x0038 - 0x0030)
class USwimmingCondition : public UCondition
{
public:
	ESwimmingType                                      Type;                                                     // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ESwimmingStateMethod                               Method;                                                   // 0x0031(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SwimmingCondition");
		return ptr;
	}


	ESwimmingType STATIC_GetSwimmingState(class UStateMachineComponent** StateMachine);
};


// Class GunfireRuntime.SwimmingStateDecorator
// 0x0008 (0x0030 - 0x0028)
class USwimmingStateDecorator : public UActorStateDecorator
{
public:
	ESwimmingType                                      Type;                                                     // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bClampZ;                                                  // 0x0029(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               bHandleWaterEntry;                                        // 0x002A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x5];                                       // 0x002B(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SwimmingStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.TabButton
// 0x04D0 (0x0600 - 0x0130)
class UTabButton : public UContentWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0130(0x0008) MISSED OFFSET
	struct FName                                       TabPanel;                                                 // 0x0138(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAdvButtonStyle                             WidgetStyle;                                              // 0x0140(0x0438) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FLinearColor                                ColorAndOpacity;                                          // 0x0578(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                BackgroundColor;                                          // 0x0588(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       TabNextKey;                                               // 0x0598(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       TabPrevKey;                                               // 0x05A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPressed;                                                // 0x05A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnReleased;                                               // 0x05B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTabFocused;                                             // 0x05C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x10];                                      // 0x05D8(0x0010) MISSED OFFSET
	class UWidget*                                     TabPanelCached;                                           // 0x05E8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusManager*                               CachedFocusManager;                                       // 0x05F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusWidget*                                UserFocusWidget;                                          // 0x05F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TabButton");
		return ptr;
	}


	void SetTexture(class UTexture2D** Texture);
	void SetTabPanel(class UWidget** Widget);
	void SetColorAndOpacity(struct FLinearColor* InColorAndOpacity);
	void SetBackgroundColor(struct FLinearColor* InBackgroundColor);
	bool IsPressed();
	class UWidget* GetTabPanel();
	void FocusTab();
};


// Class GunfireRuntime.TabButtonSlot
// 0x0028 (0x0060 - 0x0038)
class UTabButtonSlot : public UPanelSlot
{
public:
	struct FMargin                                     Padding;                                                  // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TEnumAsByte<EHorizontalAlignment>                  HorizontalAlignment;                                      // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<EVerticalAlignment>                    VerticalAlignment;                                        // 0x0049(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x16];                                      // 0x004A(0x0016) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TabButtonSlot");
		return ptr;
	}


	void SetVerticalAlignment(TEnumAsByte<EVerticalAlignment>* InVerticalAlignment);
	void SetPadding(struct FMargin* InPadding);
	void SetHorizontalAlignment(TEnumAsByte<EHorizontalAlignment>* InHorizontalAlignment);
};


// Class GunfireRuntime.TagCondition
// 0x0020 (0x0050 - 0x0030)
class UTagCondition : public UCondition
{
public:
	ETagLocation                                       LocationOfTags;                                           // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	TArray<struct FName>                               Tags;                                                     // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                               AllOrNothing;                                             // 0x0048(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TagCondition");
		return ptr;
	}

};


// Class GunfireRuntime.TargetableComponent
// 0x0070 (0x0300 - 0x0290)
class UTargetableComponent : public UHeuristicBoundsComponent
{
public:
	int                                                Priority;                                                 // 0x0290(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaximumTargetDistance;                                    // 0x0294(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinimumTargetDistance;                                    // 0x0298(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SnapRadiusScale;                                          // 0x029C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TargetPitch;                                              // 0x02A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02A4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTargetEvent;                                            // 0x02A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnUnTargetEvent;                                          // 0x02B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	ETargetType                                        TargetType;                                               // 0x02C8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x02C9(0x0003) MISSED OFFSET
	float                                              RangeTolerance;                                           // 0x02CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bCanBeTargeted;                                           // 0x02D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               AllowSoftTarget;                                          // 0x02D1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               AllowLockTarget;                                          // 0x02D2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bAllowSnaping;                                            // 0x02D3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x4];                                       // 0x02D4(0x0004) MISSED OFFSET
	TArray<class AActor*>                              TargetedByList;                                           // 0x02D8(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              TargetableByClassList;                                    // 0x02E8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x8];                                       // 0x02F8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TargetableComponent");
		return ptr;
	}


	void SetCanBeTargeted(bool* bNewCanBeTargeted);
	void SetAllowSoftTarget(bool* bNewAllowSoftTarget);
	void OnUnTarget(class AActor** UnTargetedBy);
	void OnTarget(class AActor** TargetedBy);
	void OnOwnerDied(unsigned char* Reason, class ACharacterGunfire** Character, class AActor** Cause);
	TArray<class AActor*> GetTargetingActors();
	bool CanBeTargeted();
};


// Class GunfireRuntime.TargetAlignComponent
// 0x0058 (0x0150 - 0x00F8)
class UTargetAlignComponent : public UActorComponent
{
public:
	struct FName                                       VirtualBoneToAlign;                                       // 0x00F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       VirtualBoneToAdjust;                                      // 0x0100(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CapsuleConvergeDistance;                                  // 0x0108(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchLowerAngle;                                          // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchUpperAngle;                                          // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchAdjustSpeed;                                         // 0x0114(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              YawArc;                                                   // 0x0118(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              YawAdjustSpeed;                                           // 0x011C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0120(0x0020) MISSED OFFSET
	class AActor*                                      LastTarget;                                               // 0x0140(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                           LastCapsule;                                              // 0x0148(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TargetAlignComponent");
		return ptr;
	}


	struct FRotator GetAdjustNodeRotation();
};


// Class GunfireRuntime.TargetingComponent
// 0x00B0 (0x0310 - 0x0260)
class UTargetingComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0260(0x0020) MISSED OFFSET
	struct FHeuristicBoundsHitResult                   CurrentTargetHitResult;                                   // 0x0280(0x0040) (Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FHeuristicBoundsHitResult                   CurrentSnapTargetHitResult;                               // 0x02C0(0x0040) (Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UTargetManager*                              TargetManager;                                            // 0x0300(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0308(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TargetingComponent");
		return ptr;
	}


	void OnNewTargetSet(struct FHeuristicBoundsHitResult* NewTargetHitResult);
	bool GetTarget(bool* bForceRecalc, struct FHeuristicBoundsHitResult* OutTargetHitResult);
	bool GetSnapTarget(bool* bForceRecalc, struct FHeuristicBoundsHitResult* OutSnapTargetHitResult);
};


// Class GunfireRuntime.TargetLockComponent
// 0x0058 (0x0150 - 0x00F8)
class UTargetLockComponent : public UActorComponent
{
public:
	struct FName                                       LockInput;                                                // 0x00F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LockToggleInput;                                          // 0x0100(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TargetRange;                                              // 0x0108(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TargetLostRange;                                          // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TargetArc;                                                // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TargetPitch;                                              // 0x0114(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoRedundantInputCheck;                                   // 0x0118(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SoftTargetEnabled;                                        // 0x0119(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SoftTargetCameraDirByDefault;                             // 0x011A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x1];                                       // 0x011B(0x0001) MISSED OFFSET
	float                                              SoftTargetHeadingArc;                                     // 0x011C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SoftTargetRange;                                          // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SoftTargetArc;                                            // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SoftTargetPitch;                                          // 0x0128(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	class AActor*                                      LockedTarget;                                             // 0x0130(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                      SoftTarget;                                               // 0x0138(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                      CameraTarget;                                             // 0x0140(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0148(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TargetLockComponent");
		return ptr;
	}


	bool IsTargetLockEnabled();
	class AActor* GetSoftTarget();
	class AActor* GetLockTarget();
	class AActor* GetCameraTarget();
	void EnableTargetLock(bool* enable);
	void CycleLockTarget(int* Direction);
	void ClearLockTarget();
};


// Class GunfireRuntime.TargetManager
// 0x0010 (0x0108 - 0x00F8)
class UTargetManager : public UActorComponent
{
public:
	TArray<class UTargetableComponent*>                RegisteredComponents;                                     // 0x00F8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TargetManager");
		return ptr;
	}

};


// Class GunfireRuntime.TextDebugComponent
// 0x0030 (0x0600 - 0x05D0)
class UTextDebugComponent : public UTextRenderComponent
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x05D0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TextDebugComponent");
		return ptr;
	}

};


// Class GunfireRuntime.ThirdPersonCameraState
// 0x0248 (0x0288 - 0x0040)
class UThirdPersonCameraState : public UCameraState
{
public:
	ETPSAimType                                        AimType;                                                  // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              PitchMin;                                                 // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchMax;                                                 // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchSpeed;                                               // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MousePitchSpeedScalar;                                    // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchMinZoomScale;                                        // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchMaxZoomScale;                                        // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              YawSpeed;                                                 // 0x005C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MouseYawSpeedScalar;                                      // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              YawMin;                                                   // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              YawMax;                                                   // 0x0068(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Distance;                                                 // 0x006C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeightOffset;                                             // 0x0070(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LeftRightOffset;                                          // 0x0074(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FadeCharacterDistance;                                    // 0x0078(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       CameraBone;                                               // 0x007C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CameraBoneYawInverted;                                    // 0x0084(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowShoulderSwitch;                                      // 0x0085(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0086(0x0002) MISSED OFFSET
	float                                              ShoulderSwitchOrientationMemory;                          // 0x0088(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ShoulderSwitchDelay;                                      // 0x008C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AimRealignmentScalar;                                     // 0x0090(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               OrientTowardsHeading;                                     // 0x0094(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0095(0x0003) MISSED OFFSET
	float                                              SwayAdjustSpeed;                                          // 0x0098(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   GlobalSwayScale;                                          // 0x009C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SwayPeriodScale;                                          // 0x00A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GamepadCameraInputPower;                                  // 0x00A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              GamepadDeadZone;                                          // 0x00AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputSmooth;                                              // 0x00B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputSmoothNeutral;                                       // 0x00B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputDampingX;                                            // 0x00B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputDampingY;                                            // 0x00BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputSmoothWhileDamping;                                  // 0x00C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AdhesionStrength;                                         // 0x00C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAdhesionActivateMode                              AdhesionMode;                                             // 0x00C8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00C9(0x0003) MISSED OFFSET
	float                                              AdhesionBlendTime;                                        // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DepthOfFieldStrength;                                     // 0x00D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DepthOfFieldRange;                                        // 0x00D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DepthOfFieldWeaponType;                                   // 0x00D8(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      RangedWeaponType;                                         // 0x00E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bShouldSnapTarget;                                        // 0x00E8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x3];                                       // 0x00E9(0x0003) MISSED OFFSET
	float                                              SnapTargetTime;                                           // 0x00EC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FollowTimeAfterSnap;                                      // 0x00F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIsCrouchCoverCameraState;                                // 0x00F4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00F5(0x0003) MISSED OFFSET
	float                                              CoverPitchMinHeightOffset;                                // 0x00F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CoverPitchMinDistance;                                    // 0x00FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CoverPitchMinLeftRightOffset;                             // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	class UTargetingComponent*                         TargetingComponent;                                       // 0x0108(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData07[0xB8];                                      // 0x0110(0x00B8) MISSED OFFSET
	class AActor*                                      TargetActor;                                              // 0x01C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData08[0xA0];                                      // 0x01D0(0x00A0) MISSED OFFSET
	class UUserWidget*                                 ScopeWidgetInstance;                                      // 0x0270(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ARangedWeapon*                               ScopedWeapon;                                             // 0x0278(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                          ScopePostProcess;                                         // 0x0280(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ThirdPersonCameraState");
		return ptr;
	}

};


// Class GunfireRuntime.TileUtil
// 0x0000 (0x0028 - 0x0028)
class UTileUtil : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TileUtil");
		return ptr;
	}


	bool STATIC_IsVisible(struct FTile* Tile);
	bool STATIC_HasEdge(struct FTile* Tile, unsigned char* Edge);
};


// Class GunfireRuntime.TileLOD
// 0x0010 (0x0378 - 0x0368)
class ATileLOD : public ALODActor
{
public:
	float                                              LODDrawDistanceOverride;                                  // 0x0368(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x036C(0x0004) MISSED OFFSET
	class UStaticMeshComponent*                        DistantLOD;                                               // 0x0370(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TileLOD");
		return ptr;
	}


	void SetLODOverride(ETileLODType* LODType);
};


// Class GunfireRuntime.TileInfo
// 0x0070 (0x0098 - 0x0028)
class UTileInfo : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FName                                       NameID;                                                   // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTileEdges                                  Edges;                                                    // 0x0038(0x0008) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	ETileDirection                                     Direction;                                                // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	struct FName                                       Tag;                                                      // 0x0044(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SpawnTag;                                                 // 0x004C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	TArray<TSoftObjectPtr<class UWorld>>               Levels;                                                   // 0x0058(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	int                                                Flags;                                                    // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UTexture2D>                   Image;                                                    // 0x0070(0x0028) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TileInfo");
		return ptr;
	}

};


// Class GunfireRuntime.TileSet
// 0x00D8 (0x0100 - 0x0028)
class UTileSet : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FVector                                     TileSize;                                                 // 0x0030(0x000C) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TileSizeX;                                                // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TileSizeY;                                                // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TileMinZ;                                                 // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TileMaxZ;                                                 // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	TArray<class UTileSet*>                            Include;                                                  // 0x0050(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UTileInfo*>                           Tiles;                                                    // 0x0060(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               GenerateNavMesh;                                          // 0x0070(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowTileRotation;                                        // 0x0071(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0072(0x0002) MISSED OFFSET
	int                                                ActiveTileDepth;                                          // 0x0074(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DoTileVisibility;                                         // 0x0078(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	struct FName                                       TileTransitionTag;                                        // 0x007C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	class FString                                      ColorScheme;                                              // 0x0088(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               SpawnTags;                                                // 0x0098(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              ResourceDensity;                                          // 0x00A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UTexture2D>                   Image;                                                    // 0x00B0(0x0028) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UClass>                       AudioVolumeClass;                                         // 0x00D8(0x0028) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TileSet");
		return ptr;
	}

};


// Class GunfireRuntime.TimeDilationDecorator
// 0x0010 (0x0038 - 0x0028)
class UTimeDilationDecorator : public UActorStateDecorator
{
public:
	float                                              Dilation;                                                 // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              Duration;                                                 // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              EaseInTime;                                               // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              EaseOutTime;                                              // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TimeDilationDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.ClearTimeDilationDecorator
// 0x0000 (0x0028 - 0x0028)
class UClearTimeDilationDecorator : public UActorStateDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ClearTimeDilationDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.TimeDilationManager
// 0x0008 (0x0100 - 0x00F8)
class UTimeDilationManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TimeDilationManager");
		return ptr;
	}


	void STATIC_SetTimeDilation(class AActor** InActor, float* InTimeDilation, struct FName* Tag);
	void STATIC_SetGlobalTimeDilation(class UObject** WorldContextObject, float* InTimeDilation, struct FName* Tag);
	void STATIC_RefreshTimeDilationEffect(class AActor** InActor, struct FTimeDilationEffectHandle* Handle);
	struct FTimeDilationEffectHandle STATIC_PlayTimeDilationEffect(class AActor** InActor, float* InTimeDilation, float* InDuration, float* EaseInTime, float* EaseOutTime, bool* bIsHitPause);
	struct FTimeDilationEffectHandle STATIC_PlayGlobalTimeDilationEffect(class UObject** WorldContextObject, float* InTimeDilation, float* InDuration, float* EaseInTime, float* EaseOutTime);
	void OnCinematic(class APlayerControllerGunfire** Player, bool* bIsInCinematicMode);
	bool STATIC_IsTimeDilationEffectEasingOut(class AActor** InActor, struct FTimeDilationEffectHandle* Handle);
	bool STATIC_IsTimeDilationEffectActive(class AActor** InActor, struct FTimeDilationEffectHandle* Handle);
	bool STATIC_IsPlayingHitPause(class AActor** InActor);
	float STATIC_GetTimeDilation(class AActor** InActor, bool* bOnlyForTag, struct FName* Tag);
	float STATIC_GetGlobalTimeDilation(class UObject** WorldContextObject, bool* bOnlyForTag, struct FName* Tag);
	void STATIC_EaseOutTimeDilationEffect(class AActor** InActor, struct FTimeDilationEffectHandle* Handle);
	void STATIC_ClearTimeDilationEffect(class AActor** InActor, struct FTimeDilationEffectHandle* Handle);
	void STATIC_ClearTimeDilation(class AActor** InActor, bool* bClearEffects, bool* bOnlyForTag, struct FName* Tag);
	void STATIC_ClearGlobalTimeDilationEffect(class UObject** WorldContextObject, struct FTimeDilationEffectHandle* Handle);
	void STATIC_ClearGlobalTimeDilation(class UObject** WorldContextObject, bool* bClearEffects, bool* bOnlyForTag, struct FName* Tag);
	void STATIC_ClearAllTimeDilation(class UObject** WorldContextObject);
};


// Class GunfireRuntime.TraitType
// 0x0000 (0x0028 - 0x0028)
class UTraitType : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TraitType");
		return ptr;
	}

};


// Class GunfireRuntime.TraversalSettings
// 0x00D8 (0x0100 - 0x0028)
class UTraversalSettings : public UObject
{
public:
	float                                              VaultOverDistance;                                        // 0x0028(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VaultUpDistance;                                          // 0x002C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VaultPivotHeight;                                         // 0x0030(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VaultPivotOffset;                                         // 0x0034(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VaultMinHeight;                                           // 0x0038(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VaultMaxHeight;                                           // 0x003C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VaultOpeningSize;                                         // 0x0040(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VaultCheckDistance;                                       // 0x0044(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VaultMaxSideStep;                                         // 0x0048(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<ECollisionChannel>                     VaultCollisionChannel;                                    // 0x004C(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	float                                              FacingThreshold;                                          // 0x0050(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	float                                              FeetPlantOffset;                                          // 0x0058(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HandPlantOffset;                                          // 0x005C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HandAnimationOffset;                                      // 0x0060(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TestWallTraceDistanceDelta;                               // 0x0064(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UClass>>               ClassesToIgnoreForWallCheck;                              // 0x0068(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                               bUseComplexCollisionWhenTestingForWalls;                  // 0x0078(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0079(0x0007) MISSED OFFSET
	float                                              ValidWallAngleThreshold;                                  // 0x0080(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	TArray<TEnumAsByte<ECollisionChannel>>             LedgeGrabChannels;                                        // 0x0088(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, NativeAccessSpecifierPublic)
	float                                              LedgeGrabStartOffset;                                     // 0x0098(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LedgeGrabStopOffset;                                      // 0x009C(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LedgeGrabCheckIncrement;                                  // 0x00A0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LedgeGrabDistance;                                        // 0x00A4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SolidTestWallPointDistance;                               // 0x00A8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InsetTestWallPointDistance;                               // 0x00AC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClingDistance;                                            // 0x00B0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClingTestWallPointDistance;                               // 0x00B4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ClingHandOffset;                                          // 0x00B8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET
	TArray<TSoftObjectPtr<class UClass>>               ClassesToAllowForWallCling;                               // 0x00C0(0x0010) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                              WaterSurfaceAboveOffset;                                  // 0x00D0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WaterSurfaceBelowOffset;                                  // 0x00D4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WaterSurfaceEntryScaleZ;                                  // 0x00D8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              WaterSurfaceEntryMinVelocity;                             // 0x00DC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bWaterSurfaceEntryOnEmerge;                               // 0x00E0(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00E1(0x0003) MISSED OFFSET
	float                                              EmergeAcceleration;                                       // 0x00E4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EmergeFullStrengthDepth;                                  // 0x00E8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SubmergeDepth;                                            // 0x00EC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SubmergeAcceleration;                                     // 0x00F0(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DiveMinDistance;                                          // 0x00F4(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DiveCastDistance;                                         // 0x00F8(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DiveMinWaterDepth;                                        // 0x00FC(0x0004) (Edit, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TraversalSettings");
		return ptr;
	}

};


// Class GunfireRuntime.TraversalSurfaceCondition
// 0x0000 (0x0030 - 0x0030)
class UTraversalSurfaceCondition : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TraversalSurfaceCondition");
		return ptr;
	}

};


// Class GunfireRuntime.TutorialPrompts
// 0x0008 (0x0038 - 0x0030)
class UTutorialPrompts : public UDataAsset
{
public:
	class UDataTable*                                  TutorialPrompts;                                          // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TutorialPrompts");
		return ptr;
	}

};


// Class GunfireRuntime.TutorialComponent
// 0x0058 (0x0150 - 0x00F8)
class UTutorialComponent : public UActorComponent
{
public:
	class UTutorialPrompts*                            TutorialPrompts;                                          // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnShowTutorialPrompt;                                     // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHideTutorialPrompt;                                     // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnClearTutorialPrompt;                                    // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0130(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TutorialComponent");
		return ptr;
	}


	void SetTutorialPrompt(struct FName* ID, class AActor** Actor, float* DurationOverride);
	void RemoveTutorialPrompt(struct FName* ID, class AActor** Actor);
	void QueueTutorialPrompt(struct FName* ID, class AActor** Actor, float* DurationOverride);
	bool HasActiveTutorialPrompt(class AActor** Actor, struct FName* RequiredID);
	void ClearTutorialPrompts(class AActor** Actor);
	bool STATIC_AreTutorialsEnabled();
};


// Class GunfireRuntime.EventTreeNode_TutorialPrompt
// 0x0018 (0x0080 - 0x0068)
class UEventTreeNode_TutorialPrompt : public UEventTreeNode
{
public:
	struct FName                                       Context;                                                  // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       TutorialID;                                               // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              DurationOverride;                                         // 0x0078(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.EventTreeNode_TutorialPrompt");
		return ptr;
	}

};


// Class GunfireRuntime.TutorialPromptWidget
// 0x00A0 (0x02E0 - 0x0240)
class UTutorialPromptWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0xA0];                                      // 0x0240(0x00A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TutorialPromptWidget");
		return ptr;
	}

};


// Class GunfireRuntime.TweenComponent
// 0x0028 (0x0120 - 0x00F8)
class UTweenComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTweenComplete;                                          // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0108(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TweenComponent");
		return ptr;
	}


	void StopTween(int* ID);
	void StopAllTweens();
	int SetLightIntensity(float* Intensity, float* Time, EEaseType* EaseType, float* Exponent);
	int SetComponentLightIntensity(class ULightComponent** Component, float* Intensity, float* Time, EEaseType* EaseType, float* Exponent);
	int ScaleComponent(class USceneComponent** Component, struct FVector* Scale, float* Time, EEaseType* EaseType, float* Exponent);
	int Scale(struct FVector* Scale, float* Time, EEaseType* EaseType, float* Exponent);
	int RotateComponent(class USceneComponent** Component, struct FRotator* TargetRotation, float* Time, EEaseType* EaseType, float* Exponent, bool* bRotateRelative);
	int Rotate(struct FRotator* TargetRotation, float* Time, EEaseType* EaseType, float* Exponent);
	int MoveToTarget(class AActor** Target, float* Time, ETweenRoot* Root, EEaseType* EaseType, float* Exponent);
	int MoveRelative(struct FVector* Offset, float* Time, EEaseType* EaseType, float* Exponent);
	int MoveComponent(class USceneComponent** Component, struct FVector* Destination, float* Time, EEaseType* EaseType, float* Exponent, bool* bMoveRelative);
	int MoveBezier(struct FVector* ControlPt1, struct FVector* Destination, float* Time, EEaseType* EaseType, float* Exponent);
	int Move(struct FVector* Destination, float* Time, EEaseType* EaseType, float* Exponent);
	bool IsTweenComplete(int* ID);
	float GetElapsedTime(int* ID, bool* bIsNormalized);
	int AnimateVectorProperty(class UObject** Object, struct FName* PropertyName, struct FVector* from, struct FVector* to, float* Time, EEaseType* EaseType, float* Exponent);
	int AnimateVector4Property(class UObject** Object, struct FName* PropertyName, struct FVector4* from, struct FVector4* to, float* Time, EEaseType* EaseType, float* Exponent);
	int AnimateRotatorProperty(class UObject** Object, struct FName* PropertyName, struct FRotator* from, struct FRotator* to, float* Time, EEaseType* EaseType, float* Exponent);
	int AnimatePrimitiveComponentMaterialVectorParam(class UPrimitiveComponent** Component, class UMaterialInterface** Material, struct FName* Param, struct FVector* from, struct FVector* to, float* Time, EEaseType* EaseType, float* Exponent);
	int AnimatePrimitiveComponentMaterialScalarParam(class UPrimitiveComponent** Component, class UMaterialInterface** Material, struct FName* Param, float* from, float* to, float* Time, EEaseType* EaseType, float* Exponent);
	int AnimateMaterialVectorParamGlobal(class UMaterialInterface** Material, struct FName* Param, struct FVector* from, struct FVector* to, float* Time, EEaseType* EaseType, float* Exponent);
	int AnimateMaterialVectorParam(struct FName* ComponentName, class UMaterialInterface** Material, struct FName* Param, struct FVector* from, struct FVector* to, float* Time, EEaseType* EaseType, float* Exponent);
	int AnimateMaterialScalarParamGlobal(class UMaterialInterface** Material, struct FName* Param, float* from, float* to, float* Time, EEaseType* EaseType, float* Exponent);
	int AnimateMaterialScalarParam(struct FName* ComponentName, class UMaterialInterface** Material, struct FName* Param, float* from, float* to, float* Time, EEaseType* EaseType, float* Exponent);
	int AnimateFloatProperty(class UObject** Object, struct FName* PropertyName, float* from, float* to, float* Time, EEaseType* EaseType, float* Exponent);
};


// Class GunfireRuntime.UIHudComponent
// 0x0008 (0x0100 - 0x00F8)
class UUIHudComponent : public UActorComponent
{
public:
	bool                                               bVisible;                                                 // 0x00F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.UIHudComponent");
		return ptr;
	}


	void SetVisibility(bool* Visible);
	void OnParentSetVisibility(bool* Visible);
	bool IsVisible();
	class APawn* GetControllingPawn();
};


// Class GunfireRuntime.UIHudDamageNumberComponent
// 0x02C8 (0x03C8 - 0x0100)
class UUIHudDamageNumberComponent : public UUIHudComponent
{
public:
	struct FVector2D                                   ScreenOffset;                                             // 0x0100(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                DefaultColor;                                             // 0x0108(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDamageNumberParameters                     DefaultParameters;                                        // 0x0118(0x0078) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bInterpolateColorsOnOverlap;                              // 0x0190(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0191(0x0003) MISSED OFFSET
	struct FLinearColor                                CriticalColor;                                            // 0x0194(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseCriticalParameters;                                   // 0x01A4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x01A5(0x0003) MISSED OFFSET
	struct FDamageNumberParameters                     CriticalParameters;                                       // 0x01A8(0x0078) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       CriticalSuffix;                                           // 0x0220(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FLinearColor                                WeakSpotColor;                                            // 0x0238(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseWeakSpotParameters;                                   // 0x0248(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0249(0x0007) MISSED OFFSET
	struct FDamageNumberParameters                     WeakSpotParameters;                                       // 0x0250(0x0078) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FText                                       WeakSpotSuffix;                                           // 0x02C8(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FLinearColor                                CriticalWeakSpotColor;                                    // 0x02E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bUseCriticalWeakSpotParameters;                           // 0x02F0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData03[0x7];                                       // 0x02F1(0x0007) MISSED OFFSET
	struct FDamageNumberParameters                     CriticalWeakSpotParameters;                               // 0x02F8(0x0078) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bUseZeroDamageText;                                       // 0x0370(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0371(0x0007) MISSED OFFSET
	struct FText                                       ZeroDamageText;                                           // 0x0378(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bUseRoundedDamageAsZeroDamage;                            // 0x0390(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bIgnoreSpecialsOnZeroDamage;                              // 0x0391(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0392(0x0002) MISSED OFFSET
	float                                              ResistColorAlpha;                                         // 0x0394(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                ResistColor;                                              // 0x0398(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData06[0x10];                                      // 0x03A8(0x0010) MISSED OFFSET
	class ACharacterGunfire*                           CachedCharacter;                                          // 0x03B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerControllerGunfire*                    CachedController;                                         // 0x03C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.UIHudDamageNumberComponent");
		return ptr;
	}


	void OnNotifyHitTarget(struct FDamageInfo* DamageInfo);
	void ClearNumberQueue();
};


// Class GunfireRuntime.UIHudHitIndicatorComponent
// 0x0058 (0x0158 - 0x0100)
class UUIHudHitIndicatorComponent : public UUIHudComponent
{
public:
	class UTexture2D*                                  HitIndicator;                                             // 0x0100(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitIndicatorAlpha;                                        // 0x0108(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitIndicatorScale;                                        // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitIndicatorTimeout;                                      // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitIndicatorOffset;                                       // 0x0114(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  HitFlash;                                                 // 0x0118(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitFlashAlpha;                                            // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitFlashTimeout;                                          // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int>                                        IgnorePowerLevel;                                         // 0x0128(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0138(0x0018) MISSED OFFSET
	class ACharacterGunfire*                           CachedCharacter;                                          // 0x0150(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.UIHudHitIndicatorComponent");
		return ptr;
	}


	void OnNotifyTakeDamage(struct FDamageInfo* DamageInfo);
};


// Class GunfireRuntime.InteractiveInstigatorInterface
// 0x0000 (0x0028 - 0x0028)
class UInteractiveInstigatorInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.InteractiveInstigatorInterface");
		return ptr;
	}


	bool CanDoStateInteraction(class UStateMachineComponent** StateMachine, struct FName* StateName);
	bool CanDoItemInteraction(class AItem** Item);
	bool CanDoCharacterRevive(class UWoundedComponent** WoundedComponent);
};


// Class GunfireRuntime.UIHudInteractComponent
// 0x0168 (0x0268 - 0x0100)
class UUIHudInteractComponent : public UUIHudComponent
{
public:
	struct FName                                       InteractAction;                                           // 0x0100(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InteractActionHoldTime;                                   // 0x0108(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InteractiveStateQueryRange;                               // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InteractiveStateQueryHeight;                              // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxInteractiveStateResults;                               // 0x0114(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InteractiveStateUnfocusedScaleMax;                        // 0x0118(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InteractiveStateUnfocusedAlphaMax;                        // 0x011C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ItemQueryRange;                                           // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ItemQueryHeight;                                          // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RevivableQueryRange;                                      // 0x0128(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RevivableQueryHeight;                                     // 0x012C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ForceDrawWhenNotFocused;                                  // 0x0130(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	int                                                IconSize;                                                 // 0x0134(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ItemIconScale;                                            // 0x0138(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ArrowSize;                                                // 0x013C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                              Font;                                                     // 0x0140(0x0050) (Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  ItemIconBorder;                                           // 0x0190(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  Arrow;                                                    // 0x0198(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       GenericInteractionIconName;                               // 0x01A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  GenericInteractionIcon;                                   // 0x01A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       GenericItemIconName;                                      // 0x01B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  GenericItemIcon;                                          // 0x01B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ReviveIconName;                                           // 0x01C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  ReviveIcon;                                               // 0x01C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MashProgressDialogClass;                                  // 0x01D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInteractiveInfo;                                        // 0x01D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInteractiveFocus;                                       // 0x01E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInteractiveLostFocus;                                   // 0x01F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInteractiveHold;                                        // 0x0208(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTimerHandle                                HoldTimerHandle;                                          // 0x0218(0x0008) (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0220(0x0008) MISSED OFFSET
	class AUIActor*                                    MashProgressDialog;                                       // 0x0228(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0230(0x0008) MISSED OFFSET
	TArray<struct FHudInteractive>                     Interactives;                                             // 0x0238(0x0010) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData03[0x20];                                      // 0x0248(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.UIHudInteractComponent");
		return ptr;
	}


	void OnInteractCancel();
	bool OnInteract();
	void Interact();
	bool HasFocusedInteractive();
	float GetMashPercentage();
	class UObject* GetMashInteractImage();
	class AActor* GetFocusedInteractiveActor();
	struct FVector GetFocusedIconScreenPosition();
};


// Class GunfireRuntime.UIHudReticuleComponent
// 0x01E0 (0x02E0 - 0x0100)
class UUIHudReticuleComponent : public UUIHudComponent
{
public:
	class UClass*                                      WeaponType;                                               // 0x0100(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      MeleeWeaponType;                                          // 0x0108(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReticule*                                   DefaultReticule;                                          // 0x0110(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                      HitColor;                                                 // 0x0118(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                      HitCriticalColor;                                         // 0x011C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpreadBlendRate;                                          // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDisabledWeaponVisuals                             DisabledWeaponVisuals;                                    // 0x0124(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0125(0x0003) MISSED OFFSET
	struct FColor                                      DisabledColor;                                            // 0x0128(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bLimitToAimAssistRange;                                   // 0x012C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x012D(0x0003) MISSED OFFSET
	float                                              GhostReticuleSmoothingRate;                               // 0x0130(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxGhostReticuleOffset;                                   // 0x0134(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CenterToGhostReticuleTolerance;                           // 0x0138(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowGhostReticuleOnCharacters;                           // 0x013C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x19B];                                     // 0x013D(0x019B) MISSED OFFSET
	class ACharacterGunfire*                           CachedCharacter;                                          // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.UIHudReticuleComponent");
		return ptr;
	}


	void OnNotifyHitTarget(struct FDamageInfo* DamageInfo);
	class ARangedWeapon* GetRangedWeapon();
	class AMeleeWeapon* GetMeleeWeapon();
	float GetHitAlpha();
	float GetCurrentSpread();
};


// Class GunfireRuntime.UIHudTutorialComponent
// 0x00C8 (0x01C8 - 0x0100)
class UUIHudTutorialComponent : public UUIHudComponent
{
public:
	class UTexture2D*                                  Arrow;                                                    // 0x0100(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     ArrowScreenOffset;                                        // 0x0108(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              Border;                                                   // 0x0114(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              IconSize;                                                 // 0x0118(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              FadeInTime;                                               // 0x011C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              FadeOutTime;                                              // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0124(0x0004) MISSED OFFSET
	struct FSlateFontInfo                              Font;                                                     // 0x0128(0x0050) (Edit, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                FontShadowColorAndOpacity;                                // 0x0178(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                                   FontShadowOffset;                                         // 0x0188(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAnchors                                    PlayerPromptAnchors;                                      // 0x0190(0x0010) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                               ShowPlayerPrompts;                                        // 0x01A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x17];                                      // 0x01A1(0x0017) MISSED OFFSET
	class UTutorialPromptWidget*                       PlayerPromptWidget;                                       // 0x01B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTutorialComponent*                          CachedTutorialComponent;                                  // 0x01C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.UIHudTutorialComponent");
		return ptr;
	}


	void OnShowPrompt(struct FName* ID, class AActor** Actor, struct FTutorialPrompt* Prompt, float* ExpirationTime);
	void OnHidePrompt(struct FName* ID, class AActor** Actor, struct FTutorialPrompt* Prompt, float* ExpirationTime);
	void OnClearPrompt(struct FName* ID, class AActor** Actor, struct FTutorialPrompt* Prompt, float* ExpirationTime);
};


// Class GunfireRuntime.UITweenManager
// 0x0028 (0x0120 - 0x00F8)
class UUITweenManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x00F8(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTweenFinished;                                          // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.UITweenManager");
		return ptr;
	}


	bool StopTween(int* TweenID);
	int StartTimer(float* Time, struct FScriptDelegate* Event);
	int Size(class UWidget** Widget, struct FVector2D* DesiredSize, float* Time, EUIEaseType* EaseType, float* Exponent);
	int ScaleByCurve(class UWidget** Widget, class UCurveFloat** Curve, float* Time, float* Offset);
	int Scale(class UWidget** Widget, struct FVector2D* DesiredScale, float* Time, EUIEaseType* EaseType, float* Exponent);
	int MoveTo(class UWidget** Widget, class UWidget** ToWidget, float* Time, EUIEaseType* EaseType, float* Exponent);
	int MoveRelative(class UWidget** Widget, struct FVector2D* Offset, float* Time, EUIEaseType* EaseType, float* Exponent);
	int Move(class UWidget** Widget, struct FVector2D* Destination, float* Time, EUIEaseType* EaseType, float* Exponent);
	bool IsTweenFinished(int* TweenID);
	void InvalidateHandle(int* TweenHandle);
	class UUITweenManager* STATIC_GetInstance(class UObject** WorldContextObject);
	int FlashColor(class UWidget** Widget, struct FLinearColor* FromColor, struct FLinearColor* ToColor, float* Time, float* Exponent);
	int ColorByCurve(class UWidget** Widget, struct FLinearColor* FromColor, struct FLinearColor* ToColor, class UCurveFloat** Curve, float* Time);
	int AnimateColor(class UWidget** Widget, struct FLinearColor* ToColor, float* Time, EUIEaseType* EaseType, float* Exponent);
	int AnimateAlpha(class UWidget** Widget, float* ToAlpha, float* Time, EUIEaseType* EaseType, float* Exponent);
};


// Class GunfireRuntime.UIUtil
// 0x0000 (0x0028 - 0x0028)
class UUIUtil : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.UIUtil");
		return ptr;
	}

};


// Class GunfireRuntime.UnCrouchCondition
// 0x0000 (0x0030 - 0x0030)
class UUnCrouchCondition : public UCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.UnCrouchCondition");
		return ptr;
	}

};


// Class GunfireRuntime.UseItemInterface
// 0x0000 (0x0028 - 0x0028)
class UUseItemInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.UseItemInterface");
		return ptr;
	}


	void UseItem(class APlayerControllerGunfire** PlayerController, class UClass** ItemClass);
	bool CanUseItem(class APlayerControllerGunfire** PlayerController, class UClass** ItemClass);
};


// Class GunfireRuntime.UseItemStateDecorator
// 0x0030 (0x0058 - 0x0028)
class UUseItemStateDecorator : public UActorStateDecorator
{
public:
	class UStaticMesh*                                 AttachMesh;                                               // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       AttachComponent;                                          // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       FireEventOnExit;                                          // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               Remove;                                                   // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	class UClass*                                      Item;                                                     // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      Quantity;                                                 // 0x0050(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0051(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.UseItemStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.Variables
// 0x0010 (0x0040 - 0x0030)
class UVariables : public UDataAsset
{
public:
	TArray<struct FVariableInfo>                       Variables;                                                // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.Variables");
		return ptr;
	}

};


// Class GunfireRuntime.VariableComponent
// 0x0018 (0x0110 - 0x00F8)
class UVariableComponent : public UActorComponent
{
public:
	class UVariables*                                  Variables;                                                // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0100(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VariableComponent");
		return ptr;
	}


	void SetVariableObject(struct FName* NameID, class UObject** Value, float* Expiration);
	void SetVariableNumber(struct FName* NameID, float* Value, float* Expiration);
	void SetVariableName(struct FName* NameID, struct FName* Value, float* Expiration);
	void SetVariableBool(struct FName* NameID, bool* Value, float* Expiration);
	class UObject* GetVariableObject(struct FName* NameID);
	float GetVariableNumber(struct FName* NameID);
	bool GetVariableBool(struct FName* NameID);
};


// Class GunfireRuntime.RootVariableContext
// 0x0010 (0x0108 - 0x00F8)
class URootVariableContext : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.RootVariableContext");
		return ptr;
	}

};


// Class GunfireRuntime.VariableConditionBase
// 0x0038 (0x0068 - 0x0030)
class UVariableConditionBase : public UCondition
{
public:
	struct FName                                       VariableKey;                                              // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBlackboardVariableType                            VariableType;                                             // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECompareOp                                         Compare;                                                  // 0x0039(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x2];                                       // 0x003A(0x0002) MISSED OFFSET
	float                                              NumericValue;                                             // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               BooleanValue;                                             // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	class FString                                      StringValue;                                              // 0x0048(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ClassValue;                                               // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ObjectType;                                               // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VariableConditionBase");
		return ptr;
	}

};


// Class GunfireRuntime.VariableCondition
// 0x0010 (0x0078 - 0x0068)
class UVariableCondition : public UVariableConditionBase
{
public:
	struct FName                                       VariableName;                                             // 0x0068(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              Value;                                                    // 0x0070(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VariableCondition");
		return ptr;
	}

};


// Class GunfireRuntime.BlackboardVariableCondition
// 0x0038 (0x00A0 - 0x0068)
class UBlackboardVariableCondition : public UVariableConditionBase
{
public:
	struct FBlackboardNumValue                         NumericData;                                              // 0x0068(0x0008) (Deprecated, NoDestructor, NativeAccessSpecifierPrivate)
	struct FBlackboardBoolValue                        BooleanData;                                              // 0x0070(0x0001) (Deprecated, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	struct FBlackboardStringValue                      TextData;                                                 // 0x0078(0x0010) (Deprecated, NativeAccessSpecifierPrivate)
	struct FBlackboardObjectValue                      ObjectData;                                               // 0x0088(0x0010) (Deprecated, NoDestructor, NativeAccessSpecifierPrivate)
	struct FBlackboardClassValue                       ClassData;                                                // 0x0098(0x0008) (Deprecated, NoDestructor, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.BlackboardVariableCondition");
		return ptr;
	}

};


// Class GunfireRuntime.VaultCondition
// 0x0008 (0x0038 - 0x0030)
class UVaultCondition : public UTraversalCondition
{
public:
	EVaultType                                         VaultType;                                                // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VaultCondition");
		return ptr;
	}

};


// Class GunfireRuntime.VaultState
// 0x0000 (0x0118 - 0x0118)
class UVaultState : public UTraversalState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VaultState");
		return ptr;
	}

};


// Class GunfireRuntime.VelocityCondition
// 0x0008 (0x0038 - 0x0030)
class UVelocityCondition : public UCondition
{
public:
	EVelocityType                                      Type;                                                     // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECompareOp                                         Compare;                                                  // 0x0031(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	float                                              Value;                                                    // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VelocityCondition");
		return ptr;
	}

};


// Class GunfireRuntime.ActorVisual
// 0x0018 (0x0040 - 0x0028)
class UActorVisual : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FName                                       RequiredID;                                               // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HardReferenceAssets;                                      // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ActorVisual");
		return ptr;
	}

};


// Class GunfireRuntime.VisualID
// 0x0060 (0x0088 - 0x0028)
class UVisualID : public UObject
{
public:
	unsigned char                                      UnknownData00[0xC];                                       // 0x0028(0x000C) MISSED OFFSET
	struct FName                                       NameID;                                                   // 0x0034(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UTexture2D>                   Icon;                                                     // 0x0040(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SlotID;                                                   // 0x0068(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UActorVisual*>                        Visuals;                                                  // 0x0070(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                               HardReferenceAssets;                                      // 0x0080(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0081(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VisualID");
		return ptr;
	}

};


// Class GunfireRuntime.VisualSetNode
// 0x0008 (0x0030 - 0x0028)
class UVisualSetNode : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VisualSetNode");
		return ptr;
	}

};


// Class GunfireRuntime.VisualFXNode
// 0x0008 (0x0030 - 0x0028)
class UVisualFXNode : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VisualFXNode");
		return ptr;
	}

};


// Class GunfireRuntime.VisualFXEntry
// 0x0028 (0x0050 - 0x0028)
class UVisualFXEntry : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	TArray<struct FName>                               Tags;                                                     // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<class UVisualFXNode*>                       Nodes;                                                    // 0x0040(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VisualFXEntry");
		return ptr;
	}

};


// Class GunfireRuntime.VisualFX
// 0x0018 (0x0048 - 0x0030)
class UVisualFX : public UVisualSetNode
{
public:
	struct FName                                       NameID;                                                   // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UVisualFXEntry*>                      Entries;                                                  // 0x0038(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VisualFX");
		return ptr;
	}

};


// Class GunfireRuntime.VisualSetSlot
// 0x0020 (0x0050 - 0x0030)
class UVisualSetSlot : public UVisualSetNode
{
public:
	struct FName                                       SlotID;                                                   // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UVisualID*>                           VisualIDs;                                                // 0x0038(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                               HardReferenceAssets;                                      // 0x0048(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VisualSetSlot");
		return ptr;
	}

};


// Class GunfireRuntime.VisualSet
// 0x00A0 (0x00D0 - 0x0030)
class UVisualSet : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	bool                                               HardReferenceAssets;                                      // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	TArray<class UVisualSet*>                          Include;                                                  // 0x0040(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UVisualSetNode*>                      Nodes;                                                    // 0x0050(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UVisualID*>                           VisualIDs;                                                // 0x0060(0x0010) (ExportObject, ZeroConstructor, Deprecated, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<struct FName, class UVisualFX*>               VisualFXMap;                                              // 0x0070(0x0050) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UObject*>                             HardReferencedAssets;                                     // 0x00C0(0x0010) (ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VisualSet");
		return ptr;
	}

};


// Class GunfireRuntime.VisualComponent
// 0x00D8 (0x01D0 - 0x00F8)
class UVisualComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F8(0x0004) MISSED OFFSET
	int                                                Seed;                                                     // 0x00FC(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVisualSet*                                  VisualSet;                                                // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVisualSlot>                         Slots;                                                    // 0x0108(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FName>                               VisualTags;                                               // 0x0118(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FName>                               AnimSoundTags;                                            // 0x0128(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnStreamedVisualApplied;                                  // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x88];                                      // 0x0148(0x0088) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VisualComponent");
		return ptr;
	}


	void UpdateSlots();
	void StopAllStreamingRequests();
	void SetVisualAt(struct FName* SlotID, int* Idx);
	void SetVisual(struct FName* SlotID, struct FName* VisualID);
	void SetupSlaveMeshes();
	void SetSlotEnabled(struct FName* SlotID, bool* bIsEnabled);
	void PlayVisualFX(struct FName* NameID);
	void OnVisualLoaded(struct FName* SlotID, struct FName* VisualID);
	class UVisualSetSlot* GetVisualSlot(struct FName* SlotID);
	int GetVisualPositionInSlot(struct FName* SlotID);
	struct FName GetSlotVisualID(struct FName* SlotID);
	int GetNumVisualsForSlotID(struct FName* SlotID);
	void ClearVisual(struct FName* SlotID);
};


// Class GunfireRuntime.GlobalMaterialVisual
// 0x0050 (0x0090 - 0x0040)
class UGlobalMaterialVisual : public UActorVisual
{
public:
	struct FVisualMaterialParam                        Param;                                                    // 0x0040(0x0050) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.GlobalMaterialVisual");
		return ptr;
	}

};


// Class GunfireRuntime.MaterialOverrideVisual
// 0x0010 (0x0050 - 0x0040)
class UMaterialOverrideVisual : public UActorVisual
{
public:
	struct FName                                       SlotName;                                                 // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                          Material;                                                 // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.MaterialOverrideVisual");
		return ptr;
	}

};


// Class GunfireRuntime.SceneVisual
// 0x0008 (0x0048 - 0x0040)
class USceneVisual : public UActorVisual
{
public:
	struct FName                                       Component;                                                // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SceneVisual");
		return ptr;
	}

};


// Class GunfireRuntime.SkinnedMeshVisual
// 0x0070 (0x00B8 - 0x0048)
class USkinnedMeshVisual : public USceneVisual
{
public:
	TSoftObjectPtr<class USkeletalMesh>                Mesh;                                                     // 0x0048(0x0028) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               VisualTags;                                               // 0x0070(0x0010) (ZeroConstructor, Deprecated, NativeAccessSpecifierPublic)
	TArray<struct FName>                               AnimSoundTags;                                            // 0x0080(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FVisualMaterialReplacement>          MaterialReplacements;                                     // 0x0090(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FVisualMaterialParam>                MaterialParams;                                           // 0x00A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bReInitPoseOnApply;                                       // 0x00B0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bClearMeshOnRemove;                                       // 0x00B1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bResetMaterialsOnApply;                                   // 0x00B2(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x5];                                       // 0x00B3(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SkinnedMeshVisual");
		return ptr;
	}

};


// Class GunfireRuntime.StaticMeshVisual
// 0x0070 (0x00B8 - 0x0048)
class UStaticMeshVisual : public USceneVisual
{
public:
	TSoftObjectPtr<class UStaticMesh>                  Mesh;                                                     // 0x0048(0x0028) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FName>                               VisualTags;                                               // 0x0070(0x0010) (ZeroConstructor, Deprecated, NativeAccessSpecifierPublic)
	TArray<struct FName>                               AnimSoundTags;                                            // 0x0080(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FVisualMaterialReplacement>          MaterialReplacements;                                     // 0x0090(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FVisualMaterialParam>                MaterialParams;                                           // 0x00A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bResetMaterialsOnApply;                                   // 0x00B0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.StaticMeshVisual");
		return ptr;
	}

};


// Class GunfireRuntime.RandomSkinnedMeshVisual
// 0x0018 (0x0060 - 0x0048)
class URandomSkinnedMeshVisual : public USceneVisual
{
public:
	TArray<struct FRandomSkinMesh>                     Meshes;                                                   // 0x0048(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bResetMaterialsOnApply;                                   // 0x0058(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0059(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.RandomSkinnedMeshVisual");
		return ptr;
	}

};


// Class GunfireRuntime.RandomStaticMeshVisual
// 0x0018 (0x0060 - 0x0048)
class URandomStaticMeshVisual : public USceneVisual
{
public:
	TArray<struct FRandomStaticMesh>                   Meshes;                                                   // 0x0048(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                               bResetMaterialsOnApply;                                   // 0x0058(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0059(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.RandomStaticMeshVisual");
		return ptr;
	}

};


// Class GunfireRuntime.AudioVisual
// 0x0040 (0x0088 - 0x0048)
class UAudioVisual : public USceneVisual
{
public:
	float                                              FadeTime;                                                 // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OverrideFadeOutTime;                                      // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Volume;                                                   // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	TSoftObjectPtr<class USoundCue>                    Sound;                                                    // 0x0058(0x0028) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartMin;                                                 // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StartMax;                                                 // 0x0084(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AudioVisual");
		return ptr;
	}

};


// Class GunfireRuntime.ParticleVisual
// 0x0040 (0x0088 - 0x0048)
class UParticleVisual : public USceneVisual
{
public:
	TSoftObjectPtr<class UParticleSystem>              ParticleSystem;                                           // 0x0048(0x0028) (Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Attached : 1;                                             // 0x0070(0x0001) (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	bool                                               TrySoftDestroy;                                           // 0x0074(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0075(0x0003) MISSED OFFSET
	struct FName                                       SocketName;                                               // 0x0078(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ActorParameterName;                                       // 0x0080(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ParticleVisual");
		return ptr;
	}

};


// Class GunfireRuntime.AttachActorVisual
// 0x0008 (0x0050 - 0x0048)
class UAttachActorVisual : public USceneVisual
{
public:
	class UClass*                                      ActorBP;                                                  // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AttachActorVisual");
		return ptr;
	}

};


// Class GunfireRuntime.SetVisibilityVisual
// 0x0008 (0x0050 - 0x0048)
class USetVisibilityVisual : public USceneVisual
{
public:
	bool                                               Visible;                                                  // 0x0048(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.SetVisibilityVisual");
		return ptr;
	}

};


// Class GunfireRuntime.TagVisual
// 0x0010 (0x0058 - 0x0048)
class UTagVisual : public USceneVisual
{
public:
	TArray<struct FName>                               AnimSoundTags;                                            // 0x0048(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.TagVisual");
		return ptr;
	}

};


// Class GunfireRuntime.ParticleFXNode
// 0x0050 (0x0080 - 0x0030)
class UParticleFXNode : public UVisualFXNode
{
public:
	class UParticleSystem*                             ParticleSystem;                                           // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Attached : 1;                                             // 0x0038(0x0001) (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	struct FName                                       Component;                                                // 0x003C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SocketName;                                               // 0x0044(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ActorParameterName;                                       // 0x004C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     LocationOffset;                                           // 0x0054(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    RotationOffset;                                           // 0x0060(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                                     Scale;                                                    // 0x006C(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseGlobalObjectPool;                                      // 0x0078(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0079(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ParticleFXNode");
		return ptr;
	}

};


// Class GunfireRuntime.AudioFXNode
// 0x0028 (0x0058 - 0x0030)
class UAudioFXNode : public UVisualFXNode
{
public:
	class USoundBase*                                  Sound;                                                    // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Attached : 1;                                             // 0x0038(0x0001) (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	struct FName                                       Component;                                                // 0x003C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       SocketName;                                               // 0x0044(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VolumeMultiplier;                                         // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchMultiplier;                                          // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.AudioFXNode");
		return ptr;
	}

};


// Class GunfireRuntime.VisualizableActorComponent
// 0x0000 (0x00F8 - 0x00F8)
class UVisualizableActorComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VisualizableActorComponent");
		return ptr;
	}

};


// Class GunfireRuntime.VitalityComponent
// 0x0058 (0x0150 - 0x00F8)
class UVitalityComponent : public UActorComponent
{
public:
	struct FName                                       NameID;                                                   // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       StatMax;                                                  // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       StatRegen;                                                // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       StatRegenDelay;                                           // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       StatEmptyDelay;                                           // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       StatDeltaMod;                                             // 0x0120(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EVitalityInitialValue                              InitialValue;                                             // 0x0128(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0129(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnVitalityChanged;                                        // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              Value;                                                    // 0x0140(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0144(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VitalityComponent");
		return ptr;
	}


	void Reset(bool* Notify);
	void OnRep_Value();
	bool HasValidStatsComp();
	class UVitalityComponent* STATIC_GetVitality(class AActor** Actor, struct FName* Vitality);
	float GetValuePercentage();
	float GetValueMax();
	float GetValue();
	class FString GetDebugInfo(int* DebugLevel);
	void ApplyDeltaReplicated(float* Delta);
	void ApplyDelta(float* Delta);
};


// Class GunfireRuntime.VitalityCondition
// 0x0018 (0x0048 - 0x0030)
class UVitalityCondition : public UCondition
{
public:
	struct FName                                       NameID;                                                   // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ECompareOp                                         Compare;                                                  // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              Value;                                                    // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Normalized;                                               // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VitalityCondition");
		return ptr;
	}

};


// Class GunfireRuntime.VitalityStateDecorator
// 0x0048 (0x0070 - 0x0028)
class UVitalityStateDecorator : public UActorStateDecorator
{
public:
	struct FName                                       NameID;                                                   // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ValidateVitality;                                         // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                VitalityStartFrame;                                       // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VitalityOnStart;                                          // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VitalityOnExit;                                           // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FStatValue                                  VitalityPerSec;                                           // 0x0040(0x000C) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	int                                                VitalityLockFrame;                                        // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VitalityRegenDelay;                                       // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              VitalityRegenScalar;                                      // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FConditions                                 Conditions;                                               // 0x0058(0x0018) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.VitalityStateDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.WallCheckCondition
// 0x0008 (0x0038 - 0x0030)
class UWallCheckCondition : public UCondition
{
public:
	EWallCheckType                                     Type;                                                     // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              MaxHitAngle;                                              // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WallCheckCondition");
		return ptr;
	}

};


// Class GunfireRuntime.WaterCondition
// 0x0010 (0x0040 - 0x0030)
class UWaterCondition : public UCondition
{
public:
	float                                              SubmergeDepth;                                            // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECompareOp                                         SubmergeDepthCompare;                                     // 0x0034(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	float                                              WaterDepth;                                               // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	ECompareOp                                         WaterDepthCompare;                                        // 0x003C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData01[0x3];                                       // 0x003D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WaterCondition");
		return ptr;
	}

};


// Class GunfireRuntime.WaterEntryDecorator
// 0x0000 (0x0028 - 0x0028)
class UWaterEntryDecorator : public UActorStateDecorator
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WaterEntryDecorator");
		return ptr;
	}

};


// Class GunfireRuntime.WaterFXComponent
// 0x0090 (0x0188 - 0x00F8)
class UWaterFXComponent : public UActorComponent
{
public:
	TArray<struct FWaterFXEntry>                       WaterEnterFX;                                             // 0x00F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FWaterFXEntry>                       WaterWakeFX;                                              // 0x0108(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FWaterFXEntry>                       WaterExitFX;                                              // 0x0118(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TEnumAsByte<ECollisionChannel>                     Channel;                                                  // 0x0128(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0129(0x0003) MISSED OFFSET
	float                                              ImpactFXThreshold;                                        // 0x012C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UpdateRate;                                               // 0x0130(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0134(0x0004) MISSED OFFSET
	TArray<struct FWaterFXOverride>                    Overrides;                                                // 0x0138(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0148(0x0028) MISSED OFFSET
	class UClass*                                      LastWaterType;                                            // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    WakeVFX;                                                  // 0x0178(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                             WakeSFX;                                                  // 0x0180(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WaterFXComponent");
		return ptr;
	}


	bool IsInWater();
	class UClass* GetWaterType();
	float GetWaterLevel();
	float GetWaterDepth();
	float GetSubmergeDepth();
};


// Class GunfireRuntime.WaterOverlapComponent
// 0x0040 (0x0138 - 0x00F8)
class UWaterOverlapComponent : public UActorComponent
{
public:
	class AActor*                                      WaterBounds;                                              // 0x00F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnEnterWater;                                             // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnExitWater;                                              // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FName                                       Component;                                                // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bOnlyValidIfCharacterInWater;                             // 0x0128(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               bDoRedundantCheckWhileInWater;                            // 0x0129(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x6];                                       // 0x012A(0x0006) MISSED OFFSET
	class UPrimitiveComponent*                         CachedComponent;                                          // 0x0130(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WaterOverlapComponent");
		return ptr;
	}


	void OnEndOverlap(class AActor** OverlappedActor, class AActor** OtherActor);
	void OnEndComponentOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex);
	void OnBeginOverlap(class AActor** OverlappedActor, class AActor** OtherActor);
	void OnBeginComponentOverlap(class UPrimitiveComponent** OverlappedComponent, class AActor** OtherActor, class UPrimitiveComponent** OtherComp, int* OtherBodyIndex, bool* bFromSweep, struct FHitResult* SweepResult);
	bool InWater();
};


// Class GunfireRuntime.WaterSurfaceCondition
// 0x0008 (0x0038 - 0x0030)
class UWaterSurfaceCondition : public UTraversalCondition
{
public:
	EWaterSurfaceDirection                             WaterSurfaceDirection;                                    // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WaterSurfaceCondition");
		return ptr;
	}

};


// Class GunfireRuntime.WaterSurfaceState
// 0x0008 (0x0120 - 0x0118)
class UWaterSurfaceState : public UTraversalState
{
public:
	EWaterSurfaceTraversalType                         TraversalType;                                            // 0x0118(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0119(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WaterSurfaceState");
		return ptr;
	}

};


// Class GunfireRuntime.WeaponAffinities
// 0x0010 (0x0038 - 0x0028)
class UWeaponAffinities : public UObject
{
public:
	TArray<struct FWeaponAffinity>                     Affinities;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WeaponAffinities");
		return ptr;
	}

};


// Class GunfireRuntime.WeaponComponent
// 0x0000 (0x00F8 - 0x00F8)
class UWeaponComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WeaponComponent");
		return ptr;
	}


	void NotifyHitTarget(struct FDamageInfo* DamageInfo);
	void ModifyInspectInfo(class AActor** Actor, struct FInspectInfo* In, struct FInspectInfo* Out);
	void ModifyDamage(struct FDamageInfo* Info, bool* Rtn);
	void ComputeStats(class UStatsComponent** Stats);
};


// Class GunfireRuntime.WeaponAffinityComponent
// 0x0008 (0x0100 - 0x00F8)
class UWeaponAffinityComponent : public UWeaponComponent
{
public:
	class UClass*                                      Affinities;                                               // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WeaponAffinityComponent");
		return ptr;
	}


	float ComputeScalar();
};


// Class GunfireRuntime.ImpactDirection
// 0x0008 (0x0030 - 0x0028)
class UImpactDirection : public UObject
{
public:
	struct FName                                       Tag;                                                      // 0x0028(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.ImpactDirection");
		return ptr;
	}

};


// Class GunfireRuntime.WeaponPhantomComponent
// 0x0078 (0x0170 - 0x00F8)
class UWeaponPhantomComponent : public UActorComponent
{
public:
	class UClass*                                      DefaultDamageType;                                        // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DefaultImpactEffect;                                      // 0x0100(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DefaultBlockEffect;                                       // 0x0108(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultHitCooldown;                                       // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultWeaponDamage;                                      // 0x0114(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSkipLagSupersampling;                                    // 0x0118(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSkipEnvironmentHits;                                     // 0x0119(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bSkipWallChecks;                                          // 0x011A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bDoHitPause;                                              // 0x011B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               bPausePhantomsDuringHitPause;                             // 0x011C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData00[0x3];                                       // 0x011D(0x0003) MISSED OFFSET
	int                                                MaxHitPauses;                                             // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HitPausePenalty;                                          // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWeaponPhantomProvider                      WeaponPhantomProvider;                                    // 0x0128(0x0040) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0168(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WeaponPhantomComponent");
		return ptr;
	}


	void StopWeaponPhantom(class UShapeComponent** Shape);
	void StopAllWeaponPhantoms();
	void StartWeaponPhantom(class UShapeComponent** Shape, class AActor** Cause, class UClass** DamageType, class UClass** ImpactDirection, class UClass** ImpactEffect, struct FName* EffectBone, EEffectSpawnDirection* EffectSpawnDirection, struct FRotator* EffectOrientation, float* DamageMod, float* DamageScalar, bool* Blockable, bool* Evadable, int* PowerOverride, float* HitCooldown);
	void SetSuspended(bool* bIsSuspended);
	void MarkActorHit(class UObject** WorldContextObject, class UShapeComponent** Shape, class AActor** Actor);
	bool IsSuspended();
	bool HasRecentlyHitActor(class UObject** WorldContextObject, class UShapeComponent** Shape, class AActor** Actor);
	bool HasAnyOverlappingDamageable(TArray<class AActor*>* IgnoredActors, bool* bIgnoreDeadActors);
};


// Class GunfireRuntime.WidgetComponentGunfire
// 0x0000 (0x06C0 - 0x06C0)
class UWidgetComponentGunfire : public UWidgetComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WidgetComponentGunfire");
		return ptr;
	}

};


// Class GunfireRuntime.WorldSoundComponent
// 0x0018 (0x0110 - 0x00F8)
class UWorldSoundComponent : public UActorComponent
{
public:
	class USoundClass*                                 SoundClassOverride;                                       // 0x00F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWorldSound>                         AudioList;                                                // 0x0100(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WorldSoundComponent");
		return ptr;
	}


	void SetAudioList(TArray<struct FWorldSound>* NewAudioList, bool* bReset);
	void ResetTimers();
};


// Class GunfireRuntime.WorldSoundEntry
// 0x0038 (0x0060 - 0x0028)
class UWorldSoundEntry : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FWorldSound                                 Sound;                                                    // 0x0030(0x0030) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WorldSoundEntry");
		return ptr;
	}

};


// Class GunfireRuntime.WorldSoundID
// 0x0028 (0x0050 - 0x0028)
class UWorldSoundID : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	TArray<class UClass*>                              States;                                                   // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UWorldSoundEntry*>                    Entries;                                                  // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WorldSoundID");
		return ptr;
	}

};


// Class GunfireRuntime.WorldSoundSet
// 0x0080 (0x00B0 - 0x0030)
class UWorldSoundSet : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	TArray<class UWorldSoundID*>                       SoundIDs;                                                 // 0x0038(0x0010) (ZeroConstructor, NativeAccessSpecifierPublic)
	class UWorldSoundSet*                              ParentSet;                                                // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UClass*, struct FWorldSoundList>        SoundMap;                                                 // 0x0050(0x0050) (ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	struct FWorldSoundList                             GlobalSoundList;                                          // 0x00A0(0x0010) (Transient, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WorldSoundSet");
		return ptr;
	}

};


// Class GunfireRuntime.WoundedComponent
// 0x00A8 (0x01A0 - 0x00F8)
class UWoundedComponent : public UActorComponent
{
public:
	float                                              WoundedHealth;                                            // 0x00F8(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ReviveProgress;                                           // 0x00FC(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWoundedState;                                           // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTargetRevived;                                          // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRevived;                                                // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnWounded;                                                // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              WoundedHealthMult;                                        // 0x0140(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              WoundedHealthBleedOutTime;                                // 0x0144(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReviveHealthMult;                                         // 0x0148(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxRevivers;                                              // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReviveRange;                                              // 0x0150(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ReviveArc;                                                // 0x0154(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       ReviveState;                                              // 0x0158(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               PauseWoundRegenDuringRevive;                              // 0x0160(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0161(0x0007) MISSED OFFSET
	class UConditionList*                              ReviveConditions;                                         // 0x0168(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UConditionList*                              SkipWoundConditions;                                      // 0x0170(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UConditionList*                              SelfSkipWoundConditions;                                  // 0x0178(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EWoundedState                                      State;                                                    // 0x0180(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0181(0x0007) MISSED OFFSET
	class AActor*                                      ReviveTarget;                                             // 0x0188(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                              Revivers;                                                 // 0x0190(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WoundedComponent");
		return ptr;
	}


	void StopReviveActor();
	void ServerKillSelf();
	void ReviveActor(class AActor** Target);
	void Revive(float* HealthMultiplier, bool* SelfRevive);
	void OnRep_State();
	void OnCinematicPlaying(struct FSequencerPlayerSettings* Settings, class ULevelSequence** CurrentSequence, class AActor** Instigator);
	void MulticastOnWounded(struct FDamageInfo* Damage);
	void MulticastOnTargetRevived(class UWoundedComponent** WoundedComponent);
	void MulticastOnRevived(bool* bSelfRevive);
	void Kill();
	float GetWoundedHealthPct();
};


// Class GunfireRuntime.WoundedCondition
// 0x0008 (0x0038 - 0x0030)
class UWoundedCondition : public UCondition
{
public:
	EWoundedState                                      WoundedState;                                             // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class GunfireRuntime.WoundedCondition");
		return ptr;
	}

};


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
