#pragma once

// Borderlands 3 SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "BL3_OakGame_structs.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Classes
//---------------------------------------------------------------------------

// Class OakGame.Agonizer9kFloor
// 0x01E0 (0x0638 - 0x0458)
class AAgonizer9kFloor : public AActor
{
public:
	class UTeam*                                       PlayersTeam;                                              // 0x0458(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           HeatingElementMaterial;                                   // 0x0460(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageData;                                               // 0x0468(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageData_SmallDamage;                                   // 0x0470(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 BurstFlameAudio1;                                         // 0x0478(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 BurstFlameAudio2;                                         // 0x0480(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 BurstFlameAudio3;                                         // 0x0488(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 BurstFlameAudio4;                                         // 0x0490(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PreheatAudioSmall1;                                       // 0x0498(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PreheatAudioSmall2;                                       // 0x04A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PreheatAudioSmall3;                                       // 0x04A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PreheatAudioSmall4;                                       // 0x04B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PreheatAudioBig1;                                         // 0x04B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PreheatAudioBig2;                                         // 0x04C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PreheatAudioBig3;                                         // 0x04C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PreheatAudioBig4;                                         // 0x04D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BurstFlameAudioGain;                                      // 0x04D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BurstFlamesAudioRadius;                                   // 0x04DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BurstFlamesAudioRadiusRingMultiplier;                     // 0x04E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04E4(0x0004) MISSED OFFSET
	class USceneComponent*                             SceneRootComp;                                            // 0x04E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              WarmupTime;                                               // 0x04F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WarmUpDelayWhenAllWarmUpDone;                             // 0x04F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RotationFloorDoneTime;                                    // 0x04F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FloorRotationTimeBetweenSector;                           // 0x04FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AnticipationTimeOneRing;                                  // 0x0500(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AnticipationTime;                                         // 0x0504(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AnticipationTimeRotationPattern;                          // 0x0508(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BurstinitialOffset;                                       // 0x050C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BurstOffsetPerRing;                                       // 0x0510(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RingPatternInterval;                                      // 0x0514(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HeatingPipeEmissiveInterval;                              // 0x0518(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x051C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 EmissiveStrengthOverTime;                                 // 0x0520(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 EmissiveStrengthOverTimeFadeOut;                          // 0x0528(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnFloorFirstFlame;                                        // 0x0530(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FSectorFromBP>                       SectorsBP;                                                // 0x0540(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData02[0x50];                                      // 0x0550(0x0050) MISSED OFFSET
	class AAgonizer9k*                                 AgonizerRef;                                              // 0x05A0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x18];                                      // 0x05A8(0x0018) MISSED OFFSET
	class UWwiseAudioComponent*                        AudioComponent1;                                          // 0x05C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWwiseAudioComponent*                        AudioComponent2;                                          // 0x05C8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWwiseAudioComponent*                        AudioComponent3;                                          // 0x05D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWwiseAudioComponent*                        AudioComponent4;                                          // 0x05D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x58];                                      // 0x05E0(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.Agonizer9kFloor");
		return ptr;
	}


	void StopHeatingPipeEmissive(struct FRing* SectorRing);
	void StartSafeSpotPattern(float DelayBeforeStart);
	void StartRotationPattern(float DelayBeforeStart);
	void StartRingPattern(float DelayBeforeStart);
	void StartHeatingPipeEmissive(struct FRing* SectorRing);
	void StartAnticipationSafeSpot(TArray<int> SafeSpotSectorIds);
	void SetFloorRotationParameters(int Direction, int StartingSectorId);
	void SetAgonizerRef(class AAgonizer9k* AgonizerRef);
	void PlayBurstFlameAudio();
	void OnWarmUpDone(struct FSector* FloorSector);
	void OnRotationAnticipationDone(bool IsLast, struct FSector* FloorSector);
	void OnFloorPatternDone();
	void OnAnticipationOneRingDone(struct FSector* FloorSector, struct FRing* SectorRing);
	void OnAnticipationDone();
	void CreateSectorsDataFromBP();
};


// Class OakGame.ActiveWeaponsComponent
// 0x0680 (0x07F8 - 0x0178)
class UActiveWeaponsComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0178(0x0040) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnZoomChange;                                             // 0x01B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnWeaponChanged;                                          // 0x01C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnWeaponReloadStarted;                                    // 0x01D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnWeaponReloadEnded;                                      // 0x01E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class UWeaponSlotData*>                     WeaponSlots;                                              // 0x01F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              WeaponsScale;                                             // 0x0208(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x020C(0x0004) MISSED OFFSET
	class UClass*                                      DefaultWeaponClass;                                       // 0x0210(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UInventoryBalanceData*                       DefaultBalanceWeaponData;                                 // 0x0218(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoSpawnDefaultWeapon;                                  // 0x0220(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0221(0x0007) MISSED OFFSET
	struct FWeaponSlotContainer                        Weapons;                                                  // 0x0228(0x05B8) (Transient)
	class APawn*                                       OwnerPawn;                                                // 0x07E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UInventoryCategoryData*                      WeaponItemType;                                           // 0x07E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x07F0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ActiveWeaponsComponent");
		return ptr;
	}


	void ZoomEvent__DelegateSignature(EZoomEventType IsZooming);
	void WeaponReloadStarted(class AWeapon* Weapon, bool bAuto);
	void WeaponReloadEnded(class AWeapon* Weapon, bool bCompleted);
	void WeaponPutDown(class AWeapon* PutDownWeapon);
	void WeaponChangedEvent__DelegateSignature(class AWeapon* NewWeapon, class AWeapon* LastWeapon);
	class AWeapon* SpawnWeaponFromClass(class UClass* WeaponClass, class UWeaponSlotData* Slot);
	class AWeapon* SpawnWeaponFromBalanceData(class UInventoryBalanceData* WeaponBalanceData, class UWeaponSlotData* Slot);
	class AWeapon* SpawnVehicleWeaponFromAspectData(class UVehicleAttachWeaponAspectData* VehicleWeaponAspectData, class UWeaponSlotData* Slot);
	void SpawnDefaultWeapon();
	void ServerUnlockWeaponActions(const struct FName& Reason, int ChannelsMask);
	void ServerStopWeaponActions(unsigned char Slot, int ChannelsMask, bool bClearInput);
	void ServerSetCurrentWeapon(class AWeapon* NewWeapon, unsigned char NewWeaponSlot, EWeaponPutDownType PutDownType, EWeaponEquipType EquipType);
	void ServerLockWeaponActions(const struct FName& Reason, int ChannelsMask, bool bStopActions, bool bClearInput);
	void OnWeaponResumeUse(class UWeaponSlotData* AttachedSlot);
	class AWeapon* GetWeapon(unsigned char Slot);
	void ClientUnlockWeaponActions(const struct FName& Reason, int ChannelsMask);
	void ClientStopWeaponActions(unsigned char Slot, int ChannelsMask, bool bClearInput);
	void ClientLockWeaponActions(const struct FName& Reason, int ChannelsMask, bool bStopActions, bool bClearInput);
};


// Class OakGame.ActivityFeedActionData
// 0x0020 (0x0050 - 0x0030)
class UActivityFeedActionData : public UGbxDataAsset
{
public:
	class FString                                      CaptionString;                                            // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class FString                                      ButtonImageURL;                                           // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ActivityFeedActionData");
		return ptr;
	}

};


// Class OakGame.UActivityFeedData
// 0x0000 (0x0030 - 0x0030)
class UUActivityFeedData : public UGbxDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.UActivityFeedData");
		return ptr;
	}

};


// Class OakGame.ActivityFeedOpenStoreActionData
// 0x0000 (0x0050 - 0x0050)
class UActivityFeedOpenStoreActionData : public UActivityFeedActionData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ActivityFeedOpenStoreActionData");
		return ptr;
	}

};


// Class OakGame.ActivityFeedReward
// 0x0070 (0x00A0 - 0x0030)
class UActivityFeedReward : public UGbxDataAsset
{
public:
	struct FText                                       CaptionString;                                            // 0x0030(0x0028) (Edit, DisableEditOnInstance)
	struct FText                                       CondensedCaptionString;                                   // 0x0048(0x0028) (Edit, DisableEditOnInstance)
	class FString                                      SmallImageUrl;                                            // 0x0060(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	EActivityFeedImageAspectRatio                      SmallImageAspectRatio;                                    // 0x0070(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	class FString                                      LargeImageUrl;                                            // 0x0078(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UActivityFeedURLActionData*                  URLBrowserActionData;                                     // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UActivityFeedOpenStoreActionData*            URLStoreActionData;                                       // 0x0090(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UActivityFeedStartGameActionData*            StartGameActionData;                                      // 0x0098(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ActivityFeedReward");
		return ptr;
	}

};


// Class OakGame.ActivityFeedStartGameActionData
// 0x0010 (0x0060 - 0x0050)
class UActivityFeedStartGameActionData : public UActivityFeedActionData
{
public:
	class FString                                      CommandLineArgumentsString;                               // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ActivityFeedStartGameActionData");
		return ptr;
	}

};


// Class OakGame.ActivityFeedURLActionData
// 0x0010 (0x0060 - 0x0050)
class UActivityFeedURLActionData : public UActivityFeedActionData
{
public:
	class FString                                      URLString;                                                // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ActivityFeedURLActionData");
		return ptr;
	}

};


// Class OakGame.AdditionalZoneMapData
// 0x0048 (0x0078 - 0x0030)
class UAdditionalZoneMapData : public UGbxDataAsset
{
public:
	class UZoneMapData*                                ParentZoneMap;                                            // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSoftObjectPath                             ZoneMapMeshAssetReference;                                // 0x0038(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<struct FZoneMapPOIEntry>                    AdditionalZoneMapPOIList;                                 // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TEnumAsByte<EOakLeague>                            AssociatedLeague;                                         // 0x0060(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	class UPatchExpansionData*                         AssociatedPatch;                                          // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UDownloadableContentData*                    AssociatedDLC;                                            // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AdditionalZoneMapData");
		return ptr;
	}

};


// Class OakGame.InteractiveObject
// 0x00F8 (0x0550 - 0x0458)
class AInteractiveObject : public AActor
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0458(0x0060) MISSED OFFSET
	struct FCompiledUserStatesData                     CompiledUserStatesData;                                   // 0x04B8(0x0010) (Edit, DisableEditOnInstance, EditConst, DuplicateTransient)
	struct FUserStatesRuntimeData                      RuntimeUserStatesData;                                    // 0x04C8(0x0010) (Transient)
	struct FUserStatesReplicationData                  ReplicatedUserStatesData;                                 // 0x04D8(0x0008) (Net, Transient, IsPlainOldData)
	bool                                               bRegisterAsTargetable;                                    // 0x04E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldDisplayNameplate;                                  // 0x04E1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x04E2(0x0006) MISSED OFFSET
	class UOakDamageComponent*                         CachedDamageComponent;                                    // 0x04E8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTargetableComponent*                        CachedTargetableComponent;                                // 0x04F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	EInteractiveObjectState                            RepCurrentState;                                          // 0x04F8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	EInteractiveObjectLockState                        RepCurrentLockState;                                      // 0x04F9(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	EInteractiveObjectInteractiveState                 RepCurrentInteractiveState;                               // 0x04FA(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	EInteractiveObjectState                            CurrentState;                                             // 0x04FB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EInteractiveObjectLockState                        CurrentLockState;                                         // 0x04FC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EInteractiveObjectInteractiveState                 CurrentInteractiveState;                                  // 0x04FD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bShouldShowLevelSyncedNameplate : 1;                      // 0x04FE(0x0001) (Edit)
	unsigned char                                      ShouldColorCrosshairRed : 1;                              // 0x04FE(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bHideWhenAttachedToHiddenCharacter : 1;                   // 0x04FE(0x0001) (Edit)
	unsigned char                                      bCanNotifyKillersOfDeath : 1;                             // 0x04FE(0x0001) (Edit)
	unsigned char                                      UnknownData02 : 3;                                        // 0x04FE(0x0001)
	unsigned char                                      bIsTrapTrigger : 1;                                       // 0x04FE(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bTrapBreaker : 1;                                         // 0x04FF(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bReverseTriggerInstructionWhenTriggerDeactivates : 1;     // 0x04FF(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bTrapIsBroken : 1;                                        // 0x04FF(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	TArray<struct FInteractiveObjectTrapEntry>         TrapsList;                                                // 0x0500(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0510(0x0008) MISSED OFFSET
	class USkeletalMeshComponent*                      PrimarySkeletalMeshComponent;                             // 0x0518(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UAnimationAsset*                             OnEnablingAnimation;                                      // 0x0520(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimationAsset*                             OnEnabledAnimation;                                       // 0x0528(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimationAsset*                             OnDisablingAnimation;                                     // 0x0530(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimationAsset*                             OnDisabledAnimation;                                      // 0x0538(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimationAsset*                             OnLockedAnimation;                                        // 0x0540(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EPlayerAlertType                                   PlayerAlertType;                                          // 0x0548(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0549(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.InteractiveObject");
		return ptr;
	}


	void SetGbxUserState(const struct FName& VariableName, unsigned char Value);
	void ResetTrapBrokenState();
	void OnTrapTriggerStateChanged(bool bTriggerActivated);
	void OnTrapDeactivated();
	void OnTrapActivated();
	void OnRep_ReplicatedUserStatesData();
	void OnRep_RepCurrentState();
	void OnRep_RepCurrentLockState();
	void OnRep_RepCurrentInteractiveState();
	void OnLStateUnlocked();
	void OnLStateLocked();
	void OnLocked();
	void OnIStateNonInteractive();
	void OnIStateInteractive();
	void OnEnabling();
	void OnEnabled();
	void OnDisabling();
	void OnDisabled();
	void OnAnimationEnded(class UAnimationAsset* Asset);
	void ChangeState(EInteractiveObjectState NewState);
	void ChangeLockState(EInteractiveObjectLockState NewState);
	void ChangeInteractiveState(EInteractiveObjectInteractiveState NewState);
};


// Class OakGame.AdvancedInteractiveObject
// 0x0110 (0x0660 - 0x0550)
class AAdvancedInteractiveObject : public AInteractiveObject
{
public:
	class UAIO_CameraData*                             CameraData;                                               // 0x0550(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       CameraMode;                                               // 0x0558(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraBlendInTime;                                        // 0x0560(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraBlendOutTime;                                       // 0x0564(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraExitTransitionDuration;                             // 0x0568(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DelayBeforeCameraExitTransitionStarts;                    // 0x056C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBringUpEchoDevice;                                       // 0x0570(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0571(0x0003) MISSED OFFSET
	float                                              OverrideEchoDeviceEquipDelay;                             // 0x0574(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       EchoDeviceMenuName;                                       // 0x0578(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       EchoDeviceIdleScreenName;                                 // 0x0580(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLockPlayerMovement;                                      // 0x0588(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLockPlayerWeaponUsage;                                   // 0x0589(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bTrackNearbyPlayers;                                      // 0x058A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHideHUDInstantly;                                        // 0x058B(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x058C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    PlayerBeginInteraction;                                   // 0x0590(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    PlayerStopInteraction;                                    // 0x05A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UClass*                                      ProxyActorClass;                                          // 0x05B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEnableActorCulling;                                      // 0x05B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIgnoreAssociatedNPCForCulling;                           // 0x05B9(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x05BA(0x0006) MISSED OFFSET
	TArray<TSoftObjectPtr<class ASpawner>>             AssociatedNPCSpawners;                                    // 0x05C0(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate)
	TArray<TSoftObjectPtr<class UClass>>               IgnoreCullingForActorClass;                               // 0x05D0(0x0010) (Edit, ZeroConstructor)
	class UUsableComponent*                            UsableComponent;                                          // 0x05E0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGbxMenuData*                                AIOMenuData;                                              // 0x05E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseParticleBackdrop;                                     // 0x05F0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseDefaultParticleBackdrop;                              // 0x05F1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x05F2(0x0006) MISSED OFFSET
	class UParticleSystem*                             BackdropParticleSystem;                                   // 0x05F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             BackdropParticleSystemOff;                                // 0x0600(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsAnyoneInInteractRange;                                 // 0x0608(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0609(0x0007) MISSED OFFSET
	TArray<class AOakPlayerController*>                PlayersInInteractRange;                                   // 0x0610(0x0010) (ZeroConstructor, Transient)
	bool                                               bIsAnyoneInteracting;                                     // 0x0620(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0621(0x0007) MISSED OFFSET
	TArray<class AOakPlayerController*>                InteractingPlayers;                                       // 0x0628(0x0010) (ZeroConstructor, Transient)
	TArray<class AAdvancedInteractiveObjectProxy*>     LocalProxies;                                             // 0x0638(0x0010) (ZeroConstructor, Transient)
	class AOakPlayerController*                        LookedAtByController;                                     // 0x0648(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UObject>                      AssociatedPushedMenu;                                     // 0x0650(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bUseProxyForPlayerAlert;                                  // 0x0658(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0659(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AdvancedInteractiveObject");
		return ptr;
	}


	void OnRep_bIsAnyoneInteracting();
	void OnPlayerStopInteraction(class AOakPlayerController* Player);
	void OnPlayerExitedInteractRange(class AOakPlayerController* Player);
	void OnPlayerEnteredInteractRange(class AOakPlayerController* Player);
	void OnPlayerBeginInteraction(class AOakPlayerController* Player);
	void OnNoPlayersNowInInteractRange();
	void OnLookedAwayFromByPlayer();
	void OnLookedAtByPlayer(class APlayerController* InstigatingPlayer, bool bCanInteractWith, const struct FVector& NewUsableComponentImpactPoint, float NewUsableDistanceAway);
	void OnAnyPlayersNowInInteractRange();
	void NotifyUsed(const struct FUseEvent& UseEvent);
	void HandleActorDestroyed(class AActor* Actor);
};


// Class OakGame.AdvancedInteractiveObjectOwnedGFxMenu
// 0x0020 (0x06A0 - 0x0680)
class UAdvancedInteractiveObjectOwnedGFxMenu : public UGbxGFxMenu
{
public:
	bool                                               bShowHalfWidthBackgroundScreenParticle;                   // 0x0680(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShowFullWidthBackgroundScreenParticle;                   // 0x0681(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0682(0x0006) MISSED OFFSET
	class UParticleSystem*                             CustomBackdropParticleLoop;                               // 0x0688(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             CustomBackdropParticleOff;                                // 0x0690(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0698(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AdvancedInteractiveObjectOwnedGFxMenu");
		return ptr;
	}

};


// Class OakGame.AdvancedInteractiveObjectProxy
// 0x0090 (0x04E8 - 0x0458)
class AAdvancedInteractiveObjectProxy : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0458(0x0008) MISSED OFFSET
	class UClass*                                      InputComponentClass;                                      // 0x0460(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FAIOOrientedParticleData                    ProjectionFXData;                                         // 0x0468(0x0040) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x18];                                      // 0x04A8(0x0018) MISSED OFFSET
	struct FName                                       DefaultCameraState;                                       // 0x04C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CurrentCameraState;                                       // 0x04C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CameraEntryTransitionIndex;                               // 0x04D0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCurrentlyInteracting;                                    // 0x04D4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPlayerWithinInteractRange;                               // 0x04D5(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCameraTransitionInProgress;                              // 0x04D6(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x04D7(0x0001) MISSED OFFSET
	class AOakPlayerController*                        OwningPlayer;                                             // 0x04D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AAdvancedInteractiveObject*                  OwningAIO;                                                // 0x04E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AdvancedInteractiveObjectProxy");
		return ptr;
	}


	void OnOwningPlayerStoppedInteraction();
	void OnOwningPlayerStartedInteraction();
	void OnOwningPlayerExitedInteractRange();
	void OnOwningPlayerEnteredInteractRange();
	void OnFinalizeStopInteraction();
};


// Class OakGame.OakCharacter
// 0x1520 (0x22A0 - 0x0D80)
class AOakCharacter : public AGbxCharacter
{
public:
	unsigned char                                      UnknownData00[0xD8];                                      // 0x0D80(0x00D8) MISSED OFFSET
	class AGbxAIController*                            OwnerGbxAIController;                                     // 0x0E58(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakAIActionComponent*                       AIActionComponent;                                        // 0x0E60(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UOakCharacterMovementComponent*              OakCharacterMovement;                                     // 0x0E68(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGameResourcePoolManagerComponent*           ResourcePoolComponent;                                    // 0x0E70(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOakDamageComponent*                         OakDamageComponent;                                       // 0x0E78(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOakDamageCauserComponent*                   OakDamageCauserComponent;                                 // 0x0E80(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOakCharacterAbilityManagerComponent*        AbilityManagerComponent;                                  // 0x0E88(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOakStatusEffectManagerComponent*            StatusEffectManagerComponent;                             // 0x0E90(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UInventoryListComponent*                     OakCharacterInventory;                                    // 0x0E98(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInventoryListComponent*                     OakCharacterBankInventory;                                // 0x0EA0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWadingEffectsComponent*                     WadingEffectsComponent;                                   // 0x0EA8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UBodyWeaponHoldManagerComponent*             CachedBodyWeaponHoldManager;                              // 0x0EB0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UAIWeaponUserComponent*                      AIWeaponUser;                                             // 0x0EB8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	EHealthState                                       HealthState;                                              // 0x0EC0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)
	EDeathType                                         DeathType;                                                // 0x0EC1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)
	bool                                               IsDeadAttached;                                           // 0x0EC2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)
	bool                                               bIsDeadInSeatedTurret;                                    // 0x0EC3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0EC4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnHealthStateChanged;                                     // 0x0EC8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHealthy;                                                // 0x0ED8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHealthLow;                                              // 0x0EE8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHealthVeryLow;                                          // 0x0EF8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnInjured;                                                // 0x0F08(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDead;                                                   // 0x0F18(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0F28(0x0018) MISSED OFFSET
	bool                                               CanGoToInjuredState;                                      // 0x0F40(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0F41(0x0007) MISSED OFFSET
	struct FCharacterCorpseState                       CorpseState;                                              // 0x0F48(0x00E8) (Edit)
	struct FScriptMulticastDelegate                    OnZoomChange;                                             // 0x1030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData04[0x10];                                      // 0x1040(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnWeaponChanged;                                          // 0x1050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnWeaponReloadStarted;                                    // 0x1060(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnWeaponReloadEnded;                                      // 0x1070(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnWeaponUsed;                                             // 0x1080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCompareToEquippedItem;                                  // 0x1090(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndCompareToEquippedItem;                               // 0x10A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTransported;                                            // 0x10B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UCameraModeSetData*                          CameraModesSet;                                           // 0x10C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class UCameraModeSetData*>                  CameraModeSetList;                                        // 0x10C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class UBalanceStateComponent*                      BalanceComponent;                                         // 0x10D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UFightForYourLifeComponent*                  FFYLComponent;                                            // 0x10E0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USprintData*                                 SprintInfo;                                               // 0x10E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnPostLoadGame;                                           // 0x10F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bForcePenetrateOnSelf;                                    // 0x1100(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ETargetedNameplateType                             DesiredNameplateType;                                     // 0x1101(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x1102(0x0006) MISSED OFFSET
	class UGbxHUDData*                                 HUDInfo;                                                  // 0x1108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       PlayerGivenNicknameKey;                                   // 0x1110(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UPlayerStandInData*                          StandInData;                                              // 0x1118(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEligibleForIgnoreCollisionWithPlayers;                   // 0x1120(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPushOverlappingPlayersAway;                              // 0x1121(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCanUseWeaponWhileSprinting;                              // 0x1122(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoEquipWeapons;                                        // 0x1123(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIkOverride;                                              // 0x1124(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCanBeRooted;                                             // 0x1125(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x1126(0x0002) MISSED OFFSET
	TScriptInterface<class UTravelStationSpawnPointInterface> LastSpawnPoint;                                           // 0x1128(0x0010) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x1138(0x0004) MISSED OFFSET
	float                                              MusicThreatValue;                                         // 0x113C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCopyPlayerCustomizationsFromInstigator;                  // 0x1140(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseCustomSlidingEyeHeight;                               // 0x1141(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x2];                                       // 0x1142(0x0002) MISSED OFFSET
	float                                              SlidingEyeHeight;                                         // 0x1144(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FGbxAttributeModifierHandle>         SprintingAttributeModifiers;                              // 0x1148(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData09[0x98];                                      // 0x1158(0x0098) MISSED OFFSET
	struct FStaticRagdollReplicationData               DeadRagdollReplicationData;                               // 0x11F0(0x0010) (Net, Transient)
	unsigned char                                      UnknownData10[0x8];                                       // 0x1200(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    ShieldEquipped;                                           // 0x1208(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ShieldUnequipped;                                         // 0x1218(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData11[0x98];                                      // 0x1228(0x0098) MISSED OFFSET
	bool                                               bBlockVehicle;                                            // 0x12C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x3];                                       // 0x12C1(0x0003) MISSED OFFSET
	float                                              VehicleCollisionResistanceFactor;                         // 0x12C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageToVehicleFactor;                                    // 0x12C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x3C];                                      // 0x12CC(0x003C) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnInventoryEquippedEvent;                                 // 0x1308(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnInventoryUnequippedEvent;                               // 0x1318(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnInventoryItemPickedUp;                                  // 0x1328(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData14[0x38];                                      // 0x1338(0x0038) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCausedElementalEffect;                                  // 0x1370(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCausedMaxResourceEffect;                                // 0x1380(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData15[0x20];                                      // 0x1390(0x0020) MISSED OFFSET
	TArray<class AInteractiveObject*>                  AttachedHidableIOs;                                       // 0x13B0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData16[0x8];                                       // 0x13C0(0x0008) MISSED OFFSET
	class UClass*                                      DefaultWeaponClass;                                       // 0x13C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UInventoryBalanceData*                       DefaultBalanceWeaponData;                                 // 0x13D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UInventorySlotData*>                  EquipmentSlots;                                           // 0x13D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UWeaponSlotData*>                     ActiveWeaponSlots;                                        // 0x13E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              ActiveWeaponScale;                                        // 0x13F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bOverrideBalanceInventory : 1;                            // 0x13FC(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bDiscardInventoryOnDeath : 1;                             // 0x13FC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bRebuildInventoryOnLevelChange : 1;                       // 0x13FC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCanShowHolsterableItemsOnBody : 1;                       // 0x13FC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData17[0x3];                                       // 0x13FD(0x0003) MISSED OFFSET
	struct FName                                       HideWeaponOnSpawnReason;                                  // 0x1400(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bHideWeaponOnSpawn : 1;                                   // 0x1408(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData18[0x7];                                       // 0x1409(0x0007) MISSED OFFSET
	TArray<struct FHolsteredWeaponData>                WeaponHolsterData;                                        // 0x1410(0x0010) (Edit, ZeroConstructor)
	class UInventoryCategoryData*                      WeaponItemType;                                           // 0x1420(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UInventoryCategoryData*                      CreditsItemType;                                          // 0x1428(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FInventorySlotContainer                     EquippedInventory;                                        // 0x1430(0x00E8) (Net, Transient)
	struct FWeaponSlotContainer                        ActiveWeapons;                                            // 0x1518(0x05B8) (Transient)
	TArray<class AHolsteredGearSlot*>                  HolsteredGear;                                            // 0x1AD0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData19[0x1D0];                                     // 0x1AE0(0x01D0) MISSED OFFSET
	class AWeapon*                                     HolsteredWeapon;                                          // 0x1CB0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class UInventorySlotData*                          PreferredHolsterWeaponSlot;                               // 0x1CB8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FGbxAttributeFloat                          WeaponSwapTimeScale;                                      // 0x1CC0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Net)
	bool                                               bUseAccuracyPattern;                                      // 0x1CCC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bWeaponsRestricted;                                       // 0x1CCD(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData20[0x2];                                       // 0x1CCE(0x0002) MISSED OFFSET
	class AOakCharacter*                               InventoryProxy;                                           // 0x1CD0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class USlideModifierAspectData*                    CurrentSlideModifier;                                     // 0x1CD8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData21[0x18];                                      // 0x1CE0(0x0018) MISSED OFFSET
	float                                              RecentlyEquippedWeaponInSprintTime;                       // 0x1CF8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData22[0xC];                                       // 0x1CFC(0x000C) MISSED OFFSET
	struct FName                                       CameraSocket;                                             // 0x1D08(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               BaseTransformsAnimation;                                  // 0x1D10(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AOakCharacter*                               Mech;                                                     // 0x1D18(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              OverrideVisibleCorpseRemovalTime;                         // 0x1D20(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData23[0x4];                                       // 0x1D24(0x0004) MISSED OFFSET
	class UClass*                                      CorpseRemovalActionOverride;                              // 0x1D28(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	float                                              AudioRandomVariationValue;                                // 0x1D30(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData24[0x4];                                       // 0x1D34(0x0004) MISSED OFFSET
	class UWwiseAudioComponent*                        CachedDefaultAudioComponent;                              // 0x1D38(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    AddInWorldIconEvent;                                      // 0x1D40(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    RemoveInWorldIconEvent;                                   // 0x1D50(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData25[0x8];                                       // 0x1D60(0x0008) MISSED OFFSET
	class UClass*                                      LastDamageSourceClass;                                    // 0x1D68(0x0008) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      KillerActor;                                              // 0x1D70(0x0008) (ZeroConstructor, IsPlainOldData)
	class UActorComponent*                             CachedFaceFXComponent;                                    // 0x1D78(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               bCanStomp;                                                // 0x1D80(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData26[0x3];                                       // 0x1D81(0x0003) MISSED OFFSET
	float                                              StompDivideModifier;                                      // 0x1D84(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnEnterVehicleStarted;                                    // 0x1D88(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEnterVehicleFinished;                                   // 0x1D98(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnExitVehicleStarted;                                     // 0x1DA8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnExitVehicleFinished;                                    // 0x1DB8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChangeVehicleSeat;                                      // 0x1DC8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChangeVehicleSeatFinished;                              // 0x1DD8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEnterTurretStarted;                                     // 0x1DE8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEnterTurretFinished;                                    // 0x1DF8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnExitTurretStarted;                                      // 0x1E08(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnExitTurretFinished;                                     // 0x1E18(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UVehicleClassIdentifier*                     VehicleClassIDBeforeDeath;                                // 0x1E28(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                VehicleSeatSlotBeforeDeath;                               // 0x1E30(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData27[0x4];                                       // 0x1E34(0x0004) MISSED OFFSET
	class UVehicleSeatComponent*                       LastVehicleSeat;                                          // 0x1E38(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UVehicleSeatComponent*                       CurrentVehicleSeat;                                       // 0x1E40(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData28[0x8];                                       // 0x1E48(0x0008) MISSED OFFSET
	class AOakVehicle*                                 OwnedVehicle;                                             // 0x1E50(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AOakVehicle*                                 CARVehicle;                                               // 0x1E58(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData29[0x8];                                       // 0x1E60(0x0008) MISSED OFFSET
	class UOakPawnAttachSlotComponent*                 LastTurretSeat;                                           // 0x1E68(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UOakPawnAttachSlotComponent*                 CurrentTurretSeat;                                        // 0x1E70(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData30[0x1];                                       // 0x1E78(0x0001) MISSED OFFSET
	EOakGender                                         Gender;                                                   // 0x1E79(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseGender;                                               // 0x1E7A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData31[0x5];                                       // 0x1E7B(0x0005) MISSED OFFSET
	struct FOakGenderData                              MaleGenderData;                                           // 0x1E80(0x0098) (Edit)
	struct FOakGenderData                              FemaleGenderData;                                         // 0x1F18(0x0098) (Edit)
	struct FOakCharacterCustomizationData              CustomizationSettings;                                    // 0x1FB0(0x0248) (Edit)
	int                                                CustomizationSeed;                                        // 0x21F8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData32[0x1D];                                      // 0x21FC(0x001D) MISSED OFFSET
	bool                                               bUseSocketsForIconPlacement;                              // 0x2219(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData33[0x6];                                       // 0x221A(0x0006) MISSED OFFSET
	class UClass*                                      MainAIAction;                                             // 0x2220(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FOakCoordinatedEffectSwitch                 CoordinatedEffectSwitch;                                  // 0x2228(0x0058) (Edit, BlueprintVisible, BlueprintReadOnly, Net)
	class UEnum*                                       AnimStyleEnum;                                            // 0x2280(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AnimStyleInitial;                                         // 0x2288(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AnimStyleCurrent;                                         // 0x2289(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData34[0x6];                                       // 0x228A(0x0006) MISSED OFFSET
	class UAICloakComponent*                           CloakComp;                                                // 0x2290(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData35[0x8];                                       // 0x2298(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCharacter");
		return ptr;
	}


	void ZoomEvent__DelegateSignature(EZoomEventType IsZooming);
	void WeaponReloadStarted(class AWeapon* Weapon, bool bAuto);
	void WeaponReloadEnded(class AWeapon* Weapon, bool bCompleted);
	void WeaponPutDown(class AWeapon* PutDownWeapon);
	void WeaponPrev();
	void WeaponNext();
	void WeaponEquipped();
	void WeaponChangedEvent__DelegateSignature(class AWeapon* NewWeapon, class AWeapon* LastWeapon);
	bool WantsToZoom();
	bool WantsToUseWeapon(class UWeaponSlotData* Slot);
	void UpdatePreToggleWeaponMode();
	void UnlockActiveWeaponActions(const struct FName& Reason, int ChannelsMask, bool bReplicate);
	void TryDetachFromAttachSlot(bool bInstant);
	void TriggerResurrectEvent(int CashLost);
	void ToggleWeaponMode();
	void ToggleFirstPersonClothSimulation(bool TurnOn);
	void ToggleCrouch();
	void TeleportPawnAndAssociatedVehicle(const struct FVector& StartLoc, const struct FRotator& StartRot, bool bDisableClientCameraUpdates, bool bIsFastTravel);
	void StopZooming(bool bForcedStop, bool bSkipTransitions);
	void StopWantingToStartSprinting();
	void StopUsingWeapon(class UWeaponSlotData* SlotToUse);
	void StopReload(class UWeaponSlotData* SlotToUse);
	void StartZooming();
	void StartUsingWeapon(class UWeaponSlotData* SlotToUse);
	class AWeapon* SpawnDefaultWeapon();
	void SetWantsToSprint(bool bNewWantsToSprint);
	void SetWantsToSlide(bool bNewWantsToSlide);
	void SetInventoryProxy(class AOakCharacter* Proxy);
	void SetDead(EDeathType InDeathType);
	void SetCurrentWeapon(class AWeapon* NewWeapon, class UWeaponSlotData* NewWeaponSlot, EWeaponPutDownType PutDownType, EWeaponEquipType EquipType);
	void SetCurrentEquippedWeapon(class UInventorySlotData* EquippedInventorySlot, class UWeaponSlotData* NewWeaponSlot, EWeaponPutDownType PutDownType, EWeaponEquipType EquipType);
	void SetCorpseRemovalOverride(float RemovelTime, class UClass* DissolveAction);
	void SetCharacterRooted(bool bRooted, const struct FName& Reason);
	void SetCARVehicle(class AOakVehicle* Vehicle);
	void ServerUnlockActiveWeaponActions(const struct FName& Reason, int ChannelsMask);
	void ServerUnequipInventorySlot(class UInventorySlotData* SlotToEquip);
	void ServerStopWeaponActions(unsigned char Slot, int ChannelsMask, bool bClearInput);
	void ServerSpawnDroppedPickup(const struct FSelectedInventoryInfo& SelectedInventoryInfo, class UWorld* World, const struct FVector& Location, const struct FVector& LinearVelocity, const struct FVector& AngularVelocity);
	void ServerSetEquippedTrinket(class UInventorySlotData* SlotToEquip, class UWeaponTrinketPartData* Trinket);
	void ServerSetCurrentWeapon(class AWeapon* NewWeapon, unsigned char Slot, EWeaponPutDownType PutDownType, EWeaponEquipType EquipType);
	void ServerSelectInventoryItem(class UInventoryCategoryData* SelectedCategory, const struct FInventoryListEntryHandle& SelectedHandle);
	void ServerLockActiveWeaponActions(const struct FName& Reason, int ChannelsMask, bool bStopActions, bool bClearInput);
	void ServerEquipInventorySlot(class UInventorySlotData* SlotToEquip, const struct FInventoryListEntryHandle& SelectedHandle, bool bSwapSlots);
	void SafeRemoveCorpse();
	void ResetCharacterInventory();
	void ReplaceInventoryItem(class AActor* OldInventoryItem, class AActor* NewInventoryItem);
	void RemovingFromInventory(class UInventoryCategoryData* RemovedCategory, class AActor* RemovedActor, const struct FInventoryListEntryHandle& RemovedHandle);
	void RemoveInWorldIcon(const struct FHUDInWorldIconTargetInfo& TargetInfo);
	void RemoveInventoryItem(const struct FInventoryListEntryHandle& SelectedHandle);
	void RemoveHealthTypeAtIndex(int Index, struct FHealthType* ReturnType);
	void Reload(class UWeaponSlotData* SlotToUse, bool bAutoReload);
	void RebuildInventory();
	bool PreInventoryItemPickupCheck(class AActor* PickupActor, int Quantity, bool UsedByInstigator, class AInventoryItemPickup* WorldPickupActor);
	void PreAddToFullInventory(class UInventoryCategoryData* Category, class AActor* NewActor, int Flags, int DesiredSlot);
	void PostLoadGameEvent__DelegateSignature(bool SaveGameFound);
	void PerformMeleeImpact(float MeleeRange, class UImpactData* ImpactData);
	void OnZoomedNotifyActions(EZoomEventType IsZooming);
	void OnWeaponResumeUse(class UWeaponSlotData* AttachedSlot);
	void OnTrinketUnequippedFromSlot(class UWeaponTrinketPartData* InUnequippedTrinket, class UInventorySlotData* SlotData);
	void OnTrinketEquippedOnSlot(class UWeaponTrinketPartData* InEquippedTrinket, class UInventorySlotData* SlotData);
	void OnStartSprinting();
	void OnRep_OverrideVisibleCorpseRemovalTime();
	void OnRep_Mech();
	void OnRep_HolsteredWeapon();
	void OnRep_HealthState();
	void OnRep_DeadRagdollReplicationData();
	void OnRep_Customization();
	void OnRep_CoordinatedEffectSwitch();
	void OnRecentlyEquippedWeaponInSprintTimerEnd();
	void OnInventoryUnequippedFromSlot(class AActor* InUnequippedInventory, class UInventorySlotData* SlotData);
	void OnInventoryItemReplaced(const struct FInventoryListEntryHandle& UpdatedItemHandle, class AActor* OldInventoryActor);
	void OnInventoryEquippedOnSlot(class AActor* InEquippedInventory, class UInventorySlotData* SlotData);
	void OnFirstPersonCreated(bool bCreatedArms);
	void OnEndSprinting();
	void OnDodged(EAIDodgeType DodgeType);
	void OnCryoThawing();
	void OnCryoFreezing();
	void OnCharacterTransported(bool bTransportStarted);
	void OnAIUncloaked();
	void OnAICloaked();
	void NetMulticast_BroadcastPickedUpShieldBoost(class UWwiseEvent* PickupAudioEvent, class UParticleSystem* ScreenEffect, float ModifierDuration);
	void NetMulticast_BroadcastCharacterSoundTag(class UCharacterSoundTag* Tag);
	void LockActiveWeaponActions(const struct FName& Reason, int ChannelsMask, bool bStopActions, bool bClearInput, bool bReplicate);
	bool K2_CanWeaponZoom();
	bool K2_CanPerformWeaponAction(EWeaponActionChannel Channel);
	bool IsUsingWeapon(class UWeaponSlotData* Slot);
	bool IsSprinting();
	bool IsSlotOpenInventoryCategory(class UInventoryCategoryData* PickupCategory);
	bool IsSlotEnabledForInventoryCategory(class UInventoryCategoryData* PickupCategory);
	bool IsShowingCrosshair(unsigned char Slot);
	bool IsPerformingGroundSlam();
	bool IsLeaping();
	bool IsInventoryItemEquipped(class AActor* InventoryItem);
	bool IsFrozenToDeath();
	bool IsEquippingWeapon(class UWeaponSlotData* SlotToUse);
	bool IsEchoDeviceActive();
	bool IsCharacterSliding();
	bool IsCharacterRooted();
	bool IsAttachedToSlot();
	bool IsAttachedToSeat();
	bool IsAttached();
	void HealthStateChangeEvent__DelegateSignature(EHealthState HealthState);
	bool HasShieldEquipped();
	bool HasRecentlyEquippedWeaponInSprint();
	bool HasInfiniteAmmo();
	bool HasHealthOfType(class UHealthTypeData* HealthTypeToFind);
	void GoFromInjuredToHealed(class AOakPlayerController* HealedByPlayer);
	void GoFromInjuredToDead();
	void GoFromDeadToHealed();
	bool GetZoomToggle();
	struct FRotator GetWeaponOffsetRotation();
	struct FVector GetWeaponOffsetLocation();
	class AWeapon* GetWeapon(class UWeaponSlotData* SlotToGet);
	bool GetWantsToSprint();
	bool GetWantsToCrouch();
	struct FRotator GetViewModelOffsetRotation(int Index);
	struct FVector GetViewModelOffsetLocation(int Index);
	class AOakVehicle* GetVehicle();
	class AOakVehicle* GetOwnedVehicle();
	class AOakAIController* GetOakAIController();
	struct FVector GetMovementDirection(TEnumAsByte<EAxis> AXIS);
	class UInventoryListComponent* GetInventoryComponent();
	struct FHealthType GetHealthInformationAtIndex(int Index, EValidIndex* Branch);
	bool GetFirstHealthInformationByType(class UHealthTypeData* HealthTypeToFind, struct FHealthType* OutHealthType);
	float GetFaceFXBlendWeight(float DeltaTime, float BlendTime, class USkeletalMeshComponent* InSkelMeshComp);
	class AActor* GetEquippedInventoryForSlot(class UInventorySlotData* InventorySlot);
	class AOakVehicle* GetCARVehicle();
	class UInventoryListComponent* GetBankInventoryComponent();
	class UOakAIActionComponent* GetAIActionComponent();
	class AWeapon* GetActiveWeapon(unsigned char Slot);
	void GenericEvent__DelegateSignature();
	void FillAllHealth();
	void ExitVehicle(bool bInstant);
	void ExitTurret(bool bInstant);
	void EquipInventorySlotDirect(class UInventorySlotData* SlotToEquip, class AActor* SelectedActor, bool bSwapSlots);
	void EquipInventorySlot(class UInventorySlotData* SlotToEquip, const struct FInventoryListEntryHandle& SelectedHandle, bool bSwapSlots);
	void EndCompareToEquippedItemEvent__DelegateSignature();
	void EnableInventorySlot(class UInventorySlotData* InventorySlot, bool bEnabled);
	void DropCurrentWeapon();
	void DelayWeaponsUse(float DelayTime, bool bForceUseAfterDelay);
	void ControlMech(class AOakCharacter* TheMech);
	void CompareToEquippedItemEvent__DelegateSignature(class UOakInventoryBalanceStateComponent* EquippedItem, class UOakInventoryBalanceStateComponent* OtherItem);
	void ClientUnlockActiveWeaponActions(const struct FName& Reason, int ChannelsMask);
	void ClientStopWeaponActions(unsigned char Slot, int ChannelsMask, bool bClearInput);
	void ClientLockActiveWeaponActions(const struct FName& Reason, int ChannelsMask, bool bStopActions, bool bClearInput);
	void ChangeSeat__DelegateSignature(class UPawnAttachSlotComponent* FromSeat, class UPawnAttachSlotComponent* ToSeat);
	bool CanEquipInventoryItem(class AActor* InInventoryToEquip);
	bool AttemptGroundSlam();
	void AttachedItemPickedUp(class AInventoryItemPickup* InventoryItemPickedUp, class AActor* PickedUpBy);
	void AttachDetachSeat__DelegateSignature(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void AnimNotify_BossClosedCaption(class UAnimNotify* IncomingNotify);
	void AddInWorldIcon(const struct FHUDInWorldIconTargetInfo& TargetInfo);
	void AddHealthTypeAtIndex(class UHealthTypeData* HealthTypeData, class UGameResourcePoolData* HealthPoolData, int Index, EHealthAdded* Branch);
	void AddHealthType(class UHealthTypeData* HealthTypeData, class UGameResourcePoolData* HealthPoolData, EHealthAdded* Branch);
	void AddedToInventory(class UInventoryListComponent* InventoryList, class UInventoryCategoryData* AddedCategory, class AActor* AddedActor, const struct FInventoryListEntryHandle& AddedHandle, int Flags, int DesiredSlot);
	void AddDefaultItemPoolsToInventory(bool SingleEquippedItem, bool ClearInventory, bool EquipIfNoInventory, TArray<struct FItemPoolInfo>* ItemPools);
	void AddDefaultItemPoolListInventory(class UItemPoolListData* DefaultItemPoolList, bool ClearInventory, bool EquipIfNoInventory);
	void AddDefaultItemPoolInventory(class UItemPoolData* DefaultItemPoolData, bool ClearInventory, bool EquipIfNoInventory);
};


// Class OakGame.OakCharacter_Default
// 0x0080 (0x2320 - 0x22A0)
class AOakCharacter_Default : public AOakCharacter
{
public:
	class UStanceComponent*                            Stance;                                                   // 0x22A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGbxDialogComponent*                         GbxDialog;                                                // 0x22A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UDialogEvent*                                DeathDialogEvent;                                         // 0x22B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TMap<class UDialogParameter*, struct FDialogParameterValue> DeathDialogEventParameterValues;                          // 0x22B8(0x0050) (Edit, ZeroConstructor)
	class UCharacterSoundTag*                          DeathVocalizationTag;                                     // 0x2308(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x2310(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCharacter_Default");
		return ptr;
	}


	void OnStartInjured_Common();
	void OnReaped();
};


// Class OakGame.Agonizer9k
// 0x00D0 (0x23F0 - 0x2320)
class AAgonizer9k : public AOakCharacter_Default
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x2320(0x0008) MISSED OFFSET
	class APawn*                                       SawTarget;                                                // 0x2328(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	EA9KSawState                                       SawState;                                                 // 0x2330(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x2331(0x0003) MISSED OFFSET
	float                                              SawAngleReached;                                          // 0x2334(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnSawStateChanged;                                        // 0x2338(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              TimeSinceBeginingOfPhase;                                 // 0x2348(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeSinceBeginingOfFight;                                 // 0x234C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeSinceLastSponsorBegan;                                // 0x2350(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x2354(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    EquiptProjectileSaw;                                      // 0x2358(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    CancelSaw;                                                // 0x2368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ShootProjectile;                                          // 0x2378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ShootProjectileSaw;                                       // 0x2388(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FName                                       SawTargetBlackboardKeyName;                               // 0x2398(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnFloorDoneEvent;                                         // 0x23A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UBlackboardComponent*                        Blackboard;                                               // 0x23B0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              SawTimeCooldown;                                          // 0x23B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SawRotateSpeedTryToReachTarget;                           // 0x23BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SawTimeBetweenReachAndEquip;                              // 0x23C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SawTimeAnticipation;                                      // 0x23C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SawPercentageStopFollowAnticipation;                      // 0x23C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WaitForEquipAnimDoneFailSafe;                             // 0x23CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x20];                                      // 0x23D0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.Agonizer9k");
		return ptr;
	}


	void StopSaw();
	void StartSponsorsTimer();
	void StartSaw();
	void StartBossFight();
	void ResetBossTimers();
	void EquipSawAnimDone();
};


// Class OakGame.Agonizer9kCore
// 0x0020 (0x0478 - 0x0458)
class AAgonizer9kCore : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0458(0x0008) MISSED OFFSET
	class UTargetableComponent*                        TargetableComponent;                                      // 0x0460(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOakDamageComponent*                         DamageComponent;                                          // 0x0468(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USphereComponent*                            RootSphereComponent;                                      // 0x0470(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.Agonizer9kCore");
		return ptr;
	}

};


// Class OakGame.Agonizer9kFollowSpot
// 0x0038 (0x0490 - 0x0458)
class AAgonizer9kFollowSpot : public AActor
{
public:
	class USceneComponent*                             SceneRootComp;                                            // 0x0458(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        LightConeComp;                                            // 0x0460(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USpotLightComponent*                         SpotLightComp;                                            // 0x0468(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0470(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.Agonizer9kFollowSpot");
		return ptr;
	}


	void TurnOn();
	void TurnOff();
	void StartRotating(float RotationTime, const struct FRotator& RotationDelta);
	void LookAtTarget(float RotationTime, class AActor* Target);
};


// Class OakGame.AgonizerFloor
// 0x0270 (0x06C8 - 0x0458)
class AAgonizerFloor : public AActor
{
public:
	class UParticleSystem*                             FireHeat;                                                 // 0x0458(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             WarmUp;                                                   // 0x0460(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             BurstFlameRing1;                                          // 0x0468(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             BurstFlameRing2;                                          // 0x0470(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             BurstFlameRing3;                                          // 0x0478(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             BurstFlameRing4;                                          // 0x0480(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 MeshCollisionRing02;                                      // 0x0488(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 MeshCollisionRing03;                                      // 0x0490(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 MeshCollisionRing04;                                      // 0x0498(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 MeshCollisionRing05;                                      // 0x04A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 FakeEmmisiveRing02;                                       // 0x04A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 FakeEmmisiveRing03;                                       // 0x04B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 FakeEmmisiveRing04;                                       // 0x04B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 FakeEmmisiveRing05;                                       // 0x04C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 HeatingElementmeshRing02;                                 // 0x04C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 HeatingElementmeshRing03;                                 // 0x04D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 HeatingElementmeshRing04;                                 // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 HeatingElementmeshRing05;                                 // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           HeatingElementMaterial;                                   // 0x04E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 FakeEmmisiveAllRings;                                     // 0x04F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageData;                                               // 0x04F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageTypeFire;                                           // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 BurstFlameAudio1;                                         // 0x0508(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 BurstFlameAudio2;                                         // 0x0510(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 BurstFlameAudio3;                                         // 0x0518(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 BurstFlameAudio4;                                         // 0x0520(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PreheatAudioSmall1;                                       // 0x0528(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PreheatAudioSmall2;                                       // 0x0530(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PreheatAudioSmall3;                                       // 0x0538(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PreheatAudioSmall4;                                       // 0x0540(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PreheatAudioBig1;                                         // 0x0548(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PreheatAudioBig2;                                         // 0x0550(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PreheatAudioBig3;                                         // 0x0558(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PreheatAudioBig4;                                         // 0x0560(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BurstFlameAudioGain;                                      // 0x0568(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BurstFlamesAudioRadius;                                   // 0x056C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BurstFlamesAudioRadiusRingMultiplier;                     // 0x0570(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0574(0x0004) MISSED OFFSET
	class USceneComponent*                             SceneRootComp;                                            // 0x0578(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              WarmupTime;                                               // 0x0580(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WarmUpDelayWhenAllWarmUpDone;                             // 0x0584(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RotationFloorDoneTime;                                    // 0x0588(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FloorRotationTimeBetweenSector;                           // 0x058C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AnticipationTimeOneRing;                                  // 0x0590(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AnticipationTime;                                         // 0x0594(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AnticipationTimeRotationPattern;                          // 0x0598(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DamageOverlapTime;                                        // 0x059C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BurstinitialOffset;                                       // 0x05A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BurstOffsetPerRing;                                       // 0x05A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FloorFireDamage;                                          // 0x05A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RingPatternInterval;                                      // 0x05AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HeatingPipeEmissiveInterval;                              // 0x05B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x05B4(0x0004) MISSED OFFSET
	class UCurveFloat*                                 EmissiveStrengthOverTime;                                 // 0x05B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 EmissiveStrengthOverTimeFadeOut;                          // 0x05C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnFloorFirstFlame;                                        // 0x05C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bDisplayDebugCollisionZones;                              // 0x05D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xEF];                                      // 0x05D9(0x00EF) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AgonizerFloor");
		return ptr;
	}


	void StopHeatingPipeEmissive(struct FFloorSectorRing* SectorRing);
	void StopDamageFeedbackRing(struct FFloorSector* FloorSector, struct FFloorSectorRing* SectorRing);
	void StartSafeSpotPattern(float DelayBeforeStart);
	void StartRotationPattern(float DelayBeforeStart);
	void StartRingPattern(float DelayBeforeStart);
	void StartHeatingPipeEmissive(struct FFloorSectorRing* SectorRing);
	void StartAnticipationSafeSpot(int SafeSpotSectorId);
	void SetFloorRotationParameters(int Direction, int StartingSectorId);
	void SetAgonizerRef(class AAgonizer9k* AgonizerRef);
	void PlayBurstFlameAudio();
	void OnWarmUpDone(struct FFloorSector* FloorSector);
	void OnRotationAnticipationDone(bool IsLast, struct FFloorSector* FloorSector);
	void OnDamageFeedbackDone();
	void OnAnticipationOneRingDone(struct FFloorSector* FloorSector, struct FFloorSectorRing* SectorRing);
	void OnAnticipationDone();
};


// Class OakGame.AIAction_AngryPatrolTaunt
// 0x02B8 (0x0418 - 0x0160)
class UAIAction_AngryPatrolTaunt : public UAIAction_Selector
{
public:
	struct FGbxParam                                   ProbabilityOfPlayingTauntAction;                          // 0x0160(0x0080) (Edit)
	struct FAIAspectSettings_GbxAction                 TauntAction;                                              // 0x01E0(0x0238) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAction_AngryPatrolTaunt");
		return ptr;
	}

};


// Class OakGame.AIAction_GetOutVehicle
// 0x0008 (0x0150 - 0x0148)
class UAIAction_GetOutVehicle : public UAIAction
{
public:
	bool                                               bInstantDetach;                                           // 0x0148(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0149(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAction_GetOutVehicle");
		return ptr;
	}

};


// Class OakGame.AIAction_LeapOnVehicle
// 0x0030 (0x0178 - 0x0148)
class UAIAction_LeapOnVehicle : public UAIAction
{
public:
	struct FGbxBlackboardKeySelector                   Target;                                                   // 0x0148(0x0010) (Edit, BlueprintVisible)
	class UClass*                                      LeapAction;                                               // 0x0158(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxLeapDistance;                                          // 0x0160(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bLeapOnHostile;                                           // 0x0164(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x13];                                      // 0x0165(0x0013) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAction_LeapOnVehicle");
		return ptr;
	}

};


// Class OakGame.AIAction_PatrolPath
// 0x0180 (0x02F0 - 0x0170)
class UAIAction_PatrolPath : public UAIAction_Priority
{
public:
	struct FAIAspectSettings_Navigation                NavSettings;                                              // 0x0170(0x0140) (Edit)
	struct FAIAspectSettings_MovePath                  MovePathSetting;                                          // 0x02B0(0x0040) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAction_PatrolPath");
		return ptr;
	}

};


// Class OakGame.AIAction_ReviveActor
// 0x0A48 (0x0B90 - 0x0148)
class UAIAction_ReviveActor : public UAIAction
{
public:
	struct FAIAspectSettings_Revive                    ReviveSettings;                                           // 0x0148(0x0090) (Edit)
	struct FAIAspectSettings_Ticket                    TicketSettings;                                           // 0x01D8(0x0128) (Edit)
	struct FAIAspectSettings_EnvQuery                  QuerySettings;                                            // 0x0300(0x03A0) (Edit)
	bool                                               bUseQuerySettings;                                        // 0x06A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x06A1(0x0007) MISSED OFFSET
	struct FAIAspectSettings_Navigation                NavSettings;                                              // 0x06A8(0x0140) (Edit)
	struct FAIAspectSettings_EnvQuery                  NavigationQuerySettings;                                  // 0x07E8(0x03A0) (Edit)
	bool                                               bUseNavigationQuery;                                      // 0x0B88(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0B89(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAction_ReviveActor");
		return ptr;
	}

};


// Class OakGame.AIAction_VehicleEscort
// 0x0208 (0x03F0 - 0x01E8)
class UAIAction_VehicleEscort : public UAIAction_Sequence
{
public:
	struct FAIAspectSettings_VehicleEscortSpeed        EscortSettings;                                           // 0x01E8(0x01A0) (Edit)
	struct FGbxBlackboardKeySelector                   TargetKey;                                                // 0x0388(0x0010) (Edit)
	struct FGbxBlackboardKeySelector                   EscortFindComponentKey;                                   // 0x0398(0x0010) (Edit)
	struct FGbxBlackboardKeySelector                   EscortLocationComponentKey;                               // 0x03A8(0x0010) (Edit)
	struct FGbxBlackboardKeySelector                   EscortLocationReferenceKey;                               // 0x03B8(0x0010) (Edit)
	struct FGbxBlackboardKeySelector                   EscortLocationOffsetKey;                                  // 0x03C8(0x0010) (Edit)
	struct FGbxBlackboardKeySelector                   IsEscortingTargetActorInfoKey;                            // 0x03D8(0x0010) (Edit)
	bool                                               bMoveEvenIfUnreachable;                                   // 0x03E8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x03E9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAction_VehicleEscort");
		return ptr;
	}


	void STATIC_InitEscortTarget(class AActor* Target, const struct FVector& OffsetVector, class AActor* OrientationReference);
	void STATIC_InitCustomEscort(class AActor* Target, class AActor* ActorToEscort, const struct FVector& OffsetVector, class AActor* OrientationReference);
};


// Class OakGame.AIAction_VehicleEscortTarget
// 0x0020 (0x0410 - 0x03F0)
class UAIAction_VehicleEscortTarget : public UAIAction_VehicleEscort
{
public:
	struct FVector                                     OffsetVector;                                             // 0x03F0(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03FC(0x0004) MISSED OFFSET
	struct FGbxBlackboardKeySelector                   OrientationReferenceKey;                                  // 0x0400(0x0010) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAction_VehicleEscortTarget");
		return ptr;
	}

};


// Class OakGame.AIAspect_Dialog
// 0x0140 (0x0240 - 0x0100)
class UAIAspect_Dialog : public UAIAspect
{
public:
	struct FAIAspectSettings_Dialog                    Settings;                                                 // 0x0100(0x0140) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAspect_Dialog");
		return ptr;
	}


	class FString STATIC_GetDialogSettingsDescription(const struct FAIAspectSettings_Dialog& DialogSettings, class UProperty* Property);
	class FString STATIC_GetDialogConditionSettingsDescription(const struct FAIAspectSettings_DialogCondition& DialogSettings, class UProperty* Property);
};


// Class OakGame.AIAspect_MovePath
// 0x0040 (0x0280 - 0x0240)
class UAIAspect_MovePath : public UAIAspect_Navigation
{
public:
	struct FAIAspectSettings_MovePath                  MovePathSettings;                                         // 0x0240(0x0040) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAspect_MovePath");
		return ptr;
	}

};


// Class OakGame.AIAspect_NpcGreeting
// 0x0000 (0x0100 - 0x0100)
class UAIAspect_NpcGreeting : public UAIAspect
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAspect_NpcGreeting");
		return ptr;
	}

};


// Class OakGame.AIAspect_Revive
// 0x0090 (0x0190 - 0x0100)
class UAIAspect_Revive : public UAIAspect
{
public:
	struct FAIAspectSettings_Revive                    Settings;                                                 // 0x0100(0x0090) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAspect_Revive");
		return ptr;
	}


	class FString STATIC_GetReviveSettingsDescription(const struct FAIAspectSettings_Revive& ReviveSettings, class UProperty* Property);
};


// Class OakGame.AIAspect_VehicleArchetype
// 0x0008 (0x0108 - 0x0100)
class UAIAspect_VehicleArchetype : public UAIAspect
{
public:
	struct FAIAspectSettings_VehicleArchetype          Settings;                                                 // 0x0100(0x0002) (Edit)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0102(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAspect_VehicleArchetype");
		return ptr;
	}

};


// Class OakGame.AIAspect_VehicleAttitude
// 0x0008 (0x0108 - 0x0100)
class UAIAspect_VehicleAttitude : public UAIAspect
{
public:
	struct FAIAspectSettings_VehicleAttitude           Settings;                                                 // 0x0100(0x0002) (Edit)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0102(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAspect_VehicleAttitude");
		return ptr;
	}

};


// Class OakGame.AIAspect_VehicleDriverLeaves
// 0x0008 (0x0108 - 0x0100)
class UAIAspect_VehicleDriverLeaves : public UAIAspect
{
public:
	struct FAIAspectSettings_VehicleDriverLeaves       Settings;                                                 // 0x0100(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0101(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAspect_VehicleDriverLeaves");
		return ptr;
	}

};


// Class OakGame.AIAspect_VehicleDriving
// 0x0080 (0x0180 - 0x0100)
class UAIAspect_VehicleDriving : public UAIAspect
{
public:
	struct FAIAspectSettings_VehicleDriving            Settings;                                                 // 0x0100(0x0080) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAspect_VehicleDriving");
		return ptr;
	}

};


// Class OakGame.AIAspect_VehicleEscortSpeed
// 0x0208 (0x0448 - 0x0240)
class UAIAspect_VehicleEscortSpeed : public UAIAspect_Navigation
{
public:
	struct FAIAspectSettings_VehicleEscortSpeed        EscortSettings;                                           // 0x0240(0x01A0) (Edit)
	struct FGbxBlackboardKeySelector                   TargetKey;                                                // 0x03E0(0x0010) (Edit)
	struct FGbxBlackboardKeySelector                   FindComponentKey;                                         // 0x03F0(0x0010) (Edit)
	struct FGbxBlackboardKeySelector                   LocationKey;                                              // 0x0400(0x0010) (Edit)
	struct FGbxBlackboardKeySelector                   EscortLocationReferenceKey;                               // 0x0410(0x0010) (Edit)
	struct FGbxBlackboardKeySelector                   EscortLocationOffsetKey;                                  // 0x0420(0x0010) (Edit)
	struct FGbxBlackboardKeySelector                   IsEscortingTargetActorInfoKey;                            // 0x0430(0x0010) (Edit)
	bool                                               bDebugTestDirectPath;                                     // 0x0440(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0441(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAspect_VehicleEscortSpeed");
		return ptr;
	}

};


// Class OakGame.AIAspect_VehicleHorn
// 0x0018 (0x0118 - 0x0100)
class UAIAspect_VehicleHorn : public UAIAspect
{
public:
	struct FAIAspectSettings_VehicleHorn               Settings;                                                 // 0x0100(0x0018) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAspect_VehicleHorn");
		return ptr;
	}

};


// Class OakGame.AIAspect_VehicleHover
// 0x0008 (0x0108 - 0x0100)
class UAIAspect_VehicleHover : public UAIAspect
{
public:
	bool                                               bTrackTarget;                                             // 0x0100(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0101(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAspect_VehicleHover");
		return ptr;
	}

};


// Class OakGame.AIAspect_VehicleParts
// 0x0018 (0x0118 - 0x0100)
class UAIAspect_VehicleParts : public UAIAspect
{
public:
	struct FAIAspectSettings_VehicleParts              Settings;                                                 // 0x0100(0x0018) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAspect_VehicleParts");
		return ptr;
	}

};


// Class OakGame.AIAspect_VehicleSpeed
// 0x06B8 (0x07B8 - 0x0100)
class UAIAspect_VehicleSpeed : public UAIAspect
{
public:
	struct FAIAspectSettings_VehicleSpeed              Settings;                                                 // 0x0100(0x06B8) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIAspect_VehicleSpeed");
		return ptr;
	}

};


// Class OakGame.AIBalanceStateComponent
// 0x0160 (0x0338 - 0x01D8)
class UAIBalanceStateComponent : public UBalanceStateComponent
{
public:
	struct FScriptMulticastDelegate                    OnAnointedDeathStateChanged;                              // 0x01D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FAIPlayThroughData>                  PlayThroughs;                                             // 0x01E8(0x0010) (Edit, ZeroConstructor)
	struct FAttributeInitializationData                ExperienceLevelFormula;                                   // 0x01F8(0x0038) (Edit)
	bool                                               bUseExperienceLevelFormula;                               // 0x0230(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EBalanceValueType                                  BaseItemGameStageSource;                                  // 0x0231(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0232(0x0006) MISSED OFFSET
	struct FAttributeInitializationData                ItemGameStageOffset;                                      // 0x0238(0x0038) (Edit)
	struct FItemPoolCollection                         DropOnDeathItemPools;                                     // 0x0270(0x0020) (Edit)
	struct FItemPoolCollection                         CharacterExpansionDropOnDeathItemPools;                   // 0x0290(0x0020) (Transient)
	struct FName                                       DropLootSocketName;                                       // 0x02B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class ULootSpawnPatternData*                       DropLootPattern;                                          // 0x02B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FAILootDropOverride>                 ExtraDropLootSockets;                                     // 0x02C0(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      bWaitForNotifyToSpawnLoot : 1;                            // 0x02D0(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x02D1(0x0003) MISSED OFFSET
	float                                              DelayedSpawnLootFailSafeTimer;                            // 0x02D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TimeToSpawnLootOver;                                      // 0x02D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x02DC(0x0004) MISSED OFFSET
	TArray<struct FAttributeEffectData>                DropLootAttributeEffects;                                 // 0x02E0(0x0010) (Edit, ZeroConstructor)
	bool                                               bIsAnointed;                                              // 0x02F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x02F1(0x0007) MISSED OFFSET
	struct FAnointedEnemyData                          AnointedData;                                             // 0x02F8(0x0010) (Edit)
	class UItemPoolListInterface*                      ExtraItemPoolToDropOnDeath;                               // 0x0308(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	EItemDropOnDeathType                               ExtraItemPoolDropRule;                                    // 0x0310(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bSuppressDropOnDeathItemPools : 1;                        // 0x0311(0x0001) (Transient)
	unsigned char                                      UnknownData04[0xE];                                       // 0x0312(0x000E) MISSED OFFSET
	class UUsableComponent*                            AnointedUsableComponent;                                  // 0x0320(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	EAnointedDeathState                                AnointedDeathState;                                       // 0x0328(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0xF];                                       // 0x0329(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIBalanceStateComponent");
		return ptr;
	}


	void SuppressDropOnDeathItemPools(bool bSuppress);
	void ShatterFrozenAnointed();
	void SetCustomDropsOnDeath(class UItemPoolListInterface* ExtraPoolToDropOnDeath, bool AddedToBalanceDropItems, EItemDropOnDeathType ItemPoolDropRule);
	void ManuallyTriggerAnointedDeath();
	void ForceDropLoot();
	void FinalizeAnointedFreeze();
	void EnableDropLootSocket(const struct FName& SocketName);
	void ApplyNameForCurrentPlayThrough();
};


// Class OakGame.AIDialogEventData
// 0x00F0 (0x0120 - 0x0030)
class UAIDialogEventData : public UGbxDataAsset
{
public:
	class UDialogEvent*                                TargetAcquiredEvent;                                      // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogEvent*                                TargetLostEvent;                                          // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogEvent*                                TargetKilledOneEnemyTargetEvent;                          // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogEvent*                                TargetDownEvent;                                          // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogEvent*                                TargetDeadEvent;                                          // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogEvent*                                ShootingEvent;                                            // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogEvent*                                ReloadEvent;                                              // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogEvent*                                ReinforcementsEvent;                                      // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<EAIDodgeType, struct FDodgeVOInfo>            DodgeVO;                                                  // 0x0070(0x0050) (Edit, ZeroConstructor)
	class UDialogParameter*                            TargetParam;                                              // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogParameter*                            InstigatorParam;                                          // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogParameter*                            MethodOfDeathParam;                                       // 0x00D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ActionSkillDamageSourceClass;                             // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogEnumValue*                            MethodOfDeath_Normal;                                     // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogEnumValue*                            MethodOfDeath_Gibbed;                                     // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogEnumValue*                            MethodOfDeath_ActionSkill;                                // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogEvent*                                NpcGreetingHelloEvent;                                    // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogEvent*                                NpcGreetingHelloMissionEvent;                             // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogEvent*                                NpcGreetingIdleEvent;                                     // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogEvent*                                NpcGreetingGoodbyeEvent;                                  // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogParameter*                            NpcGreetingTargetParam;                                   // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIDialogEventData");
		return ptr;
	}

};


// Class OakGame.AIHeldActorInterface
// 0x0000 (0x0028 - 0x0028)
class UAIHeldActorInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIHeldActorInterface");
		return ptr;
	}


	void AIHeldActor_OnThrow();
	void AIHeldActor_OnPrime();
	void AIHeldActor_OnDrop();
	EOakElementalType AIHeldActor_GetElementalType();
};


// Class OakGame.AIHeldActorComponent
// 0x0090 (0x03B0 - 0x0320)
class UAIHeldActorComponent : public UGbxChildActorComponent
{
public:
	struct FGbxBlackboardKeySelector                   BlackboardKeyEquipped;                                    // 0x0320(0x0010) (Edit)
	struct FGbxBlackboardKeySelector                   BlackboardKeyRequesting;                                  // 0x0330(0x0010) (Edit)
	struct FSoftObjectPath                             DefaultDeathTagName;                                      // 0x0340(0x0018) (Config, GlobalConfig)
	class UHitReactionTag*                             DeathTag;                                                 // 0x0358(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAutofillDeathTag;                                        // 0x0360(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDisableCollisionWhileHeld;                               // 0x0361(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0362(0x0006) MISSED OFFSET
	struct FName                                       DroppedCollisionProfile;                                  // 0x0368(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bChangeCollisionProfileOnDrop;                            // 0x0370(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGbxTriggerProperty                         PresetTrigger;                                            // 0x0371(0x0001) (Edit, IsPlainOldData)
	bool                                               bInitialized;                                             // 0x0372(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0373(0x0005) MISSED OFFSET
	class AActor*                                      HeldActor;                                                // 0x0378(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UTargetingComponent*                         TargetingComponent;                                       // 0x0380(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UBlackboardComponent*                        BlackboardComponent;                                      // 0x0388(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TScriptInterface<class UAIHeldActorInterface>      HeldActorInterface;                                       // 0x0390(0x0010) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      ClientDisabledCollisionActor;                             // 0x03A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x03A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIHeldActorComponent");
		return ptr;
	}


	void ThrowHeldActorAtTarget(float ThrowSpeed, float ThrowAnglePercent, const struct FName& TargetSocket, const struct FVector& TargetOffset, const struct FRotator& AngleOffset, float MaxPrediction, bool bRequestNewHeldActor, bool bSpawnIfDoesNotExist);
	void ThrowHeldActorAtLocation(const struct FVector& ThrowAtLocation, float ThrowSpeed, float ThrowAnglePercent, bool bRequestNewHeldActor, bool bSpawnIfDoesNotExist);
	void ThrowHeldActorAtActor(class AActor* ThrowAtActor, float ThrowSpeed, float ThrowAnglePercent, const struct FName& ActorSocket, const struct FVector& ActorOffset, const struct FRotator& AngleOffset, float MaxPrediction, bool bRequestNewHeldActor, bool bSpawnIfDoesNotExist);
	void SpawnHeldActor();
	void SetNewHeldActorClass(class UClass* NewHeldActorClass);
	void PrimeHeldActor();
	void OnTriggerPreset(EHeldActorPreset Preset);
	void OnHeldActorSpawned(class AActor* NewHeldActor);
	void OnHeldActorNativeDrop(class AActor* Actor);
	EOakElementalType GetHeldActorElementalType();
	class AActor* GetHeldActor();
	void DropHeldActor(bool bRequestNewHeldActor, class AActor* InstigatorOverride);
	void DetonateHeldActor(bool bKillSelf, bool bRequestNewHeldActor, class AActor* InstigatorOverride);
};


// Class OakGame.AIO_CameraData
// 0x0660 (0x0690 - 0x0030)
class UAIO_CameraData : public UGbxDataAsset
{
public:
	TArray<struct FAIOCameraStateInfo>                 CameraStates;                                             // 0x0030(0x0010) (Edit, ZeroConstructor)
	TArray<struct FAIOCameraEntryTransition>           CameraEntryTransitions;                                   // 0x0040(0x0010) (Edit, ZeroConstructor)
	struct FGbxEasingFunc                              CameraEntryEasing;                                        // 0x0050(0x000C) (Edit)
	float                                              CameraEntryLocationDuration;                              // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraEntryRotationDuration;                              // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TargetFOV;                                                // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TargetFOVSplitscreen;                                     // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TargetFOVVerticalSplitscreen;                             // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TargetFOVQuadSplitscreen;                                 // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bRestoreCameraRotation;                                   // 0x0074(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x0075(0x000B) MISSED OFFSET
	struct FPostProcessSettings                        PostProcessSettings;                                      // 0x0080(0x0600) (Edit)
	float                                              DOFMagnitudeInterpTime;                                   // 0x0680(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VignetteInterpTime;                                       // 0x0684(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0688(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIO_CameraData");
		return ptr;
	}

};


// Class OakGame.AIProjectileInterface
// 0x0000 (0x0028 - 0x0028)
class UAIProjectileInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIProjectileInterface");
		return ptr;
	}


	void AIProjectile_Disarm();
	void AIProjectile_Detonate();
	bool AIProjectile_CanBeStolen();
	void AIProjectile_Arm();
};


// Class OakGame.AIStolenProjectileComponent
// 0x0100 (0x0820 - 0x0720)
class UAIStolenProjectileComponent : public UBoxComponent
{
public:
	struct FScriptMulticastDelegate                    OnStolenProjectileUpdated;                                // 0x0720(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStolenProjectileReturned;                               // 0x0730(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStolenProjectileDestroyed;                              // 0x0740(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FGbxBlackboardKeySelector                   BlackboardKeyProjectile;                                  // 0x0750(0x0010) (Edit)
	struct FGbxBlackboardKeySelector                   BlackboardKeyHasProjectile;                               // 0x0760(0x0010) (Edit)
	float                                              DirectionConeHalfAngle;                                   // 0x0770(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bLimitedByDirection;                                      // 0x0774(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0775(0x0003) MISSED OFFSET
	float                                              ChanceToSucceed;                                          // 0x0778(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x077C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 LerpToSocketCurve;                                        // 0x0780(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCanStealWhenLeftComponent;                               // 0x0788(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0789(0x0003) MISSED OFFSET
	float                                              TimeToForget;                                             // 0x078C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x28];                                      // 0x0790(0x0028) MISSED OFFSET
	class AActor*                                      StolenProjectile;                                         // 0x07B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AActor*>                              IgnoreProjectiles;                                        // 0x07C0(0x0010) (ZeroConstructor, Transient)
	class USkeletalMeshComponent*                      SkelMeshComp;                                             // 0x07D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTargetingComponent*                         TargetingComponent;                                       // 0x07D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UBlackboardComponent*                        BlackboardComponent;                                      // 0x07E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FReplicatedStolenProjectileData             ClientData;                                               // 0x07E8(0x0010) (Net, Transient)
	unsigned char                                      UnknownData04[0x28];                                      // 0x07F8(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AIStolenProjectileComponent");
		return ptr;
	}


	void StolenProjectileReleased();
	void SetChanceToSucceed(float NewChanceToSucceed);
	bool ReturnProjectileToTarget(float Speed, float AnglePercent, const struct FName& Socket, const struct FVector& TargetOffset, const struct FRotator& AngleOffset, float MaxPrediction);
	bool ReturnProjectileToOwner(float Speed, float AnglePercent, const struct FName& Socket, const struct FVector& TargetOffset, const struct FRotator& AngleOffset, float MaxPrediction);
	bool ReturnProjectileToLocation(const struct FVector& Location, float Speed, float AnglePercent);
	bool ReturnProjectileToActor(class AActor* Actor, float Speed, float AnglePercent, const struct FName& Socket, const struct FVector& TargetOffset, const struct FRotator& AngleOffset, float MaxPrediction);
	void ReleaseOnStolenProjectileDestroyed(class AActor* unused);
	void OnRep_ClientData();
	void OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	bool LerpToSocket(const struct FName& Socket, float Duration);
	EOakElementalType GetElementalType();
	bool DisarmProjectile();
	bool DidInteractionSucceed();
	bool DetonateProjectile();
	bool DestroyProjectile();
	bool AttachProjectile(const struct FName& SocketName);
	bool ArmProjectile();
};


// Class OakGame.OakTriggerVolume
// 0x0038 (0x04C8 - 0x0490)
class AOakTriggerVolume : public ATriggerVolume
{
public:
	class UOakTriggerComponent*                        TriggerComponent;                                         // 0x0490(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    TouchedTrigger;                                           // 0x0498(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    UnTouchedTrigger;                                         // 0x04A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    AllPlayersTouchingTrigger;                                // 0x04B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakTriggerVolume");
		return ptr;
	}


	void NotifyTriggerUntouched(class AActor* OtherActor, bool bIsPlayer);
	void NotifyTriggerTouched(class AActor* OtherActor, bool bIsPlayer);
	void NotifyAllPlayersTouchingTrigger();
};


// Class OakGame.AllPlayersRequiredVolume
// 0x0010 (0x04D8 - 0x04C8)
class AAllPlayersRequiredVolume : public AOakTriggerVolume
{
public:
	struct FScriptMulticastDelegate                    OnPlayerTouchedButNotAllPlayersTouching;                  // 0x04C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AllPlayersRequiredVolume");
		return ptr;
	}

};


// Class OakGame.AlwaysLoadedData
// 0x0010 (0x0040 - 0x0030)
class UAlwaysLoadedData : public UPrimaryDataAsset
{
public:
	TArray<TSoftObjectPtr<class UObject>>              AlwaysLoadedAssets;                                       // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AlwaysLoadedData");
		return ptr;
	}

};


// Class OakGame.AmmoAspectData
// 0x0008 (0x0040 - 0x0038)
class UAmmoAspectData : public UInventoryAspectData
{
public:
	class UGbxAmmoTypeData*                            AmmoType;                                                 // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AmmoAspectData");
		return ptr;
	}

};


// Class OakGame.AnimNotify_EnableDropLootSocket
// 0x0010 (0x0048 - 0x0038)
class UAnimNotify_EnableDropLootSocket : public UAnimNotify
{
public:
	TArray<struct FName>                               SocketNames;                                              // 0x0038(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AnimNotify_EnableDropLootSocket");
		return ptr;
	}

};


// Class OakGame.AnimNotify_OakPawnAttachSlotTransition
// 0x0008 (0x0048 - 0x0040)
class UAnimNotify_OakPawnAttachSlotTransition : public UAnimNotify_PawnAttachSlotTransition
{
public:
	bool                                               bAdvanceCameraState;                                      // 0x0040(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AnimNotify_OakPawnAttachSlotTransition");
		return ptr;
	}

};


// Class OakGame.AnimNotify_PlayerMelee
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_PlayerMelee : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AnimNotify_PlayerMelee");
		return ptr;
	}

};


// Class OakGame.AnimNotify_PlayerMeleeEnd
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_PlayerMeleeEnd : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AnimNotify_PlayerMeleeEnd");
		return ptr;
	}

};


// Class OakGame.AnimNotify_PlayerMeleeFOVToggle
// 0x0008 (0x0040 - 0x0038)
class UAnimNotify_PlayerMeleeFOVToggle : public UAnimNotify
{
public:
	bool                                               bActivate;                                                // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AnimNotify_PlayerMeleeFOVToggle");
		return ptr;
	}

};


// Class OakGame.AnimNotify_PlayerMeleePullBegin
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_PlayerMeleePullBegin : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AnimNotify_PlayerMeleePullBegin");
		return ptr;
	}

};


// Class OakGame.AnimNotify_CatchPickup
// 0x0010 (0x0040 - 0x0030)
class UAnimNotify_CatchPickup : public UAnimNotifyState
{
public:
	struct FName                                       HideWeaponLock;                                           // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       HideWeaponBone;                                           // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AnimNotify_CatchPickup");
		return ptr;
	}

};


// Class OakGame.AnimNotifyState_CryoFreeze
// 0x0008 (0x0038 - 0x0030)
class UAnimNotifyState_CryoFreeze : public UAnimNotifyState
{
public:
	bool                                               bDisableAnimFreeze;                                       // 0x0030(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AnimNotifyState_CryoFreeze");
		return ptr;
	}

};


// Class OakGame.AreaResetVolume
// 0x0030 (0x04C0 - 0x0490)
class AAreaResetVolume : public AVolume
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0490(0x0018) MISSED OFFSET
	bool                                               bIsEnabled;                                               // 0x04A8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDisableOnReset;                                          // 0x04A9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x04AA(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    ResetAreaEvent;                                           // 0x04B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AreaResetVolume");
		return ptr;
	}


	void SetEnabled(bool bEnabled);
	void ResetAreaIfEmpty();
};


// Class OakGame.AsyncSpinner
// 0x0050 (0x0680 - 0x0630)
class UAsyncSpinner : public UGbxGFxHUDWidget
{
public:
	TSoftObjectPtr<class UTexture2D>                   TextureToLoad;                                            // 0x0630(0x0028) (Edit, BlueprintReadOnly)
	struct FSoftObjectPath                             TextureToLoadStringReference;                             // 0x0658(0x0018) (BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0670(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AsyncSpinner");
		return ptr;
	}


	void StartLoadingTexture(const struct FSoftObjectPath& AssetPathToLoad);
	void CompleteLoadingTexture();
};


// Class OakGame.AttributeEffectMutatorData_AlliesInRange
// 0x0040 (0x0070 - 0x0030)
class UAttributeEffectMutatorData_AlliesInRange : public UAttributeEffectMutatorData
{
public:
	bool                                               bInfiniteRange;                                           // 0x0030(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FAttributeInitializationData                RangeData;                                                // 0x0038(0x0038) (Edit, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AttributeEffectMutatorData_AlliesInRange");
		return ptr;
	}

};


// Class OakGame.BeamTargetEmptyActor
// 0x0048 (0x04A0 - 0x0458)
class ABeamTargetEmptyActor : public AActor
{
public:
	class USceneComponent*                             SceneRootComp;                                            // 0x0458(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AActor*                                      BeamTarget;                                               // 0x0460(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FollowLerpSpeed;                                          // 0x0468(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x34];                                      // 0x046C(0x0034) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.BeamTargetEmptyActor");
		return ptr;
	}


	void SetBeamTarget(class AActor* NewBeamTarget, float NewFollowLerpSpeed);
};


// Class OakGame.PlayerCharacterComponent
// 0x0100 (0x0278 - 0x0178)
class UPlayerCharacterComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0178(0x0018) MISSED OFFSET
	TArray<class UPlayerCharacterComponentSlotData*>   CharacterSlots;                                           // 0x0190(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FOakPlayerCharacterSlotItemList             SlotItemList;                                             // 0x01A0(0x00C8) (Net, Transient)
	class AOakCharacter_Player*                        CachedPlayer;                                             // 0x0268(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0270(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerCharacterComponent");
		return ptr;
	}


	void SetSlotAugment(class UPlayerCharacterComponentSlotData* Slot, class UPlayerCharacterComponentAugmentData* Augment);
	bool HasAnySlotAugment(class UPlayerCharacterComponentSlotData* Slot);
	void HandlePreInputActivation();
	void HandleInputActivationEnd();
	void HandleInputActivationBegin();
	class UPlayerCharacterComponentAugmentData* GetSlotAugment(class UPlayerCharacterComponentSlotData* Slot);
};


// Class OakGame.BeastmasterCharacterComponent
// 0x0198 (0x0410 - 0x0278)
class UBeastmasterCharacterComponent : public UPlayerCharacterComponent
{
public:
	struct FScriptMulticastDelegate                    OnPetAttackCommandFailed;                                 // 0x0278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0288(0x0018) MISSED OFFSET
	class UPlayerCharacterComponentSlotData*           PetSlotData;                                              // 0x02A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FEnvQueryParams                             PetSpawnLocationParams;                                   // 0x02A8(0x00B8) (Edit, DisableEditOnInstance)
	struct FBeastmasterPetStencilData                  OwnedPetStencilData;                                      // 0x0360(0x0014) (Edit, DisableEditOnInstance)
	struct FBeastmasterPetStencilData                  UnownedPetStencilData;                                    // 0x0374(0x0014) (Edit, DisableEditOnInstance)
	class UGameResourcePoolData*                       PetCooldownPool;                                          // 0x0388(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FGameResourcePoolReference                  PetCooldownPoolRef;                                       // 0x0390(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	class UGameResourcePoolData*                       PetAttackCooldownPool;                                    // 0x03A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FGameResourcePoolReference                  PetAttackCooldownPoolRef;                                 // 0x03B0(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	class AOakCharacter*                               PetActor;                                                 // 0x03C8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class AOakCharacter_Player*                        OwnerPlayer;                                              // 0x03D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakPlayerCharacterAugmentData_Pet*          ActivePetAugment;                                         // 0x03D8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class UOakPlayerCharacterAugmentData_Pet*          LocalPetAugment;                                          // 0x03E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UOakPlayerCharacterAugmentData_Pet*>  LockedPetAugments;                                        // 0x03E8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x18];                                      // 0x03F8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.BeastmasterCharacterComponent");
		return ptr;
	}


	bool ValidateCurrentPetAugment(class UOakPlayerCharacterAugmentData_Pet* PetAugment);
	void TryOrderPetAttack();
	void StartPetTargetSearch();
	class AOakCharacter* SpawnNewPet(class UOakPlayerCharacterAugmentData_Pet* PetAugment, const struct FVector& SpawnLocation);
	void ServerSetActivePetAugment(class UOakPlayerCharacterAugmentData_Pet* Augment);
	void ServerOrderPetAttack();
	void RestartPetAttackCooldown();
	void ResetPetAttackCooldown();
	void OnRep_PetActor();
	void OnReleasedPet(bool bForced, EPetReleaseReason ReleaseReason);
	void OnPlayerLevelUp(int OldExperienceLevel, int NewExperieneLevel);
	void OnPlayerDied();
	void OnPetDied();
	void OnPetDestroyed(class AActor* DestroyedActor);
	void OnPawnAttachSlotStarted(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnCharacterAugmentChanged(class UPlayerCharacterComponentSlotData* SlotData);
	float GetPetCooldownRefundPercent(EPetRespawnCooldownRefundType RefundType);
	float GetPetAttackCooldownPercent();
	bool ForcePetSpawnAtLocation(const struct FVector& Location);
	void ClientNotifyPetAttackFailed();
	void STATIC_BreakPetAugment(class UOakPlayerCharacterAugmentData_Pet* Augment, EOakActionAbilityPetType* PetType, EOakActionAbilityPetEvolutionType* EvolutionType, class FString* FrameName);
};


// Class OakGame.StandInCharacterComponent
// 0x00E0 (0x0258 - 0x0178)
class UStandInCharacterComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0178(0x0030) MISSED OFFSET
	class UClass*                                      SkillScreenUnlockAnimation;                               // 0x01A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UnlockAnimationDelay;                                     // 0x01B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UnlockedAnimStateDelay;                                   // 0x01B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FMeleeWeaponAttachmentData                  MeleeWeaponAttachmentData;                                // 0x01B8(0x0040) (Edit)
	bool                                               bShowMeleeWeaponOnCharacterCreate;                        // 0x01F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bShowMeleeWeaponOnCharacterSelect;                        // 0x01F9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1E];                                      // 0x01FA(0x001E) MISSED OFFSET
	class AOakCharacter_StandIn*                       Character;                                                // 0x0218(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AOakCharacter_Player*                        OwningPlayer;                                             // 0x0220(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AStandInAuxiliaryActor*>              AuxiliaryActors;                                          // 0x0228(0x0010) (ZeroConstructor, Transient)
	class UGbxDataAsset*                               LastSlottedItem;                                          // 0x0238(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0240(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.StandInCharacterComponent");
		return ptr;
	}


	void OnAuxiliaryActorDestroyed(class AActor* Actor);
};


// Class OakGame.BeastmasterStandInComponent
// 0x00A8 (0x0300 - 0x0258)
class UBeastmasterStandInComponent : public UStandInCharacterComponent
{
public:
	class UClass*                                      BeastmasterSpawnPetAnimation;                             // 0x0258(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      PetSpawnAnimation;                                        // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PetTranslationOffset;                                     // 0x0268(0x000C) (Edit, IsPlainOldData)
	struct FRotator                                    PetRotationOffset;                                        // 0x0274(0x000C) (Edit, IsPlainOldData)
	float                                              InitialActionSkillFlourishDelay;                          // 0x0280(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0284(0x0004) MISSED OFFSET
	class UOakPlayerAbilitySlotData*                   ActionSkillSlot;                                          // 0x0288(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPlayerCharacterComponentSlotData*           PetSlot;                                                  // 0x0290(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FBeastmasterStandInPetData>          Pets;                                                     // 0x0298(0x0010) (Edit, ZeroConstructor)
	TArray<struct FBeastmasterStandInActionSkillData>  ActionSkills;                                             // 0x02A8(0x0010) (Edit, ZeroConstructor)
	class UPrimitiveComponent*                         MeleeMeshComponent;                                       // 0x02B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UPlayerCharacterComponentAugmentData*        CurrentPet;                                               // 0x02C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AStandInAuxiliaryActor_Pet>   CurrentPetActor;                                          // 0x02C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      CurrentActionAbility;                                     // 0x02D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AStandInAuxiliaryActor>       CurrentActionSkillAuxiliary;                              // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x02E0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.BeastmasterStandInComponent");
		return ptr;
	}


	void TriggerFlourishCE();
	void SetMeleeMeshVisible(bool bVisible);
};


// Class OakGame.BehindTheScenesContent
// 0x0010 (0x0040 - 0x0030)
class UBehindTheScenesContent : public UGbxDataAsset
{
public:
	TArray<struct FBehindTheScenesCategory>            Categories;                                               // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.BehindTheScenesContent");
		return ptr;
	}

};


// Class OakGame.BehindTheScenesMediaContainer
// 0x0000 (0x0028 - 0x0028)
class UBehindTheScenesMediaContainer : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.BehindTheScenesMediaContainer");
		return ptr;
	}

};


// Class OakGame.OakCinematicActor
// 0x0060 (0x04B8 - 0x0458)
class AOakCinematicActor : public AActor
{
public:
	bool                                               bTeleportPhysic;                                          // 0x0458(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bResetPhysic;                                             // 0x0459(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5E];                                      // 0x045A(0x005E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCinematicActor");
		return ptr;
	}


	void RemoveSlaveViewLocation(const struct FName& Name);
	void AddSlaveViewLocation(const struct FName& Name, const struct FVector& SlaveViewLocation);
};


// Class OakGame.BehindTheScenesMediaPlayerActor
// 0x0038 (0x04F0 - 0x04B8)
class ABehindTheScenesMediaPlayerActor : public AOakCinematicActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04B8(0x0010) MISSED OFFSET
	TSoftObjectPtr<class UTexture2D>                   TextureBeingLoaded;                                       // 0x04C8(0x0028) (Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.BehindTheScenesMediaPlayerActor");
		return ptr;
	}


	void OnBTSMediaTextureLoaded();
	class FString GetLanguageName();
	void BehindTheScenesMenuRewindMovie();
	void BehindTheScenesMenuPlayPauseMovie();
	void BehindTheScenesMenuOpened();
	void BehindTheScenesMenuFastForwardMovie();
	void BehindTheScenesMenuClosed();
	void BehindTheScenesContentSelected(class UBehindTheScenesMediaContainer* MediaContainer);
	void AsyncLoadBTSMediaTexture2D(TSoftObjectPtr<class UTexture2D> TextureToLoad, const struct FScriptDelegate& LoadedDelegate);
};


// Class OakGame.BlackJackComponent
// 0x0058 (0x01D0 - 0x0178)
class UBlackJackComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnCardUpdated;                                            // 0x0178(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FBlackJackCardDefinition>            CardDefinitions;                                          // 0x0188(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0198(0x0018) MISSED OFFSET
	TArray<int>                                        IndicesOfCurrentCards;                                    // 0x01B0(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x01C0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.BlackJackComponent");
		return ptr;
	}


	bool ShouldOpenChest();
	void Reset();
	void OpenChest();
	void OnRep_CurrentCards();
	int GetNbOfCard();
	int GetCurrentHandValue();
	int GetCardValueIndexAtIndex(int Index);
	int GetCardSuitIndexAtIndex(int Index);
	class FString GetCardAtIndex(int Index);
	bool CanUseOpenChest();
	bool CanUseAddCard();
	void AddCard();
};


// Class OakGame.BoundaryTurret
// 0x00B8 (0x0608 - 0x0550)
class ABoundaryTurret : public AInteractiveObject
{
public:
	int                                                StartingDistance;                                         // 0x0550(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                WarningZoneDistance;                                      // 0x0554(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                WarningZoneWidth;                                         // 0x0558(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                ZoneHeight;                                               // 0x055C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                KillExtent;                                               // 0x0560(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                ZoneVerticalOffset;                                       // 0x0564(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	bool                                               bShowDebugZones;                                          // 0x0568(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0569(0x0007) MISSED OFFSET
	class UFeedbackData*                               WarningFeedback;                                          // 0x0570(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 WarningStartAudioEvent;                                   // 0x0578(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 WarningStopAudioEvent;                                    // 0x0580(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 KillAudioEvent;                                           // 0x0588(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBoxComponent*                               WarningTriggerComponent;                                  // 0x0590(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               KillTriggerComponent;                                     // 0x0598(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      TurretMeshComponent;                                      // 0x05A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class AOakCharacter_Player*>                AllTrackedTargets;                                        // 0x05A8(0x0010) (ZeroConstructor, Transient)
	TArray<class AOakVehicle*>                         OverlappedVehicles;                                       // 0x05B8(0x0010) (ZeroConstructor, Transient)
	class AOakCharacter_Player*                        PriorityTrackedTarget;                                    // 0x05C8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       WarningTriggerName;                                       // 0x05D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       KillTriggerName;                                          // 0x05D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TurretMeshName;                                           // 0x05E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       FXSwitchName;                                             // 0x05E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       LaserSwitchName;                                          // 0x05F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       FXStateName;                                              // 0x05F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       LaserStateName;                                           // 0x0600(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.BoundaryTurret");
		return ptr;
	}


	void WarningTrigger_OnEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void WarningTrigger_OnBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void PlayKillEffects(const struct FVector& TargetLocation);
	void NetMulticast_PlayKillEffects(const struct FVector& TargetLocation);
	void KillTrigger_OnEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void KillTrigger_OnBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	class AOakCharacter_Player* GetTrackedTarget();
};


// Class OakGame.BoundaryTurretAnimInstance
// 0x0020 (0x0560 - 0x0540)
class UBoundaryTurretAnimInstance : public UGbxAnimInstance
{
public:
	struct FName                                       PivotSocketName;                                          // 0x0540(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    BarrelRotation;                                           // 0x0548(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	float                                              RotationSpeed;                                            // 0x0554(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bInvertTurret;                                            // 0x0558(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0559(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.BoundaryTurretAnimInstance");
		return ptr;
	}

};


// Class OakGame.BTService_FireWeapon
// 0x0000 (0x0070 - 0x0070)
class UBTService_FireWeapon : public UBTService
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.BTService_FireWeapon");
		return ptr;
	}

};


// Class OakGame.BTService_TriggerDialog
// 0x0060 (0x00D0 - 0x0070)
class UBTService_TriggerDialog : public UBTService
{
public:
	class UDialogEvent*                                DialogEvent;                                              // 0x0070(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGbxTriggerProperty                         RefreshParamsProperty;                                    // 0x0078(0x0001) (Edit, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET
	TMap<class UDialogParameter*, struct FGbxParam>    ParameterValues;                                          // 0x0080(0x0050) (Edit, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.BTService_TriggerDialog");
		return ptr;
	}


	void RefreshParams();
};


// Class OakGame.BulletNotificationVolume
// 0x0018 (0x04A8 - 0x0490)
class ABulletNotificationVolume : public AVolume
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0490(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBulletThrough;                                          // 0x0498(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.BulletNotificationVolume");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_AdjustForFocusObject
// 0x0038 (0x0068 - 0x0030)
class UCameraBehavior_AdjustForFocusObject : public UCameraBehavior
{
public:
	float                                              CamReturnTime;                                            // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CamMovementThreshold;                                     // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CamMovementSpeed_Fast;                                    // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CamMovementSpeed_Slow;                                    // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UFocusableComponent*                         LastFocusObject;                                          // 0x0040(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0048(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_AdjustForFocusObject");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_AIO
// 0x01E8 (0x0218 - 0x0030)
class UCameraBehavior_AIO : public UCameraBehavior
{
public:
	struct FVector                                     FirstPersonComponentTranslationOffset;                    // 0x0030(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	class AAdvancedInteractiveObject*                  CurrentAIO;                                               // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AAdvancedInteractiveObjectProxy*             CurrentProxy;                                             // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAIO_CameraData*                             CameraData;                                               // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1C0];                                     // 0x0058(0x01C0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_AIO");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_AutoFollowVehicleRotation
// 0x0018 (0x0048 - 0x0030)
class UCameraBehavior_AutoFollowVehicleRotation : public UCameraBehavior
{
public:
	float                                              RotationRate;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EaseInSpeed;                                              // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bFollowInAir : 1;                                         // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bFollowWhileBoosting : 1;                                 // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              MinVehicleSpeed;                                          // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              InputDelay;                                               // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_AutoFollowVehicleRotation");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_ExitLadder
// 0x0148 (0x01F0 - 0x00A8)
class UCameraBehavior_ExitLadder : public UCameraBehavior_InitialRotation
{
public:
	struct FLadderBehaviorGoalParams                   ExitTopParams;                                            // 0x00A8(0x0068) (Edit)
	struct FLadderBehaviorGoalParams                   ExitBottomParams;                                         // 0x0110(0x0068) (Edit)
	struct FLadderBehaviorGoalParams                   ExitJumpParams;                                           // 0x0178(0x0068) (Edit)
	unsigned char                                      UnknownData00[0x10];                                      // 0x01E0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_ExitLadder");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_FocusDOF
// 0x1280 (0x12B0 - 0x0030)
class UCameraBehavior_FocusDOF : public UCameraBehavior
{
public:
	struct FPostProcessSettings                        PostProcessSettings;                                      // 0x0030(0x0600) (Edit, BlueprintVisible)
	float                                              BlendInTime;                                              // 0x0630(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlendOutTime;                                             // 0x0634(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bWorldFocus;                                              // 0x0638(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDynamicFocus;                                            // 0x0639(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x063A(0x0002) MISSED OFFSET
	float                                              TraceDistance;                                            // 0x063C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FocusSpeed;                                               // 0x0640(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DistanceBasedNearTransitionRegionScale;                   // 0x0644(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DistanceBasedFarTransitionRegionScale;                    // 0x0648(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bForegroundFocus;                                         // 0x064C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x064D(0x0003) MISSED OFFSET
	float                                              ForegroundFocusDistance;                                  // 0x0650(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ForegroundFocusNearRegionPct;                             // 0x0654(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ZoomedForegroundNearRegion;                               // 0x0658(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlurVignetteSharpness;                                    // 0x065C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StartBlurVignetteSize;                                    // 0x0660(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ColorVignetteSharpness;                                   // 0x0664(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StartColorVignetteSize;                                   // 0x0668(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LongitudinalMotionScale;                                  // 0x066C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LateralMotionScale;                                       // 0x0670(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableZoomTransition;                                    // 0x0674(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xB];                                       // 0x0675(0x000B) MISSED OFFSET
	struct FPostProcessSettings                        BlendOutPPSettings;                                       // 0x0680(0x0600) (Transient)
	unsigned char                                      UnknownData03[0x20];                                      // 0x0C80(0x0020) MISSED OFFSET
	struct FPostProcessSettings                        AppliedPPSettings;                                        // 0x0CA0(0x0600) (Transient)
	unsigned char                                      UnknownData04[0x8];                                       // 0x12A0(0x0008) MISSED OFFSET
	class UMaterialInstanceDynamic*                    ZoomMaterialInst;                                         // 0x12A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_FocusDOF");
		return ptr;
	}


	void ApplyPostProcess(class UCameraState* State, float DeltaTime, float BlendWeight, const struct FPostProcessSettings& PPSettings);
};


// Class OakGame.CameraBehavior_Ladder
// 0x0140 (0x01E8 - 0x00A8)
class UCameraBehavior_Ladder : public UCameraBehavior_InitialRotation
{
public:
	struct FLadderBehaviorGoalParams                   EnterBottomParams;                                        // 0x00A8(0x0068) (Edit)
	struct FLadderBehaviorGoalParams                   EnterTopParams;                                           // 0x0110(0x0068) (Edit)
	struct FLadderBehaviorGoalParams                   SlidingParams;                                            // 0x0178(0x0068) (Edit)
	unsigned char                                      UnknownData00[0x8];                                       // 0x01E0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_Ladder");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_LimitPitchBySlope
// 0x0100 (0x01A8 - 0x00A8)
class UCameraBehavior_LimitPitchBySlope : public UCameraBehavior_InitialRotation
{
public:
	struct FRuntimeFloatCurve                          SlopeToMaxPitchCurve;                                     // 0x00A8(0x0078) (Edit)
	struct FRuntimeFloatCurve                          SlopeToMinPitchCurve;                                     // 0x0120(0x0078) (Edit)
	float                                              PitchLimitEasingSpeed;                                    // 0x0198(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x019C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_LimitPitchBySlope");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_MainMenu
// 0x0D00 (0x0D30 - 0x0030)
class UCameraBehavior_MainMenu : public UCameraBehavior
{
public:
	class UMenuMapCameraData*                          CameraData;                                               // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AMenuMapMenuFlow*                            MenuFlow;                                                 // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	class ACameraActor*                                CurrentViewTarget;                                        // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xCE0];                                     // 0x0050(0x0CE0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_MainMenu");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_MeleeFOV
// 0x0000 (0x0078 - 0x0078)
class UCameraBehavior_MeleeFOV : public UCameraBehavior_BlendToFOV
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_MeleeFOV");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_MeleeLock
// 0x0020 (0x00C0 - 0x00A0)
class UCameraBehavior_MeleeLock : public UCameraBehavior_Look
{
public:
	class AActor*                                      LockedTarget;                                             // 0x00A0(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)
	float                                              MaxLockDistance;                                          // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxHorizontalLockAngle;                                   // 0x00AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxVerticalLockAngle;                                     // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LockBreakDistance;                                        // 0x00B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LockSpeed;                                                // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_MeleeLock");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_PitchFOV
// 0x0018 (0x0048 - 0x0030)
class UCameraBehavior_PitchFOV : public UCameraBehavior
{
public:
	class UCurveFloat*                                 PitchFOVCurve;                                            // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 PitchFOVScaleCurve;                                       // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinPitch;                                                 // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxPitch;                                                 // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_PitchFOV");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_RaidSpectator
// 0x0038 (0x0068 - 0x0030)
class UCameraBehavior_RaidSpectator : public UCameraBehavior
{
public:
	float                                              HorizontalOffset;                                         // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VerticalOffset;                                           // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxRotateSpeed;                                           // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxZoom;                                                  // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxZoomSpeed;                                             // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraPitchMin;                                           // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraPitchMax;                                           // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     IronBearAdditionalOffset;                                 // 0x004C(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0058(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_RaidSpectator");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_ScriptedDOF
// 0x0C40 (0x0C70 - 0x0030)
class UCameraBehavior_ScriptedDOF : public UCameraBehavior
{
public:
	float                                              BlendOutTime;                                             // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0034(0x000C) MISSED OFFSET
	struct FPostProcessSettings                        BlendOutPPSettings;                                       // 0x0040(0x0600) (Transient)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0640(0x0010) MISSED OFFSET
	struct FPostProcessSettings                        AppliedPPSettings;                                        // 0x0650(0x0600) (Transient)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0C50(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_ScriptedDOF");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_SnapLookToTarget
// 0x0008 (0x0038 - 0x0030)
class UCameraBehavior_SnapLookToTarget : public UCameraBehavior
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_SnapLookToTarget");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_SprintFOV
// 0x0010 (0x0040 - 0x0030)
class UCameraBehavior_SprintFOV : public UCameraBehavior
{
public:
	float                                              CurrentDelay;                                             // 0x0030(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              BlendPct;                                                 // 0x0034(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bTransitioningToSprintFoV;                                // 0x0038(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_SprintFOV");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_Sway
// 0x0048 (0x0078 - 0x0030)
class UCameraBehavior_Sway : public UCameraBehavior
{
public:
	struct FVector                                     LocationWaveformScale;                                    // 0x0030(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<struct FVectorWaveform>                     LocationWaveforms;                                        // 0x0040(0x0010) (Edit, ZeroConstructor)
	struct FVector                                     RotationWaveformScale;                                    // 0x0050(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	TArray<struct FVectorWaveform>                     RotationWaveforms;                                        // 0x0060(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0070(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_Sway");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_VehicleBoost
// 0x0280 (0x02B0 - 0x0030)
class UCameraBehavior_VehicleBoost : public UCameraBehavior
{
public:
	float                                              FOVScale;                                                 // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RelativeLocationOffset;                                   // 0x0034(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               bBlendWithSpeed;                                          // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              BlendInSpeed;                                             // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BlendOutSpeed;                                            // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseBoostFOVAnimation;                                    // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	float                                              BoostAnimationDuration;                                   // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	struct FRuntimeFloatCurve                          BoostFOVAnimation;                                        // 0x0058(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              BoostAnimationFOV;                                        // 0x00D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00D4(0x0004) MISSED OFFSET
	struct FRuntimeFloatCurve                          BoostTranslationAnimation;                                // 0x00D8(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bAllowBoostFOVAnimationToStop;                            // 0x0150(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bSeparatePowerSlideAndNormalBoost;                        // 0x0151(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0152(0x0002) MISSED OFFSET
	float                                              PowerSlideBoostAnimationDuration;                         // 0x0154(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRuntimeFloatCurve                          PowerSlideBoostFOVAnimation;                              // 0x0158(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FRuntimeFloatCurve                          PowerSlideBoostTranslationAnimation;                      // 0x01D0(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bAllowPowerSlideBoostFOVAnimationToStop;                  // 0x0248(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0249(0x0007) MISSED OFFSET
	TArray<struct FVehicleOverrideData>                OverrideByParts;                                          // 0x0250(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData06[0x50];                                      // 0x0260(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_VehicleBoost");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_VehicleCollision
// 0x0020 (0x0050 - 0x0030)
class UCameraBehavior_VehicleCollision : public UCameraBehavior
{
public:
	struct FVector                                     LocalOriginRayCast;                                       // 0x0030(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              DodgeRadius;                                              // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinimalRadius;                                            // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MovementDampingSpeed;                                     // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_VehicleCollision");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_VehicleFOV
// 0x0000 (0x0038 - 0x0038)
class UCameraBehavior_VehicleFOV : public UCameraBehavior_FOV
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_VehicleFOV");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_VehicleLook
// 0x0A00 (0x0A30 - 0x0030)
class UCameraBehavior_VehicleLook : public UCameraBehavior
{
public:
	bool                                               bFollowGroundNormal;                                      // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	struct FVector                                     GroundDetectionOrigin;                                    // 0x0034(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     GroundDetectionPoint0;                                    // 0x0040(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     GroundDetectionPoint1;                                    // 0x004C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     GroundDetectionPoint2;                                    // 0x0058(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              BankingTolerance;                                         // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRuntimeFloatCurve                          BankingDampingBySpeed;                                    // 0x0068(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FVector                                     BaseLookAtPosition;                                       // 0x00E0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     LookAtOffsetInTheAir;                                     // 0x00EC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              LookAtOffsetInTheAirDamping;                              // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LookAtOffsetInTheGroundDamping;                           // 0x00FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseCameraFollowVehicleBody;                              // 0x0100(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0101(0x0007) MISSED OFFSET
	struct FRuntimeFloatCurve                          CameraFollowBodyPitchRotationBySpeed;                     // 0x0108(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FRuntimeFloatCurve                          CameraFollowBodyRollRotationBySpeed;                      // 0x0180(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              CameraBodyFollowDelay;                                    // 0x01F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BaseForwardOffset;                                        // 0x01FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BaseFOV;                                                  // 0x0200(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DefaultPitch;                                             // 0x0204(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PitchMin;                                                 // 0x0208(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PitchMax;                                                 // 0x020C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CameraOffsetDamping;                                      // 0x0210(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FreeAimMinTime;                                           // 0x0214(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCameraKeyOffset                            FreeLookOffset;                                           // 0x0218(0x002C) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bKeepCameraOffsetsInFreeLook;                             // 0x0244(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0245(0x0003) MISSED OFFSET
	struct FRuntimeFloatCurve                          ForwardOffsetByPitchAngle;                                // 0x0248(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FRuntimeFloatCurve                          UpOffsetByPitchAngle;                                     // 0x02C0(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly)
	TArray<struct FCameraPitchOffset>                  PitchKeysByYawAngle;                                      // 0x0338(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              ClampToRotateOnly;                                        // 0x0348(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableAutoLookInDrivingCamera;                           // 0x034C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x034D(0x0003) MISSED OFFSET
	struct FRuntimeFloatCurve                          MinVelocityByTurnRateForAutoLook;                         // 0x0350(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              AutoLookPitchDamping;                                     // 0x03C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AutoResetDamping;                                         // 0x03CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRuntimeFloatCurve                          AutoLookYawFixBySpeed;                                    // 0x03D0(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              LatteralOffsetDampingFactor;                              // 0x0448(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ForwardOffsetDampingFactor;                               // 0x044C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowAutoLookInReverse;                                  // 0x0450(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0451(0x0003) MISSED OFFSET
	float                                              KeepLookAtRatio;                                          // 0x0454(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              KeepLookAtSpeedTreshold;                                  // 0x0458(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x045C(0x0004) MISSED OFFSET
	struct FName                                       BodySocketToFollow;                                       // 0x0460(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCameraKeyOffset                            StationaryOffset;                                         // 0x0468(0x002C) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0494(0x0004) MISSED OFFSET
	struct FRuntimeFloatCurve                          ForwardInterpolationRatio;                                // 0x0498(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              ForwardMaxSpeed;                                          // 0x0510(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCameraKeyOffset                            ForwardOffset;                                            // 0x0514(0x002C) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FRuntimeFloatCurve                          ReverseInterpolationRatio;                                // 0x0540(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              ReverseMaxSpeed;                                          // 0x05B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCameraKeyOffset                            ReverseOffset;                                            // 0x05BC(0x002C) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bApplyTurnSettingsInReverse;                              // 0x05E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x05E9(0x0007) MISSED OFFSET
	struct FRuntimeFloatCurve                          TurnInterpolationRatio;                                   // 0x05F0(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              TurnMaxSpeed;                                             // 0x0668(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCameraKeyOffset                            TurnOffset;                                               // 0x066C(0x002C) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FVector                                     LocalOriginRayCast;                                       // 0x0698(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              DodgeRadius;                                              // 0x06A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinimalRadius;                                            // 0x06A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MovementDampingSpeed;                                     // 0x06AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FCameraIntroBlend                           DefaultIntro;                                             // 0x06B0(0x0098) (Edit, BlueprintVisible, BlueprintReadOnly)
	TMap<EIntroType, struct FCameraIntroBlend>         IntroByType;                                              // 0x0748(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FVehicleOverrideData>                OverrideByParts;                                          // 0x0798(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData08[0x288];                                     // 0x07A8(0x0288) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_VehicleLook");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_VehicleTransitionOut
// 0x01B0 (0x01E0 - 0x0030)
class UCameraBehavior_VehicleTransitionOut : public UCameraBehavior
{
public:
	float                                              RotateSpeed;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LookAtFactor;                                             // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PitchMin;                                                 // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PitchMax;                                                 // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRuntimeFloatCurve                          RotationCurve;                                            // 0x0040(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FRuntimeFloatCurve                          LocationCurve;                                            // 0x00B8(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FName                                       LookAtSocket;                                             // 0x0130(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FVehicleOverrideData>                OverrideByParts;                                          // 0x0138(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              NoAnimationDuration;                                      // 0x0148(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	class UGbxActionComponent*                         ActionComp;                                               // 0x0150(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x88];                                      // 0x0158(0x0088) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_VehicleTransitionOut");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_ViewWeaponFOV
// 0x0008 (0x0038 - 0x0030)
class UCameraBehavior_ViewWeaponFOV : public UCameraBehavior
{
public:
	float                                              SplitScreenScale;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_ViewWeaponFOV");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_ViewWeaponOffset
// 0x0010 (0x0080 - 0x0070)
class UCameraBehavior_ViewWeaponOffset : public UCameraBehavior_OffsetViewModel
{
public:
	bool                                               bSetFOV;                                                  // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	float                                              SplitScreenFOVScale;                                      // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VerticalSplitScreenFOVScale;                              // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              QuadSplitScreenFOVScale;                                  // 0x007C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_ViewWeaponOffset");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_WeaponLook
// 0x0000 (0x00A0 - 0x00A0)
class UCameraBehavior_WeaponLook : public UCameraBehavior_Look
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_WeaponLook");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_WeaponRecoil
// 0x0000 (0x0030 - 0x0030)
class UCameraBehavior_WeaponRecoil : public UCameraBehavior
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_WeaponRecoil");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_WeaponSway
// 0x0000 (0x0030 - 0x0030)
class UCameraBehavior_WeaponSway : public UCameraBehavior
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_WeaponSway");
		return ptr;
	}

};


// Class OakGame.CameraBehavior_WeaponZoomFOV
// 0x0000 (0x0030 - 0x0030)
class UCameraBehavior_WeaponZoomFOV : public UCameraBehavior
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CameraBehavior_WeaponZoomFOV");
		return ptr;
	}

};


// Class OakGame.CARConsoleAnimInstance
// 0x0010 (0x0450 - 0x0440)
class UCARConsoleAnimInstance : public UAnimInstance
{
public:
	float                                              NearRadiusOfPlayer;                                       // 0x0440(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ECARStatus                                         LastStatus;                                               // 0x0444(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	ECARStatus                                         Status;                                                   // 0x0445(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsLocked;                                                // 0x0446(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsUnfolding;                                             // 0x0447(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsActive;                                                // 0x0448(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsInactive;                                              // 0x0449(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x044A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CARConsoleAnimInstance");
		return ptr;
	}

};


// Class OakGame.Carnivora
// 0x01E0 (0x06A0 - 0x04C0)
class ACarnivora : public APawn
{
public:
	class ACarnivoraTrackBuilder*                      TrackBuilder;                                             // 0x04C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                LineTracesToExecutePerFrame;                              // 0x04C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LookAheadDirectionPrediction;                             // 0x04CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WheelMaxAngle;                                            // 0x04D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AngleMultiplierWheel;                                     // 0x04D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DirectionPredictionWheelAngle;                            // 0x04D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DesiredHeightAboveGround;                                 // 0x04DC(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              DesiredAdditionalRoll;                                    // 0x04E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DesiredAdditionalPitch;                                   // 0x04E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawDebugPlaneTilt;                                      // 0x04E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x04E9(0x0007) MISSED OFFSET
	TArray<float>                                      PartLocation;                                             // 0x04F0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              DefaultSocketToGroundDistanceTireTrack;                   // 0x0500(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DefaultSocketToGroundDistanceFrontWheel;                  // 0x0504(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMeshComponent*                        SMFrame;                                                  // 0x0508(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGbxSkeletalMeshComponent*                   SKTireTrack;                                              // 0x0510(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class ACarnivoraTread*                             LeftTread;                                                // 0x0518(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ACarnivoraTread*                             RightTread;                                               // 0x0520(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       FrontRight_SocketNameDistToGround;                        // 0x0528(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       FrontLeft_SocketNameDistToGround;                         // 0x0530(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       BackRight_SocketNameDistToGround;                         // 0x0538(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       BackLeft_SocketNameDistToGround;                          // 0x0540(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LeftWheelDotRatioCollision;                               // 0x0548(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RightWheelDotRatioCollision;                              // 0x054C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FrontWheelDotRatioCollision;                              // 0x0550(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bMustMoveToDoDamage;                                      // 0x0554(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawDebugCollisionTreadsAndWheels;                       // 0x0555(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDoDamageOnTreadAndWheelCollision;                        // 0x0556(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0557(0x0001) MISSED OFFSET
	TArray<struct FCarnivoraFakeTurrets>               FakeCarnivoraTurrets;                                     // 0x0558(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	bool                                               bShootLightProjectileAtPlayers;                           // 0x0568(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0569(0x0003) MISSED OFFSET
	float                                              SquaredDistanceReplicationCorrectionTreshold;             // 0x056C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShouldUpdateCarnivoraTiltBasedOnGround;                  // 0x0570(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0571(0x0003) MISSED OFFSET
	struct FVector                                     InitialCarnivoraLocation;                                 // 0x0574(0x000C) (Net, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0580(0x0008) MISSED OFFSET
	TArray<struct FSplineTriggers>                     SplineTriggers;                                           // 0x0588(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate)
	int                                                CurrentCarnivoraSplineId;                                 // 0x0598(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x059C(0x0004) MISSED OFFSET
	class USplineFollowerComponent*                    SplineFollower;                                           // 0x05A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData06[0xF8];                                      // 0x05A8(0x00F8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.Carnivora");
		return ptr;
	}


	void StartCarnivoraMovement(int SplineTriggersId);
	void SetTrackBuilder(class ACarnivoraTrackBuilder* NewTrack, bool bReverse);
	void SetShouldUpdateTitlBasedOnGround(bool bShouldUpdate);
	void SetShouldUpdateTiltBasedOnGround(bool bShouldUpdate);
	void SetShouldShootAtPlayers(bool bShootAtPlayers);
	void SetCarnivoraTickEnabled(bool bEnabled);
	void OnRep_InitialcarnivoraLocation();
	void OnComponentHitCallback(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void NotifyTriggerTouched(class AActor* OtherActor, bool bIsPlayer);
};


// Class OakGame.CarnivoraAnimInstance
// 0x06F0 (0x0B30 - 0x0440)
class UCarnivoraAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x6E0];                                     // 0x0440(0x06E0) MISSED OFFSET
	class ACarnivora*                                  CarnivoraOwner;                                           // 0x0B20(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0B28(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CarnivoraAnimInstance");
		return ptr;
	}

};


// Class OakGame.CarnivoraCannon
// 0x0080 (0x04D8 - 0x0458)
class ACarnivoraCannon : public AActor
{
public:
	class USkeletalMeshComponent*                      CannonMeshComponent;                                      // 0x0458(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	struct FName                                       ShellBoneName;                                            // 0x0460(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 Shell;                                                    // 0x0468(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMeshComponent*                        ShellComponent;                                           // 0x0470(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AActor*                                      Cannon;                                                   // 0x0478(0x0008) (ZeroConstructor, IsPlainOldData)
	class ACarnivora*                                  Carnivora;                                                // 0x0480(0x0008) (ZeroConstructor, IsPlainOldData)
	class USplineFollowerComponent*                    SplineFollower;                                           // 0x0488(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              AimingAngle;                                              // 0x0490(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0494(0x0004) MISSED OFFSET
	class UClass*                                      ProjectileClass;                                          // 0x0498(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ShellClass;                                               // 0x04A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                NumberOfProjectile;                                       // 0x04A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FrontStartingDistance;                                    // 0x04AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HorizontalDispersionAngle;                                // 0x04B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VerticalToHorizontalDispersionRatio;                      // 0x04B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProjectileSpreadAngle;                                    // 0x04B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProjectileSpeed;                                          // 0x04BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ShellAngularVelocity;                                     // 0x04C0(0x000C) (Edit, IsPlainOldData)
	float                                              ShellLinearVelocity;                                      // 0x04CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TargetDistanceAheadOnSpline;                              // 0x04D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04D4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CarnivoraCannon");
		return ptr;
	}


	class AActor* GetCannon();
	void FireCannon();
};


// Class OakGame.CarnivoraDamageZoneComponent
// 0x00C0 (0x07E0 - 0x0720)
class UCarnivoraDamageZoneComponent : public UBoxComponent
{
public:
	class USceneComponent*                             OrgAttachParent;                                          // 0x0720(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x38];                                      // 0x0728(0x0038) MISSED OFFSET
	struct FAttributeInitializationData                DamageFormula;                                            // 0x0760(0x0038) (Edit)
	float                                              VehicleImpulseFactor;                                     // 0x0798(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CharacterImpulseFactor;                                   // 0x079C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageCooldownTime;                                       // 0x07A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FCarnivoraDamageZoneInfo                    PlayerDamageInfo;                                         // 0x07A4(0x000C) (Edit)
	struct FCarnivoraDamageZoneInfo                    OtherDamageInfo;                                          // 0x07B0(0x000C) (Edit)
	unsigned char                                      UnknownData01[0x24];                                      // 0x07BC(0x0024) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CarnivoraDamageZoneComponent");
		return ptr;
	}


	void OnActorComponentHit(class UPrimitiveComponent* HitComp, class AActor* Other, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& SweepResult);
};


// Class OakGame.CarnivoraTrackBuilder
// 0x0070 (0x04C8 - 0x0458)
class ACarnivoraTrackBuilder : public AActor
{
public:
	class USplineComponent*                            BuilderSpline;                                            // 0x0458(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USplineComponent*                            BodySpline;                                               // 0x0460(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              TreadHeightOffset;                                        // 0x0468(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x046C(0x0004) MISSED OFFSET
	class USplineComponent*                            LeftTreadSpline;                                          // 0x0470(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USplineComponent*                            RightTreadSpline;                                         // 0x0478(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              TreadSideOffset;                                          // 0x0480(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TreadTraceRadius;                                         // 0x0484(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BodyTraceRadius;                                          // 0x0488(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TraceHeightOffset;                                        // 0x048C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TraceSpacing;                                             // 0x0490(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0494(0x0004) MISSED OFFSET
	TSoftObjectPtr<class AActor>                       LandscapeToSnapTo;                                        // 0x0498(0x0028) (Edit, DisableEditOnTemplate)
	unsigned char                                      UnknownData02[0x8];                                       // 0x04C0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CarnivoraTrackBuilder");
		return ptr;
	}

};


// Class OakGame.CarnivoraTread
// 0x0120 (0x0578 - 0x0458)
class ACarnivoraTread : public AActor
{
public:
	float                                              MinAngle;                                                 // 0x0458(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxAngle;                                                 // 0x045C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class USplineComponent*                            TreadSpline;                                              // 0x0460(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                NumberOfPlate;                                            // 0x0468(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FWheelState                                 TreadState;                                               // 0x046C(0x000C) (Edit)
	class UStaticMesh*                                 PlateMesh;                                                // 0x0478(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      TreadSKComponent;                                         // 0x0480(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              WheelRotationForward;                                     // 0x0488(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WheelRotationBackward;                                    // 0x048C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UInstancedStaticMeshComponent*               InstancedPlates;                                          // 0x0490(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              DotRatioCollision;                                        // 0x0498(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                WheelSplineIndexKey[0x4];                                 // 0x049C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SuspensionWheelRadius;                                    // 0x04AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x04B0(0x0008) MISSED OFFSET
	TArray<float>                                      SuspensionAngles;                                         // 0x04B8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData01[0xB0];                                      // 0x04C8(0x00B0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CarnivoraTread");
		return ptr;
	}


	void OnComponentHitCallback(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
};


// Class OakGame.GbxCondition_CanSecondaryUseDeployVehicle
// 0x0000 (0x0088 - 0x0088)
class UGbxCondition_CanSecondaryUseDeployVehicle : public UGbxCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_CanSecondaryUseDeployVehicle");
		return ptr;
	}

};


// Class OakGame.CatchARide
// 0x00D8 (0x0738 - 0x0660)
class ACatchARide : public AAdvancedInteractiveObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0660(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnVehicleSpawned;                                         // 0x0668(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FColor>                              AllColors;                                                // 0x0678(0x0010) (Edit, ZeroConstructor)
	ECARRestrictionType                                RestrictionType;                                          // 0x0688(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0689(0x0007) MISSED OFFSET
	class ACatchARidePlatform*                         CatchARide_Platform1;                                     // 0x0690(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class ACatchARidePlatform*                         CatchARide_Platform2;                                     // 0x0698(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	bool                                               bIsDeploymentAllowed;                                     // 0x06A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsTeleportToDeployedAllowed;                             // 0x06A1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x06A2(0x0002) MISSED OFFSET
	struct FVector                                     DeploymentLocationOffset;                                 // 0x06A4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FText                                       StationName;                                              // 0x06B0(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       CannotSpawnText;                                          // 0x06C8(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       CatchARideLockedText;                                     // 0x06E0(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       CatchARideDisabledText;                                   // 0x06F8(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UGFxCARMenu*                                 AssociatedMenu;                                           // 0x0710(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AOakCharacter_Player*>                OverlappingPlayers;                                       // 0x0718(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0728(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CatchARide");
		return ptr;
	}


	void SetDeployedNonInteractiveState(bool bForceDeployed);
	void OnVehicleDeployedFromMenu();
	void OnNewPartEquipped(ECARPartType PartType, class UOakCARVehiclePartData* PartData);
	void OnNewBodyEquipped(class UOakCARVehicleData* VehicleData);
	void HandleSecondaryUse(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	bool CanRespawnVehicle(class AOakPlayerController* pc, const struct FOakCARMenuVehicleConfig& VehicleConfig);
};


// Class OakGame.CatchARidePlatform
// 0x0060 (0x04B8 - 0x0458)
class ACatchARidePlatform : public AActor
{
public:
	class UStaticMeshComponent*                        PlatformMesh;                                             // 0x0458(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               PlatformSafeZone;                                         // 0x0460(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               PlatformSmallVehicleSafeZone1;                            // 0x0468(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class USocketComponent*                            SmallVehicleSpawnSocket1;                                 // 0x0470(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               PlatformSmallVehicleSafeZone2;                            // 0x0478(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class USocketComponent*                            SmallVehicleSpawnSocket2;                                 // 0x0480(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	float                                              ScanDuration;                                             // 0x0488(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EjectStartDuration;                                       // 0x048C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsSupportScanning;                                        // 0x0490(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0491(0x0003) MISSED OFFSET
	float                                              MinSpeedForScan;                                          // 0x0494(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FTimerHandle                                WaitTimer;                                                // 0x0498(0x0008) (BlueprintVisible, BlueprintReadOnly, Transient)
	struct FTimerHandle                                EjectTimer;                                               // 0x04A0(0x0008) (BlueprintVisible, BlueprintReadOnly, Transient)
	struct FTimerHandle                                UpdateTimer;                                              // 0x04A8(0x0008) (BlueprintVisible, BlueprintReadOnly, Transient)
	class AOakVehicle*                                 VehicleInScan;                                            // 0x04B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CatchARidePlatform");
		return ptr;
	}


	void StopScanFeedback();
	void OnSafeZoneEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnSafeZoneBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	bool GetPlatformBlocked(class AActor* ActorToIgnore, bool bForSmallVehicle);
	class AOakVehicle* GetOwnedVehicleOnPlatform(class AActor* TestOwner, bool bOnlySpawnedByCAR);
	void DigistructOut();
	void DigistructIn(bool bIsScanning);
};


// Class OakGame.CatchARideProxy
// 0x0008 (0x04F0 - 0x04E8)
class ACatchARideProxy : public AAdvancedInteractiveObjectProxy
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CatchARideProxy");
		return ptr;
	}


	void OnTurnedOn();
	void OnTurnedOff();
	void OnStartForceDeployed();
	void OnOwningPlayerInRangeCanUse();
	void OnOwningPlayerInRangeCannotUse();
	void OnInteractionPossible();
	void OnInteractionNotPossible();
	void OnEndForceDeployed();
	bool CanBeUsedByAPlayerInRange();
};


// Class OakGame.TrophyCaseBaseComponent
// 0x0010 (0x07C0 - 0x07B0)
class UTrophyCaseBaseComponent : public UStaticMeshComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x07B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TrophyCaseBaseComponent");
		return ptr;
	}

};


// Class OakGame.ChallengeTrophyBaseComponent
// 0x0020 (0x07E0 - 0x07C0)
class UChallengeTrophyBaseComponent : public UTrophyCaseBaseComponent
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x07C0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ChallengeTrophyBaseComponent");
		return ptr;
	}

};


// Class OakGame.CharacterEchoData
// 0x0068 (0x00A8 - 0x0040)
class UCharacterEchoData : public UCharacterEchoDataBase
{
public:
	class UGbxUIName*                                  SpeakerUIName;                                            // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USwfMovie*                                   SpeakerMovie;                                             // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<class FString, class UMediaSource*>           SpeakerMediaEntries;                                      // 0x0050(0x0050) (Edit, ZeroConstructor)
	ECharacterEchoDataMediaPlaybackType                SpeakerMediaPlaybackType;                                 // 0x00A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00A0(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData01[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CharacterEchoData");
		return ptr;
	}

};


// Class OakGame.CharacterForcedSlidingVolume
// 0x0000 (0x0490 - 0x0490)
class ACharacterForcedSlidingVolume : public AVolume
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CharacterForcedSlidingVolume");
		return ptr;
	}

};


// Class OakGame.CharacterGroundSlamData
// 0x0018 (0x0048 - 0x0030)
class UCharacterGroundSlamData : public UGbxDataAsset
{
public:
	TArray<struct FCharacterGroundSlamGradeData>       GroundSlamGrades;                                         // 0x0030(0x0010) (Edit, ZeroConstructor)
	class ULandingData*                                DefaultLandingData;                                       // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CharacterGroundSlamData");
		return ptr;
	}

};


// Class OakGame.CharacterItemPoolExpansionData
// 0x0050 (0x0080 - 0x0030)
class UCharacterItemPoolExpansionData : public UGbxDataAsset
{
public:
	TMap<struct FName, struct FCharacterItemPoolExpansionInfo> CharacterExpansions;                                      // 0x0030(0x0050) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CharacterItemPoolExpansionData");
		return ptr;
	}

};


// Class OakGame.CharacterSlidingData
// 0x1060 (0x1090 - 0x0030)
class UCharacterSlidingData : public UGbxDataAsset
{
public:
	float                                              MinSprintSpeedPctToStartSliding;                          // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	class UClass*                                      ControlledMove;                                           // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       FootBone;                                                 // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UImpactData*                                 FootImpact;                                               // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UImpactData*                                 FootImpact1st;                                            // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0058(0x0008) MISSED OFFSET
	struct FElementalSlideEffect                       ElementalSlideEffects[0x6];                               // 0x0060(0x0150) (Edit)
	struct FElementalSlideEffect                       ElementalSlideEffects1P[0x6];                             // 0x0840(0x0150) (Edit)
	class UWwiseEvent*                                 WwiseEventStart;                                          // 0x1020(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 WwiseEventStop;                                           // 0x1028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       BaseBone;                                                 // 0x1030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       SpeedParticleParameterName;                               // 0x1038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UImpactData*                                 BaseImpact;                                               // 0x1040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LegsRotationSpeed;                                        // 0x1048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinDesiredAngleRotationBetweenCameraAndLegsYaw;           // 0x104C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxAllowedAimOffset;                                      // 0x1050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FootCollisionDistance;                                    // 0x1054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FootTraceLateralOffset;                                   // 0x1058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FootCollisionStopAngle;                                   // 0x105C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FootCollisionStopAngleDot;                                // 0x1060(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              FootCollisionStopSpeed;                                   // 0x1064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LegsCollisionInterpolationSpeed;                          // 0x1068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinSprintSpeedPctToTriggerSlideJump;                      // 0x106C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FCharacterJumpGoalSetting                   JumpGoal;                                                 // 0x1070(0x000C) (Edit)
	float                                              JumpHorizontalSpeedScale;                                 // 0x107C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinForceSlideFloorAngle;                                  // 0x1080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ForceSlideFloorZ;                                         // 0x1084(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              MinDownhillSpeedToStartForcedSlide;                       // 0x1088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDirectionDeviationFromDownhillAngle;                   // 0x108C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CharacterSlidingData");
		return ptr;
	}

};


// Class OakGame.TravelStationObject
// 0x0080 (0x05D0 - 0x0550)
class ATravelStationObject : public AInteractiveObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0550(0x0008) MISSED OFFSET
	class UClass*                                      DefaultFriendsInArea;                                     // 0x0558(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxGFxMenuData*                             FriendsInAreaListMenuData;                                // 0x0560(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bResurrectionProximityDetection;                          // 0x0568(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0569(0x0003) MISSED OFFSET
	int                                                DebugFriendsCount;                                        // 0x056C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UUsableComponent*                            UsableComponent;                                          // 0x0570(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      MeshComponent;                                            // 0x0578(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGbxAreaComponent*                           AreaComponent;                                            // 0x0580(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UFastTravelStationComponent*                 FastTravelStationComponent;                               // 0x0588(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class ULevelTravelStationComponent*                LevelTravelStationComponent;                              // 0x0590(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGFxBillboardComponent*                      FriendsInNextAreaBillboard;                               // 0x0598(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGFxFriendsInArea*                           CachedFriendsInNextArea;                                  // 0x05A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOutOfMapWaypointComponent*                  OutOfMapWaypoint;                                         // 0x05A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x05B0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TravelStationObject");
		return ptr;
	}


	void SetStationResurrectActive(bool bResurrectionActive);
	void PlayerExitedArea(class AGbxPlayerController* GbxPC);
	void PlayerEnteredArea(class AGbxPlayerController* GbxPC);
	void OnUsedSecondaryBy(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	void OnUsedBy(const struct FUseEvent& UseEvent);
	void OnTravelStationActivated(class AActor* OtherStation);
	void OnFastTravelStationDiscovered(bool bNoActivationSequence);
	bool IsDestinationInstalled();
	bool HasNearbyFriends(class AGbxPlayerController* GbxPC);
	bool GetStationResurrectActive();
	class FString GetNameOfNextLevel();
	void CheckTravelDependencies();
};


// Class OakGame.CheckpointTravelStationObject
// 0x0000 (0x05D0 - 0x05D0)
class ACheckpointTravelStationObject : public ATravelStationObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CheckpointTravelStationObject");
		return ptr;
	}

};


// Class OakGame.CollisionDamageComponent
// 0x0150 (0x02C8 - 0x0178)
class UCollisionDamageComponent : public UActorComponent
{
public:
	struct FLastCollisionDamageInfo                    LastCollisionDamageInfo;                                  // 0x0178(0x0018) (BlueprintVisible, BlueprintReadOnly)
	float                                              MinVelocityToCauseDamage;                                 // 0x0190(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0194(0x0004) MISSED OFFSET
	struct FAttributeInitializationData                CollisionDamageFormula;                                   // 0x0198(0x0038) (Edit)
	float                                              HitForceVelocityFactor;                                   // 0x01D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGbxAttributeFloat                          DamageMultiplier;                                         // 0x01D4(0x000C) (Edit)
	struct FGbxAttributeFloat                          AIDamageMultiplier;                                       // 0x01E0(0x000C) (Edit)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01EC(0x0004) MISSED OFFSET
	class UGbxCondition*                               ConditionalDamageCondition;                               // 0x01F0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FGbxAttributeFloat                          ConditionalDamageMultiplier;                              // 0x01F8(0x000C) (Edit)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0204(0x0004) MISSED OFFSET
	struct FAttributeInitializationData                SelfCollisionDamageFormula;                               // 0x0208(0x0038) (Edit)
	struct FGbxAttributeFloat                          SelfDamageMultiplier;                                     // 0x0240(0x000C) (Edit)
	struct FGbxAttributeFloat                          SelfAIDamageMultiplier;                                   // 0x024C(0x000C) (Edit)
	float                                              DamageCurveRefSpeed;                                      // 0x0258(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HitCooldown;                                              // 0x025C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FrontalCollisionAngle;                                    // 0x0260(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0264(0x0004) MISSED OFFSET
	class UClass*                                      DamageType;                                               // 0x0268(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageSource;                                             // 0x0270(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FForceSelection                             ImpactForceSelection;                                     // 0x0278(0x0020) (Edit)
	struct FScriptMulticastDelegate                    OnActorHit;                                               // 0x0298(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AOakVehicle*                                 MyOakVehicle;                                             // 0x02A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x18];                                      // 0x02B0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CollisionDamageComponent");
		return ptr;
	}


	void OnMeshComponentBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
};


// Class OakGame.CommandRing
// 0x0058 (0x04B0 - 0x0458)
class ACommandRing : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnAcquiredTarget;                                         // 0x0458(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReleasedTarget;                                         // 0x0468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00 : 1;                                        // 0x0478(0x0001)
	unsigned char                                      bOnlyVisibleToOwner : 1;                                  // 0x0478(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0479(0x0003) MISSED OFFSET
	ECommandRingReferenceActorType                     RelativeActorType;                                        // 0x047C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ECommandRingLocationType                           RelativeLocationType;                                     // 0x047D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x047E(0x0002) MISSED OFFSET
	float                                              RelativeLocationSearchDistance;                           // 0x0480(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ECommandRingAlignmentType                          RelativeAlignmentType;                                    // 0x0484(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0485(0x0003) MISSED OFFSET
	struct FCommandRingTarget                          TargetInfo;                                               // 0x0488(0x0028) (Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CommandRing");
		return ptr;
	}


	void UpdateTarget(class AActor* Target, const struct FVector& Location, const struct FRotator& Rotation, class USceneComponent* Base, const struct FVector& SurfaceNormal);
	void SetVisibility(bool bIsVisible);
	void ReleaseTarget();
	bool IsTargetValid();
	struct FCommandRingTarget GetTarget();
	struct FVector STATIC_GetCommandRingTargetWorldLocation(const struct FCommandRingTarget& TargetInfo);
	struct FRotator ComputeRotation(ECommandRingAlignmentType Type, class AActor* RefActor, const struct FRotator& RefRotation, const struct FVector& SurfaceNormal);
	struct FVector ComputeLocation(ECommandRingLocationType Type, class AActor* RefActor, const struct FVector& RefLocation, float SearchDistance, struct FVector* SurfaceNormal);
	void CommandRingReleasedTargetEvent__DelegateSignature(const struct FCommandRingTarget& TargetInfo);
	void CommandRingAcquiredTargetEvent__DelegateSignature(const struct FCommandRingTarget& TargetInfo);
};


// Class OakGame.CommandRing_Operative_GRMLN
// 0x0088 (0x0538 - 0x04B0)
class ACommandRing_Operative_GRMLN : public ACommandRing
{
public:
	class UParticleSystemComponent*                    BeamComponent;                                            // 0x04B0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       BeamEmitterName;                                          // 0x04B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DroneSocket;                                              // 0x04C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 BeamStartEvent;                                           // 0x04C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 BeamStopEvent;                                            // 0x04D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FAttributeInitializationData                RingRange;                                                // 0x04D8(0x0038) (Edit, DisableEditOnInstance)
	class UOakActionAbility_GRMLN*                     OwnerActionAbility;                                       // 0x0510(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0518(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CommandRing_Operative_GRMLN");
		return ptr;
	}


	void StopLookingForTarget();
	void StartLookingForTarget();
};


// Class OakGame.Condition_ShouldPlaySpecialEchoCartridgeInsert
// 0x0008 (0x0090 - 0x0088)
class UCondition_ShouldPlaySpecialEchoCartridgeInsert : public UGbxCondition
{
public:
	float                                              PercentageChanceAfterFirstTime;                           // 0x0088(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x008C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.Condition_ShouldPlaySpecialEchoCartridgeInsert");
		return ptr;
	}

};


// Class OakGame.ConditionalFlavorTextIO
// 0x0030 (0x0690 - 0x0660)
class AConditionalFlavorTextIO : public AAdvancedInteractiveObject
{
public:
	TArray<struct FTextElementCondition>               FlavorTextElements;                                       // 0x0660(0x0010) (Edit, ZeroConstructor)
	struct FText                                       TitleText;                                                // 0x0670(0x0028) (Edit)
	class UGbxMenuData*                                MenuData;                                                 // 0x0688(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ConditionalFlavorTextIO");
		return ptr;
	}

};


// Class OakGame.ConsoleCommandSetterIntComponent
// 0x0020 (0x02F0 - 0x02D0)
class UConsoleCommandSetterIntComponent : public USceneComponent
{
public:
	int                                                Value;                                                    // 0x02D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02D4(0x0004) MISSED OFFSET
	class FString                                      Command;                                                  // 0x02D8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	bool                                               bXboxOne;                                                 // 0x02E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bPS4;                                                     // 0x02E9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bWindows;                                                 // 0x02EA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x02EB(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ConsoleCommandSetterIntComponent");
		return ptr;
	}

};


// Class OakGame.CorpseableInterface
// 0x0000 (0x0028 - 0x0028)
class UCorpseableInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CorpseableInterface");
		return ptr;
	}

};


// Class OakGame.CorpseManager
// 0x0010 (0x0038 - 0x0028)
class UCorpseManager : public UObject
{
public:
	TArray<struct FCorpseRecord>                       TrackedCorpses;                                           // 0x0028(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CorpseManager");
		return ptr;
	}

};


// Class OakGame.CosmeticDamageableActor
// 0x0008 (0x0460 - 0x0458)
class ACosmeticDamageableActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0458(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CosmeticDamageableActor");
		return ptr;
	}


	void OnTakeDamage(const struct FCosmeticDamageEventDetails& Details);
};


// Class OakGame.CosmeticFrozenActor
// 0x0008 (0x0460 - 0x0458)
class ACosmeticFrozenActor : public AActor
{
public:
	class UDestructibleComponent*                      DestructibleComponent;                                    // 0x0458(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CosmeticFrozenActor");
		return ptr;
	}

};


// Class OakGame.CrazyEarlAnointmentReroll
// 0x0028 (0x0688 - 0x0660)
class ACrazyEarlAnointmentReroll : public AAdvancedInteractiveObject
{
public:
	class AOakPlayerController*                        ItemPreviewPlayer;                                        // 0x0660(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      SourceItemActor;                                          // 0x0668(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      ItemPreviewActor;                                         // 0x0670(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FPlayerItemDisplayInfo>              PlayerDisplayInfo;                                        // 0x0678(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrazyEarlAnointmentReroll");
		return ptr;
	}


	void OnReRolledInventorySourceSet(class AOakPlayerController* ReRolledOwner, class AActor* ReRolledInventoryActor);
	void OnReRolledInventoryActorReady(class AOakPlayerController* ReRolledOwner, class AActor* ReRolledInventoryActor);
	void OnRerolled(class AActor* RerollItem);
	void OnRep_ItemPreviewActor();
	void OnExitMenu();
};


// Class OakGame.CrazyEarlAnointmentRerollProxy
// 0x0018 (0x0500 - 0x04E8)
class ACrazyEarlAnointmentRerollProxy : public AAdvancedInteractiveObjectProxy
{
public:
	struct FName                                       ItemPreviewMeshTag;                                       // 0x04E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ItemPreviewSocket;                                        // 0x04F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMeshComponent*                              DisplayMesh;                                              // 0x04F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrazyEarlAnointmentRerollProxy");
		return ptr;
	}

};


// Class OakGame.CrazyEarlDoor
// 0x0010 (0x0670 - 0x0660)
class ACrazyEarlDoor : public AAdvancedInteractiveObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0660(0x0008) MISSED OFFSET
	class UCustomizationList*                          CustomizationList;                                        // 0x0668(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrazyEarlDoor");
		return ptr;
	}


	void OnPurchase(class UOakCustomizationData* PurchasedItem);
	void OnExitMenu();
};


// Class OakGame.CrazyEarlDoorProxy
// 0x0000 (0x04E8 - 0x04E8)
class ACrazyEarlDoorProxy : public AAdvancedInteractiveObjectProxy
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrazyEarlDoorProxy");
		return ptr;
	}

};


// Class OakGame.CrewQuartersAssetDecorationData
// 0x0000 (0x0030 - 0x0030)
class UCrewQuartersAssetDecorationData : public UGbxDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrewQuartersAssetDecorationData");
		return ptr;
	}

};


// Class OakGame.CrewQuartersActorDecorationData
// 0x0008 (0x0038 - 0x0030)
class UCrewQuartersActorDecorationData : public UCrewQuartersAssetDecorationData
{
public:
	class UClass*                                      DecorationActorClass;                                     // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrewQuartersActorDecorationData");
		return ptr;
	}

};


// Class OakGame.CrewQuartersActorInterface
// 0x0000 (0x0028 - 0x0028)
class UCrewQuartersActorInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrewQuartersActorInterface");
		return ptr;
	}

};


// Class OakGame.CrewQuartersCountdownActor
// 0x0030 (0x0488 - 0x0458)
class ACrewQuartersCountdownActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0458(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCountdownTimeUpdated;                                   // 0x0460(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCrewQuartersChanging;                                   // 0x0470(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class ACrewQuartersRoom*                           OwningRoom;                                               // 0x0480(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrewQuartersCountdownActor");
		return ptr;
	}


	void OnRoomChanging(class ADynamicRoomBase* ChangingRoom);
	void OnRoomChangeCountdown(float CountdownTime);
};


// Class OakGame.CrewQuartersInteractiveObject
// 0x0058 (0x06B8 - 0x0660)
class ACrewQuartersInteractiveObject : public AAdvancedInteractiveObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0660(0x0008) MISSED OFFSET
	class UGbxMenuData*                                CrewQuartersIOMenuData;                                   // 0x0668(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TSoftObjectPtr<class UClass>                       CrewQuartersPreLoadMenuClass;                             // 0x0670(0x0028) (Transient)
	class ACrewQuartersRoom*                           OwningRoom;                                               // 0x0698(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnNonOwnerAttemptUse;                                     // 0x06A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bRestrictUseToOwningPlayer;                               // 0x06B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x06B1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrewQuartersInteractiveObject");
		return ptr;
	}


	void OnRep_OwningRoom();
	bool IsInteractiveObjectOwnedBy(class AOakPlayerController* User);
	void ClientOpenMenu(class AOakPlayerController* OakPC);
};


// Class OakGame.CrewQuartersDecoration
// 0x0068 (0x0720 - 0x06B8)
class ACrewQuartersDecoration : public ACrewQuartersInteractiveObject
{
public:
	class UCrewQuartersDecorationData*                 DefaultDecoration;                                        // 0x06B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                DecorationIndex;                                          // 0x06C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x06C4(0x0004) MISSED OFFSET
	class UCrewQuartersDecorationData*                 CurrentDecoration;                                        // 0x06C8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               CurrentAnim;                                              // 0x06D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMeshComponent*                              DecorationMesh;                                           // 0x06D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class ACrewQuartersDecorationDisplayActor*         DecorationActor;                                          // 0x06E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCrewQuartersDecorationData*                 InitialDecoration;                                        // 0x06E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCrewQuartersAssetDecorationData*            CurrentDecorationAsset;                                   // 0x06F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x06F8(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrewQuartersDecoration");
		return ptr;
	}


	void StartDefaultAnim();
	void SetInitialDecoration(class UCrewQuartersDecorationData* NewDecoration);
	void SetDecoration(class UCrewQuartersDecorationData* NewDecoration);
	void SelectNextDecoration();
	void OnUsedSecondaryBy(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	void OnUsedBy(const struct FUseEvent& UseEvent);
	void OnRep_CurrentDecoration();
	void OnDecorationAssetLoaded();
	void GetAvailableDecorations(class ACrewQuartersRoom* InRoomOverride, TArray<class UCrewQuartersDecorationData*>* OutDecorations);
	void ApplyDecoration(class UCrewQuartersDecorationData* NewDecoration);
};


// Class OakGame.CrewQuartersDecorationData
// 0x00A0 (0x00D0 - 0x0030)
class UCrewQuartersDecorationData : public UDataAsset
{
public:
	struct FText                                       DisplayName;                                              // 0x0030(0x0028) (Edit)
	struct FText                                       Description;                                              // 0x0048(0x0028) (Edit)
	bool                                               bUnlockedByDefault;                                       // 0x0060(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UTexture>                     PreviewPicture;                                           // 0x0068(0x0028) (Edit)
	struct FSoftObjectPath                             DecorationAssetReference;                                 // 0x0090(0x0018) (Edit)
	TSoftObjectPtr<class UInventoryRarityData>         RarityData;                                               // 0x00A8(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrewQuartersDecorationData");
		return ptr;
	}

};


// Class OakGame.CrewQuartersDecorationDisplayActor
// 0x0068 (0x05B8 - 0x0550)
class ACrewQuartersDecorationDisplayActor : public AInteractiveObject
{
public:
	struct FScriptMulticastDelegate                    OnDecorationPrimaryUse;                                   // 0x0550(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDecorationSecondaryUse;                                 // 0x0560(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bSecondaryUseEnabled;                                     // 0x0570(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0571(0x0007) MISSED OFFSET
	struct FUseDefSelection                            SecondaryUseDef;                                          // 0x0578(0x0020) (Edit)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0598(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrewQuartersDecorationDisplayActor");
		return ptr;
	}

};


// Class OakGame.CrewQuartersDecorationItemData
// 0x0098 (0x01C8 - 0x0130)
class UCrewQuartersDecorationItemData : public UGbxCustomizationData
{
public:
	class FString                                      DecorationAssetPath;                                      // 0x0130(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, EditConst)
	struct FText                                       DisplayName;                                              // 0x0140(0x0028) (Deprecated)
	bool                                               bIsDLC;                                                   // 0x0158(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0159(0x0007) MISSED OFFSET
	class UCustomizationInventoryAssetSetup*           InventorySetup;                                           // 0x0160(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UInventoryAspectData*>                InventoryAspectList;                                      // 0x0168(0x0010) (Edit, ExportObject, ZeroConstructor)
	TSoftObjectPtr<class UInventoryRarityData>         RarityData;                                               // 0x0178(0x0028) (Edit)
	class UCustomizationInventoryBalanceData*          BalanceData;                                              // 0x01A0(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, DuplicateTransient, IsPlainOldData)
	class UCustomizationInventoryData*                 InventoryData;                                            // 0x01A8(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, DuplicateTransient, IsPlainOldData)
	struct FRotator                                    DefaultPreviewRotation;                                   // 0x01B0(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01BC(0x0004) MISSED OFFSET
	class UDownloadableContentData*                    DlcContentData;                                           // 0x01C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrewQuartersDecorationItemData");
		return ptr;
	}

};


// Class OakGame.CrewQuartersGlobalData
// 0x0048 (0x0078 - 0x0030)
class UCrewQuartersGlobalData : public UDataAsset
{
public:
	TArray<class UDynamicRoomBaseData*>                AvailableRooms;                                           // 0x0030(0x0010) (Edit, ZeroConstructor)
	TArray<struct FCrewQuartersRoomAssignment>         RoomAssignments;                                          // 0x0040(0x0010) (Edit, ZeroConstructor)
	TArray<class UCrewQuartersDecorationData*>         AvailableDecorations;                                     // 0x0050(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0060(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrewQuartersGlobalData");
		return ptr;
	}

};


// Class OakGame.CrewQuartersGunRack
// 0x0130 (0x0588 - 0x0458)
class ACrewQuartersGunRack : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0458(0x0008) MISSED OFFSET
	class ACrewQuartersRoom*                           OwningRoom;                                               // 0x0460(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UGunRackSlotData*>                    GunRackSlots;                                             // 0x0468(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      ItemPickupContainer;                                      // 0x0478(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnInventoryEquippedEvent;                                 // 0x0480(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnInventoryUnequippedEvent;                               // 0x0490(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FInventorySlotContainer                     EquippedInventory;                                        // 0x04A0(0x00E8) (Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrewQuartersGunRack");
		return ptr;
	}


	void SaveSlot(class UGunRackSlotData* SlotData);
	void OnInventoryUnequippedFromSlot(class AActor* InUnequippedInventory, class UInventorySlotData* SlotData);
	void OnInventoryEquippedOnSlot(class AActor* InEquippedInventory, class UInventorySlotData* SlotData);
	void CreateEmptyPickup(class UGunRackSlotData* SlotData);
};


// Class OakGame.CrewQuartersRoom
// 0x0088 (0x0578 - 0x04F0)
class ACrewQuartersRoom : public ADynamicRoomBase
{
public:
	class UCrewQuartersGlobalData*                     CrewQuartersGlobals;                                      // 0x04F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                RoomAssignmentIndex;                                      // 0x04F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RoomChangeCountdownTime;                                  // 0x04FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RoomChangeCountdownIncrement;                             // 0x0500(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0504(0x0004) MISSED OFFSET
	class AOakCharacter_Player*                        OwningPlayer;                                             // 0x0508(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AActor*>                              RoomAwareActors;                                          // 0x0510(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	struct FScriptMulticastDelegate                    OnRoomOwnerAssigned;                                      // 0x0520(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRoomChanging;                                           // 0x0530(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRoomChangeCountdown;                                    // 0x0540(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0550(0x0008) MISSED OFFSET
	int                                                RoomChangeCountdown;                                      // 0x0558(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x055C(0x0004) MISSED OFFSET
	class AOakCharacter_Player*                        QueuedPlayer;                                             // 0x0560(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UDynamicRoomBaseData*                        QueuedRoom;                                               // 0x0568(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxAreaComponent*                           AreaComponent;                                            // 0x0570(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrewQuartersRoom");
		return ptr;
	}


	void OnRoomChangeCountdownTimer();
	void OnRep_RoomChangeCountdown();
	void OnRep_OwningPlayer();
	void OnDeferredRoomSpawn();
	void InstanceRoomForPlayer(class AOakCharacter_Player* NewOwningPlayer, class UDynamicRoomBaseData* RoomToLoad);
	void ApplyRoomMood(class AOakCharacter_Player* NewOwningPlayer, class UDynamicRoomBaseData* RoomToLoad);
};


// Class OakGame.CrewQuartersRoomData
// 0x0000 (0x00A0 - 0x00A0)
class UCrewQuartersRoomData : public UDynamicRoomLevelData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrewQuartersRoomData");
		return ptr;
	}

};


// Class OakGame.CrewQuartersRoomItemData
// 0x0018 (0x0048 - 0x0030)
class UCrewQuartersRoomItemData : public UDataAsset
{
public:
	class FString                                      RoomAssetPath;                                            // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, EditConst)
	bool                                               bIsDLC;                                                   // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrewQuartersRoomItemData");
		return ptr;
	}

};


// Class OakGame.CrewQuartersSkeletalDecorationData
// 0x0020 (0x0050 - 0x0030)
class UCrewQuartersSkeletalDecorationData : public UCrewQuartersAssetDecorationData
{
public:
	class USkeletalMeshComponent*                      DecorationSkeletalMeshComponent;                          // 0x0030(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAnimSequence*                               DefaultAnimation;                                         // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               UseAnimation;                                             // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               SecondaryUseAnimation;                                    // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrewQuartersSkeletalDecorationData");
		return ptr;
	}

};


// Class OakGame.CrewQuartersStaticDecorationData
// 0x0008 (0x0038 - 0x0030)
class UCrewQuartersStaticDecorationData : public UCrewQuartersAssetDecorationData
{
public:
	class UStaticMeshComponent*                        DecorationStaticMeshComponent;                            // 0x0030(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrewQuartersStaticDecorationData");
		return ptr;
	}

};


// Class OakGame.CrosshairDataAsset
// 0x0020 (0x0050 - 0x0030)
class UCrosshairDataAsset : public UGbxDataAsset
{
public:
	class FString                                      CrosshairID;                                              // 0x0030(0x0010) (Edit, ZeroConstructor)
	class FString                                      CrosshairFrameName;                                       // 0x0040(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrosshairDataAsset");
		return ptr;
	}

};


// Class OakGame.BoosterData
// 0x0018 (0x0048 - 0x0030)
class UBoosterData : public UGbxDataAsset
{
public:
	TArray<struct FCSBoosterInfo>                      BoosterInfos;                                             // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	bool                                               AllowMultipleBoostersAtTheSameTime;                       // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.BoosterData");
		return ptr;
	}

};


// Class OakGame.CustomizationInventoryAssetSetup
// 0x0018 (0x0048 - 0x0030)
class UCustomizationInventoryAssetSetup : public UGbxDataAsset
{
public:
	class UManufacturerData*                           ManufacturerData;                                         // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryCategoryData*                      InventoryCategory;                                        // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      InventoryActorClass;                                      // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CustomizationInventoryAssetSetup");
		return ptr;
	}

};


// Class OakGame.CustomizationInventoryBalanceData
// 0x0000 (0x0128 - 0x0128)
class UCustomizationInventoryBalanceData : public UInventoryBalanceData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CustomizationInventoryBalanceData");
		return ptr;
	}

};


// Class OakGame.CustomizationInventoryData
// 0x0000 (0x0300 - 0x0300)
class UCustomizationInventoryData : public UInventoryData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CustomizationInventoryData");
		return ptr;
	}

};


// Class OakGame.CustomizationList
// 0x0010 (0x0040 - 0x0030)
class UCustomizationList : public UGbxDataAsset
{
public:
	TArray<class UGbxCustomizationData*>               CustomizationList;                                        // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CustomizationList");
		return ptr;
	}

};


// Class OakGame.CustomizationProviderInterface
// 0x0000 (0x0028 - 0x0028)
class UCustomizationProviderInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CustomizationProviderInterface");
		return ptr;
	}

};


// Class OakGame.DamageableHISM
// 0x0050 (0x05A0 - 0x0550)
class ADamageableHISM : public AInteractiveObject
{
public:
	struct FBox                                        DamageHitBox;                                             // 0x0550(0x001C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x056C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnInstancesDestroyed;                                     // 0x0570(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0580(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DamageableHISM");
		return ptr;
	}


	void TakeDamageOnInstances(const struct FVector& HitLocation, float Radius, const struct FVector& Origin);
};


// Class OakGame.DamageBlockData
// 0x0090 (0x00C0 - 0x0030)
class UDamageBlockData : public UGbxDataAsset
{
public:
	struct FAttributeInitializationData                BlockedDamageScale;                                       // 0x0030(0x0038) (Edit)
	struct FAttributeInitializationData                BlockAngle;                                               // 0x0068(0x0038) (Edit)
	TArray<class UClass*>                              BlockDamageSources;                                       // 0x00A0(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              BlockDamageTypes;                                         // 0x00B0(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DamageBlockData");
		return ptr;
	}

};


// Class OakGame.DamageIndicator
// 0x0010 (0x0218 - 0x0208)
class UDamageIndicator : public UUserWidget
{
public:
	float                                              ShowDuration;                                             // 0x0208(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FadeOutDuration;                                          // 0x020C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class AActor*                                      DamageCauser;                                             // 0x0210(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DamageIndicator");
		return ptr;
	}


	void SetDamageCauser(class AActor* NewDamageActor);
	void SetAlpha(float NewAlpha);
};


// Class OakGame.DamageLinkNode
// 0x0168 (0x06B8 - 0x0550)
class ADamageLinkNode : public AInteractiveObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0550(0x0018) MISSED OFFSET
	bool                                               bLinkingEnabled;                                          // 0x0568(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0569(0x0007) MISSED OFFSET
	struct FName                                       LinkBeamSocket;                                           // 0x0570(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      NodeLinkBeam;                                             // 0x0578(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAttributeInitializationData                NodeLinkDistance;                                         // 0x0580(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FAttributeInitializationData                NodeLinkDamage;                                           // 0x05B8(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bUseNodeLinkDamage;                                       // 0x05F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x05F1(0x0007) MISSED OFFSET
	class UClass*                                      EnemyLinkBeam;                                            // 0x05F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAttributeInitializationData                EnemyLinkDistance;                                        // 0x0600(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FAttributeInitializationData                EnemyLinkDamage;                                          // 0x0638(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UClass*                                      EnemyLinkDamageData;                                      // 0x0670(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseEnemyLinkDamageData;                                  // 0x0678(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0679(0x0007) MISSED OFFSET
	class UParticleSystem*                             DeathFX;                                                  // 0x0680(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFeedbackData*                               RumbleData;                                               // 0x0688(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRangedDistanceOverrides                    RumbleDistanceOverrides;                                  // 0x0690(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData04[0x4];                                       // 0x069C(0x0004) MISSED OFFSET
	class UOakDamageComponent*                         OakDamage;                                                // 0x06A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTargetableComponent*                        Targetable;                                               // 0x06A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x06B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DamageLinkNode");
		return ptr;
	}


	void GetAvailableSocketNames(TArray<struct FName>* Array);
};


// Class OakGame.DeathCircleElapsedTimeValueResolver
// 0x0000 (0x0028 - 0x0028)
class UDeathCircleElapsedTimeValueResolver : public UAttributeValueResolver
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DeathCircleElapsedTimeValueResolver");
		return ptr;
	}

};


// Class OakGame.DeathCirclePoint
// 0x0018 (0x0470 - 0x0458)
class ADeathCirclePoint : public AActor
{
public:
	unsigned char                                      Stage;                                                    // 0x0458(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0459(0x0007) MISSED OFFSET
	TArray<class ADeathCirclePoint*>                   NextCircleOptions;                                        // 0x0460(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DeathCirclePoint");
		return ptr;
	}


	void GetNextStageDeathCirclePoints(TArray<class ADeathCirclePoint*>* NextStageDeathCirclePoints);
};


// Class OakGame.DebugMenuCategoryConfig
// 0x0010 (0x0038 - 0x0028)
class UDebugMenuCategoryConfig : public UObject
{
public:
	TArray<struct FDebugMenuCommandItemData>           ConfigExecData;                                           // 0x0028(0x0010) (ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DebugMenuCategoryConfig");
		return ptr;
	}

};


// Class OakGame.DebugMenuCategoryList
// 0x0030 (0x02E8 - 0x02B8)
class UDebugMenuCategoryList : public UGbxUserWidget
{
public:
	class UGbxScrollBoxList*                           CommandList;                                              // 0x02B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  TitleText;                                                // 0x02C0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  DescriptionText;                                          // 0x02C8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  CommandText;                                              // 0x02D0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<struct FDebugMenuCommandItemData>           CommandListItemData;                                      // 0x02D8(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DebugMenuCategoryList");
		return ptr;
	}


	void RemoveAllItems();
	void OnExecItemActivated(class UGbxUserWidget* Widget, const struct FGbxMenuInputEvent& InputInfo);
	void OnCommandItemSelected(class UGbxUserWidget* Widget, const struct FGbxMenuInputEvent& InputInfo);
	class UGbxListItem* AddExecItem(const struct FText& Label, const struct FText& Description, const class FString& Command);
	void AddConfigExecItems(const struct FName& CategoryName);
	class UGbxListItem* AddCommandItem(const struct FText& Label, const struct FText& Description, const struct FScriptDelegate& OnActivate);
};


// Class OakGame.DebugMenuCategoryCharacterSkills
// 0x00A8 (0x03A0 - 0x02F8)
class UDebugMenuCategoryCharacterSkills : public UGbxDebugMenuSubmenu
{
public:
	class UOakAbilityDebugMenuCascadingList*           CascadingListRef;                                         // 0x02F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  CharacterNameRef;                                         // 0x0300(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UCanvasPanel*                                DescriptionPanelRef;                                      // 0x0308(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  DescriptionRef;                                           // 0x0310(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FDebugMenuGradebox                          Grade1Details;                                            // 0x0318(0x0028) (Transient)
	class AOakCharacter_Player*                        PrimaryPlayer;                                            // 0x0340(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakPlayerAbilityManagerComponent*           PrimaryPlayerAbilityManager;                              // 0x0348(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UPlayerCharacterComponent*                   PrimaryPlayerCharacterCompoment;                          // 0x0350(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UOakPlayerAbilityTree*                       PlayerAbilityTree;                                        // 0x0358(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UPlayerBalanceStateComponent*                BalanceState;                                             // 0x0360(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UOakPlayerAbilityTreeItemData_Ability*> AbilitiesSorted;                                          // 0x0368(0x0010) (ZeroConstructor, Transient)
	TArray<class UOakPlayerAbilityTreeItemData_ActionAbilityAugment*> AugmentsSorted;                                           // 0x0378(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0388(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DebugMenuCategoryCharacterSkills");
		return ptr;
	}


	void OnSelectionMade();
	void OnSelectionFailed();
	void OnPlayerAbilitySlotChanged(class UOakPlayerAbilitySlotData* SlotData);
	void OnLevelChanged(int OldExperienceLevel, int NewExperienceLevel);
	void OnCascadeListItemSelected(class UGbxListItemText_CharacterDebugMenu* ListItem);
	void OnCascadeListItemRefresh(class UGbxListItemText_CharacterDebugMenu* ListItem);
	void OnCascadeListItemClicked(class UGbxListItemText_CharacterDebugMenu* ListItem);
	void OnActionAbilityAugmentChanged(class UClass* ActionAbilityClass, class UOakActionAbilityAugmentSlotData* SlotData);
	void OnAbilityTreeReset();
	void OnAbilityPointsChanged(int RemainingAbilityPoints);
	void OnAbilityItemChanged(class UOakPlayerAbilityTreeItemData* ItemData);
	void ConstructCharacterPage();
};


// Class OakGame.DebugMenuCategoryEssentials
// 0x0008 (0x0300 - 0x02F8)
class UDebugMenuCategoryEssentials : public UGbxDebugMenuSubmenu
{
public:
	class UDebugMenuCategoryList*                      CategoryList;                                             // 0x02F8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DebugMenuCategoryEssentials");
		return ptr;
	}

};


// Class OakGame.GbxReportTags
// 0x0010 (0x0038 - 0x0028)
class UGbxReportTags : public UObject
{
public:
	TArray<struct FGbxReportTag>                       Tags;                                                     // 0x0028(0x0010) (ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxReportTags");
		return ptr;
	}

};


// Class OakGame.DebugMenuCategoryTelemetry
// 0x0030 (0x0328 - 0x02F8)
class UDebugMenuCategoryTelemetry : public UGbxDebugMenuSubmenu
{
public:
	class UDebugMenuCategoryList*                      CategoryList;                                             // 0x02F8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  TextExecutionGUID;                                        // 0x0300(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  TextReportTag;                                            // 0x0308(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  TextGameGUID;                                             // 0x0310(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  TextKeys;                                                 // 0x0318(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  TextValues;                                               // 0x0320(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DebugMenuCategoryTelemetry");
		return ptr;
	}

};


// Class OakGame.DefaultCrosshairComponentData
// 0x0020 (0x0050 - 0x0030)
class UDefaultCrosshairComponentData : public UGbxDataAsset
{
public:
	TArray<struct FDefaultCrosshairData>               CrosshairWidgetsData;                                     // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FName>                               CrosshairAnimationWidgetNames;                            // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DefaultCrosshairComponentData");
		return ptr;
	}

};


// Class OakGame.DemoMenu
// 0x0038 (0x0328 - 0x02F0)
class UDemoMenu : public UGbxUmgMenu
{
public:
	class UGbxListItemText*                            BackItem;                                                 // 0x02F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGbxScrollBoxList*                           ContentPanel;                                             // 0x02F8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0300(0x0020) MISSED OFFSET
	struct FTimerHandle                                DemoMenuHideTimerHandle;                                  // 0x0320(0x0008) (Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DemoMenu");
		return ptr;
	}


	void OnDemoSaveSelected(class UGbxUserWidget* Widget, const struct FGbxMenuInputEvent& InputInfo);
	void OnBackClicked(class UGbxUserWidget* Widget, const struct FGbxMenuInputEvent& InputInfo);
	void ClientConnectTimedout();
};


// Class OakGame.DialogSelectorImplementation_CheckAttitude
// 0x0018 (0x0048 - 0x0030)
class UDialogSelectorImplementation_CheckAttitude : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            ObserverParam;                                            // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class UDialogParameter*                            TargetParam;                                              // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	TEnumAsByte<ETeamAttitude>                         DesiredAttitude;                                          // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_CheckAttitude");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_CheckCombatState
// 0x0010 (0x0040 - 0x0030)
class UDialogSelectorImplementation_CheckCombatState : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            TestSubjectParam;                                         // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	bool                                               bTrueIfInCombat;                                          // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_CheckCombatState");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_CheckLevel
// 0x0010 (0x0040 - 0x0030)
class UDialogSelectorImplementation_CheckLevel : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            BalancedActorParam;                                       // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                MinLevel;                                                 // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                MaxLevel;                                                 // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_CheckLevel");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_CheckMissionState
// 0x0010 (0x0040 - 0x0030)
class UDialogSelectorImplementation_CheckMissionState : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            MissionParam;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	TEnumAsByte<EMissionStatus>                        DesiredMissionStatus;                                     // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_CheckMissionState");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_CheckWeaponElement
// 0x0010 (0x0040 - 0x0030)
class UDialogSelectorImplementation_CheckWeaponElement : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            WeaponUserParam;                                          // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class UDialogParameter*                            ElementParam;                                             // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_CheckWeaponElement");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_CheckWeaponIsUnderleveled
// 0x0010 (0x0040 - 0x0030)
class UDialogSelectorImplementation_CheckWeaponIsUnderleveled : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            WeaponUserParam;                                          // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                MinLevelGap;                                              // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_CheckWeaponIsUnderleveled");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_CheckWeaponManufacturer
// 0x0010 (0x0040 - 0x0030)
class UDialogSelectorImplementation_CheckWeaponManufacturer : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            WeaponUserParam;                                          // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class UDialogParameter*                            ManufacturerParam;                                        // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_CheckWeaponManufacturer");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_CheckWeaponRarity
// 0x0010 (0x0040 - 0x0030)
class UDialogSelectorImplementation_CheckWeaponRarity : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            WeaponUserParam;                                          // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class UInventoryRarityData*                        Rarity;                                                   // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_CheckWeaponRarity");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_CheckWeaponType
// 0x0010 (0x0040 - 0x0030)
class UDialogSelectorImplementation_CheckWeaponType : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            WeaponUserParam;                                          // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class UDialogParameter*                            WeaponTypeParam;                                          // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_CheckWeaponType");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_GbxCondition
// 0x0010 (0x0040 - 0x0030)
class UDialogSelectorImplementation_GbxCondition : public UDialogSelectorImplementation
{
public:
	class UGbxCondition*                               Condition;                                                // 0x0030(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData)
	class UDialogParameter*                            ContextParam;                                             // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_GbxCondition");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_HasGameplayTag
// 0x0010 (0x0040 - 0x0030)
class UDialogSelectorImplementation_HasGameplayTag : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            ActorParam;                                               // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class UDialogParameter*                            TagParam;                                                 // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_HasGameplayTag");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_HasShield
// 0x0008 (0x0038 - 0x0030)
class UDialogSelectorImplementation_HasShield : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            TestSubjectParam;                                         // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_HasShield");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_IsDriver
// 0x0010 (0x0040 - 0x0030)
class UDialogSelectorImplementation_IsDriver : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            CandidateParam;                                           // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class UDialogParameter*                            VehicleParam;                                             // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_IsDriver");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_IsFlag
// 0x0008 (0x0038 - 0x0030)
class UDialogSelectorImplementation_IsFlag : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            FlagParam;                                                // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_IsFlag");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_IsNearbyPlayerDown
// 0x0010 (0x0040 - 0x0030)
class UDialogSelectorImplementation_IsNearbyPlayerDown : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            ObserverParam;                                            // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	bool                                               bUseCustomDistance;                                       // 0x0038(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              CustomDistance;                                           // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_IsNearbyPlayerDown");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_IsPassenger
// 0x0010 (0x0040 - 0x0030)
class UDialogSelectorImplementation_IsPassenger : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            CandidateParam;                                           // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class UDialogParameter*                            VehicleParam;                                             // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_IsPassenger");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_IsPetAlive
// 0x0008 (0x0038 - 0x0030)
class UDialogSelectorImplementation_IsPetAlive : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            PetOwnerParam;                                            // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_IsPetAlive");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_MissionCommentary
// 0x0008 (0x0038 - 0x0030)
class UDialogSelectorImplementation_MissionCommentary : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            MissionParam;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_MissionCommentary");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_MissionCommentaryIndefinite
// 0x0008 (0x0038 - 0x0030)
class UDialogSelectorImplementation_MissionCommentaryIndefinite : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            RangeStartParam;                                          // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_MissionCommentaryIndefinite");
		return ptr;
	}

};


// Class OakGame.DialogSelectorImplementation_OnMissionInRange
// 0x0010 (0x0040 - 0x0030)
class UDialogSelectorImplementation_OnMissionInRange : public UDialogSelectorImplementation
{
public:
	class UDialogParameter*                            RangeStartParam;                                          // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class UDialogParameter*                            RangeEndParam;                                            // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DialogSelectorImplementation_OnMissionInRange");
		return ptr;
	}

};


// Class OakGame.DiscoveryAreaComponent
// 0x0080 (0x07D0 - 0x0750)
class UDiscoveryAreaComponent : public UGbxAreaComponent
{
public:
	struct FName                                       DefaultWorldAreaShortName;                                // 0x0750(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FText                                       WorldAreaDisplayName;                                     // 0x0758(0x0028) (Edit)
	class UGbxUIName*                                  WorldAreaDisplayUIName;                                   // 0x0770(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 DiscoverySoundEvent;                                      // 0x0778(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DiscoveryChallenge;                                       // 0x0780(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class URegionData*                                 BalanceToRegionDef;                                       // 0x0788(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAttributeInitializationData                ExperienceRewardMultiplier;                               // 0x0790(0x0038) (Edit)
	unsigned char                                      UnknownData00[0x8];                                       // 0x07C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DiscoveryAreaComponent");
		return ptr;
	}

};


// Class OakGame.DiscoveryComponent
// 0x0048 (0x01C0 - 0x0178)
class UDiscoveryComponent : public UActorComponent
{
public:
	TArray<struct FDiscoveredLevelInfo>                DiscoveredLevels;                                         // 0x0178(0x0010) (ZeroConstructor, Transient)
	TArray<struct FDiscoveredPlanetInfo>               DiscoveredPlanets;                                        // 0x0188(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0198(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFoundDiscoveryArea;                                     // 0x01A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEnteredDiscoveryArea;                                   // 0x01B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DiscoveryComponent");
		return ptr;
	}


	void STATIC_UnlockPlanetForAllPlayers(class UObject* WorldContextObject, class UPlanetData* Planet);
	void ServerFirstDiscoveryOfArea(class UDiscoveryAreaComponent* AreaComponent);
	void OnHostDiscoveredPlanetsChanged();
	bool IsPlanetNew(class UPlanetData* Planet);
	bool IsPlanetDiscovered(class UPlanetData* Planet);
	bool IsLevelDiscovered(const struct FName& LevelName);
	bool IsCurrentLevelDiscovered();
	bool IsAreaDiscovered(const struct FName& AreaName, bool CurrentLevelOnly);
	void FixupAreaDiscoveryAchievement();
	void STATIC_DiscoverLevelForAllPlayers(class UObject* WorldContextObject, const struct FName& LevelName, bool bAutoDiscoverPlanet);
	void STATIC_DiscoverAreaForAllPlayers(class UObject* WorldContextObject, const struct FName& AreaName);
	void ClientUnlockPlanet(class UPlanetData* Planet);
	void ClientDiscoverLevel(const struct FName& LevelName);
};


// Class OakGame.DisplacementZone
// 0x0038 (0x0588 - 0x0550)
class ADisplacementZone : public AInteractiveObject
{
public:
	struct FScriptMulticastDelegate                    OnMovedActor;                                             // 0x0550(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class UClass*>                              ClassesToPush;                                            // 0x0560(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              Speed;                                                    // 0x0570(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpeedPullToCenter;                                        // 0x0574(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UBoxComponent*                               BoxCollision;                                             // 0x0578(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UArrowComponent*                             ArrowDirectionComponent;                                  // 0x0580(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DisplacementZone");
		return ptr;
	}

};


// Class OakGame.DisplayedNotificationWidget
// 0x0038 (0x02F0 - 0x02B8)
class UDisplayedNotificationWidget : public UGbxUserWidget
{
public:
	class UTextBlock*                                  MessageText;                                              // 0x02B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnDisplayedEvent;                                         // 0x02C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHiddenEvent;                                            // 0x02D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    HideCompleteEvent;                                        // 0x02E0(0x0010) (ZeroConstructor, InstancedReference)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DisplayedNotificationWidget");
		return ptr;
	}


	void SetMessageText(struct FText* Text);
	void OnHideComplete__DelegateSignature();
	void OnHidden__DelegateSignature();
	void OnDisplayed__DelegateSignature();
	void Hidden();
	void Displayed();
};


// Class OakGame.DodgeTriggerZoneComponent
// 0x0048 (0x01C0 - 0x0178)
class UDodgeTriggerZoneComponent : public UActorComponent
{
public:
	float                                              MinVelocityToDodge;                                       // 0x0178(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxVelocityToScale;                                       // 0x017C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DodgeLength;                                              // 0x0180(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x0184(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxScale;                                                 // 0x0188(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StartOffsetX;                                             // 0x018C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OffsetZ;                                                  // 0x0190(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0194(0x0004) MISSED OFFSET
	TArray<class AActor*>                              PreviousInZoneActors;                                     // 0x0198(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x18];                                      // 0x01A8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DodgeTriggerZoneComponent");
		return ptr;
	}

};


// Class OakGame.DownloadableEntitlementCategoryData
// 0x0030 (0x0060 - 0x0030)
class UDownloadableEntitlementCategoryData : public UDataAsset
{
public:
	struct FText                                       CategoryName;                                             // 0x0030(0x0028) (Edit, DisableEditOnInstance)
	struct FText                                       CategoryDescription;                                      // 0x0048(0x0028) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DownloadableEntitlementCategoryData");
		return ptr;
	}

};


// Class OakGame.DownloadableEntitlementPartData
// 0x0018 (0x0048 - 0x0030)
class UDownloadableEntitlementPartData : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	struct FGuid                                       AssetGuid;                                                // 0x0038(0x0010) (DuplicateTransient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DownloadableEntitlementPartData");
		return ptr;
	}

};


// Class OakGame.DownloadableEntitlementPartData_Currency
// 0x0008 (0x0050 - 0x0048)
class UDownloadableEntitlementPartData_Currency : public UDownloadableEntitlementPartData
{
public:
	class UInventoryCategoryData*                      CurrencyCategory;                                         // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DownloadableEntitlementPartData_Currency");
		return ptr;
	}

};


// Class OakGame.DownloadableEntitlementSourceData
// 0x0028 (0x0058 - 0x0030)
class UDownloadableEntitlementSourceData : public UDataAsset
{
public:
	struct FText                                       DisplayName;                                              // 0x0030(0x0028) (Edit, DisableEditOnInstance)
	struct FName                                       SourceName;                                               // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDownloadableEntitlementSourceData*          ParentSourceData;                                         // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DownloadableEntitlementSourceData");
		return ptr;
	}

};


// Class OakGame.DownloadableExpansionData
// 0x02F8 (0x0370 - 0x0078)
class UDownloadableExpansionData : public UDownloadableContentData
{
public:
	TArray<struct FDlcLevelTravelPair>                 LevelTravelPairs;                                         // 0x0078(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UFastTravelStationData*                      GatewayStationData;                                       // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UZoneMapListData*                            ZoneMapList;                                              // 0x0090(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FLevelTravelDataListStationPatch>    LevelTravelDataLists;                                     // 0x0098(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TSoftObjectPtr<class UClass>                       InitialMission;                                           // 0x00A8(0x0028) (Edit, DisableEditOnInstance)
	struct FText                                       DescriptionForStartDLC;                                   // 0x00D0(0x0028) (Edit, DisableEditOnInstance)
	class URegionManagerData*                          RegionManagerData;                                        // 0x00E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSoftObjectPath                             VehicleSpawnPoolList;                                     // 0x00F0(0x0018) (Edit, DisableEditOnInstance)
	TArray<class UChallengeList*>                      ChallengeLists;                                           // 0x0108(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UGameStatList*>                       GameStatLists;                                            // 0x0118(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class FString>                              SoftVehicleLoadouts;                                      // 0x0128(0x0010) (ZeroConstructor)
	TArray<class UOakCARMenuLoadout*>                  ResolvedVehicleLoadouts;                                  // 0x0138(0x0010) (ZeroConstructor, Transient)
	TMap<struct FGameplayTag, class UGameStatData*>    KillStatMap;                                              // 0x0148(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UOakLoadingScreenExpansionData*              LoadingScreenData;                                        // 0x0198(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UOakMayhemModifiersDataAsset*>        MayhemModeData;                                           // 0x01A0(0x0010) (ZeroConstructor, Deprecated)
	TArray<class UOakMayhemUIDataAsset*>               MayhemModeUIData;                                         // 0x01B0(0x0010) (ZeroConstructor, Deprecated)
	TArray<class UMayhemOverrideDataAsset*>            MayhemModeTwoData;                                        // 0x01C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UChallengeCategoryData*>              ProgressChallengeCategories;                              // 0x01D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FChallengeFilterType>                AvailableZoneChallengeFilters;                            // 0x01E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FChallengeFilterType>                AvailableGalaxyChallengeFilters;                          // 0x01F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UCrewQuartersDecorationData*>         CrewQuartersDecorations;                                  // 0x0200(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UGbxCustomizationData*>               CrazyEarlCustomizations;                                  // 0x0210(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FLevelledSaveGameData                       LevelledSaveGameData;                                     // 0x0220(0x00B0) (Edit, DisableEditOnInstance)
	TArray<class UAdditionalZoneMapData*>              ZoneMapAdditions;                                         // 0x02D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UGuardianRankRewardData*>             GuardianRankRewards;                                      // 0x02E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UGuardianRankPerkData*>               GuardianRankPerks;                                        // 0x02F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UOakVaultCardRewardData*>             VaultCardRewards;                                         // 0x0300(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UVaultCardGeneralData*                       GlobalVaultCardData;                                      // 0x0310(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UItemPoolData*                               ItemPoolToReplaceWithRandomItemPool;                      // 0x0318(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FItemPoolCollection>                 RandomDateBasedItemPools;                                 // 0x0320(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class UOakPlayerAbilityTreeBranchData>> UnlockedSkillBranches;                                    // 0x0330(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	bool                                               bEnablesBTSMenu;                                          // 0x0340(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0341(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UBehindTheScenesContent>      BehindTheScenesContent;                                   // 0x0348(0x0028) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DownloadableExpansionData");
		return ptr;
	}

};


// Class OakGame.DuelArena
// 0x0058 (0x04B0 - 0x0458)
class ADuelArena : public AActor
{
public:
	float                                              ArenaSetupTime;                                           // 0x0458(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ArenaTakeDownTime;                                        // 0x045C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FPlayerDuelArenaState>               DuelingPlayers;                                           // 0x0460(0x0010) (Net, ZeroConstructor, Transient)
	class UDuelGlobals*                                DuelGlobals;                                              // 0x0470(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ADuelManager*                                DuelManager;                                              // 0x0478(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0480(0x0004) MISSED OFFSET
	EActiveDuelStatus                                  DuelStatus;                                               // 0x0484(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0485(0x0003) MISSED OFFSET
	float                                              TimerStartTime;                                           // 0x0488(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                NumParticipants;                                          // 0x048C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	EDuelMode                                          DuelMode;                                                 // 0x0490(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1F];                                      // 0x0491(0x001F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DuelArena");
		return ptr;
	}


	void K2_InitDuelArena();
	float GetTimeBeforeDuelStarts();
	float GetMaxDuelLength();
	float GetMaxArenaRadius();
	float GetDuelTimeRemaining();
};


// Class OakGame.DuelGlobals
// 0x0118 (0x0148 - 0x0030)
class UDuelGlobals : public UGbxDataAsset
{
public:
	TSoftObjectPtr<class UClass>                       DuelArenaBlueprint;                                       // 0x0030(0x0028) (Edit)
	TSoftObjectPtr<class UClass>                       DuelTotemBlueprint;                                       // 0x0058(0x0028) (Edit)
	class UClass*                                      DuelInitiateAction;                                       // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageSourceForInitiatingDuels;                           // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FDuelModeSettings                           Settings_OnFoot;                                          // 0x0090(0x0030) (Edit)
	struct FDuelModeSettings                           Settings_Vehicle;                                         // 0x00C0(0x0030) (Edit)
	float                                              ReviveDownedPlayerDelay;                                  // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	TArray<struct FDuelTeamGroup>                      DuelTeams;                                                // 0x00F8(0x0010) (Edit, ZeroConstructor)
	struct FText                                       EnterVehicleDuelErrorMessage;                             // 0x0108(0x0028) (Edit)
	TSoftObjectPtr<class UGameStatData>                WinStat;                                                  // 0x0120(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DuelGlobals");
		return ptr;
	}

};


// Class OakGame.DuelManager
// 0x00C8 (0x0520 - 0x0458)
class ADuelManager : public AActor
{
public:
	TArray<class ADuelArena*>                          ActiveDuelArenas;                                         // 0x0458(0x0010) (Net, ZeroConstructor, Transient)
	struct FActiveDuelState                            ActiveDuels[0x2];                                         // 0x0468(0x0050) (Transient)
	TArray<class ADuelTotem*>                          PotentialDuelTotems;                                      // 0x0508(0x0010) (ZeroConstructor, Transient)
	class UDuelGlobals*                                DuelGlobals;                                              // 0x0518(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DuelManager");
		return ptr;
	}


	void MulticastUnacceptedDuel(class AOakCharacter_Player* Player, class AOakCharacter_Player* DuelInstigator);
	void MulticastDuelWon(TArray<class AOakCharacter_Player*> Winners, EDuelClassification Classification);
	void MulticastDuelTimedOut(class AOakCharacter_Player* Player);
	void MulticastDuelStarted(TArray<class AOakCharacter_Player*> Participants);
	void MulticastDuelSetupStarted(TArray<class AOakCharacter_Player*> Participants);
	void MulticastDuelLost(class AOakCharacter_Player* Player, EDuelLoseReason LoseReason, EDuelClassification Classification);
	void MulticastDuelLengthElapsed(class AOakCharacter_Player* Player);
	void MulticastDuelInitiated(class AOakCharacter_Player* Player, class AOakCharacter_Player* TargetedPlayer);
	void MulticastDuelCanceled(class AOakCharacter_Player* Player);
	void MulticastAcceptedDuel(class AOakCharacter_Player* Player, class AOakCharacter_Player* DuelInstigator);
};


// Class OakGame.DuelTotem
// 0x0050 (0x05A0 - 0x0550)
class ADuelTotem : public AInteractiveObject
{
public:
	float                                              FailsafeDestroyDelay;                                     // 0x0550(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0554(0x0004) MISSED OFFSET
	class UUsableComponent*                            UsableComponent;                                          // 0x0558(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AOakCharacter_Player*                        PlayerInstigator;                                         // 0x0560(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                NumParticipants;                                          // 0x0568(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x056C(0x0004) MISSED OFFSET
	TArray<class AOakCharacter_Player*>                AcceptedPlayers;                                          // 0x0570(0x0010) (Net, ZeroConstructor, Transient)
	float                                              TimerStartTime;                                           // 0x0580(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0584(0x000C) MISSED OFFSET
	EDuelTotemDestroyReason                            DestroyReason;                                            // 0x0590(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	EPotentialDuelState                                DuelState;                                                // 0x0591(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	EDuelMode                                          DuelMode;                                                 // 0x0592(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x0593(0x0005) MISSED OFFSET
	class UDuelGlobals*                                DuelGlobals;                                              // 0x0598(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DuelTotem");
		return ptr;
	}


	void OnRep_NumParticipants();
	void OnRep_DuelState();
	void OnRep_DestroyReason();
	void OnRep_AcceptedPlayers();
	void OnNumParticipantsChanged(int NewNumParticipants);
	void OnDuelStateChanged(EPotentialDuelState NewDuelState);
	void OnDestroyTotem(EDuelTotemDestroyReason TheDestroyReason);
	void OnAcceptedPlayersChanged();
	void HandleUsedEvent(const struct FUseEvent& UseEvent);
	float GetTimeBeforeTimeout();
	float GetTimeBeforeDuelStarts();
	class AOakCharacter_Player* GetPlayerInstigator();
	int GetNumParticipants();
	TArray<class AOakCharacter_Player*> GetAcceptedPlayers();
};


// Class OakGame.EchoCastMenuDescription
// 0x0010 (0x0040 - 0x0030)
class UEchoCastMenuDescription : public UGbxDataAsset
{
public:
	TArray<class UEchoCastMenuDescriptionItem*>        Items;                                                    // 0x0030(0x0010) (Edit, ExportObject, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EchoCastMenuDescription");
		return ptr;
	}

};


// Class OakGame.OptionDescriptionItem
// 0x00F8 (0x0128 - 0x0030)
class UOptionDescriptionItem : public UGbxDataAsset
{
public:
	EOptionType                                        OptionType;                                               // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EOptionItemType                                    OptionItemType;                                           // 0x0031(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
	struct FText                                       OptionItemName;                                           // 0x0038(0x0028) (Edit)
	struct FText                                       OptionDescriptionTitle;                                   // 0x0050(0x0028) (Edit)
	struct FText                                       OptionDescriptionText;                                    // 0x0068(0x0028) (Edit)
	float                                              SliderMin;                                                // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SliderMax;                                                // 0x0084(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SliderStep;                                               // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               SliderIsInteger;                                          // 0x008C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x008D(0x0003) MISSED OFFSET
	TArray<struct FText>                               SpinnerOptions;                                           // 0x0090(0x0010) (Edit, ZeroConstructor)
	bool                                               SpinnerWrapEnabled;                                       // 0x00A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET
	TArray<struct FText>                               DropDownOptions;                                          // 0x00A8(0x0010) (Edit, ZeroConstructor)
	class UGbxInputKeyRebindData_Button*               ButtonBinding;                                            // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxInputKeyRebindData_Axis*                 AxisBinding;                                              // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     AxisScaleVector;                                          // 0x00C8(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00D4(0x0004) MISSED OFFSET
	class UOptionDescriptionItem*                      DrivingOptionDescriptionLink;                             // 0x00D8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FText                                       BooleanOnText;                                            // 0x00E0(0x0028) (Edit)
	struct FText                                       BooleanOffText;                                           // 0x00F8(0x0028) (Edit)
	bool                                               IsDesktop;                                                // 0x0110(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsQuail;                                                  // 0x0111(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsXboxOne;                                                // 0x0112(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               AvailableOnNewerXboxes;                                   // 0x0113(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsXboxSeriesX;                                            // 0x0114(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsPS4;                                                    // 0x0115(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               AvailableOnNewerPlayStations;                             // 0x0116(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsPS5;                                                    // 0x0117(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsOnlyAvailableInFrontendForSplitscreen;                  // 0x0118(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsPrimaryPlayerOnly;                                      // 0x0119(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x011A(0x0006) MISSED OFFSET
	class UTexture2D*                                  HelperTexture;                                            // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OptionDescriptionItem");
		return ptr;
	}

};


// Class OakGame.EchoCastMenuDescriptionItem
// 0x0010 (0x0138 - 0x0128)
class UEchoCastMenuDescriptionItem : public UOptionDescriptionItem
{
public:
	bool                                               Enabled;                                                  // 0x0128(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0129(0x0007) MISSED OFFSET
	class UOakStreamingInteractionEvent*               StreamingInteractionEvent;                                // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EchoCastMenuDescriptionItem");
		return ptr;
	}

};


// Class OakGame.OakWeapon
// 0x0088 (0x0960 - 0x08D8)
class AOakWeapon : public AWeapon
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x08D8(0x0020) MISSED OFFSET
	unsigned char                                      GripPartType;                                             // 0x08F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      ForegripPartType;                                         // 0x08F9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      MagPartType;                                              // 0x08FA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      ModePartType;                                             // 0x08FB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      ModeSwitchPartType;                                       // 0x08FC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      BarrelPartType;                                           // 0x08FD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      BoltPartType;                                             // 0x08FE(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      TriggerPartType;                                          // 0x08FF(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      HammerPartType;                                           // 0x0900(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      ScopePartType;                                            // 0x0901(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      MeleePartType;                                            // 0x0902(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      CustomAPartType;                                          // 0x0903(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      CustomBPartType;                                          // 0x0904(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHasPistolStock;                                          // 0x0905(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EWeaponHolsteredSizeType                           HolsteredSizeType;                                        // 0x0906(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0907(0x0001) MISSED OFFSET
	class UWeaponBalanceStateComponent*                BalanceStateComponent;                                    // 0x0908(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FVector                                     CenterCrosshairViewModelLocationOffset;                   // 0x0910(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    CenterCrosshairViewModelRotationOffset;                   // 0x091C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      AudioBodyLoopState;                                       // 0x0928(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bAmpEffectActive : 1;                                     // 0x0929(0x0001) (Net, Transient)
	unsigned char                                      UnknownData02[0x6];                                       // 0x092A(0x0006) MISSED OFFSET
	class UWeaponSkinPartData*                         WeaponSkin;                                               // 0x0930(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0938(0x0018) MISSED OFFSET
	struct FGbxAttributeFloat                          QuickEquipTime;                                           // 0x0950(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Net)
	EOakElementalStackBucketType                       ElementalEffectBucketType;                                // 0x095C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bWeaponUsingCollision;                                    // 0x095D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x095E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakWeapon");
		return ptr;
	}


	void UpdateBodyLoopActivity();
	void ReconfigureWeaponAudio(int UseModeIdx, TArray<struct FWeaponConfigurationEvent> ConfigureEvents, TArray<struct FWeaponConfigurationRtpc> ConfigureRtpcs, bool bAdditive);
	void OnRep_WeaponSkin();
	void OnRep_UpdateAmpEffects();
	void K2_OnWeaponSkinApplied();
	unsigned char GetPartTypeValue(EOakWeaponPartType PartType);
	class UManufacturerData* GetManufacturer();
	void CloneAudioConfiguration(class UWwiseAudioComponent* TargetComponent, int UseModeIdx);
};


// Class OakGame.EchoDevice
// 0x02D0 (0x0C30 - 0x0960)
class AEchoDevice : public AOakWeapon
{
public:
	class AOakCharacter_Player*                        PlayerOwner;                                              // 0x0960(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                ScreenMaterialIndex;                                      // 0x0968(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x096C(0x0004) MISSED OFFSET
	class UParticleSystemComponent*                    ProjectionFX1PComponent;                                  // 0x0970(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    ProjectionFX3PComponent;                                  // 0x0978(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    InMenuFX3PComponent;                                      // 0x0980(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    CloseMenuFX3PComponent;                                   // 0x0988(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0990(0x0020) MISSED OFFSET
	class UMaterialInstanceDynamic*                    ScreenMaterialPrivate;                                    // 0x09B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UWwiseAudioComponent*                        AudioComponentPrivate;                                    // 0x09B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGbxCustomizationTargetData*                 EchoCustomizationTarget;                                  // 0x09C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EquippedIdleCameraToEchoLocationOffset;                   // 0x09C8(0x000C) (Edit, IsPlainOldData)
	struct FRotator                                    EquippedIdleCameraToEchoRotationOffset;                   // 0x09D4(0x000C) (Edit, IsPlainOldData)
	class UClass*                                      QuickFirstPersonUnequipAction;                            // 0x09E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      QuickFirstPersonEquipAction;                              // 0x09E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ProjectionFXDelayAfterIdle;                               // 0x09F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x09F4(0x0004) MISSED OFFSET
	struct FName                                       MissionDeliveryOrientationRow;                            // 0x09F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 EquipSound;                                               // 0x0A00(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 UnequipSound;                                             // 0x0A08(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 DPadPressSound;                                           // 0x0A10(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 DPadReleaseSound;                                         // 0x0A18(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       DPadSoundSocket;                                          // 0x0A20(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DPadDeadZone;                                             // 0x0A28(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0A2C(0x0004) MISSED OFFSET
	class UWwiseEvent*                                 DPadSynthSound;                                           // 0x0A30(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 ConfirmSound;                                             // 0x0A38(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 ErrorSound;                                               // 0x0A40(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ButtonPressDuration;                                      // 0x0A48(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0A4C(0x0004) MISSED OFFSET
	class UWwiseSwitch*                                SoundSetSwitch;                                           // 0x0A50(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UOakCustomizationComponent*                  CustomizationComponent;                                   // 0x0A58(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FName                                       ProjectionSocketName;                                     // 0x0A60(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  OrientationDataTable;                                     // 0x0A68(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  ScreenDataTable;                                          // 0x0A70(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FWeaponRegisterAttachmentEffectData         ProjectionFX1P;                                           // 0x0A78(0x0060) (Edit)
	struct FWeaponRegisterAttachmentEffectData         ProjectionFX3P;                                           // 0x0AD8(0x0060) (Edit)
	struct FWeaponRegisterAttachmentEffectData         InMenuFX3P;                                               // 0x0B38(0x0060) (Edit)
	struct FWeaponRegisterAttachmentEffectData         CloseMenuFX3P;                                            // 0x0B98(0x0060) (Edit)
	class UParticleSystem*                             BackdropOnAndLoopParticle;                                // 0x0BF8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             BackdropOffParticle;                                      // 0x0C00(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             HalfWidthBackdropOnAndLoopParticle;                       // 0x0C08(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             HalfWidthBackdropOffParticle;                             // 0x0C10(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BackDropFXDepth;                                          // 0x0C18(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                BackDropTranslucencySortPriority;                         // 0x0C1C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ProjectionFXPositionParameterName;                        // 0x0C20(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DefaultProjectionFXHeight;                                // 0x0C28(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0C2C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EchoDevice");
		return ptr;
	}


	void OnExitStatusMenu();
	void OnEnterStatusMenu();
	void OnCustomizationRemoved(class UGbxCustomizationData* Customization);
	void OnCustomizationApplied(class UGbxCustomizationData* Customization);
};


// Class OakGame.EchoDeviceAnimInstance
// 0x0020 (0x0560 - 0x0540)
class UEchoDeviceAnimInstance : public UGbxAnimInstance
{
public:
	unsigned char                                      bOutsideOfMenuMode : 1;                                   // 0x0540(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bButton1Pressed : 1;                                      // 0x0540(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bButton2Pressed : 1;                                      // 0x0540(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bButton3Pressed : 1;                                      // 0x0540(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0541(0x0003) MISSED OFFSET
	float                                              DPadXAxis;                                                // 0x0544(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              DPadYAxis;                                                // 0x0548(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector2D                                   DPadPosition;                                             // 0x054C(0x0008) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0554(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EchoDeviceAnimInstance");
		return ptr;
	}

};


// Class OakGame.EchoDeviceUIData
// 0x00C0 (0x00F0 - 0x0030)
class UEchoDeviceUIData : public UGbxDataAsset
{
public:
	TMap<struct FName, EEchoDeviceButton>              InputActionMapping;                                       // 0x0030(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	TMap<struct FName, struct FVector2D>               AxisInputMapping;                                         // 0x0080(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	bool                                               bEnableMouseInput;                                        // 0x00D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET
	struct FName                                       MouseXInputAction;                                        // 0x00D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MouseYInputAction;                                        // 0x00E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinimumMouseActivationDelta;                              // 0x00E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00EC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EchoDeviceUIData");
		return ptr;
	}

};


// Class OakGame.EchoLogData
// 0x0080 (0x03A0 - 0x0320)
class UEchoLogData : public UInventoryData_Simple
{
public:
	struct FDialogTimeSlotReference                    Dialog;                                                   // 0x0320(0x0040) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	EEchoLogBlockedStartMethod                         BlockedStartMethod;                                       // 0x0360(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	EEchoLogDisplayCategory                            DisplayCategory;                                          // 0x0361(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0362(0x0006) MISSED OFFSET
	TSoftObjectPtr<class UZoneMapData>                 ContainedZone;                                            // 0x0368(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	struct FName                                       AreaName;                                                 // 0x0390(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	bool                                               bShouldShowInUI;                                          // 0x0398(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0399(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EchoLogData");
		return ptr;
	}

};


// Class OakGame.EchoManager
// 0x0090 (0x00B8 - 0x0028)
class UEchoManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x80];                                      // 0x0028(0x0080) MISSED OFFSET
	TArray<struct FEchoInfo>                           CurrentEchoInfoStack;                                     // 0x00A8(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EchoManager");
		return ptr;
	}

};


// Class OakGame.ElementalEffectCollectionData
// 0x0068 (0x0090 - 0x0028)
class UElementalEffectCollectionData : public UEffectCollectionData
{
public:
	unsigned char                                      bHasElementalEffect : 1;                                  // 0x0028(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      bHasElementalAudio : 1;                                   // 0x0028(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      bFallbackToDefault : 1;                                   // 0x0028(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	class UParticleSystem*                             ElementalEffect[0x6];                                     // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 ElementalAudio[0x6];                                      // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ElementalEffectCollectionData");
		return ptr;
	}

};


// Class OakGame.ElementalInteractionComponent
// 0x0508 (0x0680 - 0x0178)
class UElementalInteractionComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0xC];                                       // 0x0178(0x000C) MISSED OFFSET
	EElementalInteractionMode                          InteractionMode;                                          // 0x0184(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreDamage;                                            // 0x0185(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0186(0x0002) MISSED OFFSET
	class UElementalInteractionData*                   NaturalState;                                             // 0x0188(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FSupportedElementalInteractionData>  SupportedStates;                                          // 0x0190(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UElementalInteractionData*                   InitialState;                                             // 0x01A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsInitiallySource;                                       // 0x01A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x01A9(0x0003) MISSED OFFSET
	float                                              InitialSourceDuration;                                    // 0x01AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x48];                                      // 0x01B0(0x0048) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnElementalInteractionStarted;                            // 0x01F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData04[0x18];                                      // 0x0208(0x0018) MISSED OFFSET
	class AElementalInteractionManager*                ElementalInteractionManager;                              // 0x0220(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AController*                                 InstigatorController;                                     // 0x0228(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0230(0x0008) MISSED OFFSET
	class UElementalInteractionData*                   CurrentState;                                             // 0x0238(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsSource;                                                // 0x0240(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0241(0x0007) MISSED OFFSET
	class UElementalInteractionData*                   PendingState;                                             // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class UElementalInteractionComponent*              ClosestSourceComponent;                                   // 0x0250(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FVector_NetQuantize                         PendingStateHitLocation;                                  // 0x0258(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	float                                              TransitionPercent;                                        // 0x0264(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bUseDamagePrimitives;                                     // 0x0268(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0269(0x0007) MISSED OFFSET
	TArray<struct FName>                               DamagePrimitiveNames;                                     // 0x0270(0x0010) (Edit, ZeroConstructor)
	TArray<class UPrimitiveComponent*>                 DamagePrimitives;                                         // 0x0280(0x0010) (ExportObject, ZeroConstructor, Transient)
	bool                                               bUseInteractionPrimitives;                                // 0x0290(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x7];                                       // 0x0291(0x0007) MISSED OFFSET
	TArray<struct FName>                               InteractionPrimitiveNames;                                // 0x0298(0x0010) (Edit, ZeroConstructor)
	TArray<class UPrimitiveComponent*>                 InteractionPrimitives;                                    // 0x02A8(0x0010) (ExportObject, ZeroConstructor, Transient)
	bool                                               bInheritTeamFromOwner;                                    // 0x02B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x02B9(0x0007) MISSED OFFSET
	class UTeam*                                       Team;                                                     // 0x02C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FAttitudeDamageRules                        AttitudeDamageRules;                                      // 0x02C8(0x0004) (Edit, DisableEditOnInstance)
	bool                                               bForceDamageToPlayerControlled;                           // 0x02CC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x02CD(0x0003) MISSED OFFSET
	TMap<class AActor*, struct FElementalInteractionDamageOverlapData> DamageOverlaps;                                           // 0x02D0(0x0050) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData11[0x8];                                       // 0x0320(0x0008) MISSED OFFSET
	TArray<class UElementalInteractionComponent*>      IgnoredElementalInteractionComponents;                    // 0x0328(0x0010) (ExportObject, ZeroConstructor, Transient)
	TMap<class UElementalInteractionComponent*, int>   OtherElementalInteractionComponents;                      // 0x0338(0x0050) (ZeroConstructor, Transient)
	struct FElementalDamageTriggeredInteractionData    DamageTriggeredInteraction;                               // 0x0388(0x0028) (Transient)
	unsigned char                                      UnknownData12[0x254];                                     // 0x03B0(0x0254) MISSED OFFSET
	bool                                               bHasElementalEffects;                                     // 0x0604(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0605(0x0003) MISSED OFFSET
	TArray<struct FName>                               EffectPrimitiveNames;                                     // 0x0608(0x0010) (Edit, ZeroConstructor)
	TArray<class UPrimitiveComponent*>                 EffectPrimitives;                                         // 0x0618(0x0010) (ExportObject, ZeroConstructor, Transient)
	class UWwiseAudioComponent*                        EffectAudioComponent;                                     // 0x0628(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<struct FName>                               EffectSizePrimitiveNames;                                 // 0x0630(0x0010) (Edit, ZeroConstructor)
	bool                                               bCustomEffectSize;                                        // 0x0640(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x3];                                       // 0x0641(0x0003) MISSED OFFSET
	float                                              EffectSize;                                               // 0x0644(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x38];                                      // 0x0648(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ElementalInteractionComponent");
		return ptr;
	}


	void SetElementalInteractionMode(EElementalInteractionMode NewInteractionMode);
	void SetElementalInteractionConfiguration(class UElementalInteractionConfigurationData* ElementalInteractionConfigurationData);
	void OnRep_PendingStateData();
	void OnRep_PendingState();
	void OnRep_CurrentState();
	void OnEndInteractionOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnEndDamageOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnBeginInteractionOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnBeginDamageOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void NotifySourceDurationEnded();
	void K2_BeginInteraction(class UElementalInteractionData* NewState, bool bInIsSource, float SourceDuration, class AController* NewInstigatorController);
	bool IsInElementalState(class UElementalInteractionData* State);
	void ComputeEffectSize(EElementalEffectSizeComputationType EffectSizeComputationType, float EffectSizeScale);
};


// Class OakGame.ElementalInteractionConfigurationData
// 0x0030 (0x0060 - 0x0030)
class UElementalInteractionConfigurationData : public UGbxDataAsset
{
public:
	EElementalInteractionMode                          InteractionMode;                                          // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreDamage;                                            // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
	class UElementalInteractionData*                   NaturalState;                                             // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FSupportedElementalInteractionData>  SupportedStates;                                          // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UElementalInteractionData*                   InitialState;                                             // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsInitiallySource;                                       // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	float                                              InitialSourceDuration;                                    // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ElementalInteractionConfigurationData");
		return ptr;
	}

};


// Class OakGame.ElementalInteractionData
// 0x0130 (0x0160 - 0x0030)
class UElementalInteractionData : public UGbxDataAsset
{
public:
	EElementalInteractionSourceMode                    SourceMode;                                               // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class UClass*                                      DamageType;                                               // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      InitiatingDamageType;                                     // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAttributeInitializationData                DamageAmount;                                             // 0x0048(0x0038) (Edit)
	float                                              InitialDamageDelay;                                       // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageInterval;                                           // 0x0084(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageTriggeredInteractionChance;                         // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageTriggeredDuration;                                  // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FElementalInteractionTransitionData> Transitions;                                              // 0x0090(0x0010) (Edit, ZeroConstructor)
	struct FAttributeInitializationData                BaseStatusEffectChance;                                   // 0x00A0(0x0038) (Edit)
	struct FAttributeInitializationData                BaseStatusEffectDamage;                                   // 0x00D8(0x0038) (Edit)
	struct FAttributeInitializationData                BaseStatusEffectDuration;                                 // 0x0110(0x0038) (Edit)
	class UGbxNavArea*                                 GbxNavArea;                                               // 0x0148(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bMimicBasedOnDamageType;                                  // 0x0150(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0151(0x0007) MISSED OFFSET
	class UClass*                                      NavArea;                                                  // 0x0158(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ElementalInteractionData");
		return ptr;
	}

};


// Class OakGame.ElementalInteractionData_Generated
// 0x0000 (0x0160 - 0x0160)
class UElementalInteractionData_Generated : public UElementalInteractionData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ElementalInteractionData_Generated");
		return ptr;
	}

};


// Class OakGame.ElementalInteractionManager
// 0x0138 (0x0590 - 0x0458)
class AElementalInteractionManager : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0458(0x0010) MISSED OFFSET
	struct FElementalInteractionManagerPostPhysicsTickFunction PostPhysicsTickFunction;                                  // 0x0468(0x0058) (Transient)
	class UClass*                                      DamageSource;                                             // 0x04C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TMap<class AActor*, struct FActorElementalDamageData> ActorsTakingDamage;                                       // 0x04C8(0x0050) (ZeroConstructor, Transient)
	TArray<class UElementalInteractionComponent*>      ComponentsNeedingSourceUpdate;                            // 0x0518(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UElementalInteractionComponent*>      ComponentsNeedingTransitionUpdate;                        // 0x0528(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class ALargeLiquidBody*>                    LargeLiquidBodies;                                        // 0x0538(0x0010) (ZeroConstructor, Transient)
	TArray<class AElementalPuddle*>                    TickingPuddles;                                           // 0x0548(0x0010) (ZeroConstructor, Transient)
	TArray<class AElementalPuddle*>                    PendingPuddleCollisionUpdates;                            // 0x0558(0x0010) (ZeroConstructor, Transient)
	TArray<class ASplat*>                              TickingSplats;                                            // 0x0568(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0578(0x0008) MISSED OFFSET
	TArray<class UMaterialInstanceDynamic*>            MaterialInstanceDynamicPool;                              // 0x0580(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ElementalInteractionManager");
		return ptr;
	}

};


// Class OakGame.ElementalPuddleOverlapCollisonComponent
// 0x0030 (0x0720 - 0x06F0)
class UElementalPuddleOverlapCollisonComponent : public UPrimitiveComponent
{
public:
	struct FColor                                      ProbeColor;                                               // 0x06F0(0x0004) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x06F4(0x0004) MISSED OFFSET
	TArray<struct FVector>                             ProbePoints;                                              // 0x06F8(0x0010) (ZeroConstructor)
	float                                              ProbeRadius;                                              // 0x0708(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x070C(0x0004) MISSED OFFSET
	class UBodySetup*                                  BodySetup;                                                // 0x0710(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0718(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ElementalPuddleOverlapCollisonComponent");
		return ptr;
	}

};


// Class OakGame.ElementalPuddle
// 0x01C0 (0x0618 - 0x0458)
class AElementalPuddle : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0458(0x0008) MISSED OFFSET
	class AElementalInteractionManager*                ElementalInteractionManager;                              // 0x0460(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FProjectedMeshOptions                       PuddleCollisionOptions;                                   // 0x0468(0x0048)
	class UProceduralMeshComponent*                    PuddleCollision;                                          // 0x04B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x04B8(0x000C) MISSED OFFSET
	float                                              PuddleCollisionSurfaceArea;                               // 0x04C4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              PuddleOverlapProbeSphereRadius;                           // 0x04C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x04CC(0x0004) MISSED OFFSET
	class UElementalPuddleOverlapCollisonComponent*    PuddleOverlapCollision;                                   // 0x04D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UElementalInteractionComponent*              ElementalInteraction;                                     // 0x04D8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBalanceStateComponent*                      BalanceState;                                             // 0x04E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPrimitiveComponent*                         VisualComponent;                                          // 0x04E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UElementalPuddleConfigurationData*           ElementalPuddleConfiguration;                             // 0x04F0(0x0008) (Edit, Net, ZeroConstructor, IsPlainOldData)
	EPuddleState                                       PuddleState;                                              // 0x04F8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x04F9(0x0007) MISSED OFFSET
	class UWwiseAudioComponent*                        AudioComponent;                                           // 0x0500(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0508(0x0008) MISSED OFFSET
	float                                              CurrentOpacity;                                           // 0x0510(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              CurrentScale;                                             // 0x0514(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FVector2D                                   Scale2D;                                                  // 0x0518(0x0008) (Edit, EditConst, IsPlainOldData)
	bool                                               bOverrideColor;                                           // 0x0520(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0521(0x0003) MISSED OFFSET
	struct FLinearColor                                Color;                                                    // 0x0524(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                ColorHighlights;                                          // 0x0534(0x0010) (Edit, IsPlainOldData)
	unsigned char                                      bEnableRipples : 1;                                       // 0x0544(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bOverrideNormalStrength : 1;                              // 0x0544(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bOverrideMovementSpeed : 1;                               // 0x0544(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0545(0x0003) MISSED OFFSET
	float                                              RipplesStrength;                                          // 0x0548(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RipplesSize;                                              // 0x054C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RipplesSpeed;                                             // 0x0550(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              NormalStrength;                                           // 0x0554(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MovementSpeed;                                            // 0x0558(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bWasSpawned;                                              // 0x055C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x055D(0x0003) MISSED OFFSET
	float                                              OverrideTraceDistance;                                    // 0x0560(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              SpawnTransitionTime;                                      // 0x0564(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData)
	float                                              InitialOpacity;                                           // 0x0568(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData)
	float                                              InitialScale;                                             // 0x056C(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData)
	float                                              FullSizeOpacity;                                          // 0x0570(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData)
	float                                              FullSizeScale;                                            // 0x0574(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData)
	float                                              LifeTime;                                                 // 0x0578(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CleanUpTransitionTime;                                    // 0x057C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CleanUpOpacity;                                           // 0x0580(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData)
	float                                              CleanUpScale;                                             // 0x0584(0x0004) (Edit, Net, ZeroConstructor, IsPlainOldData)
	float                                              ReplicatedCleanUpDuration;                                // 0x0588(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x7C];                                      // 0x058C(0x007C) MISSED OFFSET
	class UHavokNavObstacle*                           NavObstacle;                                              // 0x0608(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UParticleSystemComponent*                    ParticleSystem;                                           // 0x0610(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ElementalPuddle");
		return ptr;
	}


	class AElementalPuddle* STATIC_SpawnElementalPuddle(class UObject* WorldContextObject, class UClass* PuddleClass, const struct FTransform& SpawnTransform, class UElementalPuddleConfigurationData* PuddleConfiguration, class UElementalPuddleSpawnData* PuddleSpawnData, float AutoAlignTraceDistance, class AActor* SpawnOwner, float OverrideFullSizeScale, class APawn* OverrideInstigator);
	class AElementalPuddle* STATIC_SimpleSpawnElementalPuddle(class UObject* WorldContextObject, class UElementalPuddleSimpleSpawnData* SimpleSpawnData, const struct FTransform& SpawnTransform, class AActor* SpawnOwner, class APawn* OverrideInstigator);
	void OnRep_CleanUpDuration();
	void K2_CleanUpPuddle(float CleanUpTime);
};


// Class OakGame.ElementalPuddle_Decal
// 0x0010 (0x0628 - 0x0618)
class AElementalPuddle_Decal : public AElementalPuddle
{
public:
	class UDecalComponent*                             PuddleDecal;                                              // 0x0618(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0620(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ElementalPuddle_Decal");
		return ptr;
	}

};


// Class OakGame.ElementalPuddle_LargeLiquidBody
// 0x0010 (0x0628 - 0x0618)
class AElementalPuddle_LargeLiquidBody : public AElementalPuddle
{
public:
	class UProceduralMeshComponent*                    PuddleMesh;                                               // 0x0618(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0620(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ElementalPuddle_LargeLiquidBody");
		return ptr;
	}

};


// Class OakGame.ElementalPuddle_Mesh
// 0x0010 (0x0628 - 0x0618)
class AElementalPuddle_Mesh : public AElementalPuddle
{
public:
	class UStaticMeshComponent*                        PuddleMesh;                                               // 0x0618(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      bSquarePuddle : 1;                                        // 0x0620(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bMaskEdges : 1;                                           // 0x0620(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bOverrideDepthFade : 1;                                   // 0x0620(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0621(0x0003) MISSED OFFSET
	float                                              DepthFade;                                                // 0x0624(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ElementalPuddle_Mesh");
		return ptr;
	}

};


// Class OakGame.ElementalPuddleConfigurationData
// 0x00E8 (0x0118 - 0x0030)
class UElementalPuddleConfigurationData : public UGbxDataAsset
{
public:
	class UElementalInteractionConfigurationData*      ElementalInteractionConfiguration;                        // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ElementalEffectSizeScale;                                 // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TMap<class UElementalInteractionData*, struct FElementalPuddleTransitionConfigurationData> ElementalInteractionTransitionConfigurations;             // 0x0040(0x0050) (Edit, ZeroConstructor)
	class UMaterialInterface*                          PuddleDecalMaterial;                                      // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          PuddleDecalMaterial_Ripples;                              // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          PuddleMeshMaterial;                                       // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          PuddleMeshMaterial_Ripples;                               // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          LargeLiquidBodySurfaceMaterial;                           // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Color;                                                    // 0x00B8(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                ColorHighlights;                                          // 0x00C8(0x0010) (Edit, IsPlainOldData)
	float                                              NormalStrength;                                           // 0x00D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MovementSpeed;                                            // 0x00DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DepthFade;                                                // 0x00E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00E4(0x0004) MISSED OFFSET
	class UWwiseEvent*                                 NaturalStateAudioLoop;                                    // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ParticleSystem;                                           // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ParticleSystemSurfaceAreaScalar;                          // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	TArray<struct FName>                               NaturalStateEmitterNames;                                 // 0x0100(0x0010) (Edit, ZeroConstructor)
	class UPhysicalMaterial*                           NaturalStatePhysMat;                                      // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ElementalPuddleConfigurationData");
		return ptr;
	}

};


// Class OakGame.ElementalPuddleSimpleSpawnData
// 0x0020 (0x0050 - 0x0030)
class UElementalPuddleSimpleSpawnData : public UGbxDataAsset
{
public:
	class UClass*                                      PuddleClass;                                              // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UElementalPuddleConfigurationData*           PuddleConfiguration;                                      // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UElementalPuddleSpawnData*                   PuddleSpawnData;                                          // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AutoAlignTraceDistance;                                   // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OverrideFullSizeScale;                                    // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ElementalPuddleSimpleSpawnData");
		return ptr;
	}

};


// Class OakGame.ElementalPuddleSpawnData
// 0x0028 (0x0058 - 0x0030)
class UElementalPuddleSpawnData : public UGbxDataAsset
{
public:
	float                                              SpawnTransitionTime;                                      // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InitialOpacity;                                           // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InitialScale;                                             // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FullSizeOpacity;                                          // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FullSizeScale;                                            // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LifeTime;                                                 // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CleanUpTransitionTime;                                    // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CleanUpOpacity;                                           // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CleanUpScale;                                             // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GroundingDecalCleanUpDelay;                               // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ElementalPuddleSpawnData");
		return ptr;
	}

};


// Class OakGame.Elevator
// 0x01A0 (0x06F0 - 0x0550)
class AElevator : public AInteractiveObject
{
public:
	class UStaticMeshComponent*                        ElevatorMesh;                                             // 0x0550(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        Floor1Position;                                           // 0x0558(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        Floor2Position;                                           // 0x0560(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTimelineComponent*                          ElevatorMovementTimeline;                                 // 0x0568(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGbxNavMeshSectionComponent*                 NavMeshSection;                                           // 0x0570(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USplineComponent*                            ElevatorMovementSpline;                                   // 0x0578(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               bForceBaseBoundedCharacters;                              // 0x0580(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCylindricalElevatorBounds;                               // 0x0581(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bFastAttachedMoveBasedCharacters;                         // 0x0582(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0583(0x0005) MISSED OFFSET
	class UBoxComponent*                               ElevatorBounds;                                           // 0x0588(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               ElevatorMovementBounds;                                   // 0x0590(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCurveFloat*                                 FloatCurve;                                               // 0x0598(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SwitchDelayTime;                                          // 0x05A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bStartAtFloor2;                                           // 0x05A4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseTimeForTravel;                                        // 0x05A5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x05A6(0x0002) MISSED OFFSET
	float                                              ElevatorSpeed;                                            // 0x05A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ElevatorTravelTime;                                       // 0x05AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class AInteractiveObject*>                  InternalButtons;                                          // 0x05B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class AInteractiveObject*>                  Floor1RecallButtons;                                      // 0x05C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TArray<class AInteractiveObject*>                  Floor2RecallButtons;                                      // 0x05D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	class UWwiseEvent*                                 StartedMovingAudio;                                       // 0x05E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 StoppedMovingAudio;                                       // 0x05E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UFeedbackData*                               StartMovingFeedback;                                      // 0x05F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UFeedbackData*                               StopMovingFeedback;                                       // 0x05F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCrushPlayers;                                            // 0x0600(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x27];                                      // 0x0601(0x0027) MISSED OFFSET
	float                                              TimelinePlayRate;                                         // 0x0628(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              RepOverrideTimelinePlayRate;                              // 0x062C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Floor1Location;                                           // 0x0630(0x000C) (Net, IsPlainOldData)
	struct FVector                                     Floor2Location;                                           // 0x063C(0x000C) (Net, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0648(0x0008) MISSED OFFSET
	struct FQuat                                       Floor1Rotation;                                           // 0x0650(0x0010) (Net, IsPlainOldData)
	struct FQuat                                       Floor2Rotation;                                           // 0x0660(0x0010) (Net, IsPlainOldData)
	int                                                DesiredFloor;                                             // 0x0670(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bStoppedBetweenFloor;                                     // 0x0674(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0675(0x0003) MISSED OFFSET
	float                                              CurrentPercentage;                                        // 0x0678(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bHasEverMoved;                                            // 0x067C(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x067D(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnElevatorStartsMoving;                                   // 0x0680(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnElevatorReachedFloor;                                   // 0x0690(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnElevatorReachedFloor1;                                  // 0x06A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnElevatorReachedFloor2;                                  // 0x06B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class AOakCharacter*>                       OverlappingCharacters;                                    // 0x06C0(0x0010) (ZeroConstructor, Transient)
	TArray<class AOakCharacter*>                       LastUpdateBoundedCharacters;                              // 0x06D0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData06[0x10];                                      // 0x06E0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.Elevator");
		return ptr;
	}


	void TimelineFinishedCallback();
	void TimelineCallback(float Val);
	void TeleportFloor2(const struct FVector& NewLocation, const struct FRotator& NewRotation);
	void TeleportFloor1(const struct FVector& NewLocation, const struct FRotator& NewRotation);
	void SetFloor2Rotation(const struct FRotator& NewRotation);
	void SetFloor2Location(const struct FVector& NewLocation);
	void SetFloor1Rotation(const struct FRotator& NewRotation);
	void SetFloor1Location(const struct FVector& NewLocation);
	void OnRep_StoppedBetweenFloor();
	void OnRep_Floor2Rotation();
	void OnRep_Floor2Location();
	void OnRep_Floor1Rotation();
	void OnRep_Floor1Location();
	void OnRep_DesiredFloor();
	void OnRep_CurrentPercentage();
	void OnEndBoundsOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnBeginBoundsOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	struct FVector GetFloor2Location();
	struct FVector GetFloor1Location();
	void ElevatorTouched(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ElevatorStopMovement();
	void ElevatorStartsMoving();
	void ElevatorReachedFloor2();
	void ElevatorReachedFloor1();
	void ElevatorReachedFloor();
	void ElevatorMoveToFloor2(float OverrideSpeed);
	void ElevatorMoveToFloor1(float OverrideSpeed);
	void ElevatorInternalButtonPressed();
	void ElevatorFloor2RecallPressed();
	void ElevatorFloor1RecallPressed();
	void ElevatorButtonPressed(class AInteractiveObject* PressedButton);
	void ChangeElevatorTravelTime(float NewTime);
	void ChangeElevatorSpeed(float NewSpeed);
};


// Class OakGame.OakVehicleAnimInstance
// 0x07B0 (0x12F0 - 0x0B40)
class UOakVehicleAnimInstance : public UVehicleAnimInstance
{
public:
	class UWheeledVehicleMovementComponentNW*          WheeledComponent;                                         // 0x0B40(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UVehicleHoverComponent*                      HoverComponent;                                           // 0x0B48(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       GearShiftSlotName;                                        // 0x0B50(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           GearShiftUp;                                              // 0x0B58(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           GearShiftDown;                                            // 0x0B60(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x788];                                     // 0x0B68(0x0788) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleAnimInstance");
		return ptr;
	}


	void PlayGearShiftAnim(int Gear, bool bIsUpShifting);
	void OwnerPostBeginPlay();
};


// Class OakGame.EmperorVehicleAnimInstance
// 0x0840 (0x1B30 - 0x12F0)
class UEmperorVehicleAnimInstance : public UOakVehicleAnimInstance
{
public:
	bool                                               bHasHeavyWheels;                                          // 0x12F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHasThreads;                                              // 0x12F1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x12F2(0x0006) MISSED OFFSET
	class UMaterialInstanceDynamic*                    F_L_Threads_MID;                                          // 0x12F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    F_R_Threads_MID;                                          // 0x1300(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    R_L_Threads_MID;                                          // 0x1308(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    R_R_Threads_MID;                                          // 0x1310(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ThreadMaterialAnimDivider;                                // 0x1318(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x131C(0x0004) MISSED OFFSET
	struct FName                                       ThreadUVOffsetParam;                                      // 0x1320(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     HellFireRecoilOffset;                                     // 0x1328(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               bHasGunnerSeatOccupant;                                   // 0x1334(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bHasDriverSeatOccupant;                                   // 0x1335(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bHasLeftTurretOccupant;                                   // 0x1336(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bHasRightTurretOccupant;                                  // 0x1337(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bHasTurretUser;                                           // 0x1338(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsDroneDoorOpen;                                         // 0x1339(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsDroneOutside;                                          // 0x133A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7F5];                                     // 0x133B(0x07F5) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EmperorVehicleAnimInstance");
		return ptr;
	}

};


// Class OakGame.EndGamePartMinGameStageAttributeValueResolver
// 0x0078 (0x00A0 - 0x0028)
class UEndGamePartMinGameStageAttributeValueResolver : public UAttributeValueResolver
{
public:
	struct FAttributeInitializationData                GameStageToReturnWhenEndGamePartsAreAllowed;              // 0x0028(0x0038) (Edit)
	struct FAttributeInitializationData                GameStageToReturnWhenEndGamePartsAreNotAllowed;           // 0x0060(0x0038) (Edit)
	class UGbxCondition*                               OverrideEnableCondition;                                  // 0x0098(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EndGamePartMinGameStageAttributeValueResolver");
		return ptr;
	}

};


// Class OakGame.OakCondition_IsEndGamePartGuaranteedForLoot
// 0x0000 (0x0088 - 0x0088)
class UOakCondition_IsEndGamePartGuaranteedForLoot : public UGbxCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCondition_IsEndGamePartGuaranteedForLoot");
		return ptr;
	}

};


// Class OakGame.EnemyExperienceMultiplierAttributeValueResolver
// 0x0058 (0x0080 - 0x0028)
class UEnemyExperienceMultiplierAttributeValueResolver : public UAttributeValueResolver
{
public:
	TMap<ENativeEnemyExperienceType, float>            ExperienceTypeToMultiplierMap;                            // 0x0028(0x0050) (Edit, ZeroConstructor)
	float                                              DefaultMultiplier;                                        // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EnemyExperienceMultiplierAttributeValueResolver");
		return ptr;
	}

};


// Class OakGame.EnvQueryGenerator_Allies
// 0x0018 (0x0078 - 0x0060)
class UEnvQueryGenerator_Allies : public UEnvQueryGenerator
{
public:
	struct FOakPlayerAbilityAllyQuerySpec              Spec;                                                     // 0x0060(0x0010) (Edit, DisableEditOnInstance)
	bool                                               bIncludeSelf;                                             // 0x0070(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EnvQueryGenerator_Allies");
		return ptr;
	}

};


// Class OakGame.EnvQueryGenerator_InteractiveObjects
// 0x00A0 (0x0100 - 0x0060)
class UEnvQueryGenerator_InteractiveObjects : public UEnvQueryGenerator
{
public:
	struct FAIDataProviderFloatValue                   DistanceMax;                                              // 0x0060(0x0030) (Edit)
	class UGbxCondition*                               Condition;                                                // 0x0090(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FActorTagCompositeQuery                     TagQuery;                                                 // 0x0098(0x0010) (Edit)
	TArray<TSoftObjectPtr<class UClass>>               AllowedTypes;                                             // 0x00A8(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      bUseAllowedTypes : 1;                                     // 0x00B8(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET
	TArray<TSoftObjectPtr<class UClass>>               DisallowedTypes;                                          // 0x00C0(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      bUseDisallowedTypes : 1;                                  // 0x00D0(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET
	TArray<class UClass*>                              AllowedTypesCache;                                        // 0x00D8(0x0010) (ZeroConstructor, Transient)
	TArray<class UClass*>                              DisallowedTypesCache;                                     // 0x00E8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EnvQueryGenerator_InteractiveObjects");
		return ptr;
	}

};


// Class OakGame.EnvQueryGenerator_Lootables
// 0x0038 (0x0098 - 0x0060)
class UEnvQueryGenerator_Lootables : public UEnvQueryGenerator
{
public:
	bool                                               bAllowOpenedLootables;                                    // 0x0060(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	struct FAIDataProviderFloatValue                   DistanceMax;                                              // 0x0068(0x0030) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EnvQueryGenerator_Lootables");
		return ptr;
	}

};


// Class OakGame.EnvQueryGenerator_PlayerTarget
// 0x0000 (0x0110 - 0x0110)
class UEnvQueryGenerator_PlayerTarget : public UEnvQueryGenerator_TargetableActors
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EnvQueryGenerator_PlayerTarget");
		return ptr;
	}

};


// Class OakGame.EnvQueryTest_CompanionTargetable
// 0x0000 (0x01D8 - 0x01D8)
class UEnvQueryTest_CompanionTargetable : public UEnvQueryTest
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EnvQueryTest_CompanionTargetable");
		return ptr;
	}

};


// Class OakGame.EnvQueryTest_DigicloneTrace
// 0x0070 (0x0248 - 0x01D8)
class UEnvQueryTest_DigicloneTrace : public UEnvQueryTest
{
public:
	struct FAIDataProviderFloatValue                   ItemHeightOffset;                                         // 0x01D8(0x0030) (Edit, DisableEditOnInstance)
	struct FAIDataProviderFloatValue                   ContextHeightOffset;                                      // 0x0208(0x0030) (Edit, DisableEditOnInstance)
	class UClass*                                      Context;                                                  // 0x0238(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Radius;                                                   // 0x0240(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0244(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EnvQueryTest_DigicloneTrace");
		return ptr;
	}

};


// Class OakGame.EnvQueryTest_DownStateBoost
// 0x0000 (0x01D8 - 0x01D8)
class UEnvQueryTest_DownStateBoost : public UEnvQueryTest
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EnvQueryTest_DownStateBoost");
		return ptr;
	}

};


// Class OakGame.EnvQueryTest_PlayerLineOfSight
// 0x0000 (0x01D8 - 0x01D8)
class UEnvQueryTest_PlayerLineOfSight : public UEnvQueryTest
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EnvQueryTest_PlayerLineOfSight");
		return ptr;
	}

};


// Class OakGame.EnvQueryTest_PlayerTarget
// 0x0008 (0x01E0 - 0x01D8)
class UEnvQueryTest_PlayerTarget : public UEnvQueryTest
{
public:
	class UClass*                                      SourceContext;                                            // 0x01D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EnvQueryTest_PlayerTarget");
		return ptr;
	}

};


// Class OakGame.EscortLocationComponent
// 0x0020 (0x02F0 - 0x02D0)
class UEscortLocationComponent : public USceneComponent
{
public:
	float                                              SnapToGroundDistance;                                     // 0x02D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02D4(0x0004) MISSED OFFSET
	class AOakVehicle*                                 Escorter;                                                 // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bSnapToGround;                                            // 0x02E0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x02E1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EscortLocationComponent");
		return ptr;
	}


	void SetOccupation(class AOakVehicle* Vehicle);
	bool IsOccupied();
	void STATIC_InitEscort(class AOakVehicle* Target, class AActor* ActorToEscort, bool bUseNearest);
	TArray<class UEscortLocationComponent*> STATIC_FindEscortLocation(class AActor* ActorToEscort, bool bIsFree);
	class UEscortLocationComponent* STATIC_FindEscortComponent(class AOakVehicle* Target, class AActor* ActorToEscort, bool bUseNearest);
	void STATIC_ClearEscortOccupation(class AOakVehicle* Target);
};


// Class OakGame.ExperienceGlobals
// 0x0140 (0x0170 - 0x0030)
class UExperienceGlobals : public UGbxDataAsset
{
public:
	struct FAttributeInitializationData                BaseEnemyExperienceFormula;                               // 0x0030(0x0038) (Edit)
	TArray<struct FLevelBasedExpScale>                 ExpScaleByLevelDifference;                                // 0x0068(0x0010) (Edit, ZeroConstructor)
	struct FAttributeInitializationData                VehicleVSCharacterExpModifier;                            // 0x0078(0x0038) (Edit)
	TArray<struct FExpAwardWeight>                     ExpAwardWeights;                                          // 0x00B0(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	class UClass*                                      GuardianRankAbilityClass;                                 // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAttributeInitializationData                BaseScanVehicleExperienceFormula;                         // 0x00C8(0x0038) (Edit)
	struct FAttributeInitializationData                BaseDiscoverAreaExperienceFormula;                        // 0x0100(0x0038) (Edit)
	struct FPlayerExperienceFormula                    PlayerExperienceFormula;                                  // 0x0138(0x000C) (Edit, IsPlainOldData)
	struct FPlayerGuardianRankFormula                  PlayerGuardianRankFormula;                                // 0x0144(0x0014) (Edit, IsPlainOldData)
	struct FPlayerVaultCardLevelFormula                PlayerVaultCardLevelFormula;                              // 0x0158(0x0014) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x016C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ExperienceGlobals");
		return ptr;
	}

};


// Class OakGame.ExtensionUIData
// 0x0AE8 (0x0B18 - 0x0030)
class UExtensionUIData : public UGbxDataAsset
{
public:
	struct FText                                       JoinCount;                                                // 0x0030(0x0028) (Edit)
	struct FText                                       JoinLabel;                                                // 0x0048(0x0028) (Edit)
	struct FText                                       Joined;                                                   // 0x0060(0x0028) (Edit)
	struct FText                                       SubscribersBonus;                                         // 0x0078(0x0028) (Edit)
	struct FText                                       ShiftAccountNotLinked;                                    // 0x0090(0x0028) (Edit)
	struct FText                                       PollResultTitle;                                          // 0x00A8(0x0028) (Edit)
	struct FText                                       PollResultVotes;                                          // 0x00C0(0x0028) (Edit)
	struct FText                                       ProfileGameSettingsDifficulty;                            // 0x00D8(0x0028) (Edit)
	struct FText                                       ProfileGameSettingsGroupMode;                             // 0x00F0(0x0028) (Edit)
	struct FText                                       ProfileGameSettingsPlaythrough;                           // 0x0108(0x0028) (Edit)
	struct FText                                       ProfileGameSettingsMayhem;                                // 0x0120(0x0028) (Edit)
	struct FText                                       StoryModeName;                                            // 0x0138(0x0028) (Edit)
	struct FText                                       StoryModeShortName;                                       // 0x0150(0x0028) (Edit)
	struct FText                                       StoryModeDescription;                                     // 0x0168(0x0028) (Edit)
	struct FText                                       NormalModeName;                                           // 0x0180(0x0028) (Edit)
	struct FText                                       NormalModeShortName;                                      // 0x0198(0x0028) (Edit)
	struct FText                                       NormalModeDescription;                                    // 0x01B0(0x0028) (Edit)
	struct FText                                       CooperationName;                                          // 0x01C8(0x0028) (Edit)
	struct FText                                       CooperationShortName;                                     // 0x01E0(0x0028) (Edit)
	struct FText                                       CooperationDescription;                                   // 0x01F8(0x0028) (Edit)
	struct FText                                       CoopetitionName;                                          // 0x0210(0x0028) (Edit)
	struct FText                                       CoopetitionShortName;                                     // 0x0228(0x0028) (Edit)
	struct FText                                       CoopetitionDescription;                                   // 0x0240(0x0028) (Edit)
	struct FText                                       MayhemName;                                               // 0x0258(0x0028) (Edit)
	struct FText                                       MayhemShortName;                                          // 0x0270(0x0028) (Edit)
	struct FText                                       MayhemDescription;                                        // 0x0288(0x0028) (Edit)
	struct FText                                       PlaythroughNormalName;                                    // 0x02A0(0x0028) (Edit)
	struct FText                                       PlaythroughNormalShortName;                               // 0x02B8(0x0028) (Edit)
	struct FText                                       PlaythroughNormalDescription;                             // 0x02D0(0x0028) (Edit)
	struct FText                                       PlaythroughTVHMName;                                      // 0x02E8(0x0028) (Edit)
	struct FText                                       PlaythroughTVHMShortName;                                 // 0x0300(0x0028) (Edit)
	struct FText                                       PlaythroughTVHMDescription;                               // 0x0318(0x0028) (Edit)
	struct FText                                       PopupClose;                                               // 0x0330(0x0028) (Edit)
	struct FText                                       PopupSend;                                                // 0x0348(0x0028) (Edit)
	struct FText                                       PopupSelect;                                              // 0x0360(0x0028) (Edit)
	struct FText                                       MenuToggle;                                               // 0x0378(0x0028) (Edit)
	struct FText                                       MenuProfile;                                              // 0x0390(0x0028) (Edit)
	struct FText                                       MenuInventory;                                            // 0x03A8(0x0028) (Edit)
	struct FText                                       MenuSkillTree;                                            // 0x03C0(0x0028) (Edit)
	struct FText                                       MenuGuardianRank;                                         // 0x03D8(0x0028) (Edit)
	struct FText                                       MenuEvents;                                               // 0x03F0(0x0028) (Edit)
	struct FText                                       MenuAccountLink;                                          // 0x0408(0x0028) (Edit)
	struct FText                                       MenuGameSettings;                                         // 0x0420(0x0028) (Edit)
	struct FText                                       TabProfile;                                               // 0x0438(0x0028) (Edit)
	struct FText                                       TabProfileStats;                                          // 0x0450(0x0028) (Edit)
	struct FText                                       TabInventoryEquipment;                                    // 0x0468(0x0028) (Edit)
	struct FText                                       TabInventoryBackpack;                                     // 0x0480(0x0028) (Edit)
	struct FText                                       TabSkillTreeLeftBranch;                                   // 0x0498(0x0028) (Edit)
	struct FText                                       TabSkillTreeMiddleBranch;                                 // 0x04B0(0x0028) (Edit)
	struct FText                                       TabSkillTreeRightBranch;                                  // 0x04C8(0x0028) (Edit)
	struct FText                                       TabGuardianRankRewards;                                   // 0x04E0(0x0028) (Edit)
	struct FText                                       TabGuardianRankStats;                                     // 0x04F8(0x0028) (Edit)
	struct FText                                       TabEvents;                                                // 0x0510(0x0028) (Edit)
	struct FText                                       ToastLoaderHeader;                                        // 0x0528(0x0028) (Edit)
	struct FText                                       ToastLoaderMessage;                                       // 0x0540(0x0028) (Edit)
	struct FText                                       ToastPreorderHeader;                                      // 0x0558(0x0028) (Edit)
	struct FText                                       ToastPreorderMessage;                                     // 0x0570(0x0028) (Edit)
	struct FText                                       ToastBuyHeader;                                           // 0x0588(0x0028) (Edit)
	struct FText                                       ToastBuyMessage;                                          // 0x05A0(0x0028) (Edit)
	struct FText                                       ToastDisabledHeader;                                      // 0x05B8(0x0028) (Edit)
	struct FText                                       ToastDisabledMessage;                                     // 0x05D0(0x0028) (Edit)
	struct FText                                       ToastEventStarted;                                        // 0x05E8(0x0028) (Edit)
	struct FText                                       ProfileCharacterLevel;                                    // 0x0600(0x0028) (Edit)
	struct FText                                       ProfileGuardianRank;                                      // 0x0618(0x0028) (Edit)
	struct FText                                       ProfileGuardianRankTooltip;                               // 0x0630(0x0028) (Edit)
	struct FText                                       ProfileMayhemLevel;                                       // 0x0648(0x0028) (Edit)
	struct FText                                       ProfileStatSessionLifetime;                               // 0x0660(0x0028) (Edit)
	struct FText                                       ProfileStatDamageCaused;                                  // 0x0678(0x0028) (Edit)
	struct FText                                       ProfileStatEnemiesKilled;                                 // 0x0690(0x0028) (Edit)
	struct FText                                       ProfileStatTimeInjured;                                   // 0x06A8(0x0028) (Edit)
	struct FText                                       ProfileStatTimeDead;                                      // 0x06C0(0x0028) (Edit)
	struct FText                                       InventoryCardRating;                                      // 0x06D8(0x0028) (Edit)
	struct FText                                       InventoryCardLevelRequired;                               // 0x06F0(0x0028) (Edit)
	struct FText                                       SkillCardDefaultTypeName;                                 // 0x0708(0x0028) (Edit)
	struct FText                                       SkillCardAugmentTypeName;                                 // 0x0720(0x0028) (Edit)
	struct FText                                       SkillCardActionSkillTypeName;                             // 0x0738(0x0028) (Edit)
	struct FText                                       SkillCardActionSkillAugmentTypeName;                      // 0x0750(0x0028) (Edit)
	struct FText                                       SkillCardPassiveTypeName;                                 // 0x0768(0x0028) (Edit)
	struct FText                                       SkillCardPetTypeName;                                     // 0x0780(0x0028) (Edit)
	struct FText                                       SkillCardPoints;                                          // 0x0798(0x0028) (Edit)
	struct FText                                       SkillCardEquipped;                                        // 0x07B0(0x0028) (Edit)
	struct FText                                       SkillCardNotEquipped;                                     // 0x07C8(0x0028) (Edit)
	struct FText                                       SkillCardPurchased;                                       // 0x07E0(0x0028) (Edit)
	struct FText                                       SkillCardNotEnoughPoints;                                 // 0x07F8(0x0028) (Edit)
	struct FText                                       SkillCardNotPurchased;                                    // 0x0810(0x0028) (Edit)
	struct FText                                       SkillCardNotUnlocked;                                     // 0x0828(0x0028) (Edit)
	struct FText                                       SkillCardCurrentEffect;                                   // 0x0840(0x0028) (Edit)
	struct FText                                       SkillCardNextRank;                                        // 0x0858(0x0028) (Edit)
	struct FText                                       SkillCardCustomizeBuild;                                  // 0x0870(0x0028) (Edit)
	struct FText                                       GuardianRankCost;                                         // 0x0888(0x0028) (Edit)
	struct FText                                       GuardianRankProgress;                                     // 0x08A0(0x0028) (Edit)
	struct FText                                       UpsellHeader;                                             // 0x08B8(0x0028) (Edit)
	struct FText                                       UpsellMessage;                                            // 0x08D0(0x0028) (Edit)
	struct FText                                       UpsellGrantAccessMessage;                                 // 0x08E8(0x0028) (Edit)
	struct FText                                       UpsellGrantAccessAction;                                  // 0x0900(0x0028) (Edit)
	struct FText                                       UpsellLinkAccountMessage;                                 // 0x0918(0x0028) (Edit)
	struct FText                                       UpsellLinkAccountAction;                                  // 0x0930(0x0028) (Edit)
	struct FText                                       UpsellRefreshAction;                                      // 0x0948(0x0028) (Edit)
	struct FText                                       UpsellLinkedMessage;                                      // 0x0960(0x0028) (Edit)
	struct FText                                       UpsellViewShiftAction;                                    // 0x0978(0x0028) (Edit)
	struct FText                                       AugmentOperativeGrenadeMod1;                              // 0x0990(0x0028) (Edit)
	struct FText                                       AugmentOperativeGrenadeMod2;                              // 0x09A8(0x0028) (Edit)
	struct FText                                       AugmentOperativeActionSkillMod1;                          // 0x09C0(0x0028) (Edit)
	struct FText                                       AugmentOperativeActionSkillMod2;                          // 0x09D8(0x0028) (Edit)
	struct FText                                       AugmentGunnerRightHardPointSlot;                          // 0x09F0(0x0028) (Edit)
	struct FText                                       AugmentGunnerRightHardPointMod;                           // 0x0A08(0x0028) (Edit)
	struct FText                                       AugmentGunnerLeftHardPointSlot;                           // 0x0A20(0x0028) (Edit)
	struct FText                                       AugmentGunnerLeftHardPointMod;                            // 0x0A38(0x0028) (Edit)
	struct FText                                       AugmentBeastmasterActionSkillMod1;                        // 0x0A50(0x0028) (Edit)
	struct FText                                       AugmentBeastmasterActionSkillMod2;                        // 0x0A68(0x0028) (Edit)
	struct FText                                       BreadcrumbHome;                                           // 0x0A80(0x0028) (Edit)
	struct FText                                       NoTrinket;                                                // 0x0A98(0x0028) (Edit)
	struct FText                                       Redacted;                                                 // 0x0AB0(0x0028) (Edit)
	TMap<class FString, struct FText>                  AdditionalLines;                                          // 0x0AC8(0x0050) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ExtensionUIData");
		return ptr;
	}

};


// Class OakGame.FalconStrikeTargetingComponent
// 0x0198 (0x0330 - 0x0198)
class UFalconStrikeTargetingComponent : public UWeaponPreUseComponent
{
public:
	struct FScriptMulticastDelegate                    OnTargetAdded;                                            // 0x0198(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FName                                       FallbackHUDIconSocketName;                                // 0x01A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HUDIconPatternSize;                                       // 0x01B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01B4(0x0004) MISSED OFFSET
	class UInWorldIconData*                            HUDIconData;                                              // 0x01B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FEnvQueryParams                             TargetQueryParams;                                        // 0x01C0(0x00B8) (Edit, DisableEditOnInstance)
	struct FAttributeInitializationData                MaxTargetsData;                                           // 0x0278(0x0038) (Edit, DisableEditOnInstance)
	struct FAttributeInitializationData                TargetPaintingDuration;                                   // 0x02B0(0x0038) (Edit, DisableEditOnInstance)
	int                                                MaxTargets;                                               // 0x02E8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x02EC(0x0004) MISSED OFFSET
	TArray<struct FPaintedTarget>                      PaintedTargets;                                           // 0x02F0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	class AOakCharacter_Player*                        CachedOwnerPlayer;                                        // 0x0300(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0308(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.FalconStrikeTargetingComponent");
		return ptr;
	}


	void ServerResetTargetList();
	void ServerAddTarget(class AActor* NewTarget);
	void PaintTargetFinished();
	void OnRocketDestroyed(class ULightProjectile* Rocket);
	void ForceRemoveIconsDelayFinished();
};


// Class OakGame.FalconStrikeWeaponFireComponent
// 0x0000 (0x0958 - 0x0958)
class UFalconStrikeWeaponFireComponent : public UWeaponFireProjectileComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.FalconStrikeWeaponFireComponent");
		return ptr;
	}

};


// Class OakGame.FightForYourLifeComponent
// 0x0FB0 (0x1360 - 0x03B0)
class UFightForYourLifeComponent : public UUsableComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03B0(0x0008) MISSED OFFSET
	class UGameResourceData*                           DownStateTimeResourceData;                                // 0x03B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGameResourceData*                           ReviveTimeResourceData;                                   // 0x03C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaximumRevivingActors;                                    // 0x03C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03CC(0x0004) MISSED OFFSET
	struct FGameResourcePoolReference                  DownTimeResourcePool;                                     // 0x03D0(0x0018) (BlueprintVisible, BlueprintReadOnly, Net)
	float                                              GiveUpDownTimeConsumptionRate;                            // 0x03E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               StartDownStateTimePaused;                                 // 0x03EC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x03ED(0x0003) MISSED OFFSET
	class UHUDNotificationAsset*                       DefaultExitNotificationAsset;                             // 0x03F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FText                                       DefaultExitNotificationText;                              // 0x03F8(0x0028) (Edit)
	uint32_t                                           ExitNotificationPriority;                                 // 0x0410(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0414(0x0004) MISSED OFFSET
	class UStatusEffectData*                           BeingRevivedStatusEffectData;                             // 0x0418(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FPostProcessSettings                        PostProcessTransition;                                    // 0x0420(0x0600) (Edit)
	class UCurveFloat*                                 PostProcessTransitionCurve;                               // 0x0A20(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0A28(0x0008) MISSED OFFSET
	struct FPostProcessSettings                        PostProcessBleedOut;                                      // 0x0A30(0x0600) (Edit)
	class UCurveFloat*                                 PostProcessBleedOutCurve;                                 // 0x1030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 DownstateStartAudio;                                      // 0x1038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 DownstateStopAudio;                                       // 0x1040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 DeathStartAudio;                                          // 0x1048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 DeathWormholeAudio;                                       // 0x1050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 InstantDeathWormholeAudio;                                // 0x1058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 ResurrectionStartAudio;                                   // 0x1060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 ResurrectionStopAudio;                                    // 0x1068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxHUDStateData*                            OverrideHUDState;                                         // 0x1070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             RevivingParticleTemplate;                                 // 0x1078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    RevivingParticle;                                         // 0x1080(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bRevivingParticleActive;                                  // 0x1088(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x1089(0x0007) MISSED OFFSET
	class UGbxAttributeData*                           RevivingTimeRateScalarFormula;                            // 0x1090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGameResourcePoolReference                  BeingRevivedTimeResourcePool;                             // 0x1098(0x0018) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FGameResourcePoolReference                  RevivingTimeResourcePool;                                 // 0x10B0(0x0018) (BlueprintVisible, BlueprintReadOnly, Net)
	TArray<class AActor*>                              BeingRevivedByActors;                                     // 0x10C8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class AActor*                                      ActorToRevive;                                            // 0x10D8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                ActorsRevivingCount;                                      // 0x10E0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bBeingRevivedByPlayer;                                    // 0x10E4(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	EDownState                                         CurrentDownState;                                         // 0x10E5(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	EReviveState                                       ReviveState;                                              // 0x10E6(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bReviveSuccessful;                                        // 0x10E7(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FExitDownStateInformation                   DownStateExitReason;                                      // 0x10E8(0x0028) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	bool                                               bCinematicPause;                                          // 0x1110(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x1111(0x0007) MISSED OFFSET
	struct FStatusEffectInstanceReference              BeingRevivedEffectRef;                                    // 0x1118(0x0018) (Transient)
	struct FScriptMulticastDelegate                    OnDownState_StartLocal;                                   // 0x1130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDownState_StartHost;                                    // 0x1140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDownState_StartOther;                                   // 0x1150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDownState_CinematicPauseLocal;                          // 0x1160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDownState_CinematicPauseHost;                           // 0x1170(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDownState_StopLocal;                                    // 0x1180(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDownState_StopHost;                                     // 0x1190(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDownState_StopOther;                                    // 0x11A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDownState_FinishLocal;                                  // 0x11B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDownState_FinishHost;                                   // 0x11C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDownAndExertingState_StartLocal;                        // 0x11D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDownAndExertingState_StopLocal;                         // 0x11E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBeingRevivedState_StartLocal;                           // 0x11F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBeingRevivedState_StartHost;                            // 0x1200(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBeingRevivedState_StartOther;                           // 0x1210(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBeingRevivedState_StopLocal;                            // 0x1220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBeingRevivedState_StopHost;                             // 0x1230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBeingRevivedState_StopOther;                            // 0x1240(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRevivingState_StartLocal;                               // 0x1250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRevivingState_StartHost;                                // 0x1260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRevivingState_StopLocal;                                // 0x1270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRevivingState_StopHost;                                 // 0x1280(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData07[0x18];                                      // 0x1290(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnGivingUpState_StartLocal;                               // 0x12A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGivingUpState_StartHost;                                // 0x12B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGivingUpState_StopLocal;                                // 0x12C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGivingUpState_StopHost;                                 // 0x12D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRespawnStart;                                           // 0x12E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTransport;                                              // 0x12F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              StockDownTimeConsumptionRate;                             // 0x1308(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              StockRevivingTimeConsumptionRate;                         // 0x130C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnResurrectedAtStation;                                   // 0x1310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UDamageComponent*                            CurrentSecondWindTargetComp;                              // 0x1320(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              SecondWindTargetRetainTime;                               // 0x1328(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0xC];                                       // 0x132C(0x000C) MISSED OFFSET
	bool                                               bSuppressWidget;                                          // 0x1338(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x1339(0x0003) MISSED OFFSET
	float                                              RadiusExpansion;                                          // 0x133C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HalfHeightExpansion;                                      // 0x1340(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x1C];                                      // 0x1344(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.FightForYourLifeComponent");
		return ptr;
	}


	void UpdatePreGiveUp();
	void TransportEvent__DelegateSignature(bool bTransportStarted);
	void ServerGivingUpState_Stop();
	void ServerGivingUpState_Start();
	void SecondWindTargetDied(class AActor* DamageReceiver, class AActor* DamageCauser);
	void RevivingState_Stop(bool IsHealed);
	void RevivingState_Start(class AActor* ActorBeingRevived);
	void ResurrectingState_Stop();
	void ResurrectingState_Start();
	void RestoreAttributeValue(class UGbxAttributeData* CurrentValueAttribute, class UGbxAttributeData* MaxValueAttribute, class UGbxAttributeData* PercentAfterDeathAttribute);
	void ReplenishHealthAndShield(float HealthPercent, float ShieldPercent, class UWwiseEvent* WwiseEvent);
	void PlayWwiseEventOnOwner(class UWwiseEvent* EventToPlay);
	void PauseDownStateTimer(bool PauseTimer);
	void OtherFightForYourLifeEvent__DelegateSignature(class UFightForYourLifeComponent* OtherFFYL);
	void OnRep_RevivingParticleActive();
	void OnRep_ReviveState(EReviveState OldREviveState);
	void OnRep_DownStateExitReason();
	void OnRep_CurrentDownState(EDownState OldDownState);
	void OnRep_ActorToRevive();
	void NotifyRespawnStart();
	void MarkSecondWindTarget(class AActor* DamagedActor);
	bool IsReviving();
	bool IsResurrecting();
	bool IsLocalOwner();
	bool IsInDownState();
	bool IsCharacterAHealer(class AActor* HealingActor);
	bool IsBeingRevivedByPlayer();
	bool IsBeingRevived();
	void GivingUpState_Stop();
	void GivingUpState_Start();
	float GetReviveTimePercentage();
	float GetDownTimePercentage();
	void FightForYourLifeWithStateEvent__DelegateSignature(EExitDownStateReason ExitDownStateReason);
	void FightForYourLifeWithBoolEvent__DelegateSignature(bool IsSuccessful);
	void FightForYourLifeResurrected__DelegateSignature(class UTravelStationResurrectComponent* ResurrectStation);
	void FightForYourLifeEventWithActorBeingRevived__DelegateSignature(class AActor* ActorBeingRevived);
	void FightForYourLifeEvent__DelegateSignature();
	void DownStateTimeExpired(const struct FGameResourcePoolReference& ResourcePool);
	void DownStateCausedDamage(class AActor* DamageInstigator, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details);
	void DownState_Stop(EExitDownStateReason Reason, const struct FText& CustomExitMessageText, class UHUDNotificationAsset* CustomExitNotification);
	void DownState_Start(bool InstantDeath);
	void DownState_Finish();
	void DownAndExertingState_Stop();
	void DownAndExertingState_Start();
	void DisplayExitNotification();
	void ClearSecondWindTarget();
	void ClearDownStateExitReason();
	void BeingRevivedTimeExpired(const struct FGameResourcePoolReference& ResourcePool);
	void BeingRevivedState_Stop(bool IsHealed);
	bool BeingRevivedState_Start(class AActor* RevivingActor);
	void ActivateSecondWind();
};


// Class OakGame.FocusableComponent
// 0x0020 (0x0198 - 0x0178)
class UFocusableComponent : public UActorComponent
{
public:
	struct FVector2D                                   FocusScreenOffset;                                        // 0x0178(0x0008) (Edit, IsPlainOldData)
	bool                                               bUseFocusSocket;                                          // 0x0180(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0181(0x0007) MISSED OFFSET
	struct FName                                       FocusSocket;                                              // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FocusRadius;                                              // 0x0190(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0194(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.FocusableComponent");
		return ptr;
	}

};


// Class OakGame.FogOfDiscoveryCapture
// 0x0040 (0x0498 - 0x0458)
class AFogOfDiscoveryCapture : public AActor
{
public:
	bool                                               RunBlueprintLogic;                                        // 0x0458(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0459(0x0007) MISSED OFFSET
	class UTextureRenderTarget2D*                      OverrideDiscoveryTexture;                                 // 0x0460(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptDelegate                             OnFogSceneUpdated;                                        // 0x0468(0x0014) (ZeroConstructor, Transient, InstancedReference)
	class UTextureRenderTarget2D*                      WorldPositionTexture;                                     // 0x0478(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UZoneMapData*                                CurrentLevelZoneMap;                                      // 0x0480(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UZoneMapData*                                PendingLevelZoneMap;                                      // 0x0488(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FVector2D                                   PendingCaptureSize;                                       // 0x0490(0x0008) (Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.FogOfDiscoveryCapture");
		return ptr;
	}


	bool SetUpDataForLevel(class UZoneMapData* LevelZoneMap, bool bImmediateLoad, struct FVector2D* CaptureSize);
	bool SetupComponentsForCapture();
	void OnZoneMapMeshDataLoaded();
	void OnFogLevelLoaded(class UZoneMapData* UpdatedZoneMap);
	void FogTextureCreated();
	void CaptureScene();
};


// Class OakGame.FogOfDiscoveryComponent
// 0x0068 (0x01E0 - 0x0178)
class UFogOfDiscoveryComponent : public UActorComponent
{
public:
	class UMaterialInstanceDynamic*                    FogOfDiscoveryMID;                                        // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UZoneMapData>                 CurrentLevelZoneMap;                                      // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UZoneMapData>                 PendingLevelZoneMap;                                      // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0190(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.FogOfDiscoveryComponent");
		return ptr;
	}


	void SaveFODTexture(bool bFast);
	void OnZoneMapMeshDataLoaded();
	void OnPlayerExitedVehicle(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnPlayerEnteringVehicle(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnCharacterChanged(class APawn* NewPawn, class APawn* OldPawn);
	void DeferredInitializeZoneMapMesh();
};


// Class OakGame.VaultHunterStatusData
// 0x0028 (0x0058 - 0x0030)
class UVaultHunterStatusData : public UGbxDataAsset
{
public:
	struct FText                                       DisplayText;                                              // 0x0030(0x0028) (Edit)
	class FString                                      Icon;                                                     // 0x0048(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VaultHunterStatusData");
		return ptr;
	}

};


// Class OakGame.FriendGlobals
// 0x0058 (0x0088 - 0x0030)
class UFriendGlobals : public UGbxDataAsset
{
public:
	class UChallengeList*                              AchievementChallengeList;                                 // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  FriendEventDataTable;                                     // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UVaultHunterStatusData*>              VaultHunterStatusTable;                                   // 0x0040(0x0010) (Edit, ExportObject, ZeroConstructor)
	struct FGameplayTag                                EnemyTag;                                                 // 0x0050(0x0008) (Edit, DisableEditOnInstance)
	struct FGameplayTag                                NamedEnemyTag;                                            // 0x0058(0x0008) (Edit, DisableEditOnInstance)
	struct FGameplayTag                                BossTag;                                                  // 0x0060(0x0008) (Edit, DisableEditOnInstance)
	float                                              Lifetime_Normal;                                          // 0x0068(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Lifetime_Long;                                            // 0x006C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Lifetime_VeryLong;                                        // 0x0070(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Frequency_VeryLow;                                        // 0x0074(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Frequency_Low;                                            // 0x0078(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Frequency_Normal;                                         // 0x007C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Frequency_High;                                           // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0084(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.FriendGlobals");
		return ptr;
	}

};


// Class OakGame.FrontendStandInAnimInstance
// 0x0030 (0x0570 - 0x0540)
class UFrontendStandInAnimInstance : public UGbxAnimInstance
{
public:
	bool                                               bIsInNeutralPose;                                         // 0x0540(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0541(0x000F) MISSED OFFSET
	class UStandInGlobals*                             StandInGlobals;                                           // 0x0550(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AOakCharacter*                               Character;                                                // 0x0558(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class APlayerStandIn*                              PlayerStandIn;                                            // 0x0560(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0568(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.FrontendStandInAnimInstance");
		return ptr;
	}

};


// Class OakGame.GalaxyData
// 0x0068 (0x0098 - 0x0030)
class UGalaxyData : public UGbxDataAsset
{
public:
	struct FText                                       DisplayName;                                              // 0x0030(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       Description;                                              // 0x0048(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FSoftObjectPath                             GalaxyMesh;                                               // 0x0060(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<class UPlanetData*>                         PlanetData;                                               // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<class UChallengeCategoryData*>              ProgressChallengeCategories;                              // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GalaxyData");
		return ptr;
	}


	class UPlanetData* STATIC_GetPlanetForTrackedMission(class UObject* WorldContextObject);
};


// Class OakGame.GalaxyExpansionData
// 0x0080 (0x00B0 - 0x0030)
class UGalaxyExpansionData : public UGbxDataAsset
{
public:
	TArray<struct FDiscoveryIOData>                    DiscoveryIOs;                                             // 0x0030(0x0010) (Edit, ZeroConstructor)
	TArray<struct FGalaxySkyboxData>                   Skyboxes;                                                 // 0x0040(0x0010) (Edit, ZeroConstructor)
	TArray<struct FZoneIdToMapIdMappingData>           ZoneID_to_MapID;                                          // 0x0050(0x0010) (Edit, ZeroConstructor)
	TArray<struct FPlanetMapDataToPlanetIdMappingData> PlanetData_To_PlanetID;                                   // 0x0060(0x0010) (Edit, ZeroConstructor)
	TArray<struct FMapIDToPlanetDataMappingData>       MapID_To_PlanetData;                                      // 0x0070(0x0010) (Edit, ZeroConstructor)
	TArray<struct FZoneIDToMissionEventReferenceData>  UpdateEvent;                                              // 0x0080(0x0010) (Edit, ZeroConstructor)
	TArray<struct FZoneIDToMissionEventReferenceData>  AdvanceEvent;                                             // 0x0090(0x0010) (Edit, ZeroConstructor)
	class UGbxCondition*                               WaypointEnabledCondition;                                 // 0x00A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGbxCondition*                               DropPodWaypointEnabledCondition;                          // 0x00A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GalaxyExpansionData");
		return ptr;
	}


	class UClass* GetRequiredInterface();
	bool EnabledConditionRequiresNativeClass();
};


// Class OakGame.GalaxyMapStation
// 0x0020 (0x0680 - 0x0660)
class AGalaxyMapStation : public AAdvancedInteractiveObject
{
public:
	class UPlanetData*                                 CurrentPlanetData;                                        // 0x0660(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class UPlanetMeshData*                             CurrentPlanetMeshData;                                    // 0x0668(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UPlanetData*                                 OrbitingPlanetData;                                       // 0x0670(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class AGalaxyMapStationPatch*                      GalaxyMapStationPatch;                                    // 0x0678(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GalaxyMapStation");
		return ptr;
	}


	void SetCurrentPlanetData(class UPlanetData* PlanetData);
	void OnTravelIDsChanged();
	void OnRep_CurrentPlanetData();
	void OnPlanetMeshDataLoaded();
	void K2_PostLoadedPlanetMesh();
	void K2_OnPlanetSelected(class UPlanetData* Planet);
	void K2_OnBrowsePlanet(class UPlanetData* Planet);
	class UPlanetData* GetPlanetDataFromZoneNameID(unsigned char ZoneNameID);
	class UPlanetData* GetPlanetDataFromMapNameID(unsigned char MapNameID);
};


// Class OakGame.GalaxyMapStationPatch
// 0x0000 (0x0458 - 0x0458)
class AGalaxyMapStationPatch : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GalaxyMapStationPatch");
		return ptr;
	}


	void K2_OnPlanetSelected(class UPlanetData* Planet);
};


// Class OakGame.GalaxyMapStationProxy
// 0x0000 (0x04E8 - 0x04E8)
class AGalaxyMapStationProxy : public AAdvancedInteractiveObjectProxy
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GalaxyMapStationProxy");
		return ptr;
	}


	void OnSelectedPlanet(class UPlanetData* InPlanetData);
};


// Class OakGame.GameplayGlobals
// 0x0E78 (0x1090 - 0x0218)
class UGameplayGlobals : public UGbxGameplayGlobals
{
public:
	float                                              PrimaryHealthLowPercent;                                  // 0x0218(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PrimaryHealthVeryLowPercent;                              // 0x021C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ResurrectionCostPercent;                                  // 0x0220(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SecondaryHealthLowPercent;                                // 0x0224(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SecondaryHealthVeryLowPercent;                            // 0x0228(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x022C(0x0004) MISSED OFFSET
	class UHitRegionData*                              ProjectedShieldHitRegion;                                 // 0x0230(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AmmoLowPercent;                                           // 0x0238(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CoVLoadedAmmoRegenScalar;                                 // 0x023C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      AmpedShotTracerFX;                                        // 0x0240(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	class UClass*                                      AmpedShotBeamFX;                                          // 0x0248(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	class UWwiseEvent*                                 AmpedShotSound;                                           // 0x0250(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	TMap<EWeaponShotModifierType, struct FAmpedShotSettings> AmpedShotSettingsByType;                                  // 0x0258(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UInventoryCategoryData*                      WeaponInventoryType;                                      // 0x02A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryCategoryData*                      ShieldInventoryType;                                      // 0x02B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryCategoryData*                      GrenadeModInventoryType;                                  // 0x02B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryCategoryData*                      CreditsInventoryType;                                     // 0x02C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryCategoryData*                      EridiumInventoryType;                                     // 0x02C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryCategoryData*                      VaultCoinInventoryType;                                   // 0x02D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryCategoryData*                      DiamondKeyInventoryType;                                  // 0x02D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryCategoryData*                      GoldenKeyInventoryType;                                   // 0x02E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryCategoryData*                      WeaponSkinInventoryType;                                  // 0x02E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryCategoryData*                      WeaponTrinketInventoryType;                               // 0x02F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryCategoryData*                      HealthPickupInventoryType;                                // 0x02F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryCategoryData*                      ArtifactInventoryType;                                    // 0x0300(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryCategoryData*                      AmmoInventoryType;                                        // 0x0308(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UInventoryCategoryData*>              InventoryTypeCategories;                                  // 0x0310(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UClass*                                      BaseWeaponInventorySlotType;                              // 0x0320(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ShieldInventorySlotType;                                  // 0x0328(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryRarityData*                        InventoryRarityMission;                                   // 0x0330(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryRarityData*                        InventoryRarityMoney;                                     // 0x0338(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryRarityData*                        InventoryRarityCommon;                                    // 0x0340(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryRarityData*                        InventoryRarityUncommon;                                  // 0x0348(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryRarityData*                        InventoryRarityRare;                                      // 0x0350(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryRarityData*                        InventoryRarityVeryRare;                                  // 0x0358(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryRarityData*                        InventoryRarityLegendary;                                 // 0x0360(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UInventoryRarityData*>                LostLootRarities;                                         // 0x0368(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	int                                                MaxLostLootSize;                                          // 0x0378(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                LostLootIncrementPerSDU;                                  // 0x037C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UOakSDUData*                                 LostLootSDUData;                                          // 0x0380(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InventorySaveGameFrequency;                               // 0x0388(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxNPCMailSize;                                           // 0x038C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FVector2DWaveform>                   CharacterAccuracyPattern;                                 // 0x0390(0x0010) (Edit, ZeroConstructor)
	float                                              CharacterAccuracyPatternTimeScale;                        // 0x03A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EditorCharacterAccuracyPatternHistoryTime;                // 0x03A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EditorCharacterAccuracyPatternHistoryDelta;               // 0x03A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MassPickupRadius;                                         // 0x03AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MassPickupMaxPullAmount;                                  // 0x03B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MassPickupMaxDelay;                                       // 0x03B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MassPickupMinDelay;                                       // 0x03B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MassPickupMaxTotalDelay;                                  // 0x03BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FPickupEvaluationSettings                   PickupEvaluationSettings;                                 // 0x03C0(0x0038) (Edit, DisableEditOnInstance)
	struct FOakVehicleManagerSettings                  OakVehicleManagerSettings;                                // 0x03F8(0x0020) (Edit, DisableEditOnInstance)
	class ULootSpawnPatternData*                       DefaultDropLootPattern;                                   // 0x0418(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAutomaticallyMassPickupConsumablesFromLootables;         // 0x0420(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0421(0x0003) MISSED OFFSET
	float                                              DefaultAutoLootConsumableDelay;                           // 0x0424(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bConsumablesAttachedToLootablesCanBeTouchPickuped;        // 0x0428(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0429(0x0003) MISSED OFFSET
	float                                              TriggerForceCleanupLongLifeOverflowPercent;               // 0x042C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ForceCleanupLongLifePickupsPercent;                       // 0x0430(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bCleanupPickupsBetweenSlaughterRounds;                    // 0x0434(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0435(0x0003) MISSED OFFSET
	float                                              MinimumAgeToCleanupSlaughterPickups;                      // 0x0438(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ForeverPickupSlaughterCleanupThreshold;                   // 0x043C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BulletMagnetismTargetOffset;                              // 0x0440(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxTargetingDistance;                                     // 0x0444(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TargetingTraceUpdateTime;                                 // 0x0448(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EOakLeague>                            ActiveLeague;                                             // 0x044C(0x0001) (Edit, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      LeagueInstance;                                           // 0x044D(0x0001) (Edit, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x044E(0x0002) MISSED OFFSET
	class UDialogScriptData*                           MissionKickoffScript;                                     // 0x0450(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UManufacturerData*                           MissionManufacturer;                                      // 0x0458(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UInventoryRarityData*                        MissionRarity;                                            // 0x0460(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFriendGlobals*                              FriendGlobals;                                            // 0x0468(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryCategoryData*                      MissionInventoryCategory;                                 // 0x0470(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UInventoryCategoryData*                      MissionInventoryCategory_Vehicle;                         // 0x0478(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAttributeInitializationData                MissionCreditsRewardFormula;                              // 0x0480(0x0038) (Edit)
	float                                              PickupFailsafeMinutes;                                    // 0x04B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           MissionSpawnerFailsafeMinutes;                            // 0x04BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MissionDeliveryRequiredProximityRadius;                   // 0x04C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x04C4(0x0004) MISSED OFFSET
	class UGameStatData*                               OptionalObjectiveCompletedStat;                           // 0x04C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TSoftObjectPtr<class UClass>                       TutorialSkipMission;                                      // 0x04D0(0x0028) (Edit)
	class UAIDialogEventData*                          AIDialogEventData;                                        // 0x04F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DefaultEnemyFadeoutEffect;                                // 0x0500(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDuelGlobals*                                DuelGlobals;                                              // 0x0508(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UGuardianRankRewardCategoryData*>     GuardianRankRewardCategories;                             // 0x0510(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UGuardianRankRewardData*>             GuardianRankRewards;                                      // 0x0520(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UGuardianRankPerkData*>               GuardianRankPerks;                                        // 0x0530(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              SkillRespecCostPercent;                                   // 0x0540(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0544(0x0004) MISSED OFFSET
	class UPhotoModeGlobals*                           PhotoModeGlobals;                                         // 0x0548(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTutorialGlobals*                            TutorialGlobals;                                          // 0x0550(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PlayerAlertRetriggerDelay;                                // 0x0558(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x055C(0x0004) MISSED OFFSET
	class UWwiseEvent*                                 PlayerAlertSound;                                         // 0x0560(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      PlayerAlertPointingAction;                                // 0x0568(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UPlayerAlertData*>                    PlayerAlertData;                                          // 0x0570(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UWwiseEvent*                                 ReceivedMailSound;                                        // 0x0580(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UZoneMapGlobalsData*                         ZoneMapGlobals;                                           // 0x0588(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGalaxyData*                                 GalaxyMap;                                                // 0x0590(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<TSoftObjectPtr<class UZoneMapListData>>     ZoneMaps;                                                 // 0x0598(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UGbxCustomizationTypeData*                   CustomizationTypeData_Head;                               // 0x05A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxCustomizationTypeData*                   CustomizationTypeData_Body;                               // 0x05B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxCustomizationTypeData*                   CustomizationTypeData_Skin;                               // 0x05B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxCustomizationTypeData*                   CustomizationTypeData_Emote;                              // 0x05C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       CustomizationColorName_Primary;                           // 0x05C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       CustomizationColorName_Secondary;                         // 0x05D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       CustomizationColorName_Tertiary;                          // 0x05D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UVaultHunterProfileCard*                     VaultHunterProfileCard;                                   // 0x05E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      DigistructOutGearEffect;                                  // 0x05E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DigistructInGearEffect;                                   // 0x05F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  ModifierTargetResolverTable;                              // 0x05F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  ModifierStatusEffectTable;                                // 0x0600(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  ModifierTable;                                            // 0x0608(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FPostProcessSettings                        StatusMenuPPSettings;                                     // 0x0610(0x0600) (Edit, DisableEditOnInstance)
	float                                              StatusMenuPPBlendInTime;                                  // 0x0C10(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StatusMenuPPBlendOutTime;                                 // 0x0C14(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDisableSeparateTransluencyInStatusMenu;                  // 0x0C18(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0C19(0x0003) MISSED OFFSET
	float                                              ActorCullingRadius;                                       // 0x0C1C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FGameplayTagContainer                       DefaultSingularityIgnoreTags;                             // 0x0C20(0x0020) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UGameStatData>                SuicideByExplosionStat;                                   // 0x0C40(0x0028) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UGameStatData>                WeaponsFoundStat;                                         // 0x0C68(0x0028) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UGameStatData>                AmpShieldKillStat;                                        // 0x0C90(0x0028) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UGameStatData>                CompletedTradeStat;                                       // 0x0CB8(0x0028) (Edit, DisableEditOnInstance)
	class UClass*                                      ExplodingBarrelBaseClass;                                 // 0x0CE0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TSoftObjectPtr<class UGameStatData>                KillWithExplodingBarrelStat;                              // 0x0CE8(0x0028) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UGameStatData>                CosmeticPurchasedStat;                                    // 0x0D10(0x0028) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UGameStatData>                ItemSoldStat;                                             // 0x0D38(0x0028) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UGameStatData>                HijackedVehiclePartStat;                                  // 0x0D60(0x0028) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UGameStatData>                GuardianRankStat;                                         // 0x0D88(0x0028) (Edit, DisableEditOnInstance)
	struct FAttributeInitializationData                ChallengeCreditsRewardFormula;                            // 0x0DB0(0x0038) (Edit)
	struct FAttributeInitializationData                ChallengeEridiumRewardFormula;                            // 0x0DE8(0x0038) (Edit)
	struct FGameplayTag                                AnointedEridianCrystalGameplayTag;                        // 0x0E20(0x0008) (Edit)
	class UUsabilityDataSelection*                     AnointedCrystalMeleeUsableSelection;                      // 0x0E28(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TSoftObjectPtr<class UClass>                       EridianResonatorDamageSource;                             // 0x0E30(0x0028) (Edit)
	class UHitReactionTag*                             AnointedDeathHitReaction;                                 // 0x0E58(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TSoftObjectPtr<class UGameStatData>                BloodyHarvestKillWithLeagueWeaponStat;                    // 0x0E60(0x0028) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UGameStatData>                BloodyHarvestCollectLeagueLootStat;                       // 0x0E88(0x0028) (Edit, DisableEditOnInstance)
	bool                                               EnableCitizenScience;                                     // 0x0EB0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x0EB1(0x0007) MISSED OFFSET
	TArray<struct FVaultCardActiveChallengeList>       ActiveVaultCardChallenges;                                // 0x0EB8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxCustomizationTargetData>  BodyMeshTarget;                                           // 0x0EC8(0x0028) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxCustomizationTypeData>    BodyMeshType;                                             // 0x0EF0(0x0028) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UOakBodyMeshLinkedParameterData> BodyMeshLinkedParameters;                                 // 0x0F18(0x0028) (Edit, DisableEditOnInstance)
	TArray<class UChallengeList*>                      MasterChallengeLists;                                     // 0x0F40(0x0010) (ZeroConstructor, Transient)
	TArray<class UChallengeList*>                      MasterVaultCardChallengeLists;                            // 0x0F50(0x0010) (ZeroConstructor, Transient)
	uint32_t                                           MaxVaultCardID;                                           // 0x0F60(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0F64(0x0004) MISSED OFFSET
	TArray<uint32_t>                                   AssociatedVaultCardIDs;                                   // 0x0F68(0x0010) (ZeroConstructor, Transient)
	TArray<class UGameStatList*>                       MasterGameStatLists;                                      // 0x0F78(0x0010) (ZeroConstructor, Transient)
	TArray<class UOakLoadingScreenExpansionData*>      MasterLoadingScreenData;                                  // 0x0F88(0x0010) (ZeroConstructor, Transient)
	TArray<class UOakMayhemModifiersDataAsset*>        MasterMayhemModeData;                                     // 0x0F98(0x0010) (ZeroConstructor, Transient, Deprecated)
	TArray<class UOakMayhemUIDataAsset*>               MasterMayhemModeUIData;                                   // 0x0FA8(0x0010) (ZeroConstructor, Transient, Deprecated)
	TArray<class UMayhemOverrideDataAsset*>            MasterMayhemModeTwoData;                                  // 0x0FB8(0x0010) (ZeroConstructor, Transient)
	TArray<class UPatchExpansionData*>                 MasterPatchExpansionData;                                 // 0x0FC8(0x0010) (ZeroConstructor, Transient)
	TArray<class UDownloadableExpansionData*>          MasterDownloadableExpansionData;                          // 0x0FD8(0x0010) (ZeroConstructor, Transient)
	TMap<struct FGameplayTag, class UGameStatData*>    MasterKillStatMap;                                        // 0x0FE8(0x0050) (ZeroConstructor, Transient)
	TArray<class UGuardianRankRewardData*>             MasterGuardianRankRewards;                                // 0x1038(0x0010) (ZeroConstructor, Transient)
	TArray<class UGuardianRankPerkData*>               MasterGuardianRankPerks;                                  // 0x1048(0x0010) (ZeroConstructor, Transient)
	TArray<class UOakVaultCardRewardData*>             MasterVaultCardRewards;                                   // 0x1058(0x0010) (ZeroConstructor, Transient)
	TArray<class UItemPoolData*>                       MasterItemPoolsToReplaceWithRandomDateBased;              // 0x1068(0x0010) (ZeroConstructor, Transient)
	TArray<struct FItemPoolCollection>                 MasterRandomDateBasedItemPools;                           // 0x1078(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData11[0x8];                                       // 0x1088(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GameplayGlobals");
		return ptr;
	}

};


// Class OakGame.GameplayTask_PlayGbxAction
// 0x0028 (0x0090 - 0x0068)
class UGameplayTask_PlayGbxAction : public UGameplayTask
{
public:
	struct FScriptMulticastDelegate                    OnEnd;                                                    // 0x0068(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAnimEnd;                                                // 0x0078(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UGbxAction*                                  Action;                                                   // 0x0088(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GameplayTask_PlayGbxAction");
		return ptr;
	}


	class UGameplayTask_PlayGbxAction* STATIC_PlayGbxAction(class UClass* ActionClass, TArray<struct FGbxActionRegister> GbxActionRegisters, EGbxActionNetMode NetMode, class AActor* Target, class UWeaponSlotData* WeaponSlot, float Duration, float PlayRate, const struct FVector& Direction, int MontageLoopCount);
};


// Class OakGame.GbxCondition_A9K_AssignFFYLTarget
// 0x0008 (0x0090 - 0x0088)
class UGbxCondition_A9K_AssignFFYLTarget : public UGbxCondition
{
public:
	bool                                               bIncludeGivingUp;                                         // 0x0088(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIncludeResurrecting;                                     // 0x0089(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x008A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_A9K_AssignFFYLTarget");
		return ptr;
	}

};


// Class OakGame.GbxCondition_AreEnemiesWithinRadius
// 0x0040 (0x00C8 - 0x0088)
class UGbxCondition_AreEnemiesWithinRadius : public UGbxCondition
{
public:
	struct FAttributeInitializationData                RadiusInit;                                               // 0x0088(0x0038) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x8];                                       // 0x00C0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_AreEnemiesWithinRadius");
		return ptr;
	}

};


// Class OakGame.GbxCondition_OakAbility_Base
// 0x0000 (0x0088 - 0x0088)
class UGbxCondition_OakAbility_Base : public UGbxCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_OakAbility_Base");
		return ptr;
	}

};


// Class OakGame.GbxCondition_CanAugmentBeUsed
// 0x0008 (0x0090 - 0x0088)
class UGbxCondition_CanAugmentBeUsed : public UGbxCondition_OakAbility_Base
{
public:
	class UOakActionAbilityAugmentData*                Augment;                                                  // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_CanAugmentBeUsed");
		return ptr;
	}

};


// Class OakGame.GbxCondition_CanBeRevivedBy
// 0x0000 (0x0088 - 0x0088)
class UGbxCondition_CanBeRevivedBy : public UGbxCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_CanBeRevivedBy");
		return ptr;
	}

};


// Class OakGame.GbxCondition_CheckHealthPoolStateByResourceType
// 0x0010 (0x0098 - 0x0088)
class UGbxCondition_CheckHealthPoolStateByResourceType : public UGbxCondition
{
public:
	class UGameResourceData*                           ResourceType;                                             // 0x0088(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EGameResourcePoolState                             ResourcePoolState;                                        // 0x0090(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0091(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_CheckHealthPoolStateByResourceType");
		return ptr;
	}

};


// Class OakGame.GbxCondition_CheckRarity
// 0x0010 (0x0098 - 0x0088)
class UGbxCondition_CheckRarity : public UGbxCondition
{
public:
	TArray<class UInventoryRarityData*>                Rarities;                                                 // 0x0088(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_CheckRarity");
		return ptr;
	}

};


// Class OakGame.GbxCondition_DoesAnyPlayerHaveLowHealth
// 0x0008 (0x0090 - 0x0088)
class UGbxCondition_DoesAnyPlayerHaveLowHealth : public UGbxCondition
{
public:
	bool                                               bIncludeLowHealth;                                        // 0x0088(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIncludeVeryLowHealth;                                    // 0x0089(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAccountForReservedHealth;                                // 0x008A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x008B(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_DoesAnyPlayerHaveLowHealth");
		return ptr;
	}

};


// Class OakGame.GbxCondition_EnemiesAreHurtingActor
// 0x0018 (0x00A0 - 0x0088)
class UGbxCondition_EnemiesAreHurtingActor : public UGbxCondition
{
public:
	struct FGbxBlackboardKeySelector                   HurtTarget;                                               // 0x0088(0x0010) (Edit, BlueprintReadOnly)
	float                                              MinTargetScore;                                           // 0x0098(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DecayRate;                                                // 0x009C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_EnemiesAreHurtingActor");
		return ptr;
	}

};


// Class OakGame.GbxCondition_HasHealthOfType
// 0x0010 (0x0098 - 0x0088)
class UGbxCondition_HasHealthOfType : public UGbxCondition
{
public:
	TArray<class UHealthTypeData*>                     HealthTypes;                                              // 0x0088(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_HasHealthOfType");
		return ptr;
	}

};


// Class OakGame.GbxCondition_HasStatusEffect
// 0x0010 (0x0098 - 0x0088)
class UGbxCondition_HasStatusEffect : public UGbxCondition
{
public:
	class UStatusEffectData*                           StatusEffectData;                                         // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                InstanceCount;                                            // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bQueryOwnerOnly;                                          // 0x0094(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0095(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_HasStatusEffect");
		return ptr;
	}

};


// Class OakGame.GbxCondition_IronBearHardPointMod
// 0x0008 (0x0090 - 0x0088)
class UGbxCondition_IronBearHardPointMod : public UGbxCondition
{
public:
	EIronBearModType                                   ModType;                                                  // 0x0088(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0089(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IronBearHardPointMod");
		return ptr;
	}

};


// Class OakGame.GbxCondition_IronBearSpawnStyle
// 0x0008 (0x0090 - 0x0088)
class UGbxCondition_IronBearSpawnStyle : public UGbxCondition
{
public:
	EIronBearSpawnStyle                                SpawnStyle;                                               // 0x0088(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0089(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IronBearSpawnStyle");
		return ptr;
	}

};


// Class OakGame.GbxCondition_IsAbilityTimerActive
// 0x0010 (0x0098 - 0x0088)
class UGbxCondition_IsAbilityTimerActive : public UGbxCondition
{
public:
	class UOakAbilityTimerData*                        Timer;                                                    // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      OptionalAbility;                                          // 0x0090(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IsAbilityTimerActive");
		return ptr;
	}

};


// Class OakGame.GbxCondition_IsActionAbilityActive
// 0x0008 (0x0090 - 0x0088)
class UGbxCondition_IsActionAbilityActive : public UGbxCondition_OakAbility_Base
{
public:
	class UClass*                                      ActionAbilityClass;                                       // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IsActionAbilityActive");
		return ptr;
	}

};


// Class OakGame.GbxCondition_IsActionAbilityAugmentSlotted
// 0x0018 (0x00A0 - 0x0088)
class UGbxCondition_IsActionAbilityAugmentSlotted : public UGbxCondition
{
public:
	class UClass*                                      ActionAbilityClass;                                       // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UOakActionAbilityAugmentData*                AugmentData;                                              // 0x0090(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UOakActionAbilityAugmentSlotData*            AugmentSlotData;                                          // 0x0098(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IsActionAbilityAugmentSlotted");
		return ptr;
	}

};


// Class OakGame.GbxCondition_IsBetweenActors
// 0x0108 (0x0190 - 0x0088)
class UGbxCondition_IsBetweenActors : public UGbxCondition
{
public:
	struct FGbxParam                                   ForwardActor;                                             // 0x0088(0x0080) (Edit, BlueprintReadOnly)
	struct FGbxParam                                   BehindActor;                                              // 0x0108(0x0080) (Edit, BlueprintReadOnly)
	bool                                               bCanBeAhead;                                              // 0x0188(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCanBeBehind;                                             // 0x0189(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x018A(0x0002) MISSED OFFSET
	float                                              MaxDistance;                                              // 0x018C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IsBetweenActors");
		return ptr;
	}

};


// Class OakGame.GbxCondition_IsInjuredSprinting
// 0x0000 (0x0088 - 0x0088)
class UGbxCondition_IsInjuredSprinting : public UGbxCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IsInjuredSprinting");
		return ptr;
	}

};


// Class OakGame.GbxCondition_IsIronBearCoreActive
// 0x0008 (0x0090 - 0x0088)
class UGbxCondition_IsIronBearCoreActive : public UGbxCondition
{
public:
	EIronBearCoreType                                  CoreType;                                                 // 0x0088(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0089(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IsIronBearCoreActive");
		return ptr;
	}

};


// Class OakGame.GbxCondition_IsLicensedToDLC
// 0x0008 (0x0090 - 0x0088)
class UGbxCondition_IsLicensedToDLC : public UGbxCondition
{
public:
	class UDownloadableContentData*                    ContentData;                                              // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IsLicensedToDLC");
		return ptr;
	}

};


// Class OakGame.GbxCondition_IsMaybeFallingOffACliff
// 0x0008 (0x0090 - 0x0088)
class UGbxCondition_IsMaybeFallingOffACliff : public UGbxCondition
{
public:
	float                                              TraceDistance;                                            // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TraceRadius;                                              // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IsMaybeFallingOffACliff");
		return ptr;
	}

};


// Class OakGame.GbxCondition_IsMovingOnGround
// 0x0000 (0x0088 - 0x0088)
class UGbxCondition_IsMovingOnGround : public UGbxCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IsMovingOnGround");
		return ptr;
	}

};


// Class OakGame.GbxCondition_IsPassiveAbilityGradeMet
// 0x0008 (0x0090 - 0x0088)
class UGbxCondition_IsPassiveAbilityGradeMet : public UGbxCondition
{
public:
	int                                                MinGradeRequired;                                         // 0x0088(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x008C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IsPassiveAbilityGradeMet");
		return ptr;
	}

};


// Class OakGame.GbxCondition_IsPetActive
// 0x0008 (0x0090 - 0x0088)
class UGbxCondition_IsPetActive : public UGbxCondition_OakAbility_Base
{
public:
	EOakActionAbilityPetType                           PetType;                                                  // 0x0088(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseEvolutionType;                                        // 0x0089(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EOakActionAbilityPetEvolutionType                  EvolutionType;                                            // 0x008A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x008B(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IsPetActive");
		return ptr;
	}

};


// Class OakGame.GbxCondition_IsPetModActive
// 0x0008 (0x0090 - 0x0088)
class UGbxCondition_IsPetModActive : public UGbxCondition_OakAbility_Base
{
public:
	EOakActionAbilityPetModType                        PetModType;                                               // 0x0088(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0089(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IsPetModActive");
		return ptr;
	}

};


// Class OakGame.GbxCondition_IsPlayerClass
// 0x0008 (0x0090 - 0x0088)
class UGbxCondition_IsPlayerClass : public UGbxCondition
{
public:
	class UPlayerClassIdentifier*                      PlayerClass;                                              // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IsPlayerClass");
		return ptr;
	}

};


// Class OakGame.GbxCondition_IsPlayerTiredFromSprinting
// 0x0000 (0x0088 - 0x0088)
class UGbxCondition_IsPlayerTiredFromSprinting : public UGbxCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IsPlayerTiredFromSprinting");
		return ptr;
	}

};


// Class OakGame.GbxCondition_IsWeaponHidden
// 0x0008 (0x0090 - 0x0088)
class UGbxCondition_IsWeaponHidden : public UGbxCondition
{
public:
	unsigned char                                      WeaponSlotIndex;                                          // 0x0088(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseWeaponSlotIndex;                                      // 0x0089(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x008A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IsWeaponHidden");
		return ptr;
	}

};


// Class OakGame.GbxCondition_LowOnAmmo
// 0x0010 (0x0098 - 0x0088)
class UGbxCondition_LowOnAmmo : public UGbxCondition
{
public:
	class UGameResourceData*                           AmmoResource;                                             // 0x0088(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLoadedAmmo : 1;                                          // 0x0090(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      bUsePercent : 1;                                          // 0x0090(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0091(0x0003) MISSED OFFSET
	float                                              LowAmmoPercent;                                           // 0x0094(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_LowOnAmmo");
		return ptr;
	}

};


// Class OakGame.GbxCondition_MapTravelID
// 0x0008 (0x0090 - 0x0088)
class UGbxCondition_MapTravelID : public UGbxCondition
{
public:
	unsigned char                                      MapNameEnumIdx;                                           // 0x0088(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ZoneNameEnumIdx;                                          // 0x0089(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x008A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_MapTravelID");
		return ptr;
	}

};


// Class OakGame.GbxCondition_OakCharacterMovementCondition
// 0x0008 (0x0090 - 0x0088)
class UGbxCondition_OakCharacterMovementCondition : public UGbxCondition
{
public:
	EOakCharacterMovementConditionType                 Type;                                                     // 0x0088(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0089(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_OakCharacterMovementCondition");
		return ptr;
	}

};


// Class OakGame.GbxCondition_OakStatusEffects_IsPresenting
// 0x0010 (0x0098 - 0x0088)
class UGbxCondition_OakStatusEffects_IsPresenting : public UGbxCondition
{
public:
	class UOakElementalEffectData*                     ElementalEffectData;                                      // 0x0088(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UOakStatusEffectPresentationData*            PresentationData;                                         // 0x0090(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_OakStatusEffects_IsPresenting");
		return ptr;
	}

};


// Class OakGame.GbxCondition_VehicleBoostChargeCount
// 0x0008 (0x0090 - 0x0088)
class UGbxCondition_VehicleBoostChargeCount : public UGbxCondition
{
public:
	EBoostChargeCountComparisonMode                    ComparisonMode;                                           // 0x0088(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0089(0x0003) MISSED OFFSET
	int                                                NeededChargeCount;                                        // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_VehicleBoostChargeCount");
		return ptr;
	}

};


// Class OakGame.GbxCondition_VehicleBoostPoolValue
// 0x0010 (0x0098 - 0x0088)
class UGbxCondition_VehicleBoostPoolValue : public UGbxCondition
{
public:
	EBoostPoolValueComparisonMode                      ComparisonMode;                                           // 0x0088(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0089(0x0003) MISSED OFFSET
	float                                              BoostPoolValue;                                           // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bValueIsPercentage;                                       // 0x0090(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0091(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_VehicleBoostPoolValue");
		return ptr;
	}

};


// Class OakGame.GbxCondition_VehicleHasEquippedParts
// 0x0040 (0x00C8 - 0x0088)
class UGbxCondition_VehicleHasEquippedParts : public UGbxCondition
{
public:
	TArray<TSoftObjectPtr<class UClass>>               IncludedClassesFilter;                                    // 0x0088(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<TSoftObjectPtr<class UClass>>               ExcludedClassesFilter;                                    // 0x0098(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<TSoftObjectPtr<class UVehiclePartData>>     IncludedPartsFilter;                                      // 0x00A8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<TSoftObjectPtr<class UVehiclePartData>>     ExcludedPartsFilter;                                      // 0x00B8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_VehicleHasEquippedParts");
		return ptr;
	}

};


// Class OakGame.GbxCondition_WasPickupDroppedByPlayer
// 0x0000 (0x0088 - 0x0088)
class UGbxCondition_WasPickupDroppedByPlayer : public UGbxCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_WasPickupDroppedByPlayer");
		return ptr;
	}

};


// Class OakGame.GbxGFXConnectionWidget
// 0x0000 (0x0630 - 0x0630)
class UGbxGFXConnectionWidget : public UGbxGFxHUDWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxGFXConnectionWidget");
		return ptr;
	}


	void OnConnectionStatusChanged(bool bIsLagging);
};


// Class OakGame.GbxGFxCoreDialogBoxHelpers
// 0x0000 (0x0028 - 0x0028)
class UGbxGFxCoreDialogBoxHelpers : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxGFxCoreDialogBoxHelpers");
		return ptr;
	}


	class UGbxGFxDialogBox* STATIC_ShowYesNoDialog(class AGbxPlayerController* pc, const struct FText& HeaderText, const struct FText& MessageText, const struct FScriptDelegate& OnChoiceMade, bool bAnyUserCanInteract, class AGbxPlayerController* InTargetPC, EGbxGFxDialogBoxStyle DialogBoxStyle, int InitialChoiceIndex, bool CanCancel);
	class UGbxGFxDialogBox* STATIC_ShowOkayDialog(class AGbxPlayerController* pc, const struct FText& HeaderText, const struct FText& MessageText, const struct FScriptDelegate& OnChoiceMade, bool bAnyUserCanInteract, class AGbxPlayerController* InTargetPC, EGbxGFxDialogBoxStyle DialogBoxStyle);
	class UGbxGFxDialogBox* STATIC_ShowDialog(class AGbxPlayerController* pc, const struct FGbxGFxDialogBoxInfo& DialogBoxInfo);
	class UGbxGFxDialogBox* STATIC_ShowCustomDialog(class AGbxPlayerController* pc, const struct FText& HeaderText, const struct FText& MessageText, TArray<struct FGbxGFxDialogBoxChoiceInfo> Choices, const struct FScriptDelegate& OnChoiceMade, bool bAnyUserCanInteract, class AGbxPlayerController* InTargetPC, EGbxGFxDialogBoxStyle DialogBoxStyle, int InitialChoiceIndex, bool CanCancel);
	class UGbxGFxDialogBox* STATIC_ShowConfirmCancelDialog(class AGbxPlayerController* pc, const struct FText& HeaderText, const struct FText& MessageText, const struct FScriptDelegate& OnChoiceMade, bool bAnyUserCanInteract, class AGbxPlayerController* InTargetPC, EGbxGFxDialogBoxStyle DialogBoxStyle, bool CanCancel);
	class UGbxGFxDialogBox* STATIC_ShowBlockingDialog(class AGbxPlayerController* pc, const struct FText& HeaderText, const struct FText& MessageText, bool bBlocksAllUsers, class AGbxPlayerController* InTargetPC, bool bAllowedToDismiss);
};


// Class OakGame.GbxGFxDialogBoxData
// 0x00F0 (0x01B0 - 0x00C0)
class UGbxGFxDialogBoxData : public UGbxGFxMenuData
{
public:
	struct FGbxGFxDialogBoxInfo                        DialogInfo;                                               // 0x00C0(0x00F0) (Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxGFxDialogBoxData");
		return ptr;
	}

};


// Class OakGame.GbxGFxDialogBox
// 0x01A0 (0x0820 - 0x0680)
class UGbxGFxDialogBox : public UGbxGFxMenu
{
public:
	unsigned char                                      UnknownData00[0xF0];                                      // 0x0680(0x00F0) MISSED OFFSET
	class UGbxTextField*                               HeaderTextField;                                          // 0x0770(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               BodyTextField;                                            // 0x0778(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxEditableTextField*                    InputTextField;                                           // 0x0780(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    ContentPanel;                                             // 0x0788(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               DialogBoxBackground;                                      // 0x0790(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               PlayerNameTextField;                                      // 0x0798(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ProcessingIcon;                                           // 0x07A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                InitialChoice;                                            // 0x07A8(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x07AC(0x0004) MISSED OFFSET
	struct FText                                       HeaderText;                                               // 0x07B0(0x0028) (BlueprintReadOnly, Transient)
	struct FText                                       BodyText;                                                 // 0x07C8(0x0028) (BlueprintReadOnly, Transient)
	struct FText                                       InputText;                                                // 0x07E0(0x0028) (BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData02[0x10];                                      // 0x07F8(0x0010) MISSED OFFSET
	struct FScriptDelegate                             OnChoiceMadeDelegate;                                     // 0x0808(0x0014) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0818(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxGFxDialogBox");
		return ptr;
	}


	void SetInputTextFormatArg(const class FString& ArgName, const struct FText& ReplacementText);
	void SetInputText(const struct FText& NewText, bool bClearFormatArgs);
	void SetHeaderTextFormatArg(const class FString& ArgName, const struct FText& ReplacementText);
	void SetHeaderText(const struct FText& NewText, bool bClearFormatArgs);
	void SetBodyTextFormatArg(const class FString& ArgName, const struct FText& ReplacementText);
	void SetBodyText(const struct FText& NewText, bool bClearFormatArgs);
	void OnDialogBoxItemClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void Dismiss();
};


// Class OakGame.GbxGFxDirectXUpgradeDialogBox
// 0x0000 (0x0820 - 0x0820)
class UGbxGFxDirectXUpgradeDialogBox : public UGbxGFxDialogBox
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxGFxDirectXUpgradeDialogBox");
		return ptr;
	}

};


// Class OakGame.GbxGFxEULA
// 0x0030 (0x0850 - 0x0820)
class UGbxGFxEULA : public UGbxGFxDialogBox
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0820(0x0028) MISSED OFFSET
	class UGbxGFxSlider*                               EULAScrollBar;                                            // 0x0848(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxGFxEULA");
		return ptr;
	}


	void OnSliderPositionUpdate(float SliderPercent);
};


// Class OakGame.GbxGFxReportPlayerDialogBox
// 0x0030 (0x0850 - 0x0820)
class UGbxGFxReportPlayerDialogBox : public UGbxGFxDialogBox
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0820(0x0008) MISSED OFFSET
	TArray<struct FReportReason>                       ReportReasons;                                            // 0x0828(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class UGbxGFxGridScrollingList*                    ReportReasonList;                                         // 0x0838(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0840(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxGFxReportPlayerDialogBox");
		return ptr;
	}


	void OnReportReasonClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GearUpData
// 0x0198 (0x01C8 - 0x0030)
class UGearUpData : public UGbxDataAsset
{
public:
	TArray<struct FDeathCircleStageData>               DeathCircleStages;                                        // 0x0030(0x0010) (Edit, ZeroConstructor)
	struct FAttributeInitializationData                DeathCircleHeight;                                        // 0x0040(0x0038) (Edit)
	class UStaticMesh*                                 DeathCircleMesh;                                          // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          DeathCircleMaterial;                                      // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DeathCircleWaypointClass;                                 // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      NextDeathCircleWaypointClass;                             // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             DeathCircleScreenParticle;                                // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAttributeInitializationData                ScreenParticleMaxDistance;                                // 0x00A0(0x0038) (Edit)
	struct FName                                       ScreenParticleIntensityParameter;                         // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             FogParticle;                                              // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAttributeInitializationData                FogParticleMaxDistance;                                   // 0x00E8(0x0038) (Edit)
	class UClass*                                      OutOfCircleDamageData;                                    // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxCondition*                               DeathCircleWaypointCondition;                             // 0x0128(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TSoftObjectPtr<class UClass>                       Mission;                                                  // 0x0130(0x0028) (Edit)
	class UWwiseEvent*                                 WallAudioLoopStart;                                       // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  DistanceToWallRtpc;                                       // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  WallOrientationXRtpc;                                     // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  WallOrientationYRtpc;                                     // 0x0170(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AudioTransitionToOmni;                                    // 0x0178(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AudioFadeTimeOnExit;                                      // 0x017C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PlayerEnteredStormAudioEvent;                             // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PlayerExitedStormAudioEvent;                              // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStatusEffectData*                           EnemyStatusEffect;                                        // 0x0190(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStatusEffectData*                           PlayerStatusEffect;                                       // 0x0198(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStatusEffectData*                           ModeStatusEffect;                                         // 0x01A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                AllowableBankOverfill;                                    // 0x01A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01AC(0x0004) MISSED OFFSET
	class UDownloadablePackageData*                    DlcPackageData;                                           // 0x01B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGameStatData*                               ExtractedGearStat;                                        // 0x01B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EOakAchievements                                   ExtractedGearAchievement;                                 // 0x01C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ExtractedGearAchievementCount;                            // 0x01C1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x01C2(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GearUpData");
		return ptr;
	}


	class UClass* GetRequiredInterface();
	bool EnabledConditionRequiresNativeClass();
};


// Class OakGame.OakGameMode
// 0x00A8 (0x05F0 - 0x0548)
class AOakGameMode : public AGbxGameMode
{
public:
	unsigned char                                      UnknownData00[0x98];                                      // 0x0548(0x0098) MISSED OFFSET
	class UItemPoolData*                               DefaultPlayerWeapon;                                      // 0x05E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bPreventFightForYourLifeInRespawnRestrictedVolumes;       // 0x05E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x05E9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakGameMode");
		return ptr;
	}


	void TravelToStationInterrupted(class UTravelStationData* TravelStation);
	bool RespawnPlayer(class AOakPlayerController* OakPlayerController);
	void PrepareToTravelToStation(class UTravelStationData* TravelStation, class APawn* ActivatingPawn);
	class ATravelStationTracker* GetTravelStationTracker();
	class AActor* FindPlayerStation(class AController* Player, const class FString& IncomingName);
	bool CanTravelToStation(class UTravelStationData* TravelStation, class AController* OptionalInstigator);
	bool CanTravelThroughStations(class AController* OptionalInstigator);
};


// Class OakGame.RaidGameMode
// 0x0010 (0x0600 - 0x05F0)
class ARaidGameMode : public AOakGameMode
{
public:
	bool                                               bSpectateWhenDead;                                        // 0x05F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x05F1(0x0007) MISSED OFFSET
	class ARaidGameState*                              RaidGameState;                                            // 0x05F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.RaidGameMode");
		return ptr;
	}


	void SetForceBalanceToMaxPlayers(bool bForced);
	void RespawnAllSpectatingPlayers();
	void OnNumPlayersChanged(int NewNumPlayers);
	void OnInitRaidGameState();
	void K2_OnPlayerRespawned(class AOakPlayerController* RespawnedPlayer);
	void K2_OnPlayerDied(class AOakPlayerController* DeadPlayer);
	void K2_OnAllPlayersDied();
	int GetNumPlayerSpectators();
	int GetNumPlayersAlive();
	void BroadcastRaidComplete();
	void BroadcastRaidBegun(int CountdownDuration);
	void BroadcastLegComplete(int LegNumber);
};


// Class OakGame.GearUpGameMode
// 0x00C0 (0x06C0 - 0x0600)
class AGearUpGameMode : public ARaidGameMode
{
public:
	class AGearUpGameState*                            GearUpGameState;                                          // 0x0600(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGearUpData*                                 GearUpData;                                               // 0x0608(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      DeathCircle;                                              // 0x0610(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UStaticMeshComponent*                        DeathCircleMesh;                                          // 0x0618(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UOakMissionIconComponent*                    TransitionIcon;                                           // 0x0620(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UOakMissionIconComponent*                    DeathCircleIcon;                                          // 0x0628(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              DeathCircleHeight;                                        // 0x0630(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ScreenParticleMaxDistance;                                // 0x0634(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              FogParticleMaxDistance;                                   // 0x0638(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              TransitionTime;                                           // 0x063C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ActiveCircleRadius;                                       // 0x0640(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              TargetCircleRadius;                                       // 0x0644(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	class UDamageSource*                               StormDamageSource;                                        // 0x0648(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bRespawnDeadPlayers;                                      // 0x0650(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0651(0x0007) MISSED OFFSET
	TArray<class ACharacter*>                          PlayersInStorm;                                           // 0x0658(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class AOakPlayerController*>                PlayersInScreenParticleRange;                             // 0x0668(0x0010) (ZeroConstructor, Transient)
	TArray<class AOakPlayerController*>                PlayersInFogParticleRange;                                // 0x0678(0x0010) (ZeroConstructor, Transient)
	float                                              TimeUntilNextParticleCheck;                               // 0x0688(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x068C(0x0004) MISSED OFFSET
	TArray<class ACharacter*>                          ImmunePlayers;                                            // 0x0690(0x0010) (ZeroConstructor, Transient)
	bool                                               bGearUpRunActive;                                         // 0x06A0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1F];                                      // 0x06A1(0x001F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GearUpGameMode");
		return ptr;
	}


	void StartTimer();
	void RespawnAllDeadPlayers();
	void ResetGearUpGameMode();
	void RandomlySelectActorsWithinDeathCircle(int NumberToSelect, TArray<class AActor*>* InActors, TArray<class AActor*>* OutActors);
	void PlayerExitedStorm(class ACharacter* Player);
	void PlayerEnteredStorm(class ACharacter* Player);
	void InitializeGearUpGameMode(class UGearUpData* Data);
	void GearUpRunComplete();
	void FlagImmunePlayer(class ACharacter* Character);
	void FinalDeathCircleStageStarted();
	void DisableStorm();
	void DeathCircleTransitionStateStarted(int ActiveStage, float StateDuration, bool IsFinalStage);
	void DeathCircleStableStateStarted(int ActiveStage, float StateDuration, bool IsFinalStage);
	void DeathCircleComplete();
	void BroadcastGearUpSupplyDrop();
	void BroadcastGearUpRespawn();
	void BroadcastGearUpNewCircle();
	void BroadcastGearUpCircleClosing();
};


// Class OakGame.OakGameState
// 0x04B8 (0x0A50 - 0x0598)
class AOakGameState : public AGbxGameState
{
public:
	class AMissionTrackerBase*                         MissionTracker;                                           // 0x0598(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class ATravelStationTracker*                       TravelStationTracker;                                     // 0x05A0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class ADuelManager*                                DuelManager;                                              // 0x05A8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class AOakModifierManagerActor*                    ModifierManager;                                          // 0x05B0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    BossBarEvent;                                             // 0x05B8(0x0010) (ZeroConstructor, InstancedReference)
	unsigned char                                      UnknownData00[0x30];                                      // 0x05C8(0x0030) MISSED OFFSET
	struct FBossbarEventData                           BossBarData;                                              // 0x05F8(0x0010) (Net, Transient)
	class AOakMusicProvider*                           MusicProvider;                                            // 0x0608(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AElementalInteractionManager*                ElementalInteractionManager;                              // 0x0610(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	ENewGameState                                      StartGameState;                                           // 0x0618(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0618(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	int                                                StartGameTimer;                                           // 0x061C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0620(0x0018) MISSED OFFSET
	bool                                               bServerMapLoadComplete;                                   // 0x0638(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x37];                                      // 0x0639(0x0037) MISSED OFFSET
	struct FMayhemModeState                            MayhemModeState;                                          // 0x0670(0x0028) (Net, Transient)
	unsigned char                                      UnknownData04[0x18];                                      // 0x0698(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnMayhemModeUpdatedForBlueprint;                          // 0x06B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData05[0x1];                                       // 0x06C0(0x0001) MISSED OFFSET
	bool                                               bForceDisableLevelSync;                                   // 0x06C1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSyncDamageToExpSyncLevel;                                // 0x06C2(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData)
	EMultiplayerLootMode                               MultiplayerLootMode;                                      // 0x06C3(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bPreventDestroyedItemsToLostLoot;                         // 0x06C4(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData)
	EOakGameStateUIGroupMode                           CurrentGroupMode;                                         // 0x06C5(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x06C6(0x0002) MISSED OFFSET
	float                                              InventoryShopResetPeriod;                                 // 0x06C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FEffectivePlayerCountData                   EffectivePlayerCountData;                                 // 0x06CC(0x0008) (Net, Transient)
	unsigned char                                      UnknownData07[0x4];                                       // 0x06D4(0x0004) MISSED OFFSET
	int                                                EffectiveExpSyncLevel;                                    // 0x06D8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ReplicatedSecondsBeforeShopsReset;                        // 0x06DC(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              LocalSecondsBeforeShopsReset;                             // 0x06E0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x14];                                      // 0x06E4(0x0014) MISSED OFFSET
	class UGbxHUDStateData*                            CurrentHUDState;                                          // 0x06F8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bServerSkippedIntroMovie;                                 // 0x0700(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bServerFinishedRockNRollIntro;                            // 0x0701(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EOakLeague>                            ActiveLeague;                                             // 0x0702(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      ActiveLeagueInstance;                                     // 0x0703(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x40];                                      // 0x0704(0x0040) MISSED OFFSET
	int                                                CurrentPlayThrough;                                       // 0x0744(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x10];                                      // 0x0748(0x0010) MISSED OFFSET
	TArray<class AActor*>                              PlayerTargetingActors;                                    // 0x0758(0x0010) (Net, ZeroConstructor, Transient)
	bool                                               bInfiniteAmmo;                                            // 0x0768(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData11[0x9F];                                      // 0x0769(0x009F) MISSED OFFSET
	bool                                               bPlayerWeaponsRestricted;                                 // 0x0808(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0x9F];                                      // 0x0809(0x009F) MISSED OFFSET
	int                                                PlayerGlobalInputLocks;                                   // 0x08A8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0xEC];                                      // 0x08AC(0x00EC) MISSED OFFSET
	int                                                CleanupPickupTriggerCount;                                // 0x0998(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                CleanupPickupRemainderCount;                              // 0x099C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	TArray<class AOakInventoryItemPickup*>             PickupList;                                               // 0x09A0(0x0010) (ZeroConstructor, Transient)
	TArray<class AOakInventoryItemPickup*>             PickupCleanupList;                                        // 0x09B0(0x0010) (ZeroConstructor, Transient)
	TArray<class AOakProjectile*>                      GrenadeList;                                              // 0x09C0(0x0010) (ZeroConstructor, Transient)
	int                                                CachedNumProjectilesForQuickPop;                          // 0x09D0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x09D4(0x0004) MISSED OFFSET
	TArray<class AOakCharacter*>                       NameTaggedCharacters;                                     // 0x09D8(0x0010) (Net, ZeroConstructor, Transient)
	TArray<class UTutorialMessageDataAsset*>           CurrentTutorialMessages;                                  // 0x09E8(0x0010) (Net, ZeroConstructor, Transient)
	struct FMapIDData                                  LastTraveledMapID;                                        // 0x09F8(0x0002) (Net, Transient)
	unsigned char                                      UnknownData15[0x6];                                       // 0x09FA(0x0006) MISSED OFFSET
	TArray<struct FGlobalScreenParticleData>           GlobalScreenParticles;                                    // 0x0A00(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData16[0x1];                                       // 0x0A10(0x0001) MISSED OFFSET
	bool                                               bClientJoining;                                           // 0x0A11(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData17[0x6];                                       // 0x0A12(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnNameTaggedCharactersChanged;                            // 0x0A18(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLastTravelIDsChanged;                                   // 0x0A28(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FGbxAttributeInteger                        SpawnOptionLevel;                                         // 0x0A38(0x000C) (BlueprintVisible, Transient)
	uint32_t                                           MicropatchSwitches;                                       // 0x0A44(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData18[0x8];                                       // 0x0A48(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakGameState");
		return ptr;
	}


	void STATIC_StaticUnregisterGlobalScreenParticle(class UObject* WorldContextObject, const struct FName& Tag);
	void STATIC_StaticRegisterGlobalScreenParticle(class UObject* WorldContextObject, const struct FGlobalScreenParticleData& ScreenParticle);
	void STATIC_SetMapTravelIDs(class UObject* WorldContextObject, unsigned char ZoneNameID, unsigned char MapNameID, float MinWaitTime, const struct FLatentActionInfo& LatentInfo);
	void RemoveNameTaggedCharacter(class AOakCharacter* CharacterToRemove);
	void OnRep_StartGameTimer();
	void OnRep_ServerSkippedIntroMovie();
	void OnRep_ServerMapLoadComplete();
	void OnRep_SecondsBeforeShopsReset();
	void OnRep_MicropatchSwitches(uint32_t OldMicropatchSwitches);
	void OnRep_MayhemModeState();
	void OnRep_LastTraveledMapID();
	void OnRep_EffectiveExpSyncLevel();
	void OnRep_CurrentTutorialMessages();
	void OnRep_CurrentHUDState();
	void OnRep_BossBarData();
	void OnRep_ActiveLeague();
	void OnNameTaggedCharactersChanged__DelegateSignature();
	void OnLastTravelIDsChanged__DelegateSignature();
	void OnBossBarEvent__DelegateSignature(const struct FBossbarEventData& EventData);
	TArray<class AOakCharacter*> GetNameTaggedCharacters();
	bool STATIC_GetCurrentTravelIDs(class UObject* WorldContextObject, struct FMapIDData* OutTravelIDs);
	void ClientMatchmakingStateChanged(EMatchmakingState MatchmakingState);
	void ClientMatchmakingBackup();
	void ClientBroadcastKilledEnemyFriendEvent(EKilledEnemyFriendEventType KilledEnemyFriendEventType, uint32_t EnemyUINameHash);
	void ClientBroadcastFriendEvent_PropagateRareSpawnMission(class UObject* WorldContextObject, class UClass* MissionClass, class UGameStatData* StatData);
	void ClearNameTaggedCharacters();
	void STATIC_BreakMapIDData(const struct FMapIDData& InMapIDData, unsigned char* ZoneNameID, unsigned char* MapNameID);
	void AddNameTaggedCharacter(class AOakCharacter* CharacterToAdd);
};


// Class OakGame.RaidGameState
// 0x0160 (0x0BB0 - 0x0A50)
class ARaidGameState : public AOakGameState
{
public:
	class UHUDNotificationAsset*                       NotificationData;                                         // 0x0A50(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UHUDNotificationAsset*                       RaidStartNotificationData;                                // 0x0A58(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UHUDNotificationAsset*                       RaidFailedNotificationData;                               // 0x0A60(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UHUDNotificationAsset*                       RaidCountdownNotificationData;                            // 0x0A68(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EGameModeNotificationType                          RaidSurvivedID;                                           // 0x0A70(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EGameModeNotificationType                          RaidDefeatID;                                             // 0x0A71(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EGameModeNotificationType                          RaidStartID;                                              // 0x0A72(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EGameModeNotificationType                          RaidCountdownID;                                          // 0x0A73(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0A74(0x0004) MISSED OFFSET
	class UGbxHUDData*                                 SpectatorHUDData;                                         // 0x0A78(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxHUDStateData*                            SpectatorHUDState;                                        // 0x0A80(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                RaidBeginningNotificationPriority;                        // 0x0A88(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0A8C(0x0004) MISSED OFFSET
	struct FText                                       RaidBeginningNotificationText;                            // 0x0A90(0x0028) (Edit)
	int                                                LegCompleteNotificationPriority;                          // 0x0AA8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0AAC(0x0004) MISSED OFFSET
	struct FText                                       LegCompleteNotificationText;                              // 0x0AB0(0x0028) (Edit)
	int                                                RaidCompleteNotificationPriority;                         // 0x0AC8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0ACC(0x0004) MISSED OFFSET
	struct FText                                       RaidCompleteNotificationText;                             // 0x0AD0(0x0028) (Edit)
	int                                                PlayerDiedNotificationPriority;                           // 0x0AE8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0AEC(0x0004) MISSED OFFSET
	struct FText                                       PlayerDiedNotificationText;                               // 0x0AF0(0x0028) (Edit)
	int                                                TeamWipeNotificationPriority;                             // 0x0B08(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0B0C(0x0004) MISSED OFFSET
	struct FText                                       TeamWipeNotificationText;                                 // 0x0B10(0x0028) (Edit)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0B28(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlayerDied;                                             // 0x0B30(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAllPlayersDied;                                         // 0x0B40(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRaidBegun;                                              // 0x0B50(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRaidLegComplete;                                        // 0x0B60(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRaidComplete;                                           // 0x0B70(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRaidCountdown;                                          // 0x0B80(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnNumSpectatablePlayersChanged;                           // 0x0B90(0x0010) (ZeroConstructor, InstancedReference)
	int                                                RaidCountdown;                                            // 0x0BA0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                NumSpectatablePlayers;                                    // 0x0BA4(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x8];                                       // 0x0BA8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.RaidGameState");
		return ptr;
	}


	void OnRep_NumSpectatablePlayers();
	void OnRaidPlayerDied__DelegateSignature(class AOakPlayerState* PlayerState);
	void OnRaidLegComplete__DelegateSignature(int LegNumber);
	void OnRaidCountdown__DelegateSignature(int CountdownRemaining);
	void OnRaidComplete__DelegateSignature();
	void OnRaidBegun__DelegateSignature(int CountdownDuration);
	void OnRaidAllPlayersDied__DelegateSignature();
	void OnNumSpectatablePlayersChanged__DelegateSignature(int NewNumSpectatable);
	void BroadcastRaidComplete();
	void BroadcastRaidBegun(int CountdownDuration);
	void BroadcastPlayerDied(class AOakPlayerState* PlayerState);
	void BroadcastLegComplete(int LegNumber);
	void BroadcastAllPlayersDied();
};


// Class OakGame.GearUpGameState
// 0x0130 (0x0CE0 - 0x0BB0)
class AGearUpGameState : public ARaidGameState
{
public:
	class UGearUpData*                                 GearUpDataPrivate;                                        // 0x0BB0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDeathCircleStatus>                    DeathCircleStatus;                                        // 0x0BB8(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0BB9(0x0003) MISSED OFFSET
	float                                              StableEndTime;                                            // 0x0BBC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              TransitionEndTime;                                        // 0x0BC0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0BC4(0x0004) MISSED OFFSET
	class AActor*                                      DeathCirclePrivate;                                       // 0x0BC8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	int8_t                                             ActiveStage;                                              // 0x0BD0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0BD1(0x0007) MISSED OFFSET
	class ADeathCirclePoint*                           ActivePoint;                                              // 0x0BD8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class ADeathCirclePoint*                           NextPoint;                                                // 0x0BE0(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	TArray<class AOakUIGearUpExtractionAIO*>           Extractors;                                               // 0x0BE8(0x0010) (ZeroConstructor, Transient)
	TArray<class AGearUpRespawnStation*>               Respawners;                                               // 0x0BF8(0x0010) (ZeroConstructor, Transient)
	TArray<struct FGearUpAirdropData>                  Airdrops;                                                 // 0x0C08(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x20];                                      // 0x0C18(0x0020) MISSED OFFSET
	EOakGameStateUIGroupMode                           PreviousGroupMode;                                        // 0x0C38(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0C39(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnGearUpRespawn;                                          // 0x0C40(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGearUpSupplyDrop;                                       // 0x0C50(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGearUpCircleClosing;                                    // 0x0C60(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGearUpNewCircle;                                        // 0x0C70(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData05[0x60];                                      // 0x0C80(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GearUpGameState");
		return ptr;
	}


	void UpdateGameStateAudio(const struct FVector& CircleLocation, float CircleRadius);
	void StopPlayerStormAudio(class ACharacter* Player);
	void StartPlayerStormAudio(class ACharacter* Player);
	void OnRep_GearUpDataPrivate();
	void OnGearUpSupplyDrop__DelegateSignature();
	void OnGearUpRespawn__DelegateSignature();
	void OnGearUpCircle__DelegateSignature();
	void MulticastSpawnFogParticle(class ACharacter* Character);
	void MulticastRemoveFogParticle(class ACharacter* Character);
	float GetElapsedDeathCircleTime();
	void BroadcastGearUpSupplyDrop();
	void BroadcastGearUpRespawn();
	void BroadcastGearUpNewCircle();
	void BroadcastGearUpCircleClosing();
	void AddActiveAirdrop(class AOakMissionSpawner* AirDrop);
};


// Class OakGame.OakInventoryListComponent
// 0x0008 (0x0378 - 0x0370)
class UOakInventoryListComponent : public UInventoryListComponent
{
public:
	EInventoryListType                                 InventoryListType;                                        // 0x0370(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0371(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInventoryListComponent");
		return ptr;
	}


	void ServerUseItemInInventory(const struct FInventoryListEntryHandle& InventoryItemHandle);
	void ServerTransferItemToList(const struct FInventoryListEntryHandle& InventoryItemHandle, class AActor* DestinationActor, EInventoryListType DestinationListType, int Quantity);
	void ServerSetEquippedWeaponSkin(const struct FInventoryListEntryHandle& InventoryItemHandle, class UWeaponSkinPartData* WeaponSkinPartData);
	bool CanUseItemInInventory(const struct FInventoryListEntryHandle& InventoryItemHandle);
};


// Class OakGame.GearUpInventoryListComponent
// 0x0000 (0x0378 - 0x0378)
class UGearUpInventoryListComponent : public UOakInventoryListComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GearUpInventoryListComponent");
		return ptr;
	}

};


// Class OakGame.GearUpRespawnStation
// 0x0008 (0x05D8 - 0x05D0)
class AGearUpRespawnStation : public ACheckpointTravelStationObject
{
public:
	bool                                               bAlreadyUsed;                                             // 0x05D0(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x05D1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GearUpRespawnStation");
		return ptr;
	}

};


// Class OakGame.GenericStandInActor
// 0x0008 (0x0460 - 0x0458)
class AGenericStandInActor : public AActor
{
public:
	class UGbxActionComponent*                         ActionComponent;                                          // 0x0458(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GenericStandInActor");
		return ptr;
	}

};


// Class OakGame.Geyser
// 0x0048 (0x0598 - 0x0550)
class AGeyser : public AInteractiveObject
{
public:
	class UCapsuleComponent*                           CapsuleCollision;                                         // 0x0550(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    ParticleSystem;                                           // 0x0558(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    ParticleSystemAnticipation;                               // 0x0560(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGeyserAlwaysOnData*                         GeyserData;                                               // 0x0568(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoAdjustParticleToCapsuleHeight;                       // 0x0570(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EGeyserState                                       GeyserState;                                              // 0x0571(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x26];                                      // 0x0572(0x0026) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.Geyser");
		return ptr;
	}


	void OnSteamOn();
	void OnSteamOff();
	void OnRep_GeyserState();
	void OnAnticipationStopped();
	void OnAnticipationStarted();
	EGeyserState GetGeyserState();
};


// Class OakGame.GeyserAlwaysOnData
// 0x0090 (0x00C0 - 0x0030)
class UGeyserAlwaysOnData : public UGbxDataAsset
{
public:
	struct FRuntimeFloatCurve                          VerticalAcceleration;                                     // 0x0030(0x0078) (Edit, BlueprintVisible)
	float                                              MaxVelocity;                                              // 0x00A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bPullToCenter;                                            // 0x00AC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00AD(0x0003) MISSED OFFSET
	float                                              TimeToReachCenter;                                        // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   FalloffRange;                                             // 0x00B4(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GeyserAlwaysOnData");
		return ptr;
	}

};


// Class OakGame.GeyserIntermittentData
// 0x0018 (0x00D8 - 0x00C0)
class UGeyserIntermittentData : public UGeyserAlwaysOnData
{
public:
	struct FVector2D                                   MinMaxStartDelay;                                         // 0x00C0(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              TimeOn;                                                   // 0x00C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeOff;                                                  // 0x00CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnticipationOnTime;                                       // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PostAnticipationOffTime;                                  // 0x00D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GeyserIntermittentData");
		return ptr;
	}

};


// Class OakGame.GFxOptionBase
// 0x0090 (0x00B8 - 0x0028)
class UGFxOptionBase : public UObject
{
public:
	unsigned char                                      UnknownData00[0x58];                                      // 0x0028(0x0058) MISSED OFFSET
	class UGbxGFxGridScrollingList*                    ContentPanel;                                             // 0x0080(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0088(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxOptionBase");
		return ptr;
	}


	void OnUnimplementedOptionClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxAccessiblityOptions
// 0x0020 (0x00D8 - 0x00B8)
class UGFxAccessiblityOptions : public UGFxOptionBase
{
public:
	class UCrosshairColorListItemSpinner*              CrosshairNeutralColorItem;                                // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCrosshairColorListItemSpinner*              CrosshairEnemyColorItem;                                  // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCrosshairColorListItemSpinner*              CrosshairAllyColorItem;                                   // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x00D0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxAccessiblityOptions");
		return ptr;
	}


	void OnSubsAndCCTextSizeChanged(class UGbxGFxListItemNumber* Item);
	void OnSubsAndCCBackgroundOpacityChanged(class UGbxGFxListItemNumber* Item);
	void OnHeadBobScaleChanged(class UGbxGFxListItemNumber* Item);
	void OnCrosshairNeutralColorFrameChanged(class UGbxGFxListItemSpinner* Item);
	void OnCrosshairEnemyColorFrameChanged(class UGbxGFxListItemSpinner* Item);
	void OnCrosshairAllyColorFrameChanged(class UGbxGFxListItemSpinner* Item);
};


// Class OakGame.CrosshairColorListItemSpinner
// 0x0000 (0x0360 - 0x0360)
class UCrosshairColorListItemSpinner : public UGbxGFxListItemSpinner
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrosshairColorListItemSpinner");
		return ptr;
	}

};


// Class OakGame.GFxActionSkillWidget
// 0x0170 (0x07A0 - 0x0630)
class UGFxActionSkillWidget : public UGbxGFxHUDWidget
{
public:
	class FString                                      GFxKEY_ActionSkillInner;                                  // 0x0630(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class UGbxGFxObject*                               ActionSkillInner;                                         // 0x0640(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      GFxKEY_CantUseFlourish;                                   // 0x0648(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class UGbxGFxObject*                               CantUseFlourish;                                          // 0x0658(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      GFxKEY_StatusBar;                                         // 0x0660(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class UGbxGFxProgressBar*                          StatusBar;                                                // 0x0670(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      GFxKEY_CountdownTimerText;                                // 0x0678(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0688(0x0018) MISSED OFFSET
	class FString                                      GFxKEY_SkillIconContainer;                                // 0x06A0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class UGbxGFxObject*                               SkillIconContainer;                                       // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x06B8(0x0008) MISSED OFFSET
	class UGbxGFxObject*                               DynamicSkillIcon;                                         // 0x06C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      GFxKEY_RemainingChargesDisplay;                           // 0x06C8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData02[0x18];                                      // 0x06D8(0x0018) MISSED OFFSET
	class FString                                      GFxKEY_RemainingChargesContainer;                         // 0x06F0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0700(0x0010) MISSED OFFSET
	struct FLinearColor                                ReadyForActivationColor;                                  // 0x0710(0x0010) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                RechargingOrCooldownColor;                                // 0x0720(0x0010) (Edit, BlueprintReadOnly, IsPlainOldData)
	ESkillWidgetSlot                                   SlotToWidgetMapping;                                      // 0x0730(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0731(0x0007) MISSED OFFSET
	int                                                CoundownSecondsMaxValue;                                  // 0x0738(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CountdownSecondsAudioValue;                               // 0x073C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SlotIndex;                                                // 0x0740(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0744(0x0004) MISSED OFFSET
	struct FName                                       SkillUsedFailAudioEventName;                              // 0x0748(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UOakPlayerAbilitySlotData*>           AssignedSlots;                                            // 0x0750(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class UOakActionAbility*                           TrackedActionAbility;                                     // 0x0760(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x18];                                      // 0x0768(0x0018) MISSED OFFSET
	struct FName                                       SkillFailedCharacterSpecific;                             // 0x0780(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      IconKey;                                                  // 0x0788(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData07[0x8];                                       // 0x0798(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxActionSkillWidget");
		return ptr;
	}


	void SetRemainingCharges(int NewRemainingCharges);
	void SetBarColor(const struct FLinearColor& InColor);
	void ResourceRegeneratingEvent();
	void ResourceDepletedEvent();
	void OnTrackedActionAbilityStateChanged(class UGbxAbility* UpdatedAbility);
	void OnActionSkillFailedActivation(class UOakActionAbility* InActionAbility, unsigned char ErrorCode);
	void OnActionSkillChargeCountChanged(class UOakActionAbility* InActionAbility);
	void OnActionSkillActivated(class UOakActionAbility* InActionAbility);
	void OnActionAbilityAugmentChanged(class UClass* ActionAbilityClass, class UOakActionAbilityAugmentSlotData* SlotData);
	void ForceResourceProgress(float PercentProgress);
	void extActivatedAnimationComplete();
};


// Class OakGame.GFxAmmoBar
// 0x0120 (0x0750 - 0x0630)
class UGFxAmmoBar : public UGbxGFxHUDWidget
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0630(0x0038) MISSED OFFSET
	class AOakHUD*                                     OakHUD;                                                   // 0x0668(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AWeapon*                                     CachedWeapon;                                             // 0x0670(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UWeaponCOVHeatComponent*                     CachedCOVHeatComponent;                                   // 0x0678(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWeaponAmmoComponent*                        CachedAmmoComponent;                                      // 0x0680(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AOakPlayerController*                        OakPCOwner;                                               // 0x0688(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AOakCharacter*                               OakCharacterOwner;                                        // 0x0690(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               AmmoCurrentValueContainer;                                // 0x0698(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               AmmoCurrentValueLabel;                                    // 0x06A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MaxValueContainer;                                        // 0x06A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               AmmoMaxValueLabel;                                        // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               WeaponIconContainer;                                      // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               AmmoAndModeContainer;                                     // 0x06C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ModeSwitchWrapper;                                        // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ModeSwitchTextContainer;                                  // 0x06D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ElementalIcon;                                            // 0x06D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ModeSwitchTextBox;                                        // 0x06E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           ModeSwitchHint;                                           // 0x06E8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          COVHeatBar;                                               // 0x06F0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               COVBrokenBar;                                             // 0x06F8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               COVRedliningMC;                                           // 0x0700(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               COVOverheatWarning;                                       // 0x0708(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MaxSwapWeaponModeTime;                                    // 0x0710(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0714(0x000C) MISSED OFFSET
	class UUIStatData*                                 EridianFabricatorStat;                                    // 0x0720(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UInventorySlotData*                          InventorySlotDataTop;                                     // 0x0728(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UInventorySlotData*                          InventorySlotDataBottom;                                  // 0x0730(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UInventorySlotData*                          InventorySlotDataLeft;                                    // 0x0738(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UInventorySlotData*                          InventorySlotDataRight;                                   // 0x0740(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWeaponAmmoComponent*                        CachedWeaponSecondaryModeAmmoComponent;                   // 0x0748(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxAmmoBar");
		return ptr;
	}


	void WeaponSecondaryModeAmmoChanged();
	void UpdateCachedAmmoCounts();
	void UpdateCachedAmmoComponent();
	void UpdateAmmoCount(int LoadedCount, int SpareCount);
	void UpdateAmmoBarExtrema(float MinNum, float MaxNum, struct FGameResourcePoolReference* ResourcePoolReference);
	void OnWeaponSwitchedMode();
	void OnWeaponEquipped();
	void OnWeaponChanged(class AWeapon* NewWeapon, class AWeapon* LastWeapon);
	void OnUpdatePreToggleWeaponMode(bool bPreToggleWeaponModeStarted);
	void OnResurrected();
	void OnMaxAmmoEmpty();
	void OnLowClipAmmo();
	void OnInputDeviceChanged();
	void OnCurrentUsableChanged(class UUsableComponent* NewUsableComponent, const struct FUsabilityInfo& InUsabilityInfo, const struct FVector& NewUsableComponentImpactPoint, float NewUsableComponentDistanceAway);
	void OnClipAmmoEmpty();
	void OnAmmoReloaded();
};


// Class OakGame.GFxAnointmentRerollMenu
// 0x02B0 (0x0950 - 0x06A0)
class UGFxAnointmentRerollMenu : public UAdvancedInteractiveObjectOwnedGFxMenu
{
public:
	class UGbxGFxHintWidget*                           NavBackpackRightHint;                                     // 0x06A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           DenyHint;                                                 // 0x06A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           ConfirmHint;                                              // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxCurrencyCounterClip*                     PlayerEridiumCounter;                                     // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               InsufficientFundsTextClip;                                // 0x06C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               InsufficientFundsTextShadowClip;                          // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               InsufficientFundsObj;                                     // 0x06D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               BackpackClip;                                             // 0x06D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x48];                                      // 0x06E0(0x0048) MISSED OFFSET
	TArray<struct FOakUIInventoryItemDisplayInfo>      BackpackDisplayInfoList;                                  // 0x0728(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UOakThumbnailManager*                        IconManager;                                              // 0x0738(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLoadedItemCardBase*                      ItemCardBase;                                             // 0x0740(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               RerollEridiumCounter;                                     // 0x0748(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxBackpackWidgetItem*                      SelectedItem;                                             // 0x0750(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FGFxBackpackWidget                          BackpackScrollingList;                                    // 0x0758(0x0198) (BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData01[0x10];                                      // 0x08F0(0x0010) MISSED OFFSET
	TArray<struct FOakInventoryMenuFilter>             CurrentFilters;                                           // 0x0900(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	int                                                CurrentFilterIndex;                                       // 0x0910(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector2D                                   BackpackItemCellSize;                                     // 0x0914(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	int                                                VisibleBackpackCellsStandard;                             // 0x091C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VisibleBackpackCellsSplit;                                // 0x0920(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0924(0x0004) MISSED OFFSET
	class USwfMovie*                                   ItemCardMovie;                                            // 0x0928(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FOakInventoryMenuFilter>             PageFilters;                                              // 0x0930(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FOakInventoryMenuTypePriorityInfo>   ItemTypeSortPriorities;                                   // 0x0940(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxAnointmentRerollMenu");
		return ptr;
	}


	void OnThumbnailLoaded();
	void OnSelectedBackpackItemChanged(const struct FOakUIInventoryItemDisplayInfo& DisplayInfo, class UGbxGFxObject* GridWidget);
	void OnReRolledInventoryActorReady(class AOakPlayerController* ReRolledOwner, class AActor* ReRolledInventoryActor);
	void OnItemCardReady();
	void OnBackpackItemClicked(const struct FOakUIInventoryItemDisplayInfo& DisplayInfo, class UGbxGFxObject* GridWidget, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.OakGFxMenuData
// 0x0000 (0x00C0 - 0x00C0)
class UOakGFxMenuData : public UGbxGFxMenuData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakGFxMenuData");
		return ptr;
	}

};


// Class OakGame.GFxAnointmentRerollMenuData
// 0x0000 (0x00C0 - 0x00C0)
class UGFxAnointmentRerollMenuData : public UOakGFxMenuData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxAnointmentRerollMenuData");
		return ptr;
	}

};


// Class OakGame.GFxDisplayedNotificationWidget
// 0x00B0 (0x0590 - 0x04E0)
class UGFxDisplayedNotificationWidget : public UGbxGFxMovie
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04E0(0x0008) MISSED OFFSET
	TMap<class FString, struct FText>                  TextFieldConstantsMap;                                    // 0x04E8(0x0050) (Edit, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0538(0x0020) MISSED OFFSET
	class UGbxMenuData*                                LinkedMenuData;                                           // 0x0558(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AOakHUD*                                     CachedOakHUD;                                             // 0x0560(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               HintTextBox;                                              // 0x0568(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      MenuName;                                                 // 0x0570(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      HintTextID;                                               // 0x0580(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxDisplayedNotificationWidget");
		return ptr;
	}


	void OnHideComplete();
	void LoadLinkedMenuData();
};


// Class OakGame.GFxAreaDiscoveredNotificationWidget
// 0x0040 (0x05D0 - 0x0590)
class UGFxAreaDiscoveredNotificationWidget : public UGFxDisplayedNotificationWidget
{
public:
	bool                                               bUseNowEnteringMessaging;                                 // 0x0590(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0591(0x0007) MISSED OFFSET
	struct FText                                       AreaDiscoveredText;                                       // 0x0598(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       NowEnteringText;                                          // 0x05B0(0x0028) (Edit, BlueprintReadOnly)
	class UGbxTextField*                               TitleTextClip;                                            // 0x05C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxAreaDiscoveredNotificationWidget");
		return ptr;
	}

};


// Class OakGame.GFxAudioOptions
// 0x0058 (0x0110 - 0x00B8)
class UGFxAudioOptions : public UGFxOptionBase
{
public:
	class UGbxGFxListItemNumber*                       MasterVolumeItem;                                         // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       MusicVolumeItem;                                          // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       SoundEffectsVolumeItem;                                   // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       VOVolumeItem;                                             // 0x00D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       VoiceVolumeItem;                                          // 0x00D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               AlternateBkg;                                             // 0x00E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FWwisePlaybackInstance                      PreviewAudioPlaybackInstance;                             // 0x00E8(0x0018) (Transient)
	class UWwiseEvent*                                 PreviewAudioStopEvent;                                    // 0x0100(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0108(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxAudioOptions");
		return ptr;
	}


	void OnVOVolumeChanged(class UGbxGFxListItemNumber* Item);
	void OnVoiceVolumeChanged(class UGbxGFxListItemNumber* Item);
	void OnSpeakerSetupChanged(class UGbxGFxListItemSpinner* Item);
	void OnSoundEffectsVolumeChanged(class UGbxGFxListItemNumber* Item);
	void OnPushToTalkChanged(class UGbxGFxListItemSpinner* Item);
	void OnMuteAudioOnFocusLossChanged(class UGbxGFxListItemSpinner* Item);
	void OnMusicVolumeChanged(class UGbxGFxListItemNumber* Item);
	void OnMasterVolumeChanged(class UGbxGFxListItemNumber* Item);
	void OnEnableWindowsSpatialChanged(class UGbxGFxListItemSpinner* Item);
	void OnControllerAudioChanged(class UGbxGFxListItemSpinner* Item);
	void OnContentPanelSelectionChanged(class UGbxGFxListCell* SelectedItem);
	void OnContentPanelItemClicked(class UGbxGFxListCell* ClickedItem, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxBackpackWidgetListener
// 0x0018 (0x0040 - 0x0028)
class UGFxBackpackWidgetListener : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	TWeakObjectPtr<class UGbxGFxGridScrollingList>     ListeningList;                                            // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UOakThumbnailManager>         ListeningThumbnailManager;                                // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxBackpackWidgetListener");
		return ptr;
	}


	void OnThumbnailLoaded();
	void OnBackpackGridItemSelected(class UGbxGFxListCell* ListItem);
	void OnBackpackGridItemPressed(class UGbxGFxListCell* PressedItem, const struct FGbxMenuInputEvent& InputInfo);
	void OnBackpackGridItemClicked(class UGbxGFxListCell* ClickedItem, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxBackpackWidgetItem
// 0x0110 (0x0420 - 0x0310)
class UGFxBackpackWidgetItem : public UGbxGFxListCell
{
public:
	unsigned char                                      UnknownData00[0x110];                                     // 0x0310(0x0110) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxBackpackWidgetItem");
		return ptr;
	}

};


// Class OakGame.GFxStatusMenuSubmenu
// 0x0020 (0x06B0 - 0x0690)
class UGFxStatusMenuSubmenu : public UGbxGFxMenuSwitcherSubmenu
{
public:
	bool                                               bAllowPause;                                              // 0x0690(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShowMapMesh;                                             // 0x0691(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowMapMenuAxisInput;                                   // 0x0692(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bHidStatusMenuForPauseMenu;                               // 0x0693(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsPlayingIntro;                                          // 0x0694(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsPlayingOuttro;                                         // 0x0695(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0696(0x0002) MISSED OFFSET
	float                                              TransitionTimeRemaining;                                  // 0x0698(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EGFxStatusMenuTransitionReason                     QueuedTransitionAction;                                   // 0x069C(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x069D(0x0003) MISSED OFFSET
	struct FName                                       QueuedTransitionSwitchToMenu;                             // 0x06A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x06A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxStatusMenuSubmenu");
		return ptr;
	}


	void OnOuttroAnimationComplete();
	void OnIntoAnimationComplete();
};


// Class OakGame.GFxSkillScreenTree
// 0x0860 (0x0F10 - 0x06B0)
class UGFxSkillScreenTree : public UGFxStatusMenuSubmenu
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x06B0(0x0010) MISSED OFFSET
	TArray<struct FGFxSkillScreenBranchContainer>      SkillScreenTreeBranchContainers;                          // 0x06C0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UOakPlayerAbilityTree*                       PlayerAbilityTree;                                        // 0x06D0(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UOakPlayerAbilityTreeData*                   PlayerAbilityData;                                        // 0x06D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FGFxSkillScreenInfoCardContainer            InfoCard;                                                 // 0x06E0(0x0160) (Edit, BlueprintReadOnly)
	struct FGFxSkillScreenSkillInfo                    ClassAbilityInfo;                                         // 0x0840(0x00C8) (Edit, BlueprintReadOnly)
	struct FName                                       EchoDeviceScreen_Unlocked;                                // 0x0908(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TreeUnlockLevel;                                          // 0x0910(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0914(0x0004) MISSED OFFSET
	TArray<struct FName>                               AudioSkillPoints;                                         // 0x0918(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FName                                       AudioSkillMax;                                            // 0x0928(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       AudioNewRowUnlocked;                                      // 0x0930(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       AudioSpinTree;                                            // 0x0938(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       AudioEquipSkill;                                          // 0x0940(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       AudioTreeUnlock;                                          // 0x0948(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       VOTreeUnlock;                                             // 0x0950(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TreeUnlockDelayForVO;                                     // 0x0958(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x095C(0x0004) MISSED OFFSET
	struct FName                                       AudioToggleView;                                          // 0x0960(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       AudioUnequipSkill;                                        // 0x0968(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       AudioErrorNotification;                                   // 0x0970(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       AudioManageLoadout;                                       // 0x0978(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGFxMenuTutorialCollection                  Tutorials;                                                // 0x0980(0x0020) (Edit, BlueprintReadOnly)
	struct FName                                       PurchasePassiveTutorial;                                  // 0x09A0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       WingtipTutorial;                                          // 0x09A8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TreeUnlockFirstSpinIndex;                                 // 0x09B0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TreeUnlockSecondSpinIndex;                                // 0x09B4(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TreeUnlockSlotPrimaryIndex;                               // 0x09B8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TreeUnlockSlotPetIndex;                                   // 0x09BC(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TreeUnlockSlotSecondaryHardpointIndex;                    // 0x09C0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PurchasePassiveSpendPointIndex;                           // 0x09C4(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       CharacterSpecificFirstUnlockTutorial;                     // 0x09C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FLinearColor                                IconBackgroundSelectedColor;                              // 0x09D0(0x0010) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                IconBackgroundAvailableColor;                             // 0x09E0(0x0010) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                IconBackgroundLockedColor;                                // 0x09F0(0x0010) (Edit, BlueprintReadOnly, IsPlainOldData)
	class UGbxGFxObject*                               SkillTreeContainer;                                       // 0x0A00(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UOakPlayerAbilityTreeBranchData*>     CachedBranches;                                           // 0x0A08(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x188];                                     // 0x0A18(0x0188) MISSED OFFSET
	class UGbxGFxButton*                               LeftArrow;                                                // 0x0BA0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           LeftArrowHint;                                            // 0x0BA8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               RightArrow;                                               // 0x0BB0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           RightArrowHint;                                           // 0x0BB8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenDragObject*                   DragSkillItem;                                            // 0x0BC0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxTutorialWidget*                          TutorialWidget;                                           // 0x0BC8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class USwfMovie*                                   BranchSwfMovie;                                           // 0x0BD0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0BD8(0x0008) MISSED OFFSET
	class UGFxSkillScreenItem*                         CurrentlyFocusedSkillItem;                                // 0x0BE0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0BE8(0x0008) MISSED OFFSET
	class UGFxSkillScreenItem*                         CachedDragTarget;                                         // 0x0BF0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenLoadoutSlot*                  CurrentlyFocusedLoadoutSlot;                              // 0x0BF8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UBalanceStateComponent*                      CharacterBalanceComponent;                                // 0x0C00(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	EGFxSkillScreenState                               ScreenState;                                              // 0x0C08(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EGFxSkillScreenState                               TransitionScreenState;                                    // 0x0C09(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x6];                                       // 0x0C0A(0x0006) MISSED OFFSET
	TArray<class UOakActionAbility*>                   ActionAbilities;                                          // 0x0C10(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class UGFxSkillScreenLoadoutSlot*>          SlotsToAutoSlot;                                          // 0x0C20(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class UGFxSkillScreenLoadoutSlot*>          LoadoutSlots;                                             // 0x0C30(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class UGFxSkillScreenLoadoutSlot*>          ValidLoadoutSlotsForSelectedItem;                         // 0x0C40(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class UGFxSkillScreenLoadoutSlot*>          DragTargetSlots;                                          // 0x0C50(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	struct FText                                       EmptySlotText;                                            // 0x0C60(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       TreeUnlockedAbility;                                      // 0x0C78(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       TreeUnlockedText;                                         // 0x0C90(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ActionSkillName;                                          // 0x0CA8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ActionSkillDescription;                                   // 0x0CC0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ModPrimaryName;                                           // 0x0CD8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ModPrimaryDescription;                                    // 0x0CF0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ModSecondaryName;                                         // 0x0D08(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ModSecondaryDescription;                                  // 0x0D20(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       PassiveSlotName;                                          // 0x0D38(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       EqippedName;                                              // 0x0D50(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       UnlocksAtLevelText;                                       // 0x0D68(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       AbilityInUseString;                                       // 0x0D80(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       SlotMustBeFilledString;                                   // 0x0D98(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       InfoCardEquippedString;                                   // 0x0DB0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       InfoCardMustBeEquippedString;                             // 0x0DC8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       InfoCardEquipAnItemString;                                // 0x0DE0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       InfoCardDefaultSlottedItemString;                         // 0x0DF8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       InfoCardRequiresParentSkillString;                        // 0x0E10(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       InfoCardNotEnoughBranchPointsString;                      // 0x0E28(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       InfoCardUnlockTreeString;                                 // 0x0E40(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       InfoCardUnpurchasedPassiveString;                         // 0x0E58(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       InfoCardPurchasedPassiveString;                           // 0x0E70(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       InfoCardMaxedPassiveString;                               // 0x0E88(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       InfoCardInsufficientPointsString;                         // 0x0EA0(0x0028) (Edit, BlueprintReadOnly)
	class UGbxGFxDragDropManager*                      DragDropManager;                                          // 0x0EB8(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x50];                                      // 0x0EC0(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSkillScreenTree");
		return ptr;
	}


	void OnTutorialComplete();
	void OnTutorialAdvanced();
	void OnTreeItemPressed(class UGFxSkillScreenItem* PressedItem);
	void OnSpinButtonPressed(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnSlotButtonHovered(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnSlotButtonFocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnSlotButtonClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnItemUsableStateChanged(class UGFxSkillScreenItem* UpdatedItem);
	void OnItemUnlockedAudioRequest();
	void OnItemSlotRequest(class UGFxSkillScreenItem* ItemToSlot, int SlotIndex);
	void OnItemIncreasedAudioRequest(int AudioIndex);
	void OnInfoCardUnhovered(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnInfoCardHovered(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnFocusedTreeItemChanged(class UGFxSkillScreenItem* FocusedItem);
	void OnFocusedLoadoutItemChanged(class UGFxSkillScreenLoadoutSlot* FocusedItem);
	void OnCharacterAugmentChanged(class UPlayerCharacterComponentSlotData* SlotData);
	void OnBranchHovered(class UGbxGFxButton* HoverededButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnBranchClicked(class UGFxSkillScreenBranch* ClickedBranch);
	void OnAbilitySlotChanged(class UOakPlayerAbilitySlotData* SlotData);
	void OnAbilityPointsChanged(int RemainingAbilityPoints);
	void OnAbilityItemChanged(class UOakPlayerAbilityTreeItemData* ItemData);
	void OnAbilityAugmentChanged(class UClass* ActionAbilityClass, class UOakActionAbilityAugmentSlotData* SlotData);
	void extSpinRightTransition();
	void extSpinLeftTransition();
	void ExtOnTutorialSpinComplete();
	void ExtOnScreenUnlockAnimationComplete();
};


// Class OakGame.GFxBeastmasterSkillScreenTree
// 0x00A0 (0x0FB0 - 0x0F10)
class UGFxBeastmasterSkillScreenTree : public UGFxSkillScreenTree
{
public:
	class UGbxTextField*                               PetLabel;                                                 // 0x0F10(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               PetAbilitySlotsLabel;                                     // 0x0F18(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               PetUltimateModLabel;                                      // 0x0F20(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenLoadoutSlot*                  PetSlot;                                                  // 0x0F28(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenLoadoutSlot*                  PetUltimateMod;                                           // 0x0F30(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenLoadoutSlot*                  PetAbilitySlots[0x2];                                     // 0x0F38(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FText                                       PetSlotDescription;                                       // 0x0F48(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       PetUltimateSlotDescription;                               // 0x0F60(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       PetAugmentSlotDescription;                                // 0x0F78(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       PetAbilitySlotDescription;                                // 0x0F90(0x0028) (Edit, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0FA8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxBeastmasterSkillScreenTree");
		return ptr;
	}

};


// Class OakGame.GFxBehindTheScenesMenu
// 0x0050 (0x06D0 - 0x0680)
class UGFxBehindTheScenesMenu : public UGbxGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0680(0x0010) MISSED OFFSET
	int                                                CategoryIndex;                                            // 0x0690(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0694(0x0004) MISSED OFFSET
	class UGbxGFxObject*                               Content;                                                  // 0x0698(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxBehindTheScenesMediaSelectionWidget*     MediaListClip;                                            // 0x06A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class ABehindTheScenesMediaPlayerActor*            MediaPlayerActor;                                         // 0x06A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxBehindTheScenesMediaCell*                SelectedMediaCell;                                        // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x06B8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxBehindTheScenesMenu");
		return ptr;
	}


	void OnMediaItemClicked(class UGbxGFxListCell* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxBehindTheScenesMediaSelectionWidget
// 0x0080 (0x01F0 - 0x0170)
class UGFxBehindTheScenesMediaSelectionWidget : public UGbxGFxObject
{
public:
	class UGbxGFxGridScrollingList*                    ContentListClip;                                          // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0178(0x0018) MISSED OFFSET
	class UTexture*                                    Thumbnails[0xA];                                          // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x01E0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxBehindTheScenesMediaSelectionWidget");
		return ptr;
	}

};


// Class OakGame.GFxBehindTheScenesMediaCell
// 0x0020 (0x0330 - 0x0310)
class UGFxBehindTheScenesMediaCell : public UGbxGFxListCell
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0310(0x0018) MISSED OFFSET
	class UGbxGFxObject*                               TypeIconClip;                                             // 0x0328(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxBehindTheScenesMediaCell");
		return ptr;
	}


	void UpdateThumbnail(class UTexture* InNewIconData, int TextureIndex, bool bForce);
};


// Class OakGame.GFxBehindTheScenesMenuData
// 0x0008 (0x00C8 - 0x00C0)
class UGFxBehindTheScenesMenuData : public UGbxGFxMenuData
{
public:
	class UBehindTheScenesContent*                     BehindTheScenesContent;                                   // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxBehindTheScenesMenuData");
		return ptr;
	}

};


// Class OakGame.GFxBillboardComponent
// 0x0050 (0x0800 - 0x07B0)
class UGFxBillboardComponent : public UStaticMeshComponent
{
public:
	bool                                               bShouldBillboard;                                         // 0x07B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x07B1(0x0003) MISSED OFFSET
	int                                                CustomTranslucentSortPriority;                            // 0x07B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ContentSize;                                              // 0x07B8(0x0008) (Edit, IsPlainOldData)
	class UCurveFloat*                                 DistanceScaleCurve;                                       // 0x07C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 DistanceAlphaCurve;                                       // 0x07C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AGbxPlayerController*                        TrackedPlayerController;                                  // 0x07D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxMovie*                                CurrentMovie;                                             // 0x07D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UTextureRenderTarget2D*                      RenderTarget;                                             // 0x07E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    DisplayedMaterial;                                        // 0x07E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     SizeOfPlaneMesh;                                          // 0x07F0(0x000C) (Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x07FC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxBillboardComponent");
		return ptr;
	}


	void OnMovieStarted();
};


// Class OakGame.GFxBossBar
// 0x0110 (0x0740 - 0x0630)
class UGFxBossBar : public UGbxGFxHUDWidget
{
public:
	TArray<class UGbxGFxProgressBar*>                  AdditionalBars;                                           // 0x0630(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0640(0x0008) MISSED OFFSET
	class UGFxNameplate*                               Nameplate;                                                // 0x0648(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AOakGameState*                               OakGameState;                                             // 0x0650(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakDamageComponent*                         BossDamageComponent;                                      // 0x0658(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UGbxGFxObject*>                       BarClips;                                                 // 0x0660(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class UGbxGFxObject*>                       ActiveSectionClips;                                       // 0x0670(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class UGbxGFxProgressBar*>                  FocusableProgressBars;                                    // 0x0680(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class AOakCharacter*                               CachedBoss;                                               // 0x0690(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0698(0x0008) MISSED OFFSET
	class UGbxGFxObject*                               NameplateBars;                                            // 0x06A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      NameplateBarsID;                                          // 0x06A8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      PathToTopFocusableBar;                                    // 0x06B8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      PathToMidFocusableBar;                                    // 0x06C8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      PathToBotFocusableBar;                                    // 0x06D8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      FadeInSingle;                                             // 0x06E8(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      FadeInDouble;                                             // 0x06F8(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      FadeInTriple;                                             // 0x0708(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      DeathAnimation;                                           // 0x0718(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	struct FText                                       LevelPrefix;                                              // 0x0728(0x0028) (Edit, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxBossBar");
		return ptr;
	}


	void UpdateEventDelegates();
	void UpdateActiveSelectionClips();
	void SetNewBossTarget(class AOakCharacter* NewTarget);
	void SetFocusedBar(const class FString& FocusedBarFrame);
	void STATIC_PlayEventOnBossBar(class AOakCharacter* BossBarCharacter, EBossbarEventType BossBarEvent);
	void OnPawnChanged(class APawn* Pawn, class APawn* OldPawn);
	void OnHealthTypeDepeleted(const struct FHealthTypeDepletedDetails& Details);
	void OnHealthTypeAdded(const struct FHealthType& HealthType, int Index);
	void OnBossDestroy(class AActor* DestroyedActor);
	void HideAllSelectionClips();
	void HandleEventOnBossBar(const struct FBossbarEventData& EventData);
	void EnableBossBar();
	void DisableBossBar();
};


// Class OakGame.GFxBuddyWidget
// 0x0200 (0x0370 - 0x0170)
class UGFxBuddyWidget : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                               WidgetAnims;                                              // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          HealthBar;                                                // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          ShieldBar;                                                // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          ReviveBar;                                                // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          DyingBar;                                                 // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               GodRay;                                                   // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x01A0(0x0020) MISSED OFFSET
	TScriptInterface<class UNameplateInfoProviderInterface> CurrentTarget;                                            // 0x01C0(0x0010) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      CurrentTargetActor;                                       // 0x01D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      CurrentTargetClass;                                       // 0x01D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	EBuddyWidgetState                                  CachedBuddyWidgetState;                                   // 0x01E0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	EBuddyWidgetFanfareState                           CachedFanfareState;                                       // 0x01E1(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1E];                                      // 0x01E2(0x001E) MISSED OFFSET
	class FString                                      InstanceName;                                             // 0x0200(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x160];                                     // 0x0210(0x0160) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxBuddyWidget");
		return ptr;
	}


	void OnPlayerClassChanged();
	void OnLevelChanged(int OldExperienceLevel, int NewExperienceLevel);
	void OnDownStateExitReasonChanged(EExitDownStateReason ExitReason);
};


// Class OakGame.GFxBuddyWidgetContainer
// 0x00C0 (0x06F0 - 0x0630)
class UGFxBuddyWidgetContainer : public UGbxGFxHUDWidget
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0630(0x0040) MISSED OFFSET
	class UGFxBuddyWidget*                             PlayerBuddyWidgets[0x3];                                  // 0x0670(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxBuddyWidget*                             PetBuddyWidget;                                           // 0x0688(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               PlayerGodRays[0x3];                                       // 0x0690(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               PetGodRays;                                               // 0x06A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FGFxBuddyWidgetAnimQueueItem>        AnimQueue;                                                // 0x06B0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	EBuddyWidgetContainerAnimState                     AnimState;                                                // 0x06C0(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2F];                                      // 0x06C1(0x002F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxBuddyWidgetContainer");
		return ptr;
	}


	void OnPlayerStateUpdated();
	void OnPlayerStateRemoved();
	void OnPlayerStateAdded(class AOakPlayerState* NewPlayerState);
	void OnPetSpawnStateChanged(class AOakCharacter* Pet);
	void NotifyPrimaryCharacterChanged(class AGbxCharacter* NewPrimaryCharacter);
	void extSlideFinished();
	void extFanfareAnimationFinished(const class FString& TargetName);
};


// Class OakGame.GFxCARMenuCustomizePanels
// 0x0020 (0x0190 - 0x0170)
class UGFxCARMenuCustomizePanels : public UGbxGFxObject
{
public:
	class UGbxTextField*                               CategoryTextClip;                                         // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               UnlockedTextClip;                                         // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               NewIndicatorClip;                                         // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0188(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCARMenuCustomizePanels");
		return ptr;
	}

};


// Class OakGame.GFxCARMenuData
// 0x0038 (0x00F8 - 0x00C0)
class UGFxCARMenuData : public UOakGFxMenuData
{
public:
	struct FGFxMenuTutorialCollection                  Tutorials;                                                // 0x00C0(0x0020) (Edit)
	struct FName                                       FirstBootTutorial;                                        // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ShowBodyUnlockedTutorialIndex;                            // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                GoToDriverWeaponTutorialIndex;                            // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ChooseDriverWeaponTutorialIndex;                          // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                DeployVehicleTutorialIndex;                               // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCARMenuData");
		return ptr;
	}

};


// Class OakGame.GFxCARMenu
// 0x0C30 (0x12D0 - 0x06A0)
class UGFxCARMenu : public UAdvancedInteractiveObjectOwnedGFxMenu
{
public:
	TSoftObjectPtr<class UClass>                       VehiclePreviewContainerClass;                             // 0x06A0(0x0028) (Edit, BlueprintReadOnly)
	TSoftObjectPtr<class UClass>                       PartFadeOut;                                              // 0x06C8(0x0028) (Edit, BlueprintReadOnly)
	TSoftObjectPtr<class UClass>                       PartFadeIn;                                               // 0x06F0(0x0028) (Edit, BlueprintReadOnly)
	TSoftObjectPtr<class UClass>                       SelectePart;                                              // 0x0718(0x0028) (Edit, BlueprintReadOnly)
	TSoftObjectPtr<class UClass>                       HoloProjected;                                            // 0x0740(0x0028) (Edit, BlueprintReadOnly)
	TSoftObjectPtr<class UClass>                       Intro;                                                    // 0x0768(0x0028) (Edit, BlueprintReadOnly)
	TSoftObjectPtr<class UClass>                       Outro;                                                    // 0x0790(0x0028) (Edit, BlueprintReadOnly)
	float                                              CameraInputSpeed;                                         // 0x07B8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CameraInputDamping;                                       // 0x07BC(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CameraMinPitch;                                           // 0x07C0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CameraMaxPitch;                                           // 0x07C4(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowRotateCameraInPart;                                 // 0x07C8(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x07C9(0x0007) MISSED OFFSET
	TArray<struct FGFxCARMenuPartInfo>                 PartInfos;                                                // 0x07D0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<class UOakCARMenuLoadout*>                  DefaultLoadouts;                                          // 0x07E0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FGFxCARMenuListData>                 ListDatas;                                                // 0x07F0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0800(0x0008) MISSED OFFSET
	class UClass*                                      TestWidget;                                               // 0x0808(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FEchoDeviceUIController                     EchoDeviceController;                                     // 0x0810(0x0020) (Edit, BlueprintReadOnly)
	struct FStandInUIController                        StandInController;                                        // 0x0830(0x0390) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       EchoDeviceMenuName;                                       // 0x0BC0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       EchoDeviceIdleScreenName;                                 // 0x0BC8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       EchoDeviceDeployScreenName;                               // 0x0BD0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UOakCARVehiclePartStat*>              StatCardLoadoutStats;                                     // 0x0BD8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	int                                                MaxThumbnails;                                            // 0x0BE8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxThumbnailsSplitScreen;                                 // 0x0BEC(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShowDebugPreviewText;                                    // 0x0BF0(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0BF1(0x0003) MISSED OFFSET
	float                                              MouseRotateFactor;                                        // 0x0BF4(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0BF8(0x0008) MISSED OFFSET
	TArray<class UOakCARMenuLoadout*>                  Loadouts;                                                 // 0x0C00(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TWeakObjectPtr<class UVehicleSpawnerComponent>     PCSpawnerComponent;                                       // 0x0C10(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x0C18(0x0010) MISSED OFFSET
	class AActor*                                      VehiclePreviewActor;                                      // 0x0C28(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TScriptInterface<class UOakCARMenuInteractionInterface> CARMenuInteraction;                                       // 0x0C30(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CurrentLoadoutIndex;                                      // 0x0C40(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                DeployedLoadoutIndex;                                     // 0x0C44(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EGFxCARMenuPage                                    CurrentPage;                                              // 0x0C48(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FOakCARMenuPartType                         CurrentEditPartType;                                      // 0x0C49(0x0002) (BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData05[0x5];                                       // 0x0C4B(0x0005) MISSED OFFSET
	struct FOakCARMenuLoadoutCustomizer                LoadoutCustomizer;                                        // 0x0C50(0x0310) (BlueprintReadOnly, Transient)
	struct FGFxCARMenuPartInfo                         NoPartInfo;                                               // 0x0F60(0x00E8) (BlueprintReadOnly, Transient)
	class UGFxTutorialWidget*                          TutorialWidget;                                           // 0x1048(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FGFxCARMenuLoadAssetInfo>            LoadedAssets;                                             // 0x1050(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class UOakCARVehicleData*>                  NewVehicles;                                              // 0x1060(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UGbxTextField*                               DebugLoadoutText;                                         // 0x1070(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               CatchARideMenuClip;                                       // 0x1078(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MenuLabelText;                                            // 0x1080(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxCARMenuStatCard*                         StatCard;                                                 // 0x1088(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               NavArrowLeftButton;                                       // 0x1090(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               NavArrowLeft;                                             // 0x1098(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               NavArrowRightButton;                                      // 0x10A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               NavArrowRight;                                            // 0x10A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               LoadoutNameClip;                                          // 0x10B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               SlotLabelClip;                                            // 0x10B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           PrevLoadoutHintClip;                                      // 0x10C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           NextLoadoutHintClip;                                      // 0x10C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           CustomizationHintNextClip;                                // 0x10D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           CustomizationHintPrevClip;                                // 0x10D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxCARMenuCustomizePanels*                  CustomizePanels;                                          // 0x10E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LoadoutOptionsClip;                                       // 0x10E8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxCARMenuColorChooserWidget*               ColorChooserWidget;                                       // 0x10F0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               DeployAnim;                                               // 0x10F8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               DeployText;                                               // 0x1100(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               NewBodyNotification;                                      // 0x1108(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               NewBodyHeaderText;                                        // 0x1110(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               NewBodyHeaderDsText;                                      // 0x1118(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               NewBodyNameText;                                          // 0x1120(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakThumbnailManager*                        ThumbnailManager;                                         // 0x1128(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxCarMenuMouseDragArea*                    MouseDragArea;                                            // 0x1130(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bThumbnailRefreshNeeded;                                  // 0x1138(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x1139(0x0007) MISSED OFFSET
	struct FText                                       DeployString;                                             // 0x1140(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       NewBodyUnlockedString;                                    // 0x1158(0x0028) (Edit, BlueprintReadOnly)
	class UGbxGFxSlider*                               SharedOptionsListScrollbar;                               // 0x1170(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FGFxCARPreviewData                          LastPreview;                                              // 0x1178(0x0060) (BlueprintReadOnly)
	struct FGFxCARPreviewData                          WantedPreview;                                            // 0x11D8(0x0060) (BlueprintReadOnly)
	struct FDesiredStandInActorData                    StandInPreviewData;                                       // 0x1238(0x0050) (BlueprintReadOnly)
	unsigned char                                      UnknownData07[0x48];                                      // 0x1288(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCARMenu");
		return ptr;
	}


	void OnVehicleSpawned(class AOakVehicle* Vehicle);
	void OnTutorialComplete();
	void OnTutorialAdvanced();
	void OnThumbnailLoaded();
	void OnTeleportPressed(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnPreviewColorChanged(const struct FColor& Color, bool bIsPrimary, int Index, bool bIsDefault);
	void OnPreviewActorContainerLoaded();
	void OnNavButtonPressed(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnLastDeployedPressed(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnColorChosen(const struct FColor& Color, bool bIsPrimary, int Index, bool bIsDefault);
	void OnAssetLoaded();
	class UGbxGFxPooledGridList* GetPartSelectionList(const class FString& ListName);
	void extBodyUnlockAnimFinished();
};


// Class OakGame.GFxCarMenuMouseDragArea
// 0x0020 (0x0190 - 0x0170)
class UGFxCarMenuMouseDragArea : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0170(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCarMenuMouseDragArea");
		return ptr;
	}

};


// Class OakGame.GFxColorPickerWidget
// 0x0100 (0x0270 - 0x0170)
class UGFxColorPickerWidget : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0170(0x0040) MISSED OFFSET
	class UGbxGFxGridScrollingList*                    ColorList;                                                // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               SelectionsWrapper;                                        // 0x01B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxColorPickerSwatch*                       PrimarySwatch;                                            // 0x01C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               PrimaryLabel;                                             // 0x01C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxColorPickerSwatch*                       SecondarySwatch;                                          // 0x01D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               SecondaryLabel;                                           // 0x01D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxColorPickerSwatch*                       TertiarySwatch;                                           // 0x01E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TertiaryLabel;                                            // 0x01E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxColorPickerSwatch*                       CurrentSwatch;                                            // 0x01F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LeftSwatchArrow;                                          // 0x01F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           LeftSwatchArrowHint;                                      // 0x0200(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               RightSwatchArrow;                                         // 0x0208(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           RightSwatchArrowHint;                                     // 0x0210(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxMenu*                                 OwningMenu;                                               // 0x0218(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	EColorPickerMode                                   CurrentMode;                                              // 0x0220(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0221(0x0007) MISSED OFFSET
	TArray<struct FColor>                              AvailableColors;                                          // 0x0228(0x0010) (ZeroConstructor, Transient)
	TArray<struct FColor>                              PrimarySwatchDefaults;                                    // 0x0238(0x0010) (ZeroConstructor, Transient)
	TArray<struct FColor>                              SecondarySwatchDefaults;                                  // 0x0248(0x0010) (ZeroConstructor, Transient)
	TArray<struct FColor>                              TertiarySwatchDefaults;                                   // 0x0258(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0268(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxColorPickerWidget");
		return ptr;
	}


	void OnTopColorSelected(class UGbxGFxListCell* ClickedItem, const struct FGbxMenuInputEvent& InputInfo);
	void OnTertiaryColorSwatchSelected(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnSwatchFocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnSecondaryColorSwatchSelected(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnPrimaryColorSwatchSelected(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnColorFocused(class UGbxGFxListCell* ClickedItem);
	void OnBottomColorSelected(class UGbxGFxListCell* ClickedItem, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxCARMenuColorChooserWidget
// 0x0010 (0x0280 - 0x0270)
class UGFxCARMenuColorChooserWidget : public UGFxColorPickerWidget
{
public:
	class UGbxGFxButton*                               NavArrowRightButton;                                      // 0x0270(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0278(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCARMenuColorChooserWidget");
		return ptr;
	}

};


// Class OakGame.GFxCARMenuCustomizePage
// 0x0048 (0x0070 - 0x0028)
class UGFxCARMenuCustomizePage : public UObject
{
public:
	TWeakObjectPtr<class UGFxCARMenu>                  CARMenuOwner;                                             // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UVehicleSpawnerComponent>     VehicleSpawner;                                           // 0x0030(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UGbxGFxPooledGridList>        ItemList;                                                 // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FOakCARMenuPartType                         PartType;                                                 // 0x0040(0x0002) (Transient)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
	TArray<class UOakCARVehicleData*>                  Vehicles;                                                 // 0x0048(0x0010) (ZeroConstructor, Transient)
	TArray<class UOakCARVehiclePartData*>              Parts;                                                    // 0x0058(0x0010) (ZeroConstructor, Transient)
	bool                                               bCanSelectEmpty;                                          // 0x0068(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0069(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCARMenuCustomizePage");
		return ptr;
	}


	void OnUpdateCell(const struct FGbxGFxListCellUpdateInfo& UpdateInfo);
	void OnCellFocused(const struct FGbxGFxListCellUpdateInfo& UpdateInfo);
	void OnCellClicked(const struct FGbxGFxListCellUpdateInfo& UpdateInfo);
};


// Class OakGame.GFxCARMenuPartButton
// 0x00D0 (0x03E0 - 0x0310)
class UGFxCARMenuPartButton : public UGbxGFxListCell
{
public:
	class FString                                      IconStageName;                                            // 0x0310(0x0010) (ZeroConstructor, Transient)
	bool                                               bIsEmptyItem;                                             // 0x0320(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0321(0x0007) MISSED OFFSET
	class UGbxTextField*                               LabelText;                                                // 0x0328(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LabelBackground;                                          // 0x0330(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LoadingCircleClip;                                        // 0x0338(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TSoftObjectPtr<class UTexture>                     ImageRenderTexture;                                       // 0x0340(0x0028) (Edit)
	class UGbxGFxObject*                               ImageRenderClip;                                          // 0x0368(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ImageRenderShadowClip;                                    // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               EquipmentNameClip;                                        // 0x0378(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               EquipmentNameText;                                        // 0x0380(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               EmptyLabelText;                                           // 0x0388(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           ButtonHelpHintClip;                                       // 0x0390(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               EquippedFlourishAnimClip;                                 // 0x0398(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LockIconClip;                                             // 0x03A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               InvalidSlot;                                              // 0x03A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               NewIndicatorWrapperClip;                                  // 0x03B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               PrimaryColorClip;                                         // 0x03B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               SecondaryColorClip;                                       // 0x03C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               TertiaryColorClip;                                        // 0x03C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               CategoryIconClip;                                         // 0x03D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               CategoryIconInnerClip;                                    // 0x03D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCARMenuPartButton");
		return ptr;
	}


	void OnThisFocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnThisClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxCARMenuStatLine
// 0x0030 (0x01A0 - 0x0170)
class UGFxCARMenuStatLine : public UGbxGFxObject
{
public:
	float                                              MaxStatValue;                                             // 0x0170(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0174(0x0004) MISSED OFFSET
	class UGbxGFxObject*                               StatIconClip;                                             // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               StatLabelText;                                            // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               StatValueText;                                            // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakCARVehiclePartStat*                      Stat;                                                     // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0198(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCARMenuStatLine");
		return ptr;
	}

};


// Class OakGame.GFxCARMenuStatCard
// 0x0040 (0x01B0 - 0x0170)
class UGFxCARMenuStatCard : public UGbxGFxObject
{
public:
	struct FOakCARMenuPartType                         PartType;                                                 // 0x0170(0x0002) (Transient)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0172(0x0006) MISSED OFFSET
	class UGbxTextField*                               PanelHeader;                                              // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               StatBarClips;                                             // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ModNameClip;                                              // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ModDescriptionClip;                                       // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               StatDescriptionClip;                                      // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGFxCARMenuStatLine*>                 StatLines;                                                // 0x01A0(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCARMenuStatCard");
		return ptr;
	}

};


// Class OakGame.GFxChallengeProgressWidget
// 0x0160 (0x0790 - 0x0630)
class UGFxChallengeProgressWidget : public UGbxGFxHUDWidget
{
public:
	float                                              WidgetDuration;                                           // 0x0630(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DelayToThingTransitions;                                  // 0x0634(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxWidgetRolloutTime;                                     // 0x0638(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x063C(0x0004) MISSED OFFSET
	struct FText                                       ChallengeCompleteText;                                    // 0x0640(0x0028) (Edit, BlueprintReadOnly)
	EGFxChallegeProgressWidgetState                    WidgetState;                                              // 0x0658(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0658(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData02[0x4];                                       // 0x065C(0x0004) MISSED OFFSET
	struct FGFxChallengeProgressItem                   CurrentChallenge;                                         // 0x0660(0x00B8) (BlueprintReadOnly, Transient)
	float                                              WidgetStateTime;                                          // 0x0718(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bHasStartedThingTransitions;                              // 0x071C(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x071D(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AChallengeManager>            ChallengeManager;                                         // 0x0720(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UChallengesComponent>         ChallengesComponent;                                      // 0x0728(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGbxGFxObject*                               WidgetWrapper;                                            // 0x0730(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               Widget;                                                   // 0x0738(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               LabelText;                                                // 0x0740(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               BodyText;                                                 // 0x0748(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          ProgressBarClip;                                          // 0x0750(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ProgressText;                                             // 0x0758(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               TypeIconClip;                                             // 0x0760(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ScanlinesClip;                                            // 0x0768(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FGFxChallengeProgressItem>           ChallengesQueue;                                          // 0x0770(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	bool                                               bBlockedByTutorial;                                       // 0x0780(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0xF];                                       // 0x0781(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxChallengeProgressWidget");
		return ptr;
	}


	void OnInputDeviceChanged();
	void OnChallengeUpdated(class UChallengesComponent* Component, class UClass* ChallengeClass, int NewValue, bool bDisplayNotification, bool bCompleted);
	void OnChallengeCompleted(class UChallengesComponent* Component, class UClass* ChallengeClass);
	void OnChallengeChildCompleted(class UChallengesComponent* Component, class UClass* ChallengeClass);
	void OnChallengeActivated(class UChallengesComponent* Component, class UClass* ChallengeClass);
	void extOnUpdateThingComplete(const class FString& Thing);
	void extOnUpdateThing(const class FString& Thing);
	void extOnRolloutComplete();
	void extOnRollOnComplete();
};


// Class OakGame.GFxCharacterSelectButton
// 0x0000 (0x0310 - 0x0310)
class UGFxCharacterSelectButton : public UGbxGFxListCell
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCharacterSelectButton");
		return ptr;
	}

};


// Class OakGame.GFxCharacterSelectMenu
// 0x0120 (0x07A0 - 0x0680)
class UGFxCharacterSelectMenu : public UGbxGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0680(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCharacterFocused;                                       // 0x0688(0x0010) (BlueprintReadOnly, ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCharacterSelected;                                      // 0x0698(0x0010) (BlueprintReadOnly, ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x18];                                      // 0x06A8(0x0018) MISSED OFFSET
	TSoftObjectPtr<class UGbxMenuData>                 LoadGameMenuData;                                         // 0x06C0(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	class FString                                      ButtonLibraryName;                                        // 0x06E8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class FString                                      PlayerStatusLibraryName;                                  // 0x06F8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FPlayerClassInfo>                    PlayerClassInfos;                                         // 0x0708(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<class UGFxCharacterSelectButton*>           PlayerClassButtons;                                       // 0x0718(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UGbxTextField*                               CountdownText;                                            // 0x0728(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               PlayerName;                                               // 0x0730(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               CharacterDescriptionPanel;                                // 0x0738(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CharacterDescriptionLabel;                                // 0x0740(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CharacterDescription;                                     // 0x0748(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLobbyWidget*                             LobbyWidget;                                              // 0x0750(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0758(0x0020) MISSED OFFSET
	TSoftObjectPtr<class UDialogScriptData>            DialogScript;                                             // 0x0778(0x0028) (BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCharacterSelectMenu");
		return ptr;
	}


	void STATIC_WaitForValidPlayerController(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo);
	void ShowLoadGameMenu();
	void OnPlayerClassItemFocused(class UGbxGFxButton* ButtonFocused, const struct FGbxMenuInputEvent& InputInfo);
	void OnPlayerClassItemClicked(class UGbxGFxButton* ButtonClicked, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxCheckpointWidget
// 0x0020 (0x0650 - 0x0630)
class UGFxCheckpointWidget : public UGbxGFxHUDWidget
{
public:
	int                                                NumCheckpointIdleLoops;                                   // 0x0630(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ECheckpointWidgetState                             CurrentState;                                             // 0x0634(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	ECheckpointWidgetState                             NextState;                                                // 0x0635(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0636(0x0002) MISSED OFFSET
	int                                                CheckpointLoopsRemaining;                                 // 0x0638(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x063C(0x0004) MISSED OFFSET
	class UGbxGFxObject*                               InnerClip;                                                // 0x0640(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CheckpointTextClip;                                       // 0x0648(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCheckpointWidget");
		return ptr;
	}


	void PlayCheckpointAnimation();
	void AnimationComplete(const class FString& AnimationName);
};


// Class OakGame.GFxClassSelectionMenu
// 0x00B0 (0x0730 - 0x0680)
class UGFxClassSelectionMenu : public UGbxGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0680(0x0010) MISSED OFFSET
	class UGbxGFxGridScrollingList*                    ContentPanel;                                             // 0x0690(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxObject*                                  CharacterPicture;                                         // 0x0698(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CharacterClass;                                           // 0x06A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CharacterName;                                            // 0x06A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CharacterDescription;                                     // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TSoftObjectPtr<class UGbxMenuData>                 MainMenuMenuData;                                         // 0x06B8(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	class AGbxPlayerController*                        TargetPC;                                                 // 0x06E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class APlayerStandIn*                              PlayerStandIn;                                            // 0x06E8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x06F0(0x0010) MISSED OFFSET
	TSoftObjectPtr<class UDialogScriptData>            DialogScript;                                             // 0x0700(0x0028) (BlueprintReadOnly)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0728(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxClassSelectionMenu");
		return ptr;
	}


	void OnPlayerClassItemFocused(class UGbxGFxButton* FocusedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnPlayerClassItemClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxColorPickerItem
// 0x0040 (0x0350 - 0x0310)
class UGFxColorPickerItem : public UGbxGFxListCell
{
public:
	class UGbxGFxObject*                               DefaultColorClip;                                         // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               TopHintWrapper;                                           // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           TopHint;                                                  // 0x0320(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TopTextField;                                             // 0x0328(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               BottomHintWrapper;                                        // 0x0330(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           BottomHint;                                               // 0x0338(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               BottomTextField;                                          // 0x0340(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0348(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxColorPickerItem");
		return ptr;
	}

};


// Class OakGame.GFxColorPickerSwatch
// 0x0020 (0x02F0 - 0x02D0)
class UGFxColorPickerSwatch : public UGbxGFxButton
{
public:
	class UGbxGFxObject*                               ColorSquare;                                              // 0x02D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ColorSquareSplit;                                         // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsPickingForThis;                                        // 0x02E0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02E1(0x0003) MISSED OFFSET
	int                                                AssignedColorListIndex;                                   // 0x02E4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                AssignedSplitColorListIndex;                              // 0x02E8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x02EC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxColorPickerSwatch");
		return ptr;
	}

};


// Class OakGame.GFxControllerDisconnectMovie
// 0x0050 (0x0530 - 0x04E0)
class UGFxControllerDisconnectMovie : public UGbxGFxMovie
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04E0(0x0010) MISSED OFFSET
	struct FText                                       ControllerDisconnectBodyText;                             // 0x04F0(0x0028) (Edit, BlueprintReadOnly)
	class UGbxGFxObject*                               ContentClip;                                              // 0x0508(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               WindowFrameClip;                                          // 0x0510(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               HeaderTextFieldClip;                                      // 0x0518(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               BodyTextFieldClip;                                        // 0x0520(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                TotalNumDisconnectMovies;                                 // 0x0528(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x052C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxControllerDisconnectMovie");
		return ptr;
	}

};


// Class OakGame.OakUIControllerDisconnectManager
// 0x0018 (0x0040 - 0x0028)
class UOakUIControllerDisconnectManager : public UObject
{
public:
	TArray<struct FOakUIControllerConnectedState>      ConnectedStates;                                          // 0x0028(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0038(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakUIControllerDisconnectManager");
		return ptr;
	}

};


// Class OakGame.GFxControllerOptions
// 0x0178 (0x0230 - 0x00B8)
class UGFxControllerOptions : public UGFxOptionBase
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B8(0x0010) MISSED OFFSET
	class UGbxGFxHintWidget*                           PreviousSubmenuHint;                                      // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           NextSubmenuHint;                                          // 0x00D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           PreviousControlSchemeHint;                                // 0x00D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           NextControlSchemeHint;                                    // 0x00E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxInputRebindContext*                      WalkingRebindContext;                                     // 0x00E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxInputRebindContext*                      DrivingRebindContext;                                     // 0x00F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxInputRebindContext*                      CommonRebindContext;                                      // 0x00F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOptionDescriptionItem*                      WalkingThumbstickSchemeDescription;                       // 0x0100(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOptionDescriptionItem*                      WalkingButtonSchemeDescription;                           // 0x0108(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOptionDescriptionItem*                      DrivingThumbstickSchemeDescription;                       // 0x0110(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOptionDescriptionItem*                      DrivingButtonSchemeDescription;                           // 0x0118(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x110];                                     // 0x0120(0x0110) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxControllerOptions");
		return ptr;
	}


	void OnWalkingControlSchemeChanged(class UGbxGFxListItemSpinner* Item);
	void OnRevertToDefaultClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnJoystickWalkingSchemeChanged(class UGbxGFxListItemSpinner* Item);
	void OnJoystickDrivingSchemeChanged(class UGbxGFxListItemSpinner* Item);
	void OnDrivingControlSchemeChanged(class UGbxGFxListItemSpinner* Item);
	void OnCustomizeControlsClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnControlSchemeButtonFocused(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnContentPanelSelectionChanged(class UGbxGFxListCell* SelectedItem);
	void OnChangedColumnFocus(EBindingType BindingType);
};


// Class OakGame.GFxControlsAdvancedOptions
// 0x0010 (0x00C8 - 0x00B8)
class UGFxControlsAdvancedOptions : public UGFxOptionBase
{
public:
	class UGbxGFxHintWidget*                           PreviousSubmenuHint;                                      // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           NextSubmenuHint;                                          // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxControlsAdvancedOptions");
		return ptr;
	}


	void OnGamepadRightDeadZoneOuterChanged(class UGbxGFxListItemNumber* Item);
	void OnGamepadRightDeadZoneInnerChanged(class UGbxGFxListItemNumber* Item);
	void OnGamepadMoveAxialDeadZoneScaleChanged(class UGbxGFxListItemNumber* Item);
	void OnGamepadLookAxialDeadZoneScaleChanged(class UGbxGFxListItemNumber* Item);
	void OnGamepadLeftDeadZoneOuterChanged(class UGbxGFxListItemNumber* Item);
	void OnGamepadLeftDeadZoneInnerChanged(class UGbxGFxListItemNumber* Item);
};


// Class OakGame.GFxControlsBasicOptions
// 0x00E0 (0x0198 - 0x00B8)
class UGFxControlsBasicOptions : public UGFxOptionBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B8(0x0008) MISSED OFFSET
	class UGbxGFxHintWidget*                           PreviousSubmenuHint;                                      // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           NextSubmenuHint;                                          // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      UseAdvancedHipAimSettingsItem;                            // 0x00D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      UseAdvancedZoomedAimSettingsItem;                         // 0x00D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      UseAdvancedVehicleAimSettingsItem;                        // 0x00E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      EnableGamepadInputItem;                                   // 0x00E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadHipSensitivityLevelItem;                           // 0x00F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadZoomedSensitivityLevelItem;                        // 0x00F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadVehicleSensitivityLevelItem;                       // 0x0100(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadHipYawRateItem;                                    // 0x0108(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadHipPitchRateItem;                                  // 0x0110(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadHipExtraYawItem;                                   // 0x0118(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadHipExtraPitchItem;                                 // 0x0120(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadHipRampUpTimeItem;                                 // 0x0128(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadHipRampUpDelayItem;                                // 0x0130(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadZoomedYawRateItem;                                 // 0x0138(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadZoomedPitchRateItem;                               // 0x0140(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadZoomedExtraYawItem;                                // 0x0148(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadZoomedExtraPitchItem;                              // 0x0150(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadZoomedRampUpTimeItem;                              // 0x0158(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadZoomedRampUpDelayItem;                             // 0x0160(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadVehicleYawRateItem;                                // 0x0168(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadVehiclePitchRateItem;                              // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadVehicleExtraYawItem;                               // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadVehicleExtraPitchItem;                             // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadVehicleRampUpTimeItem;                             // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       GamepadVehicleRampUpDelayItem;                            // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxControlsBasicOptions");
		return ptr;
	}


	void OnUseAdvancedZoomedAimSettingsChanged(class UGbxGFxListItemSpinner* Item);
	void OnUseAdvancedVehicleAimSettingsChanged(class UGbxGFxListItemSpinner* Item);
	void OnUseAdvancedHipAimSettingsChanged(class UGbxGFxListItemSpinner* Item);
	void OnMouseVehicleScaleChanged(class UGbxGFxListItemNumber* Item);
	void OnMouseScaleChanged(class UGbxGFxListItemNumber* Item);
	void OnMouseADSScaleChanged(class UGbxGFxListItemNumber* Item);
	void OnGlyphModeChanged(class UGbxGFxListItemSpinner* Item);
	void OnGamepadZoomedSensitivityLevelChanged(class UGbxGFxListItemNumber* Item);
	void OnGamepadVehicleSensitivityLevelChanged(class UGbxGFxListItemNumber* Item);
	void OnGamepadHipSensitivityLevelChanged(class UGbxGFxListItemNumber* Item);
	void OnEnableGamepadInputChoiceMade(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnEnableGamepadInputChanged(class UGbxGFxListItemSpinner* Item);
};


// Class OakGame.CreditsDataAsset
// 0x0048 (0x0078 - 0x0030)
class UCreditsDataAsset : public UGbxDataAsset
{
public:
	struct FText                                       HeaderText;                                               // 0x0030(0x0028) (Edit)
	struct FName                                       HeaderTextStyle;                                          // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  CreditsDataTable;                                         // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FOrganizationInfo>                   OrganizationInfos;                                        // 0x0058(0x0010) (Edit, ZeroConstructor)
	struct FName                                       TitleTextStyle;                                           // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       PeopleTextStyle;                                          // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CreditsDataAsset");
		return ptr;
	}

};


// Class OakGame.TimedWwiseEvent
// 0x0020 (0x0048 - 0x0028)
class UTimedWwiseEvent : public UObject
{
public:
	class UWorld*                                      RefWorld;                                                 // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	class APawn*                                       OwningPawn;                                               // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FTimerHandle                                TimerHandle;                                              // 0x0038(0x0008)
	class UWwiseEvent*                                 WwiseEvent;                                               // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TimedWwiseEvent");
		return ptr;
	}


	void CallWwiseEvent();
};


// Class OakGame.GFxCreditsMenu
// 0x0140 (0x07C0 - 0x0680)
class UGFxCreditsMenu : public UGbxGFxMenu
{
public:
	TArray<struct FCreditsSection>                     CreditsSections;                                          // 0x0680(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                SizeTextureCache;                                         // 0x0690(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0694(0x0004) MISSED OFFSET
	TArray<struct FSoftObjectPath>                     CreditsImages;                                            // 0x0698(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              InsertPosYDelta;                                          // 0x06A8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NumCreditsLinesCached;                                    // 0x06AC(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FCreditsTextureCache>                CreditsTextureCache;                                      // 0x06B0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UGbxGFxObject*                               Image;                                                    // 0x06C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               CreditsContainer;                                         // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FCreditsLineInfo>                    CreditsLineInfos;                                         // 0x06D0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FCreditsTextFieldInfo>               TextFieldInfos;                                           // 0x06E0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0xD0];                                      // 0x06F0(0x00D0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCreditsMenu");
		return ptr;
	}


	void STATIC_PushCreditsMenuFor(class AOakPlayerController* Target, const struct FLatentActionInfo& LatentInfo, bool bDismissWhenEndReached, class UGbxMenuData* OverrideCreditsMenuData);
	void OnImageLoaded();
};


// Class OakGame.GFxCrewChallengeCompletedNotificationWidget
// 0x0030 (0x05C0 - 0x0590)
class UGFxCrewChallengeCompletedNotificationWidget : public UGFxDisplayedNotificationWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0590(0x0008) MISSED OFFSET
	class UGbxTextField*                               CrewChallengeCompletedText;                               // 0x0598(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxTextField*                               CrewChallengeCompletedTextShadow;                         // 0x05A0(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxTextField*                               CrewChallengeTitleText;                                   // 0x05A8(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x05B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCrewChallengeCompletedNotificationWidget");
		return ptr;
	}

};


// Class OakGame.GFxCrewQuartersMoodMenu
// 0x0070 (0x06F0 - 0x0680)
class UGFxCrewQuartersMoodMenu : public UGbxGFxMenu
{
public:
	TSoftObjectPtr<class UTexture>                     SampleMoodPreviewTexture;                                 // 0x0680(0x0028) (Edit, BlueprintReadOnly)
	class UGFxCrewQuartersMoodMenuInfoPanelObject*     InfoPanelClip;                                            // 0x06A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    MoodListClip;                                             // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxSlider*                               MoodListScrollbarClip;                                    // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               UnlockedTextClip;                                         // 0x06C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FGFxCrewQuartersMoodMenuMoodInfo>    MoodListData;                                             // 0x06C8(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	int                                                NumUnlockedCount;                                         // 0x06D8(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class ACrewQuartersRoom>            Room;                                                     // 0x06DC(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x06E4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCrewQuartersMoodMenu");
		return ptr;
	}


	void STATIC_OpenCrewQuartersMoodMenu(class AOakPlayerController* InOakPC, class UGbxMenuData* InMoodMenuData, class ACrewQuartersRoom* InRoom);
	void OnMoodItemSelected(class UGbxGFxListCell* ListItem);
	void OnMoodItemClicked(class UGbxGFxListCell* ListItem, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxCrewQuartersMoodMenuInfoPanelObject
// 0x0050 (0x01C0 - 0x0170)
class UGFxCrewQuartersMoodMenuInfoPanelObject : public UGbxGFxObject
{
public:
	class UGbxTextField*                               RoomMoodsTextClip;                                        // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               DescriptionTextClip;                                      // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           ButtonPromptHintClip;                                     // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TSoftObjectPtr<class UTexture>                     Picture;                                                  // 0x0188(0x0028) (Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x01B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCrewQuartersMoodMenuInfoPanelObject");
		return ptr;
	}


	void OnTextureLoaded();
};


// Class OakGame.GFxCrewQuartersMenuListItem
// 0x0000 (0x0310 - 0x0310)
class UGFxCrewQuartersMenuListItem : public UGbxGFxListCell
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCrewQuartersMenuListItem");
		return ptr;
	}

};


// Class OakGame.OakCrewQuartersMoodIO
// 0x0010 (0x0670 - 0x0660)
class AOakCrewQuartersMoodIO : public AAdvancedInteractiveObject
{
public:
	class ACrewQuartersRoom*                           AssociatedRoom;                                           // 0x0660(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxMenuData*                                MoodMenuData;                                             // 0x0668(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCrewQuartersMoodIO");
		return ptr;
	}


	void OnUsedBy(const struct FUseEvent& UseEvent);
};


// Class OakGame.GFxCrewQuartersPlaceObjectsMenu
// 0x0300 (0x0980 - 0x0680)
class UGFxCrewQuartersPlaceObjectsMenu : public UGbxGFxMenu
{
public:
	struct FGFxBackpackWidgetConfig                    BackpackWidgetConfig;                                     // 0x0680(0x0118) (Edit, BlueprintReadOnly)
	float                                              NewPreviewDelaySeconds;                                   // 0x0798(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x079C(0x0004) MISSED OFFSET
	struct FGFxBackpackWidget                          BackpackWidget;                                           // 0x07A0(0x0198) (BlueprintReadOnly, Transient)
	class UGFxCrewQaurtersPlaceObjectsBackpackObject*  BackpackClip;                                             // 0x0938(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class ACrewQuartersRoom>            Room;                                                     // 0x0940(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UObject>                      CrewQuartersIO;                                           // 0x0948(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakThumbnailManager*                        ThumbnailManager;                                         // 0x0950(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           ButtonPromptHintClip;                                     // 0x0958(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bMenuStarted;                                             // 0x0960(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bMenuSetUp;                                               // 0x0961(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0962(0x0006) MISSED OFFSET
	class UCrewQuartersDecorationData*                 RevertToDecorationData;                                   // 0x0968(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              TimeTilNextPreview;                                       // 0x0970(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPreviewRequested;                                        // 0x0974(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0xB];                                       // 0x0975(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCrewQuartersPlaceObjectsMenu");
		return ptr;
	}


	void STATIC_OpenPlaceObjectsMenu(class AOakPlayerController* InOakPC, class UGbxMenuData* InMenuData, class ACrewQuartersRoom* InRoom, class UObject* InIO);
	void OnThumbnailLoaded();
	void OnListItemSelected(const struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget);
	void OnListItemClicked(const struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxCrewQaurtersPlaceObjectsBackpackObject
// 0x0030 (0x01A0 - 0x0170)
class UGFxCrewQaurtersPlaceObjectsBackpackObject : public UGbxGFxObject
{
public:
	class UGbxTextField*                               HeaderTextClip;                                           // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               FilterTextClip;                                           // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               SortTextClip;                                             // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           SortButtonLeftClip;                                       // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           SortButtonRightClip;                                      // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0198(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCrewQaurtersPlaceObjectsBackpackObject");
		return ptr;
	}

};


// Class OakGame.GFxInventoryItemWidget
// 0x02B0 (0x06D0 - 0x0420)
class UGFxInventoryItemWidget : public UGFxBackpackWidgetItem
{
public:
	unsigned char                                      UnknownData00[0x230];                                     // 0x0420(0x0230) MISSED OFFSET
	class UGbxGFxHintWidget*                           ButtonHelpClip;                                           // 0x0650(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	EOakInventoryItemWidgetDisabledReason              DisabledReason;                                           // 0x0658(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bEquippingToThis;                                         // 0x0659(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x065A(0x0006) MISSED OFFSET
	class UInventorySlotData*                          SlotData;                                                 // 0x0660(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       FilterTypeId;                                             // 0x0668(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector2D                                   WidgetLineAnchorLocationAbsolute;                         // 0x0670(0x0008) (Transient, IsPlainOldData)
	struct FVector2D                                   WidgetLineAnchorLocationViewport;                         // 0x0678(0x0008) (Transient, IsPlainOldData)
	bool                                               bAnchorLocationValid;                                     // 0x0680(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0681(0x0007) MISSED OFFSET
	struct FOakThumbnailManagerIcon                    IconData;                                                 // 0x0688(0x0028) (Transient)
	bool                                               bUseCosmeticLabel;                                        // 0x06B0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAppearsDisabled;                                         // 0x06B1(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bUseTrashButtonStates;                                    // 0x06B2(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x06B3(0x0005) MISSED OFFSET
	class FString                                      LastFavoriteTrashFrame;                                   // 0x06B8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData04[0x8];                                       // 0x06C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxInventoryItemWidget");
		return ptr;
	}

};


// Class OakGame.GFxCrewQuartersPlaceObjectsItemWidget
// 0x0010 (0x06E0 - 0x06D0)
class UGFxCrewQuartersPlaceObjectsItemWidget : public UGFxInventoryItemWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x06D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCrewQuartersPlaceObjectsItemWidget");
		return ptr;
	}

};


// Class OakGame.CrosshairColorEnumMapToFrames
// 0x0050 (0x0080 - 0x0030)
class UCrosshairColorEnumMapToFrames : public UGbxDataAsset
{
public:
	TMap<ECrosshairColorsEnum, int>                    MapStringToFrames;                                        // 0x0030(0x0050) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.CrosshairColorEnumMapToFrames");
		return ptr;
	}

};


// Class OakGame.GFxCrosshairWidget
// 0x0240 (0x0870 - 0x0630)
class UGFxCrosshairWidget : public UGbxGFxHUDWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0630(0x0008) MISSED OFFSET
	class UGbxCrosshairDataAsset*                      DefaultCrosshairData;                                     // 0x0638(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ECrosshairType                                     CrosshairEnumType;                                        // 0x0640(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xB7];                                      // 0x0641(0x00B7) MISSED OFFSET
	class AWeapon*                                     CachedWeapon;                                             // 0x06F8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class AWeapon*>                             CachedWeapons;                                            // 0x0700(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UWeaponZoomComponent*                        CachedZoomComponent;                                      // 0x0710(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AActor*                                      CrosshairActor;                                           // 0x0718(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      CurrentTarget;                                            // 0x0720(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TScriptInterface<class UGbxWeaponUserInterface>    CachedWeaponUser;                                         // 0x0728(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      CrosshairContainerInstanceName;                           // 0x0738(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      MeleeCrosshairInstanceName;                               // 0x0748(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      ActionSkillCrosshairInstanceName;                         // 0x0758(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      SprintCrosshairInstanceName;                              // 0x0768(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      DefaultCrosshairInstanceName;                             // 0x0778(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TMap<ECrosshairColorsEnum, struct FLinearColor>    CrosshairColorMap;                                        // 0x0788(0x0050) (Edit, BlueprintReadOnly, ZeroConstructor)
	float                                              MaxRepresentableAngle;                                    // 0x07D8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x07DC(0x0004) MISSED OFFSET
	class UOakReticleFeedbackWidget*                   FeedbackWidget;                                           // 0x07E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x88];                                      // 0x07E8(0x0088) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCrosshairWidget");
		return ptr;
	}


	void UpdateWeaponSlot();
	void UpdateLightForDamageType();
	void SetLockedTargetClipsState(bool bIsEnabled);
	void SetCrosshairColor(ECrosshairColorsEnum NewColor);
	void OnZoomed(unsigned char ZoomLevel);
	void OnWeaponChanged(class AWeapon* Weapon, class AWeapon* LastWeapon);
	void OnTargetLockChange(class AWeapon* EventWeapon, bool bInLockedOn);
	void OnSwitchedWeaponMode();
	void OnNotZoomed();
	void OnMeleeStateChangeEvent(bool bMeleePossible);
	void HandleCrosshairSpread();
	ECrosshairColorsEnum FindCrosshairColor();
	void CheckForCrosshairVisibility();
	void ChangeCrosshairType(class UGbxCrosshairDataAsset* NewCrosshairDataAsset);
	void ChangeCrosshairByString(const class FString& NewFrame);
};


// Class OakGame.GFxCurrencyCounterClip
// 0x0110 (0x0280 - 0x0170)
class UGFxCurrencyCounterClip : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0170(0x0018) MISSED OFFSET
	TArray<struct FGFxCurrencyCounterCategoryData>     Categories;                                               // 0x0188(0x0010) (Edit, ZeroConstructor)
	TArray<class UGFxUISpinnerWidget*>                 SpinnerWidgets;                                           // 0x0198(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x20];                                      // 0x01A8(0x0020) MISSED OFFSET
	int                                                CurrentDisplayedValue;                                    // 0x01C8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	EGFxCurrencyCounterState                           CurrencyCounterState;                                     // 0x01CC(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x01CC(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	struct FTimerHandle                                HoldOnValueTimerHandle;                                   // 0x01D0(0x0008) (Transient)
	unsigned char                                      UnknownData03[0x50];                                      // 0x01D8(0x0050) MISSED OFFSET
	class UGbxGFxObject*                               AnimationContainer;                                       // 0x0228(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FGFxCurrencyCounterQueueInfo>        CounterQueue;                                             // 0x0230(0x0010) (ZeroConstructor, Transient)
	float                                              TotalSpinnerHeightOverride;                               // 0x0240(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CostSpinTime;                                             // 0x0244(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PauseOnNewValueTime;                                      // 0x0248(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x14];                                      // 0x024C(0x0014) MISSED OFFSET
	bool                                               bGamePaused;                                              // 0x0260(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0261(0x0003) MISSED OFFSET
	int                                                TotalSliders;                                             // 0x0264(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x18];                                      // 0x0268(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCurrencyCounterClip");
		return ptr;
	}


	void OnPostChangeDisplayHoldComplete();
	void OnDisplayValueAnimationComplete();
	void OnCurrencyQuantityChanged(class UInventoryCategoryData* ItemCategory, int Quantity);
};


// Class OakGame.GFxCurrencyWidget
// 0x0050 (0x0680 - 0x0630)
class UGFxCurrencyWidget : public UGbxGFxHUDWidget
{
public:
	float                                              TotalSpinnerHeightOverride;                               // 0x0630(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PauseOnNewValueTime;                                      // 0x0634(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0638(0x0004) MISSED OFFSET
	float                                              CostSpinTime;                                             // 0x063C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DelayAfterResurrect;                                      // 0x0640(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CostSpinTimeOnResurrect;                                  // 0x0644(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PauseOnNewValueTimeOnResurect;                            // 0x0648(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x064C(0x0004) MISSED OFFSET
	class UGFxCurrencyCounterClip*                     CurrencyCounter;                                          // 0x0650(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      AnimationContainerID;                                     // 0x0658(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class UInventoryListComponent*                     InventoryComponent;                                       // 0x0668(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AOakCharacter*                               OakCharacter;                                             // 0x0670(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0678(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCurrencyWidget");
		return ptr;
	}


	void OnPauseStateChanged(bool bPaused);
	void OnOwnerResurrected(int CashLost);
	void OnDisplayCurrencyWidgetOnHUD(class UGbxInventoryCategoryData* CurrencyType);
	void OnCurrencyQuantityChanged(const struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int Quantity, int MaxQuantity);
	void OnCurrencyDisplayCompleted();
};


// Class OakGame.GFxDuelingWidget
// 0x0010 (0x0640 - 0x0630)
class UGFxDuelingWidget : public UGbxGFxHUDWidget
{
public:
	TWeakObjectPtr<class ADuelManager>                 DuelManager;                                              // 0x0630(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0638(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxDuelingWidget");
		return ptr;
	}


	void OnWonDuel(EDuelClassification Classification);
	void OnUnacceptedCompetitorDuel(class AOakCharacter_Player* Other);
	void OnTimerElapsed();
	void OnStartedDuelSetup();
	void OnStartedDuel();
	void OnLostDuel(EDuelLoseReason LoseReason, EDuelClassification Classification);
	void OnDuelTimedOut();
	void OnDuelInitated();
	void OnDuelCanceled();
	void OnCompetitorUnacceptedDuel(class AOakCharacter_Player* Other);
	void OnCompetitorAcceptedDuel(class AOakCharacter_Player* Other);
	void OnAcceptedCompetitorDuel(class AOakCharacter_Player* Other);
};


// Class OakGame.GFxDuelingRolloutObject
// 0x0020 (0x0190 - 0x0170)
class UGFxDuelingRolloutObject : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0170(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxDuelingRolloutObject");
		return ptr;
	}

};


// Class OakGame.GFxDuelingTimerObject
// 0x00E0 (0x0250 - 0x0170)
class UGFxDuelingTimerObject : public UGbxGFxObject
{
public:
	TWeakObjectPtr<class ADuelTotem>                   DuelTotem;                                                // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class ADuelArena>                   DuelArena;                                                // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UOakDuelingWidgetTotemComponent> DuelWidgetTotemComponent;                                 // 0x0180(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UGFxDuelingTimerWidget>       OwningWidget;                                             // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UCurveFloat>                  DistanceScaleCurve;                                       // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	EGFxDuelingTimerState                              TimerState;                                               // 0x0198(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0199(0x0003) MISSED OFFSET
	int                                                NumChallengers;                                           // 0x019C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x58];                                      // 0x01A0(0x0058) MISSED OFFSET
	bool                                               bHasBeenInited;                                           // 0x01F8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x01F9(0x0003) MISSED OFFSET
	float                                              CachedDistanceAwayFromItem;                               // 0x01FC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FTransform                                  OriginalRootDisplayTransform;                             // 0x0200(0x0030) (Transient, IsPlainOldData)
	struct FVector                                     CachedItemPosition;                                       // 0x0230(0x000C) (Transient, IsPlainOldData)
	bool                                               bIsHudWidget;                                             // 0x023C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsSplitscreenBottom;                                      // 0x023D(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x12];                                      // 0x023E(0x0012) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxDuelingTimerObject");
		return ptr;
	}

};


// Class OakGame.GFxDuelTimerTotemObject
// 0x0010 (0x0180 - 0x0170)
class UGFxDuelTimerTotemObject : public UGbxGFxObject
{
public:
	class UGFxDuelingTimerObject*                      TimerClip;                                                // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0178(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxDuelTimerTotemObject");
		return ptr;
	}

};


// Class OakGame.GFxDuelingNotificationObject
// 0x01F0 (0x0360 - 0x0170)
class UGFxDuelingNotificationObject : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x100];                                     // 0x0170(0x0100) MISSED OFFSET
	struct FGFxDeulingNotificationRewardWin            RewardWin;                                                // 0x0270(0x00E0) (Transient)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0350(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxDuelingNotificationObject");
		return ptr;
	}

};


// Class OakGame.GFxDuelingRolloutWidget
// 0x0010 (0x0650 - 0x0640)
class UGFxDuelingRolloutWidget : public UGFxDuelingWidget
{
public:
	bool                                               bRolloutPlaying;                                          // 0x0640(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0641(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxDuelingRolloutWidget");
		return ptr;
	}


	void extOnRolloutAnimationEnded();
};


// Class OakGame.GFxDuelingNotificationWidget
// 0x0020 (0x0660 - 0x0640)
class UGFxDuelingNotificationWidget : public UGFxDuelingWidget
{
public:
	TWeakObjectPtr<class AOakCharacter_Player>         OtherPlayer;                                              // 0x0640(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bNotificationPlaying;                                     // 0x0648(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCountingDown;                                            // 0x0649(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x064A(0x0002) MISSED OFFSET
	int                                                LastCountdownSecond;                                      // 0x064C(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0650(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxDuelingNotificationWidget");
		return ptr;
	}


	void extOnDuelNotificationAnimationEnded();
};


// Class OakGame.GFxDuelingTimerWidget
// 0x0030 (0x0670 - 0x0640)
class UGFxDuelingTimerWidget : public UGFxDuelingWidget
{
public:
	class UGFxDuelingTimerObject*                      HudTimerClip;                                             // 0x0640(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FGFxDuelTimerTotemData>              TotemTimers;                                              // 0x0648(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TWeakObjectPtr<class UOakDuelingWidgetTotemComponent> DuelTotemComponent;                                       // 0x0658(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	int                                                TimerCount;                                               // 0x0660(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bHudTimeActive;                                           // 0x0664(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x0665(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxDuelingTimerWidget");
		return ptr;
	}


	void extOnDuelTimerHidden();
};


// Class OakGame.OakDuelingWidgetTotemComponent
// 0x0000 (0x02D0 - 0x02D0)
class UOakDuelingWidgetTotemComponent : public USceneComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDuelingWidgetTotemComponent");
		return ptr;
	}


	void DeinitTotem();
};


// Class OakGame.GFxEchoNetSubMenu
// 0x0000 (0x0690 - 0x0690)
class UGFxEchoNetSubMenu : public UGbxGFxMenuSwitcherSubmenu
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEchoNetSubMenu");
		return ptr;
	}

};


// Class OakGame.GFxEchoCastMenu
// 0x0170 (0x0800 - 0x0690)
class UGFxEchoCastMenu : public UGFxEchoNetSubMenu
{
public:
	struct FText                                       SettingsPanelTitle;                                       // 0x0690(0x0028) (Edit, BlueprintReadOnly)
	struct FLocalizationStatus                         LocalizationStatusPanel;                                  // 0x06A8(0x00A8) (Edit, BlueprintReadOnly)
	struct FText                                       NotificationTitle;                                        // 0x0750(0x0028) (Edit, BlueprintReadOnly)
	class UGbxGFxObject*                               DescriptionPanel;                                         // 0x0768(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               DescriptionTitleTextField;                                // 0x0770(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               DescriptionTextField;                                     // 0x0778(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               SettingsPanel;                                            // 0x0780(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    SettingsList;                                             // 0x0788(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               StatusPanel;                                              // 0x0790(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ShiftAccountStateTextField;                               // 0x0798(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               StreamingServiceStateTextField;                           // 0x07A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               AccountNameTextField;                                     // 0x07A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ExtensionVersionTextField;                                // 0x07B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               StreamChannelTitleTextField;                              // 0x07B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ViewerCountTextField;                                     // 0x07C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               NotificationPanel;                                        // 0x07C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               NotificationDescriptionTextField;                         // 0x07D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bForceStreamingServiceReset;                              // 0x07D8(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x07D9(0x0003) MISSED OFFSET
	float                                              ServiceUpdateTimer;                                       // 0x07DC(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x07E0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEchoCastMenu");
		return ptr;
	}


	void OnStreamStatusUpdated(bool bIsLiveStreaming);
	void OnStreamingServiceChanged(class UGbxGFxListItemSpinner* Item);
	void OnSettingsSelectionChanged(class UGbxGFxListCell* SelectedItem);
	void OnRestoreDefaultChoiceMade(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnRareChestEventEnabledChanged(class UGbxGFxListItemSpinner* Item);
	void OnPinataEventEnabledChanged(class UGbxGFxListItemSpinner* Item);
	void OnMoxxisDrinkEventEnabledChanged(class UGbxGFxListItemSpinner* Item);
	void OnMoxxisDrinkEventBitsProductIdChanged(class UGbxGFxListItemSpinner* Item);
	void OnIsLiveStreamingUpdated(bool bIsLiveStreaming);
	void OnIncreasedChanceForSubscribersChanged(class UGbxGFxListItemSpinner* Item);
	void OnExtractionEventEnabledChanged(class UGbxGFxListItemSpinner* Item);
	void OnBadassEventEnabledChanged(class UGbxGFxListItemSpinner* Item);
	void OnBadassEventCooldownChanged(class UGbxGFxListItemSpinner* Item);
};


// Class OakGame.GFxEchologWidgetBase
// 0x0100 (0x0270 - 0x0170)
class UGFxEchologWidgetBase : public UGbxGFxObject
{
public:
	class FString                                      GFxKEY_SpeakerImage;                                      // 0x0170(0x0010) (Edit, ZeroConstructor)
	class UGbxGFxObject*                               SkinWrapper;                                              // 0x0180(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxObject*                               SpeakerImage;                                             // 0x0188(0x0008) (ZeroConstructor, IsPlainOldData)
	class FString                                      GFxKEY_PassiveAnimation;                                  // 0x0190(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x01A0(0x0010) MISSED OFFSET
	class FString                                      GFxKEY_SpeakerName;                                       // 0x01B0(0x0010) (Edit, ZeroConstructor)
	EEchoPerformanceMode                               AssociatedPerformanceMode;                                // 0x01C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET
	class UGbxGFxMovie*                                CurrentlyDisplayedMovie;                                  // 0x01C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FGbxGFxMediaPlayerConfig                    MediaPlayerConfig;                                        // 0x01D0(0x0030) (Edit)
	bool                                               bEchoIsPlaying;                                           // 0x0200(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	EECHOLOGWidgetState                                CurrentState;                                             // 0x0201(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3E];                                      // 0x0202(0x003E) MISSED OFFSET
	class UGbxGFxObject*                               CachedSpeakerImage;                                       // 0x0240(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      CachedMoodKeyframe;                                       // 0x0248(0x0010) (ZeroConstructor, Transient)
	class UGbxGFxMediaPlayer*                          MediaPlayer;                                              // 0x0258(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bMediaIsPlaying;                                          // 0x0260(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCloseMediaWhenEchoEnds;                                  // 0x0261(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bEchoIsShown;                                             // 0x0262(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0xD];                                       // 0x0263(0x000D) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEchologWidgetBase");
		return ptr;
	}


	void OnMediaMovieStopped();
	void OnMediaMovieStarted();
	void OnEchoStarted(class UCharacterEchoData* CharacterData, class UPerformanceEchoData* PerformanceData, const class FString& MoodKeyframe, const class FString& VoGMoodKey, EVoiceOfGodSpeaker VoGSpeakerID, bool bIsNewEchoLog);
	void OnEchoFinished(class UCharacterEchoData* CharacterData, class UPerformanceEchoData* PerformanceData, bool bCompleted);
};


// Class OakGame.GFxEchoNetMailboxListCell
// 0x0100 (0x0410 - 0x0310)
class UGFxEchoNetMailboxListCell : public UGbxGFxListCell
{
public:
	class UGbxTextField*                               SenderLabel;                                              // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               SubjectLabel;                                             // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               SenderIcon;                                               // 0x0320(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xE8];                                      // 0x0328(0x00E8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEchoNetMailboxListCell");
		return ptr;
	}

};


// Class OakGame.GFxEchoNetMailboxFriendCell
// 0x0100 (0x0410 - 0x0310)
class UGFxEchoNetMailboxFriendCell : public UGbxGFxListCell
{
public:
	class UGbxGFxObject*                               PlayerIcon;                                               // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               PlayerStatus;                                             // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF0];                                      // 0x0320(0x00F0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEchoNetMailboxFriendCell");
		return ptr;
	}

};


// Class OakGame.GFxEchoNetMailboxMenu
// 0x0C30 (0x12C0 - 0x0690)
class UGFxEchoNetMailboxMenu : public UGFxEchoNetSubMenu
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0690(0x0008) MISSED OFFSET
	class USwfMovie*                                   ItemCardMovie;                                            // 0x0698(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGFxBackpackWidgetConfig                    BackpackWidgetConfig;                                     // 0x06A0(0x0118) (Edit, BlueprintReadOnly)
	class UInventoryCategoryData*                      GoldenKeyResourceData;                                    // 0x07B8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FOakInventoryMenuFilter>             SortFilters;                                              // 0x07C0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FOakInventoryMenuTypePriorityInfo>   ItemTypeSortPriorities;                                   // 0x07D0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FGbxGFxPooledGridListFullConfig             FriendsListConfig;                                        // 0x07E0(0x00C0) (Edit, BlueprintReadOnly)
	struct FGbxGFxPooledGridListFullConfig             FriendsListConfigSplit;                                   // 0x08A0(0x00C0) (Edit, BlueprintReadOnly)
	struct FGbxGFxPooledGridListFullConfig             MailListConfig;                                           // 0x0960(0x00C0) (Edit, BlueprintReadOnly)
	struct FGbxGFxPooledGridListFullConfig             MailListConfigSplit;                                      // 0x0A20(0x00C0) (Edit, BlueprintReadOnly)
	struct FGFxEchoNetMailboxMenu_Adjustment           InspectRecipientContextAdjustment;                        // 0x0AE0(0x0010) (Edit, BlueprintReadOnly)
	struct FGFxEchoNetMailboxMenu_Adjustment           InspectSenderContextAdjustment;                           // 0x0AF0(0x0010) (Edit, BlueprintReadOnly)
	struct FGFxEchoNetMailboxMenu_Adjustment           SplitScreenInspectRecipientContextAdjustment;             // 0x0B00(0x0010) (Edit, BlueprintReadOnly)
	struct FGFxEchoNetMailboxMenu_Adjustment           SplitScreenInspectSenderContextAdjustment;                // 0x0B10(0x0010) (Edit, BlueprintReadOnly)
	struct FVector2D                                   ContextMenuScale;                                         // 0x0B20(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0B28(0x0010) MISSED OFFSET
	class UGbxGFxObject*                               MailboxRoot;                                              // 0x0B38(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               Mailbox;                                                  // 0x0B40(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MailListHeaderTextClip;                                   // 0x0B48(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MailListCountClip;                                        // 0x0B50(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MailListSortTextClip;                                     // 0x0B58(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxPooledGridList*                       MailList;                                                 // 0x0B60(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxSlider*                               MailScrollBar;                                            // 0x0B68(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLoadedItemCard*                          ReceiveMailItemCard;                                      // 0x0B70(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLoadedItemCard*                          SendMailItemCard;                                         // 0x0B78(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               FriendListContainer;                                      // 0x0B80(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               FriendsListHeader;                                        // 0x0B88(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxPooledGridList*                       FriendList;                                               // 0x0B90(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxSlider*                               FriendScrollBar;                                          // 0x0B98(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MessagePanel;                                             // 0x0BA0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MessagePanelSenderIcon;                                   // 0x0BA8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MessagePanelPlatformIcon;                                 // 0x0BB0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MessagePanelSubject;                                      // 0x0BB8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MessagePanelSender;                                       // 0x0BC0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MessagePanelBody;                                         // 0x0BC8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxSlider*                               MessagePanelBodyScrollBar;                                // 0x0BD0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MessagePanelBodyMask;                                     // 0x0BD8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MessagePanelItem;                                         // 0x0BE0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               BackpackClip;                                             // 0x0BE8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               BackpackHeaderTextClip;                                   // 0x0BF0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               BackpackFilterTextClip;                                   // 0x0BF8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               BackpackSortTextClip;                                     // 0x0C00(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               BackpackCapacityHeaderTextClip;                           // 0x0C08(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               BackpackCapacityCountTextClip;                            // 0x0C10(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               GoldenKeyCountTextClip;                                   // 0x0C18(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               CenterScreenNotification;                                 // 0x0C20(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CenterScreenHeaderTextField;                              // 0x0C28(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CenterScreenBodyTextField;                                // 0x0C30(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               NoMailTextField;                                          // 0x0C38(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           CenterScreenConfirmHint;                                  // 0x0C40(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           CenterScreenCancelHint;                                   // 0x0C48(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           MailListPrevSortHint;                                     // 0x0C50(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           MailListNextSortHint;                                     // 0x0C58(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           BackpackPrevSortHint;                                     // 0x0C60(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           BackpackNextSortHint;                                     // 0x0C68(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           MessagePanelAcceptHint;                                   // 0x0C70(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           MessagePanelDeclineHint;                                  // 0x0C78(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxEchoNetMailboxListCell*                  CurrentlyProcessingMailItem;                              // 0x0C80(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FGFxBackpackWidget                          BackpackWidget;                                           // 0x0C88(0x0198) (BlueprintReadOnly, Transient)
	class UOakThumbnailManager*                        IconManager;                                              // 0x0E20(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakThumbnailManager*                        FriendThumbnailManager;                                   // 0x0E28(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      ReceivedMailGearItem;                                     // 0x0E30(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UInventoryCategoryData*                      ReceivedMailItemCategory;                                 // 0x0E38(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UInventoryBalanceStateComponent*             ReceiveItemCardDisplayedBalanceState;                     // 0x0E40(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UInventoryBalanceStateComponent*             SendItemCardDisplayedBalanceState;                        // 0x0E48(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x30];                                      // 0x0E50(0x0030) MISSED OFFSET
	TMap<class FString, class AActor*>                 SpawnedInventoryItems;                                    // 0x0E80(0x0050) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x108];                                     // 0x0ED0(0x0108) MISSED OFFSET
	class UOakInventoryBalanceStateComponent*          ItemToSend;                                               // 0x0FD8(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGFxEchoNetMailboxFriendCell*                ItemRecipient;                                            // 0x0FE0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x20];                                      // 0x0FE8(0x0020) MISSED OFFSET
	struct FText                                       HintAccept;                                               // 0x1008(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       HintChoose;                                               // 0x1020(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       HintDecline;                                              // 0x1038(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       HintSendConfirm;                                          // 0x1050(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       HintSendCancel;                                           // 0x1068(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       HintClose;                                                // 0x1080(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       HintBack;                                                 // 0x1098(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       HintInbox;                                                // 0x10B0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       HintSendMail;                                             // 0x10C8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       HintExamineFriend;                                        // 0x10E0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       BackpackCapacityHeaderText;                               // 0x10F8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       BackpackHeaderText;                                       // 0x1110(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       BackpackAllItemsText;                                     // 0x1128(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       BackpackSortByText;                                       // 0x1140(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       MailListHeader;                                           // 0x1158(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       MailListSortByDateText;                                   // 0x1170(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       MailListSortByUnreadText;                                 // 0x1188(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       MailListSortByFriendText;                                 // 0x11A0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       MailListSortBySystemText;                                 // 0x11B8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       FriendsListHeaderText;                                    // 0x11D0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       CenterScreenConfirmationHeaderText;                       // 0x11E8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       CenterScreenConfirmationBodyText;                         // 0x1200(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       NoMailText;                                               // 0x1218(0x0028) (Edit, BlueprintReadOnly)
	class UGameStatData*                               MailSentStatData;                                         // 0x1230(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x38];                                      // 0x1238(0x0038) MISSED OFFSET
	TWeakObjectPtr<class UOakInventoryListComponent>   PlayerInventory;                                          // 0x1270(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData06[0x48];                                      // 0x1278(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEchoNetMailboxMenu");
		return ptr;
	}


	void OnUpdateMailCell(const struct FGbxGFxListCellUpdateInfo& UpdateInfo);
	void OnUpdateFriendCell(const struct FGbxGFxListCellUpdateInfo& UpdateInfo);
	void OnSendItemCardReady();
	void OnReceiveItemCardReady();
	void OnMailCellSelected(const struct FGbxGFxListCellUpdateInfo& UpdateInfo);
	void OnMailCellClicked(const struct FGbxGFxListCellUpdateInfo& UpdateInfo);
	void OnItemThumbnailLoaded();
	void OnInventoryListChanged();
	void OnFriendThumbnailLoaded();
	void OnFriendCellSelected(const struct FGbxGFxListCellUpdateInfo& UpdateInfo);
	void OnFriendCellClicked(const struct FGbxGFxListCellUpdateInfo& UpdateInfo);
	void OnDialogDismissed(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnBackpackItemSelected(const struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget);
	void OnBackpackItemClicked(const struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget, const struct FGbxMenuInputEvent& InputInfo);
	struct FOakThumbnailManagerIcon GetItemRenderBitmapData(class AActor* ItemActor, class UInventoryCategoryData* ItemCategory);
	void extOnHideItemComplete();
};


// Class OakGame.GFxEchoNetMatchmakingMenu
// 0x0170 (0x0800 - 0x0690)
class UGFxEchoNetMatchmakingMenu : public UGFxEchoNetSubMenu
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0690(0x0010) MISSED OFFSET
	struct FText                                       MatchmakingInitalizedModeText;                            // 0x06A0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       MatchmakingInitializedText;                               // 0x06B8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       HeroicModeText;                                           // 0x06D0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       StandardModeText;                                         // 0x06E8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       MatchmakingInProgressText;                                // 0x0700(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ButtonStartText;                                          // 0x0718(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ButtonCancelText;                                         // 0x0730(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       LockedText;                                               // 0x0748(0x0028) (Edit, BlueprintReadOnly)
	float                                              StartButtonLabelExtraPadding;                             // 0x0760(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0764(0x0004) MISSED OFFSET
	class UGFxEchoNetMatchmakingInitializedWidget*     MatchmakingModeInitializedClip;                           // 0x0768(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxEchoNetMatchmakingInfoPanelWidget*       MatchmakingInfoPanelClip;                                 // 0x0770(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxEchoNetMatchmakingModeSelectionWidget*   ModeSelectionClip;                                        // 0x0778(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FGFxEchoNetMatchmakingActivityData>  ActivityListData;                                         // 0x0780(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      CurrentMatchmakingActivityGuid;                           // 0x0790(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      QueuedMatchmakingActivityGuid;                            // 0x07A0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x4];                                       // 0x07B0(0x0004) MISSED OFFSET
	int                                                CurrentSelectedActivityIdx;                               // 0x07B4(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class FString>                              MatchmakingRegions;                                       // 0x07B8(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x38];                                      // 0x07C8(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEchoNetMatchmakingMenu");
		return ptr;
	}


	void OnMatchMakingButtonHeld(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnMatchMakingButtonClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnActivityItemFocused(class UGbxGFxListCell* ListItem);
	void OnActivityItemClicked(class UGbxGFxListCell* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxEchoNetMatchmakingInitializedWidget
// 0x0020 (0x0190 - 0x0170)
class UGFxEchoNetMatchmakingInitializedWidget : public UGbxGFxObject
{
public:
	class UGbxTextField*                               MatchmakingModeClip;                                      // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               InitializedClip;                                          // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsShowing;                                               // 0x0180(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0181(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEchoNetMatchmakingInitializedWidget");
		return ptr;
	}

};


// Class OakGame.GFxEchoNetMatchmakingInfoPanelWidget
// 0x0070 (0x01E0 - 0x0170)
class UGFxEchoNetMatchmakingInfoPanelWidget : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                               ContentClip;                                              // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MatchmakingModeNameClip;                                  // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ModeSelectionClip;                                        // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               NormalModeButtonClip;                                     // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               HeroicModeButtonClip;                                     // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MenuGlyphClip;                                            // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxSlider*                               ScrollBarClip;                                            // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ObjectiveDescriptionClip;                                 // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ObjectiveDescriptionMaskClip;                             // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxEchoNetMatchmakingStartButton*           ButtonStartClip;                                          // 0x01B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MatchmakingModeLockedClip;                                // 0x01C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGbxTextField*>                       RequirementsClips;                                        // 0x01C8(0x0010) (ZeroConstructor, Transient)
	int                                                DisplayedActivityIndex;                                   // 0x01D8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsShowing;                                               // 0x01DC(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01DD(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEchoNetMatchmakingInfoPanelWidget");
		return ptr;
	}


	void OnHeroicModeButtonClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxEchoNetMatchmakingStartButton
// 0x0020 (0x02F0 - 0x02D0)
class UGFxEchoNetMatchmakingStartButton : public UGbxGFxButton
{
public:
	float                                              BaseContentWrapperY;                                      // 0x02D0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02D4(0x0004) MISSED OFFSET
	class UGbxGFxObject*                               ContentWrapperClip;                                       // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           ButtonHintClip;                                           // 0x02E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bMatchmakingButtonEnabled;                                // 0x02E8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bMatchmakingButtonIsPressToHold;                          // 0x02E9(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x02EA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEchoNetMatchmakingStartButton");
		return ptr;
	}

};


// Class OakGame.GFxEchoNetMatchmakingModeSelectionWidget
// 0x0030 (0x01A0 - 0x0170)
class UGFxEchoNetMatchmakingModeSelectionWidget : public UGbxGFxObject
{
public:
	float                                              ScrollVelocity;                                           // 0x0170(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0174(0x0004) MISSED OFFSET
	class UGbxGFxGridScrollingList*                    ContentListClip;                                          // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               ButtonLeftClip;                                           // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               ButtonRightClip;                                          // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsShowing;                                               // 0x0190(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0191(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEchoNetMatchmakingModeSelectionWidget");
		return ptr;
	}


	void OnArrowButtonClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnActivityItemFocused(class UGbxGFxListCell* ListItem);
};


// Class OakGame.GFxEchoNetMatchmakingModeSelectionCell
// 0x0010 (0x0320 - 0x0310)
class UGFxEchoNetMatchmakingModeSelectionCell : public UGbxGFxListCell
{
public:
	class UGFxEchoNetMatchmakingModeBackgroundWidget*  FocusedBgClip;                                            // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ModeImageClip;                                            // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEchoNetMatchmakingModeSelectionCell");
		return ptr;
	}

};


// Class OakGame.GFxEchoNetMatchmakingModeBackgroundWidget
// 0x0030 (0x01A0 - 0x0170)
class UGFxEchoNetMatchmakingModeBackgroundWidget : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                               StarIconClip;                                             // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               HeroicTextClip;                                           // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CurrentlyMatchmakingTextClip;                             // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGbxTextField*>                       RequirementsClips;                                        // 0x0188(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0198(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEchoNetMatchmakingModeBackgroundWidget");
		return ptr;
	}

};


// Class OakGame.GFxEchoNetMenuWrapper
// 0x0060 (0x0700 - 0x06A0)
class UGFxEchoNetMenuWrapper : public UGbxGFxMenuSwitcher
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x06A0(0x0008) MISSED OFFSET
	int                                                RosterMenuPageIndex;                                      // 0x06A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x06AC(0x0004) MISSED OFFSET
	struct FName                                       MenuToGotoOffline;                                        // 0x06B0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             BackdropParticleSystem;                                   // 0x06B8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BackgroundParticleDepth;                                  // 0x06C0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   NavListSpacing;                                           // 0x06C4(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x06CC(0x0004) MISSED OFFSET
	class UGbxGFxMenuSwitcherNavWidget*                NavBarClip;                                               // 0x06D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AGbxPlayerController*                        TargetPC;                                                 // 0x06D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       TargetMenuWhenGoingOnline;                                // 0x06E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x18];                                      // 0x06E8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEchoNetMenuWrapper");
		return ptr;
	}

};


// Class OakGame.GFxRosterCell
// 0x0050 (0x0360 - 0x0310)
class UGFxRosterCell : public UGbxGFxListCell
{
public:
	class UGbxGFxObject*                               VaultStatusAnimClip;                                      // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UPlayerIdentityWidget*                       PlayerIdWidget;                                           // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               FriendTextClip;                                           // 0x0320(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0328(0x0028) MISSED OFFSET
	EGFxRosterCellType                                 RosterCellType;                                           // 0x0350(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0328(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData02[0xC];                                       // 0x0354(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxRosterCell");
		return ptr;
	}

};


// Class OakGame.GFxEchoNetRosterMenu
// 0x0310 (0x09A0 - 0x0690)
class UGFxEchoNetRosterMenu : public UGFxEchoNetSubMenu
{
public:
	int                                                ItemsPerpageSplitScreen;                                  // 0x0690(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SplitScreenFirstExternalIndex;                            // 0x0694(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CellVertSpacing;                                          // 0x0698(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CellHorzSpacing;                                          // 0x069C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ContextMenuOffsetExpandingDown;                           // 0x06A0(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   ContextMenuOffsetExpandingUp;                             // 0x06A8(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	float                                              ContextMenuQuadraticFactor;                               // 0x06B0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ContextMenuScale;                                         // 0x06B4(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FGFxEchoNetRosterMenu_Adjustment            ContextMenuAdjustmentHorizontalSplitScreen;               // 0x06BC(0x0010) (Edit, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x4];                                       // 0x06CC(0x0004) MISSED OFFSET
	class FString                                      InGameRosterCellName;                                     // 0x06D0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      OnlineRosterCellName;                                     // 0x06E0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      OfflineRosterCellName;                                    // 0x06F0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      EmptyRosterCellName;                                      // 0x0700(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FName                                       InputAction_ToggleVaultHunterView;                        // 0x0710(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    RosterGrid;                                               // 0x0718(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MenuPagerTextClip;                                        // 0x0720(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               InternalWrapper;                                          // 0x0728(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ScreenTitle;                                              // 0x0730(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               FriendsNum;                                               // 0x0738(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MenuFilter;                                               // 0x0740(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           LeftTabHint;                                              // 0x0748(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           RightTabHint;                                             // 0x0750(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           LeftPageHint;                                             // 0x0758(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           RightPageHint;                                            // 0x0760(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MenuDescriptionTextClip;                                  // 0x0768(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               VaultHunterStatusClip;                                    // 0x0770(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           ChangeVaultHunterViewHintClip;                            // 0x0778(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxVaultHunterProfileCard*                  ViewedPlayerVaultHunterProfileCard;                       // 0x0780(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxVaultHunterProfileCard*                  MyVaultHunterProfileCard;                                 // 0x0788(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FOakOnlineLobbyPlayerInfo                   SelectedPlayerInfo;                                       // 0x0790(0x0080) (BlueprintReadOnly, Transient)
	int                                                CurrentPage;                                              // 0x0810(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                LastPageIndex;                                            // 0x0814(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0818(0x0004) MISSED OFFSET
	bool                                               bPendingPopulateFriends;                                  // 0x081C(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPendingPopulateRecentPlayers;                            // 0x081D(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x081E(0x0002) MISSED OFFSET
	int                                                SavedSelectedIndex;                                       // 0x0820(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                SavedCurrentPage;                                         // 0x0824(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AOakPlayerController*                        TargetPC;                                                 // 0x0828(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxMenuData*                                PlayerDetailsMenuData;                                    // 0x0830(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x120];                                     // 0x0838(0x0120) MISSED OFFSET
	EGFxVaultHunterProfileCardView                     CurrentProfileView;                                       // 0x0958(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x47];                                      // 0x0959(0x0047) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEchoNetRosterMenu");
		return ptr;
	}


	void OnSelectedPlayerChanged(class UGbxGFxListCell* Item);
	void OnRecentPlayerSelected(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnFriendSelected(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnFriendFocused(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxEchoNetSubMenuData
// 0x0008 (0x00C8 - 0x00C0)
class UGFxEchoNetSubMenuData : public UOakGFxMenuData
{
public:
	bool                                               bShouldDisplayInMainMenus;                                // 0x00C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bRequiresOnline;                                          // 0x00C1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bRequiresLan;                                             // 0x00C2(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bRequiresInGame;                                          // 0x00C3(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEchoNetSubMenuData");
		return ptr;
	}

};


// Class OakGame.GFxEchoNetSubMenuDLCData
// 0x0020 (0x00E8 - 0x00C8)
class UGFxEchoNetSubMenuDLCData : public UGFxEchoNetSubMenuData
{
public:
	struct FText                                       SubmenuName;                                              // 0x00C8(0x0028) (Edit)
	struct FName                                       MenuID;                                                   // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEchoNetSubMenuDLCData");
		return ptr;
	}

};


// Class OakGame.GFxECHOWidget
// 0x0110 (0x0740 - 0x0630)
class UGFxECHOWidget : public UGbxGFxHUDWidget
{
public:
	class FString                                      GFxKEY_SpeakerImage;                                      // 0x0630(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class UGbxGFxObject*                               SpeakerImage;                                             // 0x0640(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class FString                                      GFxKEY_PassiveAnimation;                                  // 0x0648(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0658(0x0010) MISSED OFFSET
	class FString                                      GFxKEY_SpeakerName;                                       // 0x0668(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	EEchoPerformanceMode                               AssociatedPerformanceMode;                                // 0x0678(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0679(0x0007) MISSED OFFSET
	class UGbxGFxMovie*                                CurrentlyDisplayedMovie;                                  // 0x0680(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FGbxGFxMediaPlayerConfig                    MediaPlayerConfig;                                        // 0x0688(0x0030) (Edit, BlueprintReadOnly)
	EECHOWidgetState                                   CurrentState;                                             // 0x06B8(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3F];                                      // 0x06B9(0x003F) MISSED OFFSET
	class UGbxGFxObject*                               CachedSpeakerImage;                                       // 0x06F8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      CachedMoodKeyframe;                                       // 0x0700(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UGbxGFxMediaPlayer*                          MediaPlayer;                                              // 0x0710(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bEchoIsPlaying;                                           // 0x0718(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bMediaIsPlaying;                                          // 0x0719(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCloseMediaWhenEchoEnds;                                  // 0x071A(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x071B(0x0005) MISSED OFFSET
	class UGFxEchologWidgetBase*                       EchoWidgetBase;                                           // 0x0720(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      EchoStringID;                                             // 0x0728(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0738(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxECHOWidget");
		return ptr;
	}


	void OnMediaMovieStopped();
	void OnMediaMovieStarted();
	void OnEchoStarted(class UCharacterEchoData* CharacterData, class UPerformanceEchoData* PerformanceData, const class FString& MoodKeyframe, const class FString& VoGMoodKey, EVoiceOfGodSpeaker VoGSpeakerID, bool bIsNewEcho);
	void OnEchoFinished(class UCharacterEchoData* CharacterData, class UPerformanceEchoData* PerformanceData, bool bCompleted);
};


// Class OakGame.GFxEditableCurrencyCounterClip
// 0x0080 (0x0300 - 0x0280)
class UGFxEditableCurrencyCounterClip : public UGFxCurrencyCounterClip
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0280(0x0010) MISSED OFFSET
	class UGbxGFxMenu*                                 OwningMenu;                                               // 0x0290(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0298(0x0018) MISSED OFFSET
	class UGbxGFxEditableTextField*                    CurrencyInputTextField;                                   // 0x02B0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x48];                                      // 0x02B8(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEditableCurrencyCounterClip");
		return ptr;
	}

};


// Class OakGame.GFxExperienceBar
// 0x02B0 (0x08E0 - 0x0630)
class UGFxExperienceBar : public UGbxGFxHUDWidget
{
public:
	float                                              BarSpeedThreshold;                                        // 0x0630(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BarSpeedModifier;                                         // 0x0634(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FadeOutTime;                                              // 0x0638(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LevelUpDelay;                                             // 0x063C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       NAME_XPGain_Quick;                                        // 0x0640(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       NAME_XPGain_Slow;                                         // 0x0648(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       NAME_LEVEL_UP_SOUND;                                      // 0x0650(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UHUDNotificationAsset*                       LevelUpNotifcation;                                       // 0x0658(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       ActionSkillsAvailableForFirstTime;                        // 0x0660(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       SkillPointsAvailableText;                                 // 0x0678(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       SkillPointsAvailableTextWithPrompt;                       // 0x0690(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       GuardianPointsAvailableText;                              // 0x06A8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       GuardianPointsAvailableTextWithPrompt;                    // 0x06C0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       BothGuadianAndSkillPointsAvailableText;                   // 0x06D8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       VaultCardRewardAvailable;                                 // 0x06F0(0x0028) (Edit, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0708(0x0018) MISSED OFFSET
	class UGbxGFxObject*                               DimContainer;                                             // 0x0720(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               WrapperForBars;                                           // 0x0728(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          NormalXPProgressBar;                                      // 0x0730(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          VaultCardXPProgressBar;                                   // 0x0738(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0740(0x0028) MISSED OFFSET
	class UGbxGFxObject*                               MayhemIcon;                                               // 0x0768(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MayhemIconContainer;                                      // 0x0770(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0778(0x0018) MISSED OFFSET
	class UGFxPassiveSkillIcon*                        CitizenScienceBoosterIcon;                                // 0x0790(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxPassiveSkillIcon*                        StreamerPrimaryBoosterIcon;                               // 0x0798(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxPassiveSkillIcon*                        StreamerSecondaryBoosterIcon;                             // 0x07A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x28];                                      // 0x07A8(0x0028) MISSED OFFSET
	class UGbxGFxProgressBar*                          GuardianXPProgressBar;                                    // 0x07D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x40];                                      // 0x07D8(0x0040) MISSED OFFSET
	class UGbxGFxObject*                               SkillPointsAvailableWrapper;                              // 0x0818(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakPlayerAbilityTree*                       PlayerAbilityTree;                                        // 0x0820(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UPlayerBalanceStateComponent> PlayerBalanceState;                                       // 0x0828(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UPlayerGuardianRankComponent> PlayerGuardianRank;                                       // 0x0830(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	EGFxExperienceBarState                             NormalXPBarState;                                         // 0x0838(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EGFxExperienceBarState                             GuardianXPBarState;                                       // 0x0839(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EGFxExperienceBarState                             VaultCardXPBarState;                                      // 0x083A(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1];                                       // 0x083B(0x0001) MISSED OFFSET
	int                                                CachedAmountOfMissionTrackerSlots;                        // 0x083C(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CachedLevel;                                              // 0x0840(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                LastLevelUpLevel;                                         // 0x0844(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CachedExperienceAmount;                                   // 0x0848(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CachedNextLevelExperience;                                // 0x084C(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CachedPreviousLevelExperience;                            // 0x0850(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                AccumulatedExperience;                                    // 0x0854(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CachedRemainingSkillPoints;                               // 0x0858(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CachedRemainingGuardianPoints;                            // 0x085C(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CachedGuardianRank;                                       // 0x0860(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                GuardianAccumulatedExperience;                            // 0x0864(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                GuardianCachedNextLevelExperience;                        // 0x0868(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                GuardianCachedPreviousLevelExperience;                    // 0x086C(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                GuardianCachedExperienceAmount;                           // 0x0870(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CachedVaultCardRank;                                      // 0x0874(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                VaultCardAccumulatedExperience;                           // 0x0878(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                VaultCardCachedNextLevelExperience;                       // 0x087C(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                VaultCardCachedPreviousLevelExperience;                   // 0x0880(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                VaultCardCachedExperienceAmount;                          // 0x0884(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FTimerHandle                                TimerHandle_FadeoutNormal;                                // 0x0888(0x0008) (BlueprintReadOnly, Transient)
	struct FTimerHandle                                TimerHandle_FadeoutGuardian;                              // 0x0890(0x0008) (BlueprintReadOnly, Transient)
	struct FTimerHandle                                TimerHandle_FadeoutVaultCard;                             // 0x0898(0x0008) (BlueprintReadOnly, Transient)
	struct FTimerHandle                                TimerHandle_LevelUpNormal;                                // 0x08A0(0x0008) (BlueprintReadOnly, Transient)
	struct FTimerHandle                                TimerHandle_LevelUpGuardian;                              // 0x08A8(0x0008) (BlueprintReadOnly, Transient)
	struct FTimerHandle                                TimerHandle_LevelUpVaultCard;                             // 0x08B0(0x0008) (BlueprintReadOnly, Transient)
	struct FName                                       SkillPointsAvailableCharacterSpecific;                    // 0x08B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x20];                                      // 0x08C0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxExperienceBar");
		return ptr;
	}


	void OnInputDeviceChanged();
	void NotifyPrimaryCharacterChanged(class AGbxCharacter* NewPrimaryCharacter);
	void HandleVaultCardProgressAnimationComplete();
	void HandleSkillPointsChanged(int RemainingSkillPoints);
	void HandleProgressAnimationComplete();
	void HandleLevelChanged(int OldExperienceLevel, int NewExperienceLevel);
	void HandleGuardianProgressAnimationComplete();
	void HandleGuardianExperienceAdded(int Amount);
	void HandleExperienceAdded(int ExperienceAdded, EPlayerExperienceSource Source, EPlayerExperienceType Type);
	void extFinishedDim();
};


// Class OakGame.GFxFeedWidget
// 0x0020 (0x0650 - 0x0630)
class UGFxFeedWidget : public UGbxGFxHUDWidget
{
public:
	float                                              WidgetDuration;                                           // 0x0630(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxWidgetRolloutTime;                                     // 0x0634(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EGFxFeedWidgetState                                WidgetState;                                              // 0x0638(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0638(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	float                                              WidgetStateTime;                                          // 0x063C(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               Widget;                                                   // 0x0640(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               LabelText;                                                // 0x0648(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxFeedWidget");
		return ptr;
	}


	void extOnRolloutComplete();
};


// Class OakGame.GFxFightForYourLifeWidget
// 0x0070 (0x06A0 - 0x0630)
class UGFxFightForYourLifeWidget : public UGbxGFxHUDWidget
{
public:
	class UFightForYourLifeComponent*                  AssociatedFFYLComponent;                                  // 0x0630(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0638(0x0008) MISSED OFFSET
	class UGbxGFxObject*                               IconSwitcher;                                             // 0x0640(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LabelContainer;                                           // 0x0648(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MainLabel;                                                // 0x0650(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          DyingBar;                                                 // 0x0658(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          ReviveBar;                                                // 0x0660(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MaxHoldToGiveUpTime;                                      // 0x0668(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x066C(0x0004) MISSED OFFSET
	class UGbxTextField*                               ActionText;                                               // 0x0670(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           GiveUpHint;                                               // 0x0678(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxHUDStateData*                            FFYLHUDState;                                             // 0x0680(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0688(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxFightForYourLifeWidget");
		return ptr;
	}


	void OnRevivingStop(bool IsHealed);
	void OnRevivingStart();
	void OnRevivingNonLocalStop(class UFightForYourLifeComponent* OtherFFYL);
	void OnInputDeviceChanged();
	void OnGiveUpStop();
	void OnDownStop();
	void OnDownStart();
	void OnDownFinish();
	void OnBeingRevivedStop();
	void OnBeingRevivedStart();
	void OnActionSkillCoolingDown(class UOakActionAbility* InActionAbility);
	void OnActionSkillActivated(class UOakActionAbility* InActionAbility);
	void OnAbilitySlotChanged(class UOakPlayerAbilitySlotData* SlotData);
};


// Class OakGame.GFxFlavorTextMenu
// 0x00A0 (0x0740 - 0x06A0)
class UGFxFlavorTextMenu : public UAdvancedInteractiveObjectOwnedGFxMenu
{
public:
	class UGbxTextField*                               DescriptionTextBox;                                       // 0x06A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TitleTextBox;                                             // 0x06A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxSlider*                               ScrollBar;                                                // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               DescriptionTextMask;                                      // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FTextElementCondition>               CachedFlavorTextData;                                     // 0x06C0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	struct FText                                       CachedTitleText;                                          // 0x06D0(0x0028) (BlueprintReadOnly, Transient)
	class FString                                      DescriptionTextBoxClipID;                                 // 0x06E8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      TitleTextBoxClipID;                                       // 0x06F8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      ScrollBarClipID;                                          // 0x0708(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      DescriptionTextMaskClipID;                                // 0x0718(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FText                                       BackOutText;                                              // 0x0728(0x0028) (Edit, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxFlavorTextMenu");
		return ptr;
	}


	void InitWithData(TArray<struct FTextElementCondition> FlavorTextData, const struct FText& TitleText, class AConditionalFlavorTextIO* FlavorTextIO);
};


// Class OakGame.GFxFriendsInArea
// 0x0010 (0x04F0 - 0x04E0)
class UGFxFriendsInArea : public UGbxGFxMovie
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04E0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxFriendsInArea");
		return ptr;
	}

};


// Class OakGame.GFxFriendsInAreaListMenu
// 0x0090 (0x0710 - 0x0680)
class UGFxFriendsInAreaListMenu : public UGbxGFxMenu
{
public:
	struct FVector2D                                   ContextMenuOffsetExpandingDown;                           // 0x0680(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   ContextMenuOffsetExpandingUp;                             // 0x0688(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   ContextMenuScale;                                         // 0x0690(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FGFxFriendsInAreaListMenu_Adjustment        ContextMenuAdjustmentHorizontalSplitScreen;               // 0x0698(0x0010) (Edit, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x20];                                      // 0x06A8(0x0020) MISSED OFFSET
	class UGbxGFxGridScrollingList*                    FriendList;                                               // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               HeaderLabel;                                              // 0x06D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               LocationLabel;                                            // 0x06D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               HeaderFriendCount;                                        // 0x06E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      CachedMapName;                                            // 0x06E8(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x18];                                      // 0x06F8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxFriendsInAreaListMenu");
		return ptr;
	}


	void OnFriendSelected(class UGbxGFxListCell* ListItem);
	void OnFriendClicked(class UGbxGFxListCell* ListItem, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxFriendsInAreaListCell
// 0x0070 (0x0380 - 0x0310)
class UGFxFriendsInAreaListCell : public UGbxGFxListCell
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0310(0x0018) MISSED OFFSET
	class FString                                      PlayerName;                                               // 0x0328(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0338(0x0008) MISSED OFFSET
	class UGbxTextField*                               LevelText;                                                // 0x0340(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               PlayerIcon;                                               // 0x0348(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               FriendNameText;                                           // 0x0350(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               FriendInfoText;                                           // 0x0358(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               PartyInfoText;                                            // 0x0360(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0368(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxFriendsInAreaListCell");
		return ptr;
	}

};


// Class OakGame.GFxFrontendLandingPage
// 0x0060 (0x01D0 - 0x0170)
class UGFxFrontendLandingPage : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                               InfoBoxClip;                                              // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TitleTextClip;                                            // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               DescriptionTextClip;                                      // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               DescriptionTextGridAreaClip;                              // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxSlider*                               DescriptionTextScrollBarClip;                             // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               LandingButtonClip;                                        // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TransitionTextClip;                                       // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               KeyArtClip;                                               // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsEnbaled;                                               // 0x01B0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x01B1(0x000F) MISSED OFFSET
	EGFxFrontendLandingPageType                        CurrentPageType;                                          // 0x01C0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x01B1(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData02[0xC];                                       // 0x01C4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxFrontendLandingPage");
		return ptr;
	}


	void OnGoOnlineClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	class FString GetFrameForGoOnlineButton(class UGbxGFxButton* BUTTON, EGbxFocusableWidgetState ButtonState);
};


// Class OakGame.GFxFrontendLandingMenu
// 0x0010 (0x06A0 - 0x0690)
class UGFxFrontendLandingMenu : public UGFxEchoNetSubMenu
{
public:
	class UGFxFrontendLandingPage*                     LandingPageClip;                                          // 0x0690(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGbxGFxButton>                GoOnlineButtonClip;                                       // 0x0698(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxFrontendLandingMenu");
		return ptr;
	}

};


// Class OakGame.GFxFrontendMenu
// 0x00B0 (0x0730 - 0x0680)
class UGFxFrontendMenu : public UGbxGFxMenu
{
public:
	class UTexture*                                    NewsImageNotLoadedTexture;                                // 0x0680(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USwfMovie*                                   NewsWidgetImageMovie;                                     // 0x0688(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LobbyWidgetFocusInspectionDelay;                          // 0x0690(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TintScale;                                                // 0x0694(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TintOffset;                                               // 0x0698(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x069C(0x000C) MISSED OFFSET
	class UGFxOakMainMenu*                             CachedMainMenu;                                           // 0x06A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LobbyWidgetFocusedClip;                                   // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LobbyWidgetTintClip;                                      // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LobbyWrapperClip;                                         // 0x06C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLobbyWidget*                             LobbyWidgetClip;                                          // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LastFocusedLobbyWidgetPlayerItem;                         // 0x06D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x06D8(0x0008) MISSED OFFSET
	class UGbxGFxObject*                               NewsWidgetFadeClip;                                       // 0x06E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               NewsWidgetVisibilityClip;                                 // 0x06E8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxNewsWidgetWrapper*                       NewsWrapperClip;                                          // 0x06F0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxNewsWidget*                              NewsWidgetClip;                                           // 0x06F8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLobbyWidgetMatchmakingWidget*            MatchmakingWidgetClip;                                    // 0x0700(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCurLobbyWidgetFocusedState;                              // 0x0708(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bLobbyWidgetVisibilityOverride;                           // 0x0709(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bNewsWidgetVisibilityOverride;                            // 0x070A(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EGFxFrontendMenuMode                               CurrentMenuMode;                                          // 0x070B(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EGFxFrontendMenuFocusAnim                          CurrentFocusAnim;                                         // 0x070C(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bChatNotificationIsOpen;                                  // 0x070D(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x22];                                      // 0x070E(0x0022) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxFrontendMenu");
		return ptr;
	}


	void OnMenuStackChanged(class UObject* ActiveMenu);
	void OnLobbyWidgetAddFriendsButtonClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxFrontendTargetMenuInterface
// 0x0000 (0x0028 - 0x0028)
class UGFxFrontendTargetMenuInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxFrontendTargetMenuInterface");
		return ptr;
	}

};


// Class OakGame.GFxFullScreenMovieMenu
// 0x0080 (0x0700 - 0x0680)
class UGFxFullScreenMovieMenu : public UGbxGFxMenu
{
public:
	struct FGbxGFxMediaPlayerConfig                    GFxMediaPlayerConfig;                                     // 0x0680(0x0030) (Edit, BlueprintReadOnly)
	class UGbxGFxMediaPlayer*                          GFxMediaPlayer;                                           // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UMediaSource*                                MediaSourceObject;                                        // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TSoftObjectPtr<class UMediaSource>                 MediaSourceSoftPtr;                                       // 0x06C0(0x0028) (BlueprintReadOnly, Transient)
	bool                                               bScaleformHasStarted;                                     // 0x06E8(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bMoviePlaybackComplete;                                   // 0x06E9(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x16];                                      // 0x06EA(0x0016) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxFullScreenMovieMenu");
		return ptr;
	}


	void OnMoviePlaybackComplete();
};


// Class OakGame.GFxGameModeNotificationWidget
// 0x0050 (0x05E0 - 0x0590)
class UGFxGameModeNotificationWidget : public UGFxDisplayedNotificationWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0590(0x0010) MISSED OFFSET
	TArray<struct FGFxGameModeNotificationWidgetInfo>  GameModeNotificationTextFields;                           // 0x05A0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      WidgetBasePath;                                           // 0x05B0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class UGbxTextField*                               TextObject;                                               // 0x05C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ShadowTextObject;                                         // 0x05C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x05D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxGameModeNotificationWidget");
		return ptr;
	}


	void HandleCountdownChange(int CountdownRemaining);
};


// Class OakGame.GFxGameplayOptions
// 0x0000 (0x00B8 - 0x00B8)
class UGFxGameplayOptions : public UGFxOptionBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxGameplayOptions");
		return ptr;
	}


	void OnShowMinimapLegendariesChanged(class UGbxGFxListItemSpinner* Item);
	void OnResetTutorialsClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnResetTutorialsChoiceMade(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnFixedMinimapRotationChanged(class UGbxGFxListItemSpinner* Item);
	void OnDifficultyChanged(class UGbxGFxListItemSpinner* Item);
	void OnCenterCrosshairChanged(class UGbxGFxListItemSpinner* Item);
	void OnCensorContentChanged(class UGbxGFxListItemSpinner* Item);
};


// Class OakGame.GFxGearUpExtractionMenu
// 0x01C0 (0x0860 - 0x06A0)
class UGFxGearUpExtractionMenu : public UAdvancedInteractiveObjectOwnedGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x06A0(0x0010) MISSED OFFSET
	struct FText                                       ConfirmOfferingBodyText;                                  // 0x06B0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       DialogHeaderTitle;                                        // 0x06C8(0x0028) (Edit, BlueprintReadOnly)
	class USwfMovie*                                   ItemCardMovie;                                            // 0x06E0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxDelayTimeToLoadThumbnails;                             // 0x06E8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x06EC(0x0004) MISSED OFFSET
	TArray<struct FOakInventoryMenuFilter>             SortFilters;                                              // 0x06F0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FOakInventoryMenuTypePriorityInfo>   ItemTypeSortPriorities;                                   // 0x0700(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FEchoDeviceUIController                     EchoDeviceController;                                     // 0x0710(0x0020) (Edit, BlueprintReadOnly)
	struct FName                                       EchoDeviceMenuName;                                       // 0x0730(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       EchoDeviceIdleScreenName;                                 // 0x0738(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x58];                                      // 0x0740(0x0058) MISSED OFFSET
	class UGbxGFxHintWidget*                           CountdownCancelHintClip;                                  // 0x0798(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxGearUpExtractionMenuInfoPanel*           InfoPanelClip;                                            // 0x07A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x07A8(0x0010) MISSED OFFSET
	class UGbxGFxObject*                               OfferingBackpackClip;                                     // 0x07B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxGearUpExtractionMenuBackpack*            OfferingBackpack;                                         // 0x07C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               OfferingButtonClip;                                       // 0x07C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x07D0(0x0010) MISSED OFFSET
	class UGbxGFxObject*                               BackpackBackpackClip;                                     // 0x07E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxGearUpExtractionMenuBackpack*            BackpackBackpack;                                         // 0x07E8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x48];                                      // 0x07F0(0x0048) MISSED OFFSET
	class UGbxGFxHintWidget*                           BackpackPrevSortClip;                                     // 0x0838(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           BackpackNextSortClip;                                     // 0x0840(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxCurrencyCounterClip*                     BackpackCurrencyWidgetClip;                               // 0x0848(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLoadedItemCard*                          ItemCardClip;                                             // 0x0850(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                AllowableBankOverfill;                                    // 0x0858(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x085C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxGearUpExtractionMenu");
		return ptr;
	}


	void OnTargetInventoryQuantityChanged(const struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int Quantity, int MaxQuantity);
	void OnTargetInventoryItemUpdated(const struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnTargetInventoryItemRemoved(const struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnTargetInventoryItemAdded(const struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnMakeOfferButtonUnhovered(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnMakeOfferButtonClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnItemCardReady();
	void OnInventoryQuantityChanged(const struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int Quantity, int MaxQuantity);
	void OnInventoryItemUpdated(const struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnInventoryItemRemoved(const struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnInventoryItemAdded(const struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnGearUpThumbnailLoaded();
	void OnConfirmExtraction(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void extOnCountdownFinished();
};


// Class OakGame.GFxGearUpExtractionMenuWidget
// 0x0000 (0x0170 - 0x0170)
class UGFxGearUpExtractionMenuWidget : public UGbxGFxObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxGearUpExtractionMenuWidget");
		return ptr;
	}

};


// Class OakGame.GFxGearUpExtractionMenuInfoPanel
// 0x0090 (0x0200 - 0x0170)
class UGFxGearUpExtractionMenuInfoPanel : public UGFxGearUpExtractionMenuWidget
{
public:
	unsigned char                                      UnknownData00[0x70];                                      // 0x0170(0x0070) MISSED OFFSET
	class UGbxGFxObject*                               GearDescriptionMaskClip;                                  // 0x01E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               GearDescriptionTextClip;                                  // 0x01E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxSlider*                               GearDescriptionScrollBarClip;                             // 0x01F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x01F8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxGearUpExtractionMenuInfoPanel");
		return ptr;
	}

};


// Class OakGame.OakUIVirtualBackpack
// 0x00B0 (0x00D8 - 0x0028)
class UOakUIVirtualBackpack : public UObject
{
public:
	unsigned char                                      UnknownData00[0xB0];                                      // 0x0028(0x00B0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakUIVirtualBackpack");
		return ptr;
	}


	void OnListScrollBarUpdated(float SliderPercentage);
};


// Class OakGame.GFxGearUpExtractionMenuBackpack
// 0x0020 (0x00F8 - 0x00D8)
class UGFxGearUpExtractionMenuBackpack : public UOakUIVirtualBackpack
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x00D8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxGearUpExtractionMenuBackpack");
		return ptr;
	}

};


// Class OakGame.GFxGraphicsOptions
// 0x0240 (0x02F8 - 0x00B8)
class UGFxGraphicsOptions : public UGFxOptionBase
{
public:
	unsigned char                                      UnknownData00[0xE0];                                      // 0x00B8(0x00E0) MISSED OFFSET
	class UGbxGFxListItemComboBox*                     ResolutionComboBox;                                       // 0x0198(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemComboBox*                     AspectRatioComboBox;                                      // 0x01A0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemComboBox*                     RefreshRateComboBox;                                      // 0x01A8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      WindowsModeSpinner;                                       // 0x01B0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      PreferredMonitorSpinner;                                  // 0x01B8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      ResolutionScaleSpinner;                                   // 0x01C0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      VSyncSpinner;                                             // 0x01C8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemNumber*                       FrameRateLimitCustomSlider;                               // 0x01D0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      DisplayPerformanceStatsSpinner;                           // 0x01D8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      AntialiasingSpinner;                                      // 0x01E0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      CASSpinner;                                               // 0x01E8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      CameraMotionBlurSlider;                                   // 0x01F0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      ObjectMotionBlurSpinner;                                  // 0x01F8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      GraphicsQualitySpinner;                                   // 0x0200(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      TextureStreamingSpinner;                                  // 0x0208(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      MaterialQualitySpinner;                                   // 0x0210(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      AnisotropicFilteringSpinner;                              // 0x0218(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      ShadowQualitySpinner;                                     // 0x0220(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      DrawDistanceSpinner;                                      // 0x0228(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      EnvironmentDetailSpinner;                                 // 0x0230(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      TerrainSpinner;                                           // 0x0238(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      FoliageSpinner;                                           // 0x0240(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      CharacterTextureDetailSpinner;                            // 0x0248(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      CharacterDetailSpinner;                                   // 0x0250(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      AmbientOcclusionQualitySpinner;                           // 0x0258(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      VolumetricFogSpinner;                                     // 0x0260(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      ScreenSpaceReflectionsSpinner;                            // 0x0268(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxDialogBox*                            ApplySettingsDialog;                                      // 0x0270(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x68];                                      // 0x0278(0x0068) MISSED OFFSET
	class UGbxGFxHintWidget*                           PreviousSubmenuHint;                                      // 0x02E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           NextSubmenuHint;                                          // 0x02E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x02F0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxGraphicsOptions");
		return ptr;
	}


	void OnWindowModeChanged(class UGbxGFxListItemSpinner* Item);
	void OnVSyncChanged(class UGbxGFxListItemSpinner* Item);
	void OnVolumetricFogChanged(class UGbxGFxListItemSpinner* Item);
	void OnTextureStreamingChanged(class UGbxGFxListItemSpinner* Item);
	void OnTerrainChanged(class UGbxGFxListItemSpinner* Item);
	void OnSplitScreenConfigChanged(class UGbxGFxListItemSpinner* Item);
	void OnShadowQualityChanged(class UGbxGFxListItemSpinner* Item);
	void OnScreenSpaceReflectionsChanged(class UGbxGFxListItemSpinner* Item);
	void OnSafeAreaSetupPressed(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnResolutionScaleChanged(class UGbxGFxListItemSpinner* Item);
	void OnResolutionDropDownSelectionChanged(class UGbxGFxListItemComboBox* ComboBoxItem, const struct FGbxMenuInputEvent& InputInfo);
	void OnResolutionClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnRefreshRateChanged(class UGbxGFxListItemComboBox* ComboBoxItem, const struct FGbxMenuInputEvent& InputInfo);
	void OnObjectMotionBlurChanged(class UGbxGFxListItemSpinner* Item);
	void OnMonitorDisplayTypeChanged(class UGbxGFxListItemSpinner* Item);
	void OnMaterialQualityChanged(class UGbxGFxListItemSpinner* Item);
	void OnHudScaleMultiplierChanged(class UGbxGFxListItemNumber* Item);
	void OnHDRSetupPressed(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnGraphicsQualityChanged(class UGbxGFxListItemSpinner* Item);
	void OnGraphicsModeTypeChanged(class UGbxGFxListItemSpinner* Item);
	void OnGraphicsAPIChanged(class UGbxGFxListItemSpinner* Item);
	void OnFrameRateLimitCustomChanged(class UGbxGFxListItemNumber* Item);
	void OnFrameRateLimitChanged(class UGbxGFxListItemSpinner* Item);
	void OnFoliageChanged(class UGbxGFxListItemSpinner* Item);
	void OnEnvironmentDetailChanged(class UGbxGFxListItemSpinner* Item);
	void OnDrawDistanceChanged(class UGbxGFxListItemSpinner* Item);
	void OnDisplayPerformanceStatsChanged(class UGbxGFxListItemSpinner* Item);
	void OnConfirmNewSettings(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnCharacterDetailChanged(class UGbxGFxListItemSpinner* Item);
	void OnCASChanged(class UGbxGFxListItemSpinner* Item);
	void OnCameraMotionBlurChanged(class UGbxGFxListItemSpinner* Item);
	void OnBenchmarkTypeChanged(class UGbxGFxListItemSpinner* Item);
	void OnBenchmarkRunClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnBenchmarkResultsDetailsClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnBenchmarkResultPhaseChanged(class UGbxGFxListItemSpinner* Item);
	void OnBenchmarkResultNothingChanged(class UGbxGFxListItemSpinner* Item);
	void OnBenchmarkResultDateTimeChanged(class UGbxGFxListItemSpinner* Item);
	void OnBenchmarkResultDataOutputPathClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnBenchmarkDataOutputChanged(class UGbxGFxListItemSpinner* Item);
	void OnBaseVehicleFOVChanged(class UGbxGFxListItemNumber* Item);
	void OnBaseFOVChanged(class UGbxGFxListItemNumber* Item);
	void OnAspectRatioChanged(class UGbxGFxListItemComboBox* ComboBoxItem, const struct FGbxMenuInputEvent& InputInfo);
	void OnAnisotropicFilteringChanged(class UGbxGFxListItemSpinner* Item);
	void OnAmbientOcclusionQualityChanged(class UGbxGFxListItemSpinner* Item);
	void OnAAChanged(class UGbxGFxListItemSpinner* Item);
};


// Class OakGame.GFxGrenadeIndicatorClip
// 0x00A0 (0x0210 - 0x0170)
class UGFxGrenadeIndicatorClip : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x70];                                      // 0x0170(0x0070) MISSED OFFSET
	float                                              IndicatorSpread;                                          // 0x01E0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              DangerRadiusScalar;                                       // 0x01E4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              GrenadeDangerMinimumRadius;                               // 0x01E8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	EGFxGrenadeIndicatorMode                           IndicatorMode;                                            // 0x01EC(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x01EC(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	TWeakObjectPtr<class AOakProjectile>               TrackedGrenade;                                           // 0x01F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     PlayerLocation;                                           // 0x01F8(0x000C) (Transient, IsPlainOldData)
	struct FRotator                                    PlayerRotation;                                           // 0x0204(0x000C) (Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxGrenadeIndicatorClip");
		return ptr;
	}

};


// Class OakGame.GFxGrenadeIndicatorWidget
// 0x0040 (0x0670 - 0x0630)
class UGFxGrenadeIndicatorWidget : public UGbxGFxHUDWidget
{
public:
	float                                              IndicatorDistanceFromCrosshair;                           // 0x0630(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0634(0x0004) MISSED OFFSET
	class FString                                      IndicatorClass;                                           // 0x0638(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	int                                                MaxTrackedGrenades;                                       // 0x0648(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x064C(0x0004) MISSED OFFSET
	TArray<class UGFxGrenadeIndicatorClip*>            TrackedGrenades;                                          // 0x0650(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FGFxGrenadeIndicatorSortItem>        SortHelper;                                               // 0x0660(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxGrenadeIndicatorWidget");
		return ptr;
	}


	void EndTrackingGrenades();
	void BeginTrackingGrenades();
};


// Class OakGame.GFxGrenadeWidget
// 0x0150 (0x0780 - 0x0630)
class UGFxGrenadeWidget : public UGbxGFxHUDWidget
{
public:
	class UGameResourceData*                           GrenadePool;                                              // 0x0630(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0638(0x0008) MISSED OFFSET
	struct FGameResourcePoolReference                  CachedResourcePoolRef;                                    // 0x0640(0x0018) (BlueprintReadOnly, Transient)
	class FString                                      GrenadeWidgetClipStringID;                                // 0x0658(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      InnerTextClipStringID;                                    // 0x0668(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      InnerTextClipContainerStringID;                           // 0x0678(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      InitializationClipID;                                     // 0x0688(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      GrenadeIcon_SwapIconToReady;                              // 0x0698(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      GrenadeIcon_SwapIconToEmpty;                              // 0x06A8(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      GrenadeIcon_FailedToActivate;                             // 0x06B8(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      GrenadeIcon_EmptyToReady;                                 // 0x06C8(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      GrenadeIcon_ReadyToEmpty;                                 // 0x06D8(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      GrenadeIcon_ValueChanged;                                 // 0x06E8(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      DefaultState_WithGrenades;                                // 0x06F8(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      DefaultState_WithoutGrenades;                             // 0x0708(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      GrenadeIcon_FailedToActivateNoGrenadesLeft;               // 0x0718(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      GrenadeIcon_SetIconToDisbaled;                            // 0x0728(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      TextValueChanged;                                         // 0x0738(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      GrenadeIcon_InitializationAnim;                           // 0x0748(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UGbxGFxObject*                               MainGrenadeClip;                                          // 0x0758(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxGFxObject*                               TextContainer;                                            // 0x0760(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxTextField*                               TextClip;                                                 // 0x0768(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0770(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxGrenadeWidget");
		return ptr;
	}


	void UpdatePoolReferenceHelper();
	void UpdateGrenadeValues(struct FGameResourcePoolReference* ResourcePoolReference);
	void UpdateGrenadeBar(int NewGrenadeCount);
	void SetGrenadePoolReference(struct FGameResourcePoolReference* NewGrenadeResourcePoolReference);
	void OnNewResourcePoolAdded(const struct FGameResourcePoolReference& ResourcePool);
	void OnInventoryEquipHasChanged(class AActor* ChangedActor, class UInventorySlotData* SlotData);
	void OnGrenadeThrowFailed(EGrenadeThrowFailureReason FailureReason);
	void OnGrenadeMinMaxValueUpdate(float MinValue, float MaxValue, struct FGameResourcePoolReference* ResourcePoolReference);
	void OnGrenadeCurrentValueUpdate(float CurrentValue, struct FGameResourcePoolReference* ResourcePoolReference);
	void ClearDelegates(class AOakCharacter* OldCharacter);
};


// Class OakGame.GFxGuardianRankPerkCell
// 0x0060 (0x0370 - 0x0310)
class UGFxGuardianRankPerkCell : public UGbxGFxListCell
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0310(0x0038) MISSED OFFSET
	struct FGuardianRankPerkEntry                      PerkInfo;                                                 // 0x0348(0x0018) (Transient)
	class FString                                      DesiredColorFrame;                                        // 0x0360(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxGuardianRankPerkCell");
		return ptr;
	}


	class FString GetButtonState(class UGbxGFxButton* BUTTON, EGbxFocusableWidgetState State);
};


// Class OakGame.GFxGuardianRankRewardCell
// 0x0030 (0x0340 - 0x0310)
class UGFxGuardianRankRewardCell : public UGbxGFxListCell
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0310(0x0020) MISSED OFFSET
	class UGuardianRankRewardData*                     RewardData;                                               // 0x0330(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0338(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxGuardianRankRewardCell");
		return ptr;
	}

};


// Class OakGame.GFxGuardianRankRewardStatCell
// 0x0030 (0x0340 - 0x0310)
class UGFxGuardianRankRewardStatCell : public UGbxGFxListCell
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0310(0x0028) MISSED OFFSET
	class UGuardianRankRewardData*                     RewardData;                                               // 0x0338(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxGuardianRankRewardStatCell");
		return ptr;
	}

};


// Class OakGame.GFxGuardianRankMenu
// 0x0740 (0x0DF0 - 0x06B0)
class UGFxGuardianRankMenu : public UGFxStatusMenuSubmenu
{
public:
	unsigned char                                      UnknownData00[0x3D0];                                     // 0x06B0(0x03D0) MISSED OFFSET
	class UGbxGFxObject*                               PerkPanel;                                                // 0x0A80(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               InfoPanel;                                                // 0x0A88(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0A90(0x0020) MISSED OFFSET
	class UGbxGFxGridScrollingList*                    InfoPanelRewardStats;                                     // 0x0AB0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          GuardianRankBar;                                          // 0x0AB8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               RedeemTokenButton;                                        // 0x0AC0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    EnforcerStatsList;                                        // 0x0AC8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    SurvivorStatsList;                                        // 0x0AD0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    HunterStatsList;                                          // 0x0AD8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingListPaged*               PerkSlots;                                                // 0x0AE0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x30];                                      // 0x0AE8(0x0030) MISSED OFFSET
	class UGbxGFxProgressBar*                          EnforcerPerksBar;                                         // 0x0B18(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          SurvivorPerksBar;                                         // 0x0B20(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          HunterPerksBar;                                           // 0x0B28(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGuardianRankPerkData*                       CurrentFocusedRankPerk;                                   // 0x0B30(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxGuardianRankPerkCell*                    CurrentFocusedRankCell;                                   // 0x0B38(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x50];                                      // 0x0B40(0x0050) MISSED OFFSET
	class UGFxGuardianRankRewardStatCell*              CurrentlySelectedRewardStatCell;                          // 0x0B90(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FText                                       HintSelect;                                               // 0x0B98(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       HintAccept;                                               // 0x0BB0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       HintCancel;                                               // 0x0BC8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       HintClose;                                                // 0x0BE0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       Branch1String;                                            // 0x0BF8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       Branch2String;                                            // 0x0C10(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       Branch3String;                                            // 0x0C28(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       BonusStatsString;                                         // 0x0C40(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       TokensString;                                             // 0x0C58(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       RankString;                                               // 0x0C70(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       PerkCostString;                                           // 0x0C88(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       GuardianTokenCountString;                                 // 0x0CA0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       RedeemTokenString;                                        // 0x0CB8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ChooseRewardString;                                       // 0x0CD0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       PerkPanelLabelText;                                       // 0x0CE8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       UnlockMenuText;                                           // 0x0D00(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       MenuUnlockedTextString;                                   // 0x0D18(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       MenuLockedString;                                         // 0x0D30(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       MenuLockedDescription;                                    // 0x0D48(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       StatImprovedString;                                       // 0x0D60(0x0028) (Edit, BlueprintReadOnly)
	struct FLinearColor                                EnforcerTextColor;                                        // 0x0D78(0x0010) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                SurvivorTextColor;                                        // 0x0D88(0x0010) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                HunterTextColor;                                          // 0x0D98(0x0010) (Edit, BlueprintReadOnly, IsPlainOldData)
	int                                                ChunksPerPageFullScreen;                                  // 0x0DA8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ChunksPerPageSplitScreen;                                 // 0x0DAC(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UPlayerGuardianRankComponent> CachedGuardianRankComponent;                              // 0x0DB0(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UGuardianRankRewardCategoryData*>     RewardCategories;                                         // 0x0DB8(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	EGFxGuardianRankMenuState                          CurrentMenuState;                                         // 0x0DC8(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x27];                                      // 0x0DC9(0x0027) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxGuardianRankMenu");
		return ptr;
	}


	void OnRewardCellFocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnRewardCellClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnRedeemTokenButtonFocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnRedeemTokenButtonClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnPerkSlotFocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void HandleGuardianTokensAdded(int TokensAdded);
	void HandleGuardianRankPerkEnableChanged(class UGuardianRankPerkData* ChangedPerk, bool bEnabled);
	void HandleGuardianRankChanged(int OldGuardianRank, int NewGuardianRank);
	void HandleGuardianPerksUpdated();
	void HandleGuardianExperienceAdded(int Amount);
	void ExtOnIntroAnimationComplete();
};


// Class OakGame.GFxGunnerSkillScreenTree
// 0x0060 (0x0F70 - 0x0F10)
class UGFxGunnerSkillScreenTree : public UGFxSkillScreenTree
{
public:
	class UGbxTextField*                               HardPointsLabel;                                          // 0x0F10(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ModsLabel;                                                // 0x0F18(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenLoadoutSlot*                  LeftHardPoint;                                            // 0x0F20(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenLoadoutSlot*                  LeftHardPointMod;                                         // 0x0F28(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenLoadoutSlot*                  RightHardPoint;                                           // 0x0F30(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenLoadoutSlot*                  RightHardPointMod;                                        // 0x0F38(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FText                                       HardpointSlotDescription;                                 // 0x0F40(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       AugmentSlotDescription;                                   // 0x0F58(0x0028) (Edit, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxGunnerSkillScreenTree");
		return ptr;
	}

};


// Class OakGame.GFxHDRCalibrationMenu
// 0x01F0 (0x0870 - 0x0680)
class UGFxHDRCalibrationMenu : public UGbxGFxMenu
{
public:
	class UGbxMenuData*                                FrontendMenuData;                                         // 0x0680(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FText                                       HDRToggleTitle;                                           // 0x0688(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       HDRToggleDescription;                                     // 0x06A0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       HDRBrightnessTitle;                                       // 0x06B8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       HDRBrightnessDescription;                                 // 0x06D0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       HDRMenuBrightnessTitle;                                   // 0x06E8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       HDRMenuBrightnessDescription;                             // 0x0700(0x0028) (Edit, BlueprintReadOnly)
	float                                              HDRBrightnessStep;                                        // 0x0718(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HDRBrightnessDefault;                                     // 0x071C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HDRMenuBrightnessDefault;                                 // 0x0720(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0724(0x0004) MISSED OFFSET
	struct FText                                       BrightnessTitle;                                          // 0x0728(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       BrightnessDescription;                                    // 0x0740(0x0028) (Edit, BlueprintReadOnly)
	float                                              BrightnessStep;                                           // 0x0758(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BrightnessDefault;                                        // 0x075C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       BlackLevelTitle;                                          // 0x0760(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       BlackLevelDescription;                                    // 0x0778(0x0028) (Edit, BlueprintReadOnly)
	float                                              BlackLevelStep;                                           // 0x0790(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BlackLevelDefault;                                        // 0x0794(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       GraphicsPreferenceTitle;                                  // 0x0798(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       GraphicsPreferenceDescription;                            // 0x07B0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       SubtitlesTitle;                                           // 0x07C8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       SubtitlesDescription;                                     // 0x07E0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ClosedCaptionsTitle;                                      // 0x07F8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ClosedCaptionsDescription;                                // 0x0810(0x0028) (Edit, BlueprintReadOnly)
	class UGbxTextField*                               TitleText;                                                // 0x0828(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               DescriptionText;                                          // 0x0830(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    OptionList;                                               // 0x0838(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               Background;                                               // 0x0840(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxFrontendMenu*                            CachedFrontendMenu;                                       // 0x0848(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0850(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxHDRCalibrationMenu");
		return ptr;
	}


	void OnSubtitlesSettingFocused(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnSubtitlesSettingChanged(class UGbxGFxListItemSpinner* Item);
	void OnHDROptionChanged(class UGbxGFxListItemSpinner* Item);
	void OnHDROptionButtonFocused(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnHDRMenuBrightnessFocused(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnHDRMenuBrightnessChanged(class UGbxGFxListItemNumber* Item);
	void OnHDRBrightnessFocused(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnHDRBrightnessChanged(class UGbxGFxListItemNumber* Item);
	void OnGraphicsPreferenceFocused(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnGraphicsPreferenceChanged(class UGbxGFxListItemSpinner* Item);
	void OnClosedCaptionsSettingFocused(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnClosedCaptionsSettingChanged(class UGbxGFxListItemSpinner* Item);
	void OnBrightnessFocused(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnBrightnessChanged(class UGbxGFxListItemNumber* Item);
	void OnBlackLevelFocused(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnBlackLevelChanged(class UGbxGFxListItemNumber* Item);
};


// Class OakGame.GFxHealthBar
// 0x00A0 (0x06D0 - 0x0630)
class UGFxHealthBar : public UGbxGFxHUDWidget
{
public:
	class FString                                      NAME_ProgressBarId;                                       // 0x0630(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FName                                       NAME_HealthLowStop;                                       // 0x0640(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       NAME_HealthVeryLowStop;                                   // 0x0648(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Name_HealthLowStart;                                      // 0x0650(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       NAME_HealthVeryLowStart;                                  // 0x0658(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxGFxRechargeableProgressBar*              ProgressBar;                                              // 0x0660(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x48];                                      // 0x0668(0x0048) MISSED OFFSET
	TScriptInterface<class UHealthBarInfoProviderInterface> CurrentHealthBarProvider;                                 // 0x06B0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              CachedHealthPercent;                                      // 0x06C0(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CachedHealthCurrentValue;                                 // 0x06C4(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x06C8(0x0004) MISSED OFFSET
	EHealthTypeState                                   CachedHealthTypeState;                                    // 0x06CC(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EGameResourcePoolState                             CachedResourcePoolState;                                  // 0x06CD(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x06CE(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxHealthBar");
		return ptr;
	}


	void OnInjured();
	void OnHealthVeryLow();
	void OnHealthRegenerating();
	void OnHealthNormal();
	void OnHealthLow();
	void OnHealthFull();
	void OnDeath();
};


// Class OakGame.GFxHUDInitializationMovie
// 0x00E0 (0x0760 - 0x0680)
class UGFxHUDInitializationMovie : public UGbxGFxMenu
{
public:
	struct FText                                       DefaultBootText;                                          // 0x0680(0x0028) (Edit, BlueprintReadOnly)
	class FString                                      HealthBarDisplayName;                                     // 0x0698(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      XPBarDisplayName;                                         // 0x06A8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      MinimapDisplayName;                                       // 0x06B8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      MissionTrackerDisplayName;                                // 0x06C8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      AmmoBarDisplayName;                                       // 0x06D8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      ShieldBarDisplayName;                                     // 0x06E8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      GrenadeBarDisplayName;                                    // 0x06F8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      DefaultWidgetDisplayName;                                 // 0x0708(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class UGbxGFxObject*                               InitializationAnims;                                      // 0x0718(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               InitializationText;                                       // 0x0720(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               WidgetLabel;                                              // 0x0728(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      QueuedInitAnim;                                           // 0x0730(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	EHUDInitAnimWidgetTarget                           QueuedWidgetTarget;                                       // 0x0740(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1F];                                      // 0x0741(0x001F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxHUDInitializationMovie");
		return ptr;
	}


	void extInitAnimationTrigger();
	void extInitAnimationComplete();
};


// Class OakGame.GFxInteractionPrompt
// 0x00A0 (0x06D0 - 0x0630)
class UGFxInteractionPrompt : public UGbxGFxHUDWidget
{
public:
	class UGbxGFxHintWidget*                           HintWidgetPrimary;                                        // 0x0630(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               InteractionLabelPrimary;                                  // 0x0638(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxGFxObject*                               ModeIconsPrimary;                                         // 0x0640(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           HintWidgetSecondary;                                      // 0x0648(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               InteractionLabelSecondary;                                // 0x0650(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxGFxObject*                               ModeIconsSecondary;                                       // 0x0658(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector2D                                   DefaultGlyphSize;                                         // 0x0660(0x0008) (Edit, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	class UUseComponent*                               UseComponent;                                             // 0x0668(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UUsableComponent*                            CachedUsableComponent;                                    // 0x0670(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FUsabilityInfo                              CachedUsabilityInfo;                                      // 0x0678(0x0040) (BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x06B8(0x0008) MISSED OFFSET
	class UInventoryListComponent*                     CachedInventoryList;                                      // 0x06C0(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	EPromptLinesLayouts                                LinesLayout;                                              // 0x06C8(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x06C9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxInteractionPrompt");
		return ptr;
	}


	void UpdateUsabilityTextColor();
	void OnUsedSecondaryHold(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	void OnUsedSecondary(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	void OnUsedPrimaryHold(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	void OnUsedPrimary(class AController* UserController, class UPrimitiveComponent* UsedComponent);
	void OnUsabilityChanged(class UUsableComponent* NewUsableComponent, const struct FUsabilityInfo& InUsabilityInfo);
	void OnRevivingStop(bool IsHealed);
	void OnRevivingStart();
	void OnInputDeviceChanged();
	void OnHoldUseStopped();
	void OnCurrentUsableChanged(class UUsableComponent* NewUsableComponent, const struct FUsabilityInfo& InUsabilityInfo, const struct FVector& NewUsableComponentImpactPoint, float NewUsableComponentDistanceAway);
	void OnCurrencyQuantityChanged(const struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int Quantity, int MaxQuantity);
};


// Class OakGame.GFxInventoryFeedbackWidget
// 0x0090 (0x0200 - 0x0170)
class UGFxInventoryFeedbackWidget : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                               AnimUnlockedClip;                                         // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x48];                                      // 0x0178(0x0048) MISSED OFFSET
	class UGbxGFxObject*                               AnimDroppedClip;                                          // 0x01C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x38];                                      // 0x01C8(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxInventoryFeedbackWidget");
		return ptr;
	}

};


// Class OakGame.GFxInventoryMenuAmmoWidget
// 0x00F0 (0x0260 - 0x0170)
class UGFxInventoryMenuAmmoWidget : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0xF0];                                      // 0x0170(0x00F0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxInventoryMenuAmmoWidget");
		return ptr;
	}

};


// Class OakGame.GFxStatusMenuSubmenuData
// 0x0058 (0x0118 - 0x00C0)
class UGFxStatusMenuSubmenuData : public UOakGFxMenuData
{
public:
	class FString                                      IconFrameString;                                          // 0x00C0(0x0010) (Edit, ZeroConstructor)
	struct FText                                       StatusMenuSubMenuName;                                    // 0x00D0(0x0028) (Edit, DisableEditOnInstance)
	struct FName                                       EchoDeviceMenuName;                                       // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       EchoDeviceIdleScreenName;                                 // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       StandInConfigName;                                        // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bWantsBackgroundEffect;                                   // 0x0100(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEnabledInGearUpMode;                                     // 0x0101(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0102(0x0006) MISSED OFFSET
	struct FName                                       MenuID;                                                   // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MenuPriority;                                             // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0114(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxStatusMenuSubmenuData");
		return ptr;
	}

};


// Class OakGame.GFxInventoryMenuData
// 0x0000 (0x0118 - 0x0118)
class UGFxInventoryMenuData : public UGFxStatusMenuSubmenuData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxInventoryMenuData");
		return ptr;
	}

};


// Class OakGame.GFxInventoryMenuDragObject
// 0x0010 (0x0180 - 0x0170)
class UGFxInventoryMenuDragObject : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0170(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxInventoryMenuDragObject");
		return ptr;
	}

};


// Class OakGame.GFxInventoryMenu
// 0x0910 (0x0FC0 - 0x06B0)
class UGFxInventoryMenu : public UGFxStatusMenuSubmenu
{
public:
	struct FGFxInventoryMenuConfig                     Config;                                                   // 0x06B0(0x0298) (Edit, BlueprintReadOnly)
	TArray<struct FGFxInventoryMenuUnlockLookupItem>   ManufacturerToUnlockTextLookupTable;                      // 0x0948(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FVector2D                                   BackpackCellSizeTwoColumn;                                // 0x0958(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   BackpackCellSpacingTwoColumn;                             // 0x0960(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   BackpackCellSizeOneColumn;                                // 0x0968(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   BackpackCellSpacingOneColumn;                             // 0x0970(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FText                                       AmmoLabelText;                                            // 0x0978(0x0028) (Edit, BlueprintReadOnly)
	TSoftObjectPtr<class UGbxInputRebindCategory>      KeyBindCategory_Common;                                   // 0x0990(0x0028) (Edit, BlueprintReadOnly)
	float                                              MaxDelayTimeToLoadThumbnails;                             // 0x09B8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x09BC(0x0004) MISSED OFFSET
	struct FGFxInventoryMenuSwapItem                   ItemSwapSource;                                           // 0x09C0(0x0014) (BlueprintReadOnly, Transient)
	TWeakObjectPtr<class UGFxInventoryItemWidget>      LastFocusedPaperDollWidget;                               // 0x09D4(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x09DC(0x0004) MISSED OFFSET
	class UGbxGFxDragDropManager*                      DragDropManager;                                          // 0x09E0(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x09E8(0x0010) MISSED OFFSET
	int                                                InventoryEventDisabledCount;                              // 0x09F8(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x09FC(0x0004) MISSED OFFSET
	TArray<struct FGFxInventoryMenuEquipToSlot>        PaperDollSlots;                                           // 0x0A00(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UGFxInventoryMenuTrinketButton*              EquippingToTrinketButton;                                 // 0x0A10(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CurrentFilterIndex;                                       // 0x0A18(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UInventoryCategoryData>       CurrentFilterCategory;                                    // 0x0A1C(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UInventorySlotData>           CurrentFilterSlotData;                                    // 0x0A24(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0A2C(0x0004) MISSED OFFSET
	TArray<struct FOakInventoryMenuFilter>             CurrentFilters;                                           // 0x0A30(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UOakThumbnailManager*                        IconManager;                                              // 0x0A40(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakThumbnailManager*                        TrinketThumbnailManager;                                  // 0x0A48(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLoadedItemCardBase*                      LeftItemCard;                                             // 0x0A50(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLoadedItemCardBase*                      RightItemCard;                                            // 0x0A58(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGFxInventoryItemWidget>      LeftItemCardTargetWidget;                                 // 0x0A60(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGFxInventoryItemWidget>      RightItemCardTargetWidget;                                // 0x0A68(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxInventoryFeedbackWidget*                 PaperDollFeedbackWidget;                                  // 0x0A70(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxInventoryFeedbackWidget*                 BackpackFeedbackWidget;                                   // 0x0A78(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FGFxBackpackWidget                          LargeBackpackWidget;                                      // 0x0A80(0x0198) (BlueprintReadOnly, Transient)
	struct FGFxBackpackWidget                          SmallBackpackWidget;                                      // 0x0C18(0x0198) (BlueprintReadOnly, Transient)
	class UGbxGFxButton*                               BackpackBrowseButton;                                     // 0x0DB0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               BackpackClip;                                             // 0x0DB8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x30];                                      // 0x0DC0(0x0030) MISSED OFFSET
	class UGbxGFxHintWidget*                           BackpackNextHintClip;                                     // 0x0DF0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           BackpackPrevHintClip;                                     // 0x0DF8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               EquippedSlotsClip;                                        // 0x0E00(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               SplitScreenPaperDollPageUpButton;                         // 0x0E08(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               SplitScreenPaperDollPageDownButton;                       // 0x0E10(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               SplitScreenPaperDollPageBackground;                       // 0x0E18(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxTutorialWidget*                          TutorialWidget;                                           // 0x0E20(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxInventoryMenuDragObject*                 DragInventoryItem;                                        // 0x0E28(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EGFxInventoryMenuFocusSide                         FocusSide;                                                // 0x0E30(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EGFxInventoryMenuBackpackSize                      BackpackSize;                                             // 0x0E31(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsInspecting;                                            // 0x0E32(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsBeastmaster;                                           // 0x0E33(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bHasExtraArtifacts;                                       // 0x0E34(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bStandInHasBeenShown;                                     // 0x0E35(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x0E36(0x0002) MISSED OFFSET
	TArray<class UWeaponTrinketPartData*>              UnlockedTrinkets;                                         // 0x0E38(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FInventoryListEntryHandle>           CurrentInventory;                                         // 0x0E48(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData07[0x28];                                      // 0x0E58(0x0028) MISSED OFFSET
	int                                                CurrentInventoryMaxSize;                                  // 0x0E80(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                UnequipToTargetIndex;                                     // 0x0E84(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                PaperDollElementalIndex;                                  // 0x0E88(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                BackpackElementalIndex;                                   // 0x0E8C(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bBackpackIsTrinkets;                                      // 0x0E90(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x77];                                      // 0x0E91(0x0077) MISSED OFFSET
	class UGbxTextField*                               HeaderTextClip;                                           // 0x0F08(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxCurrencyCounterClip*                     CashCounterClip;                                          // 0x0F10(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0xA8];                                      // 0x0F18(0x00A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxInventoryMenu");
		return ptr;
	}


	void OnTrinketUnequipped(class UWeaponTrinketPartData* Trinket, class UInventorySlotData* SlotData);
	void OnTrinketEquipped(class UWeaponTrinketPartData* Trinket, class UInventorySlotData* SlotData);
	void OnThumbnailLoaded();
	void OnSplitScreenPaperDollPageButtonClicked(class UGbxGFxButton* UserWidget, const struct FGbxMenuInputEvent& InputInfo);
	void OnRefreshEverything();
	void OnPaperDollTrinketClicked(class UGbxGFxButton* Widget, const struct FGbxMenuInputEvent& InputInfo);
	void OnPaperDollSlotPressed(class UGbxGFxButton* Widget, const struct FGbxMenuInputEvent& InputInfo);
	void OnPaperDollSlotClicked(class UGbxGFxButton* Widget, const struct FGbxMenuInputEvent& InputInfo);
	void OnPaperDollItemCardReady();
	void OnPaperDollarItemCardElementalUpdated(const class FString& NewElementalFrameName);
	void OnInventoryQuantityChanged(const struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int Quantity, int MaxQuantity);
	void OnInventoryItemUpdated(const struct FInventoryListEntryHandle& ItemHandle);
	void OnInventoryItemUnequipped(class AActor* ChangedActor, class UInventorySlotData* SlotData);
	void OnInventoryItemRemoved(const struct FInventoryListEntryHandle& ItemHandle);
	void OnInventoryItemEquipped(class AActor* ChangedActor, class UInventorySlotData* SlotData);
	void OnInventoryItemAdded(const struct FInventoryListEntryHandle& ItemHandle);
	void OnInventoryCustomizationUnlocked(class UOakInventoryCustomizationPartData* CustomizationPart);
	void OnCurrentWeaponChanged(class AWeapon* EquippedWeapon, class AWeapon* LastWeapon);
	void OnCurrentWeaponAmmoCountChanged();
	void OnBrowseBackpackButtonClicked(class UGbxGFxButton* UserWidget, const struct FGbxMenuInputEvent& InputInfo);
	void OnBackpackSelectionChanged(const struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget);
	void OnBackpackItemPressed(const struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget, const struct FGbxMenuInputEvent& InputInfo);
	void OnBackpackItemClicked(const struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget, const struct FGbxMenuInputEvent& InputInfo);
	void OnBackpackItemCardReady();
	void OnBackpackItemCardElementalUpdated(const class FString& NewElementalFrameName);
};


// Class OakGame.GFxInventoryMenuTrinketButton
// 0x0060 (0x0330 - 0x02D0)
class UGFxInventoryMenuTrinketButton : public UGbxGFxButton
{
public:
	unsigned char                                      UnknownData00[0x58];                                      // 0x02D0(0x0058) MISSED OFFSET
	bool                                               bIsEquippingToThis;                                       // 0x0328(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0329(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxInventoryMenuTrinketButton");
		return ptr;
	}

};


// Class OakGame.GFxInWorldIcon
// 0x00E0 (0x0250 - 0x0170)
class UGFxInWorldIcon : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0170(0x0010) MISSED OFFSET
	int                                                Stacks;                                                   // 0x0180(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0184(0x000C) MISSED OFFSET
	struct FVector2D                                   CurrentLocation;                                          // 0x0190(0x0008) (Transient, IsPlainOldData)
	struct FVector2D                                   TransitionStartingLocation;                               // 0x0198(0x0008) (Transient, IsPlainOldData)
	struct FVector2D                                   SmoothTransitionStart;                                    // 0x01A0(0x0008) (Transient, IsPlainOldData)
	class UInWorldIconData*                            IconData;                                                 // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       TargetSocketName;                                         // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     TargetLocation;                                           // 0x01B8(0x000C) (Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x01C4(0x0008) MISSED OFFSET
	struct FGuid                                       TargetGuid;                                               // 0x01CC(0x0010) (Transient, IsPlainOldData)
	EGFxInWorldIconClampUpdate                         LastClampUpdateType;                                      // 0x01DC(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x73];                                      // 0x01DD(0x0073) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxInWorldIcon");
		return ptr;
	}


	void SetTargetRadius(float InRadius);
	void SetTargetLocationOffset(const struct FVector& InLocationOffset);
	void SetTargetLocationComponent(class USceneComponent* InTargetLocationComponent);
	void SetTargetActor(class AActor* InTarget);
	void SetLifeTimer(float LifeTime);
	void SetIconData(class UInWorldIconData* InIconData);
	void OnNumberOfStacksChanged(int NewStacksNumber);
	bool IsForTarget(const struct FHUDInWorldIconTargetInfo& Target);
	bool HasValidTarget();
	bool HasLifeTimeExpired();
	float GetTargetRadius();
	struct FVector GetTargetLocationOffset();
	class USceneComponent* GetTargetLocationComponent();
	struct FVector GetTargetLocation();
	class AActor* GetTargetActor();
	class UInWorldIconData* GetIconData();
};


// Class OakGame.GFxInWorldIconContainer
// 0x02A0 (0x08D0 - 0x0630)
class UGFxInWorldIconContainer : public UGbxGFxHUDWidget
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0630(0x0020) MISSED OFFSET
	class UInWorldIconData*                            OverheadNameplateIconData;                                // 0x0650(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInWorldIconData*                            CustomWaypointIconData;                                   // 0x0658(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SplitscreenOffset;                                        // 0x0660(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinSplitscreenYValue;                                     // 0x0664(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxTopPlayerSplitscreenYValue;                            // 0x0668(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              IconSnapThreshold;                                        // 0x066C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SmoothTransitionDuration;                                 // 0x0670(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NextIconInstId;                                           // 0x0674(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FTimerHandle                                TimerHandle_RegisterNameplates;                           // 0x0678(0x0008) (BlueprintReadOnly)
	class UGbxGFxObject*                               ContainerObject;                                          // 0x0680(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector2D                                   ContainerSize;                                            // 0x0688(0x0008) (BlueprintReadOnly, Transient, IsPlainOldData)
	struct FVector2D                                   ContainerOrigin;                                          // 0x0690(0x0008) (BlueprintReadOnly, Transient, IsPlainOldData)
	struct FHUDInWorldIconTargetInfo                   CurrentPetTargetInfo;                                     // 0x0698(0x0058) (BlueprintReadOnly, Transient)
	float                                              RangeCutoff;                                              // 0x06F0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   ContainerOriginStandard;                                  // 0x06F4(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   ContainerOriginSplit;                                     // 0x06FC(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	float                                              MaxTransitionToMapTime;                                   // 0x0704(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UGFxInWorldIcon*>                     ActiveIcons;                                              // 0x0708(0x0010) (BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0718(0x0030) MISSED OFFSET
	class UGFxOverheadNameplate*                       PetNameplate;                                             // 0x0748(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bNeedRefreshTrackedMissionIcons;                          // 0x0750(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x17F];                                     // 0x0751(0x017F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxInWorldIconContainer");
		return ptr;
	}


	void UnregisterTarget(const struct FHUDInWorldIconTargetInfo& TargetInfo);
	void RegisterTarget(const struct FHUDInWorldIconTargetInfo& TargetInfo);
	void OnRemovePlayerAlert(const struct FUniqueNetIdRepl& Instigator);
	void OnPrimaryCharacterChanged(class AGbxCharacter* NewPrimaryCharacter);
	void OnPetRenamed(const struct FText& NewName);
	void OnIconRemoved(class UGFxInWorldIcon* Icon);
	void OnIconAdded(class UGFxInWorldIcon* Icon);
	void OnCreatePlayerAlert(const struct FUniqueNetIdRepl& Instigator, class AActor* Actor, const struct FVector& AlertLocation, class UPlayerAlertData* AlertData);
	void AddNewNameplateForPlayerState(class AOakPlayerState* NewPlayerState);
};


// Class OakGame.GFxIronbearDurationWidget
// 0x0040 (0x0670 - 0x0630)
class UGFxIronbearDurationWidget : public UGbxGFxHUDWidget
{
public:
	float                                              WarningFlourishThreshold;                                 // 0x0630(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HardPointDeltaEpsilon;                                    // 0x0634(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UOakActionAbility_IronBear*                  IronBearAbility;                                          // 0x0638(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          DurationBar;                                              // 0x0640(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               FuelAnimWrapper;                                          // 0x0648(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               FuelLabel;                                                // 0x0650(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               BorderAnimWrapper;                                        // 0x0658(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0660(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxIronbearDurationWidget");
		return ptr;
	}

};


// Class OakGame.GFxIronbearEjectWidget
// 0x0010 (0x0640 - 0x0630)
class UGFxIronbearEjectWidget : public UGbxGFxHUDWidget
{
public:
	class UGbxTextField*                               ExitButtonText;                                           // 0x0630(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0638(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxIronbearEjectWidget");
		return ptr;
	}


	void OnInputTypeChanged();
};


// Class OakGame.GFxIronbearExitAnimationWidget
// 0x0030 (0x0660 - 0x0630)
class UGFxIronbearExitAnimationWidget : public UGbxGFxHUDWidget
{
public:
	class UGbxGFxHintWidget*                           ExitHintWidget;                                           // 0x0630(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               EjectHintTextField;                                       // 0x0638(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FText                                       EjectHintText;                                            // 0x0640(0x0028) (Edit, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0658(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxIronbearExitAnimationWidget");
		return ptr;
	}


	void SetHoldPromptPercentage(float NewPecentage);
	void OnInputDeviceChanged();
	void OnExitStarted();
	void OnExitCanceled();
};


// Class OakGame.GFxIronbearWeaponWidget
// 0x0060 (0x01D0 - 0x0170)
class UGFxIronbearWeaponWidget : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                               ActionIcon;                                               // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AOakWeapon_IronBearHardPoint*                CachedWeapon;                                             // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UWeaponAmmoComponent*                        CachedAmmoComponent;                                      // 0x0180(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGbxTextField*                               KeyBindingTextfield;                                      // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AOakPlayerController*                        CachedPlayerController;                                   // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          ProgressBar;                                              // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ElementalIcon;                                            // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ElementalIconBG;                                          // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               BarTextField;                                             // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxIronBearHUDWidgetContainer*              HUDContainer;                                             // 0x01B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakActionAbilityAugmentData_IronBear*       AugmentData;                                              // 0x01C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x01C8(0x0001) MISSED OFFSET
	EIronBearHardPointOrientation                      CachedBindingOrientation;                                 // 0x01C9(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x01CA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxIronbearWeaponWidget");
		return ptr;
	}


	void UpdateProgressbar(float Amount);
	void OnInputDeviceChanged();
	void HardpointUseStop();
	void HardpointUsed();
};


// Class OakGame.GFxIronbearFist
// 0x0020 (0x01F0 - 0x01D0)
class UGFxIronbearFist : public UGFxIronbearWeaponWidget
{
public:
	class AOakWeapon_IronBearHardPoint*                CachedEquippedWeapon;                                     // 0x01D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               RechargingClip;                                           // 0x01D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               BracketAnim;                                              // 0x01E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               AnimateBar;                                               // 0x01E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxIronbearFist");
		return ptr;
	}


	void UpdateFistElementalIcon(class UGbxDamageType* NewDamageType);
	void SetFistReadyState(bool ReadyState);
};


// Class OakGame.GFxIronBearHUDWidgetContainer
// 0x0340 (0x0970 - 0x0630)
class UGFxIronBearHUDWidgetContainer : public UGbxGFxHUDWidget
{
public:
	struct FUIHardpointData                            HardPointFramesTable[0x7];                                // 0x0630(0x0070) (Edit, BlueprintReadOnly)
	TArray<class UGFxIronbearWeaponWidget*>            WidgetsToTick;                                            // 0x0940(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      IronbearLeftWidgetID;                                     // 0x0950(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      IronbearRightWidgetID;                                    // 0x0960(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxIronBearHUDWidgetContainer");
		return ptr;
	}

};


// Class OakGame.GFxIronbearMinigun
// 0x0010 (0x01E0 - 0x01D0)
class UGFxIronbearMinigun : public UGFxIronbearWeaponWidget
{
public:
	class UGbxGFxObject*                               OverheatAnimation;                                        // 0x01D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UWeaponHeatComponent*                        CachedHeatComponent;                                      // 0x01D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxIronbearMinigun");
		return ptr;
	}

};


// Class OakGame.GFxIronBearRechargeWeaponWidget
// 0x0040 (0x0210 - 0x01D0)
class UGFxIronBearRechargeWeaponWidget : public UGFxIronbearWeaponWidget
{
public:
	class UGbxGFxObject*                               OverheatClip;                                             // 0x01D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               TypeIconClip;                                             // 0x01D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UWeaponChargeComponent>       ChargeComponent;                                          // 0x01E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UWeaponFireProjectileComponent> FireProjectileComponent;                                  // 0x01E8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UWeaponReloadComponent>       ReloadComponent;                                          // 0x01F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              ReloadTime;                                               // 0x01F8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ReloadTimeProgress;                                       // 0x01FC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsReloading;                                             // 0x0200(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0201(0x0003) MISSED OFFSET
	float                                              ProgressBarOverchagePctBegin;                             // 0x0204(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0208(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxIronBearRechargeWeaponWidget");
		return ptr;
	}


	void OnReloadStarted(bool bAutoReload);
	void OnReloadEnded(bool bCompleted);
	void AmmoChanged();
};


// Class OakGame.GFxIronbearWidgetGrenadeLauncher
// 0x0030 (0x0200 - 0x01D0)
class UGFxIronbearWidgetGrenadeLauncher : public UGFxIronbearWeaponWidget
{
public:
	class UGbxTextField*                               RemainingAmmoText;                                        // 0x01D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ReloadAnimation;                                          // 0x01D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      RemainingAmmoTextID;                                      // 0x01E0(0x0010) (Edit, ZeroConstructor)
	class FString                                      ReloadAnimationID;                                        // 0x01F0(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxIronbearWidgetGrenadeLauncher");
		return ptr;
	}

};


// Class OakGame.GFxItemCard
// 0x0600 (0x0C30 - 0x0630)
class UGFxItemCard : public UGbxGFxHUDWidget
{
public:
	float                                              UpdateElementalInfoTime;                                  // 0x0630(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0634(0x0004) MISSED OFFSET
	struct FTimerHandle                                ElementalTimerHandle;                                     // 0x0638(0x0008) (BlueprintReadOnly, Transient)
	struct FGFxItemCardObject                          ItemCardObject;                                           // 0x0640(0x0538) (Edit, BlueprintReadOnly)
	float                                              HideSmallIconDistance;                                    // 0x0B78(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ShowSmallIconDistance;                                    // 0x0B7C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HideItemCardDistance;                                     // 0x0B80(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ShowItemCardDistance;                                     // 0x0B84(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BeamAlignmentOffset;                                      // 0x0B88(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ItemCardHeightPivotOffsetFactor;                          // 0x0B8C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SplitscreenOffset;                                        // 0x0B90(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CalibrationResolutionX;                                   // 0x0B94(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CalibrationResolutionY;                                   // 0x0B98(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   VerticalSplitScreenMinItemCardOffset;                     // 0x0B9C(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   VerticalSplitScreenMaxItemCardOffset;                     // 0x0BA4(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   QuadSplitScreenMinItemCardOffset;                         // 0x0BAC(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   QuadSplitScreenMaxItemCardOffset;                         // 0x0BB4(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0BBC(0x0004) MISSED OFFSET
	class UCurveFloat*                                 DistanceScaleCurve;                                       // 0x0BC0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CachedItemPosition;                                       // 0x0BC8(0x000C) (BlueprintReadOnly, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0BD4(0x000C) MISSED OFFSET
	struct FVector2D                                   LocationScreenSpace;                                      // 0x0BE0(0x0008) (BlueprintReadOnly, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0BE8(0x0008) MISSED OFFSET
	struct FTransform                                  OriginalRootDisplayTransform;                             // 0x0BF0(0x0030) (BlueprintReadOnly, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0C20(0x0004) MISSED OFFSET
	float                                              TimeUntilOutro;                                           // 0x0C24(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0C28(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxItemCard");
		return ptr;
	}


	void OnWeaponChanged(class AWeapon* Weapon, class AWeapon* LastWeapon);
	void OnPawnChanged(class APawn* Pawn, class APawn* OldPawn);
	bool IsDisplayed();
	void extFinishedTransition();
	void extFinishedHide();
};


// Class OakGame.GFxItemCardAbbreviated
// 0x01F0 (0x0820 - 0x0630)
class UGFxItemCardAbbreviated : public UGbxGFxHUDWidget
{
public:
	struct FGFxItemCardAbbreviatedObject               ItemCardObject;                                           // 0x0630(0x01D8) (Edit, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0808(0x0004) MISSED OFFSET
	float                                              TimeUntilOutro;                                           // 0x080C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FTimerHandle                                TimerHandle;                                              // 0x0810(0x0008) (BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0818(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxItemCardAbbreviated");
		return ptr;
	}


	void OnWeaponChanged(class AWeapon* Weapon, class AWeapon* LastWeapon);
	void OnPawnChanged(class APawn* Pawn, class APawn* OldPawn);
	void OnEndCompareToEquippedItem();
	void OnCompareToEquippedItem(class UOakInventoryBalanceStateComponent* HeldItem, class UOakInventoryBalanceStateComponent* OtherItem);
	bool IsDisplayed();
	void HideAfterDelay();
};


// Class OakGame.GFxItemCardMainStat
// 0x0070 (0x01E0 - 0x0170)
class UGFxItemCardMainStat : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0170(0x0060) MISSED OFFSET
	class FString                                      PreviousRarityFrame;                                      // 0x01D0(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxItemCardMainStat");
		return ptr;
	}

};


// Class OakGame.GFxItemCardArtifactLine
// 0x0050 (0x01C0 - 0x0170)
class UGFxItemCardArtifactLine : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0170(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxItemCardArtifactLine");
		return ptr;
	}

};


// Class OakGame.GFxItemCardSkillEntry
// 0x0070 (0x01E0 - 0x0170)
class UGFxItemCardSkillEntry : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0170(0x0010) MISSED OFFSET
	class UGbxGFxObject*                               SkillIconContainer;                                       // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               SkillIcon;                                                // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0190(0x0030) MISSED OFFSET
	class FString                                      IconKeyframe;                                             // 0x01C0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x10];                                      // 0x01D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxItemCardSkillEntry");
		return ptr;
	}

};


// Class OakGame.GFxLoadedItemCardBase
// 0x0010 (0x01B0 - 0x01A0)
class UGFxLoadedItemCardBase : public UGbxGFxMovieLoader
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01A0(0x0008) MISSED OFFSET
	bool                                               bHasBeenLoaded;                                           // 0x01A8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x01A9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLoadedItemCardBase");
		return ptr;
	}

};


// Class OakGame.GFxLoadedItemCardAbbreviated
// 0x01E0 (0x0390 - 0x01B0)
class UGFxLoadedItemCardAbbreviated : public UGFxLoadedItemCardBase
{
public:
	struct FGFxItemCardAbbreviatedObject               ItemCardObject;                                           // 0x01B0(0x01D8) (Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0388(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLoadedItemCardAbbreviated");
		return ptr;
	}


	void OnItemCardLoadComplete(class UGbxGFxMovieLoader* MovieLoader);
};


// Class OakGame.GFxLoadedItemCard
// 0x0540 (0x06F0 - 0x01B0)
class UGFxLoadedItemCard : public UGFxLoadedItemCardBase
{
public:
	struct FGFxItemCardObject                          ItemCardObject;                                           // 0x01B0(0x0538) (Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x06E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLoadedItemCard");
		return ptr;
	}


	void OnItemCardLoadComplete(class UGbxGFxMovieLoader* MovieLoader);
};


// Class OakGame.GFxItemInspectionMenu
// 0x0B90 (0x1210 - 0x0680)
class UGFxItemInspectionMenu : public UGbxGFxMenu
{
public:
	class USwfMovie*                                   ItemCardMovie;                                            // 0x0680(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       DefaultSkinNameText;                                      // 0x0688(0x0028) (Edit, BlueprintReadOnly)
	TArray<struct FGFxItemInspectionPageData>          PageDatas;                                                // 0x06A0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class UClass*                                      ItemInspectionContainerClass;                             // 0x06B0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FGFxItemInspectionCategoryInfo>      CategoryInfos;                                            // 0x06B8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	int                                                MaxPrimaryStatsDisplayed;                                 // 0x06C8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxSecondaryStatsDisplayed;                               // 0x06CC(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGFxItemInspectionInspectPage               InspectPage;                                              // 0x06D0(0x0090) (Edit, BlueprintReadOnly)
	struct FGFxItemInspectionManufacturerPage          ManufacturerPage;                                         // 0x0760(0x0120) (Edit, BlueprintReadOnly)
	struct FGFxItemInspectionElementalPage             ElementalPage;                                            // 0x0880(0x0218) (Edit, BlueprintReadOnly)
	struct FGFxItemInspectionPartsPage                 PartsPage;                                                // 0x0A98(0x01B0) (Edit, BlueprintReadOnly)
	struct FGFxItemInspectionSkinsPage                 SkinsPage;                                                // 0x0C48(0x0180) (Edit, BlueprintReadOnly)
	class FString                                      ItemScoreTextHTMLColor;                                   // 0x0DC8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	float                                              ItemStatBaseSize;                                         // 0x0DD8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ItemStatMainSateSpacing;                                  // 0x0DDC(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ItemStatSecondaryStatsSpacing;                            // 0x0DE0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ItemPartInspectionOutlineColor;                           // 0x0DE4(0x0010) (Edit, BlueprintReadOnly, IsPlainOldData)
	float                                              ItemPartInspectionFocusInterpolationRate;                 // 0x0DF4(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FItemInspectionSelectedPartData             PartInspectionSelectedPartData;                           // 0x0DF8(0x0008) (Edit, BlueprintReadOnly)
	struct FLinearColor                                PartLineColor;                                            // 0x0E00(0x0010) (Edit, BlueprintReadOnly, IsPlainOldData)
	float                                              PartLineThickness;                                        // 0x0E10(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0E14(0x0004) MISSED OFFSET
	TMap<struct FName, class FString>                  ItemTypeEnumToIconFrame;                                  // 0x0E18(0x0050) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FGFXItemInspectionPartEnumTable             PartEnumTable;                                            // 0x0E68(0x0010) (Edit, BlueprintReadOnly)
	class UGbxMenuData*                                FullScreenMovieMenuData;                                  // 0x0E78(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TSoftObjectPtr<class UTexture>                     NoSkinTexture;                                            // 0x0E80(0x0028) (Edit, BlueprintReadOnly)
	TSoftObjectPtr<class UClass>                       EridianFabricatorClass;                                   // 0x0EA8(0x0028) (Edit, BlueprintReadOnly)
	TArray<class UUIStatData_Attribute*>               PartInspectionStats;                                      // 0x0ED0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<EGFxItemInspectionPages>                    AvailablePages;                                           // 0x0EE0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	bool                                               bMenuHasStarted;                                          // 0x0EF0(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bHasSetInspectionItem;                                    // 0x0EF1(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bItemCardReady;                                           // 0x0EF2(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0EF3(0x0005) MISSED OFFSET
	class UGbxGFxObject*                               ContentClip;                                              // 0x0EF8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLoadedItemCard*                          ItemCard;                                                 // 0x0F00(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MouseDragArea;                                            // 0x0F08(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               NavAnimClip;                                              // 0x0F10(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxMenuSwitcherNavWidget*                NavBarClip;                                               // 0x0F18(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AOakUIActorContainer*                        ItemInspectionContainer;                                  // 0x0F20(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       ItemInspectionActor;                                      // 0x0F28(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0xF0];                                      // 0x0F30(0x00F0) MISSED OFFSET
	struct FTransform                                  BaseTransform;                                            // 0x1020(0x0030) (BlueprintReadOnly, Transient, IsPlainOldData)
	TWeakObjectPtr<class UInventoryCategoryData>       SourceCategory;                                           // 0x1050(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FInventoryListEntryHandle                   InspectionSourceItemHandle;                               // 0x1058(0x0004) (BlueprintReadOnly, Transient)
	TWeakObjectPtr<class UInventoryListComponent>      InspectionSourceInventoryList;                            // 0x105C(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       InspectionSourceActor;                                    // 0x1064(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UInventoryBalanceStateComponent> InspectionSourceBalanceComponent;                         // 0x106C(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x1074(0x0004) MISSED OFFSET
	TArray<class UInventoryPartData*>                  InspectionPartList;                                       // 0x1078(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TWeakObjectPtr<class UInventoryPartData>           SelectedPart;                                             // 0x1088(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FGFxItemInspectionLocator                   PreviewLocator;                                           // 0x1090(0x0120) (Edit, BlueprintReadOnly)
	int                                                CurrentPageIndex;                                         // 0x11B0(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0xC];                                       // 0x11B4(0x000C) MISSED OFFSET
	bool                                               bIsInSkins;                                               // 0x11C0(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x11C1(0x0003) MISSED OFFSET
	struct FVector2D                                   LastMousePos;                                             // 0x11C4(0x0008) (BlueprintReadOnly, Transient, IsPlainOldData)
	bool                                               bRMBDown;                                                 // 0x11CC(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bLMBDown;                                                 // 0x11CD(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x11CE(0x0002) MISSED OFFSET
	class UGbxGFxSprite*                               LineDrawObject;                                           // 0x11D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector2D                                   CurrentLineTarget;                                        // 0x11D8(0x0008) (BlueprintReadOnly, Transient, IsPlainOldData)
	bool                                               bHasPreviewSkin;                                          // 0x11E0(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x11E1(0x0003) MISSED OFFSET
	TWeakObjectPtr<class UWeaponSkinPartData>          PreviewSkin;                                              // 0x11E4(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCanChangeSkins;                                          // 0x11EC(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsUIHidden;                                              // 0x11ED(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x22];                                      // 0x11EE(0x0022) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxItemInspectionMenu");
		return ptr;
	}


	void OnTabClicked(const struct FName& ItemId);
	void OnSkinsListCellFocused(const struct FGbxGFxListCellUpdateInfo& UpdateInfo);
	void OnSkinsListCellClicked(const struct FGbxGFxListCellUpdateInfo& UpdateInfo);
	void OnSkinsListArrowClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnPartsListCellFocused(const struct FGbxGFxListCellUpdateInfo& UpdateInfo);
	void OnPartsListCellClicked(const struct FGbxGFxListCellUpdateInfo& UpdateInfo);
	void OnManufacturerPlayClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnItemCardReady();
	void OnInventoryItemUpdated(const struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnChallengeClassLoaded();
};


// Class OakGame.GFxItemInspectionMenuData
// 0x0010 (0x00D0 - 0x00C0)
class UGFxItemInspectionMenuData : public UOakGFxMenuData
{
public:
	float                                              AxialDeadZoneBegin_Pan;                                   // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AxialDeadZoneRatio_Pan;                                   // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AxialDeadZoneBegin_Rotate;                                // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AxialDeadZoneRatio_Rotate;                                // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxItemInspectionMenuData");
		return ptr;
	}

};


// Class OakGame.GFxItemInspectionManufacturerChallengeObject
// 0x0040 (0x0360 - 0x0320)
class UGFxItemInspectionManufacturerChallengeObject : public UGbxGFxProgressBar
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0320(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxItemInspectionManufacturerChallengeObject");
		return ptr;
	}

};


// Class OakGame.GFxItemInspectionPartCell
// 0x0040 (0x0350 - 0x0310)
class UGFxItemInspectionPartCell : public UGbxGFxListCell
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0310(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxItemInspectionPartCell");
		return ptr;
	}

};


// Class OakGame.GFxItemInspectionPartList
// 0x0000 (0x03C0 - 0x03C0)
class UGFxItemInspectionPartList : public UGbxGFxPooledGridList
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxItemInspectionPartList");
		return ptr;
	}


	void OnCellChanged(const struct FGbxGFxListCellUpdateInfo& UpdateInfo);
};


// Class OakGame.GFxItemInspectionStatRowObject
// 0x0020 (0x0190 - 0x0170)
class UGFxItemInspectionStatRowObject : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0170(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxItemInspectionStatRowObject");
		return ptr;
	}

};


// Class OakGame.GFxItemInspectionSkinsList
// 0x0020 (0x03E0 - 0x03C0)
class UGFxItemInspectionSkinsList : public UGbxGFxPooledGridList
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03C0(0x0008) MISSED OFFSET
	class UOakThumbnailManager*                        ThumbnailManager;                                         // 0x03C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bNeedsThumbnailRefresh;                                   // 0x03D0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x03D1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxItemInspectionSkinsList");
		return ptr;
	}


	void OnThumbnailLoaded();
	void OnCellChanged(const struct FGbxGFxListCellUpdateInfo& UpdateInfo);
};


// Class OakGame.GFxItemInspectionSkinCell
// 0x0060 (0x0370 - 0x0310)
class UGFxItemInspectionSkinCell : public UGbxGFxListCell
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0310(0x0050) MISSED OFFSET
	TWeakObjectPtr<class UWeaponSkinPartData>          SkinPart;                                                 // 0x0360(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0368(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxItemInspectionSkinCell");
		return ptr;
	}

};


// Class OakGame.GFxItemTradingMenu
// 0x0540 (0x0BC0 - 0x0680)
class UGFxItemTradingMenu : public UGbxGFxMenu
{
public:
	struct FGFxInventoryMenuConfig                     Config;                                                   // 0x0680(0x0298) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	TArray<struct FOakInventoryMenuFilter>             CurrentFilters;                                           // 0x0918(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class USwfMovie*                                   ItemCardMovie;                                            // 0x0928(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumNonBackpackThumbnails;                                 // 0x0930(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0934(0x0004) MISSED OFFSET
	TArray<struct FOakInventoryMenuTypePriorityInfo>   ItemTypeSortPriorities;                                   // 0x0938(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FOakInventoryMenuItemGrouping>       ItemGroupingsByType;                                      // 0x0948(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FOakInventoryMenuItemGrouping>       ItemGroupingsByManufacturer;                              // 0x0958(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FVector2D                                   BackpackCellSizeTwoColumn;                                // 0x0968(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   BackpackCellSpacingTwoColumn;                             // 0x0970(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	class UGbxGFxObject*                               CountdownOverlay;                                         // 0x0978(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           CountdownCancelHint;                                      // 0x0980(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLoadedItemCard*                          ItemCard;                                                 // 0x0988(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxItemTradingMenuOffer*                    OfferingPanel;                                            // 0x0990(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxItemTradingMenuOffer*                    UnfocusedOfferingPanel;                                   // 0x0998(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxItemTradingMenuOffer*                    ReceivingPanel;                                           // 0x09A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FGFxBackpackWidget                          BackpackWidget;                                           // 0x09A8(0x0198) (BlueprintReadOnly, Transient)
	class UGbxTextField*                               HeaderTextClip;                                           // 0x0B40(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               FilterTextClip;                                           // 0x0B48(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               SortTextClip;                                             // 0x0B50(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           BackpackNextHintClip;                                     // 0x0B58(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           BackpackPrevHintClip;                                     // 0x0B60(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxCurrencyCounterClip*                     HeldCashCounter;                                          // 0x0B68(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0B70(0x0008) MISSED OFFSET
	struct FOakInventoryMenuFilter                     CurrentBackpackFilter;                                    // 0x0B78(0x0020) (BlueprintReadOnly, Transient)
	class UGFxItemTradingBackpackItem*                 CurrentlyPopulatingOfferSlot;                             // 0x0B98(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0BA0(0x0008) MISSED OFFSET
	class UOakThumbnailManager*                        IconManager;                                              // 0x0BA8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0BB0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxItemTradingMenu");
		return ptr;
	}


	void OnTradeButtonClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnThumbnailLoaded();
	void OnItemCardReady();
	void OnDuelButtonClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnBackpackGridItemSelected(const struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget);
	void OnBackpackGridItemClicked(const struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget, const struct FGbxMenuInputEvent& InputInfo);
	void extOnCountdownFinished();
};


// Class OakGame.GFxItemTradingBackpackItem
// 0x0000 (0x06D0 - 0x06D0)
class UGFxItemTradingBackpackItem : public UGFxInventoryItemWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxItemTradingBackpackItem");
		return ptr;
	}

};


// Class OakGame.GFxItemTradingMenuOffer
// 0x0050 (0x01C0 - 0x0170)
class UGFxItemTradingMenuOffer : public UGbxGFxObject
{
public:
	class UGFxItemTradingMenu*                         OwningMenu;                                               // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               GridItemsClip;                                            // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGFxItemTradingBackpackItem*>         ItemSlots;                                                // 0x0180(0x0010) (ZeroConstructor, Transient)
	class UGFxEditableCurrencyCounterClip*             OfferingPanelCurrencyWidget;                              // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxCurrencyCounterClip*                     ReceivingPanelCurrencyWidget;                             // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               TradeButton;                                              // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               DuelButton;                                               // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x01B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxItemTradingMenuOffer");
		return ptr;
	}


	void OnSlotUnfocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnSlotFocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnSlotClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxJokeEULA
// 0x0100 (0x0780 - 0x0680)
class UGFxJokeEULA : public UGbxGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0680(0x0030) MISSED OFFSET
	class UGbxGFxSlider*                               EULAScrollBar;                                            // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ScrollSpeed;                                              // 0x06B8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x06BC(0x0004) MISSED OFFSET
	struct FText                                       MainContent;                                              // 0x06C0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       AcceptButtonText;                                         // 0x06D8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       OtherAcceptButtonText;                                    // 0x06F0(0x0028) (Edit, BlueprintReadOnly)
	struct FDialogTimeSlotReference                    AudioForAutoClose;                                        // 0x0708(0x0040) (Edit, BlueprintReadOnly)
	class UGbxGFxObject*                               ContentWrapper;                                           // 0x0748(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               EULAText;                                                 // 0x0750(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               EULATextMask;                                             // 0x0758(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               AcceptButton;                                             // 0x0760(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               OtherAcceptButton;                                        // 0x0768(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0770(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxJokeEULA");
		return ptr;
	}


	void OnSliderPositionUpdate(float SliderPercent);
	void OnEitherAcceptButtonPressed(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void extFinishedHide();
};


// Class OakGame.GFxKeybindingsOptions
// 0x0138 (0x01F0 - 0x00B8)
class UGFxKeybindingsOptions : public UGFxOptionBase
{
public:
	struct FRebindContextAndDescription                DefaultWalkingKeybindingsAndDescriptions;                 // 0x00B8(0x0050) (Transient)
	struct FRebindContextAndDescription                DefaultDrivingKeybindingsAndDescriptions;                 // 0x0108(0x0050) (Transient)
	struct FRebindContextAndDescription                DefaultCommonKeybindingsAndDescriptions;                  // 0x0158(0x0050) (Transient)
	class UGbxInputRebindContext*                      WalkingRebindContext;                                     // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxInputRebindContext*                      DrivingRebindContext;                                     // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxInputRebindContext*                      CommonRebindContext;                                      // 0x01B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxDialogBox*                            CurrentDialog;                                            // 0x01C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxMainOptionPanel*                         MainOptionPanel;                                          // 0x01C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           PreviousSubmenuHint;                                      // 0x01D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           NextSubmenuHint;                                          // 0x01D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           PreviousControlSchemeHint;                                // 0x01E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           NextControlSchemeHint;                                    // 0x01E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxKeybindingsOptions");
		return ptr;
	}

};


// Class OakGame.GFxLeagueChallengeCell
// 0x0020 (0x0330 - 0x0310)
class UGFxLeagueChallengeCell : public UGbxGFxListCell
{
public:
	class UGbxGFxObject*                               ProgressBar;                                              // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CurretProgressField;                                      // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLeaguesMenu*                             OwningLeagueMenu;                                         // 0x0320(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakChallenge*                               ChallengeCDO;                                             // 0x0328(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLeagueChallengeCell");
		return ptr;
	}

};


// Class OakGame.GbxGFxLeaguesDetailsPanel
// 0x0020 (0x0190 - 0x0170)
class UGbxGFxLeaguesDetailsPanel : public UGbxGFxObject
{
public:
	class UGbxTextField*                               TitleField;                                               // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               SubtitleField;                                            // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               BodyField;                                                // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0188(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxGFxLeaguesDetailsPanel");
		return ptr;
	}

};


// Class OakGame.GbxGFxLeagueMenuChestButton
// 0x0080 (0x0350 - 0x02D0)
class UGbxGFxLeagueMenuChestButton : public UGbxGFxButton
{
public:
	class UGbxGFxObject*                               ChestLockedIcon;                                          // 0x02D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ChestAvailableIcon;                                       // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ChestOpenIcon;                                            // 0x02E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               UnlockHintWrapper;                                        // 0x02E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               UnlockHint;                                               // 0x02F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               UnlockText;                                               // 0x02F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakChallenge*                               MasterLeagueChallenge;                                    // 0x0300(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UOakCustomizationData*>               CustomizationRewards;                                     // 0x0308(0x0010) (ZeroConstructor, Transient)
	TArray<class UWeaponSkinPartData*>                 WeaponSkinRewards;                                        // 0x0318(0x0010) (ZeroConstructor, Transient)
	TArray<class UWeaponTrinketPartData*>              WeaponTrinketRewards;                                     // 0x0328(0x0010) (ZeroConstructor, Transient)
	TArray<class AActor*>                              ItemPoolRewards;                                          // 0x0338(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0348(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxGFxLeagueMenuChestButton");
		return ptr;
	}

};


// Class OakGame.GbxGFxLeaguesBigPanelButton
// 0x0000 (0x02D0 - 0x02D0)
class UGbxGFxLeaguesBigPanelButton : public UGbxGFxButton
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxGFxLeaguesBigPanelButton");
		return ptr;
	}

};


// Class OakGame.GFxLeaguesMenu
// 0x01B0 (0x0860 - 0x06B0)
class UGFxLeaguesMenu : public UGFxStatusMenuSubmenu
{
public:
	class UGbxGFxLeaguesBigPanelButton*                ChallengesBigButton;                                      // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ChallengesBigButtonLeagueField;                           // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ChallengesBigButtonProgressField;                         // 0x06C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           LeftNavButton;                                            // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           RightNavButton;                                           // 0x06D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MainPanel;                                                // 0x06D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               LeagueTitleField;                                         // 0x06E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               LeagueOverviewSubtitle;                                   // 0x06E8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               LeagueDetailsScrollableText;                              // 0x06F0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxSlider*                               LeagueDetailsScrollBar;                                   // 0x06F8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LeagueDetailsScrollMask;                                  // 0x0700(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MasterChallengeRewardBar;                                 // 0x0708(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ChestContainer;                                           // 0x0710(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ChallengesSubtitle;                                       // 0x0718(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    ChallengesList;                                           // 0x0720(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxSlider*                               ChallengesListScrollBar;                                  // 0x0728(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               RewardUnlocked;                                           // 0x0730(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               RewardUnlockedField;                                      // 0x0738(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               RewardUnlockedFieldShadow;                                // 0x0740(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               RewardUnlockedSubtitle;                                   // 0x0748(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxLeaguesDetailsPanel*                  DetailsPanel;                                             // 0x0750(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakChallengesComponent*                     OwnerChallengesComponent;                                 // 0x0758(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UClass*>                              CurrentLeagueChallenges;                                  // 0x0760(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UOakChallenge*                               CurrentMasterLeagueChallenge;                             // 0x0770(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGbxGFxLeagueMenuChestButton*>        ChestButtons;                                             // 0x0778(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0788(0x0008) MISSED OFFSET
	TArray<class UOakCustomizationData*>               CurrentlyPreviewedCustomizations;                         // 0x0790(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UWeaponSkinPartData*                         OriginalWeaponSkin;                                       // 0x07A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UWeaponSkinPartData*                         PreviewedWeaponSkin;                                      // 0x07A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UPatchExpansionData*                         CurrentLeaguePatchData;                                   // 0x07B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x07B8(0x0020) MISSED OFFSET
	struct FGFxLeaguesMenuStandInState                 CurrentStandInState;                                      // 0x07D8(0x0080) (BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0858(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLeaguesMenu");
		return ptr;
	}


	void OnOverviewBigButtonClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnChestButtonFocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnChestButtonClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnChallengesBigButtonClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnChallengeCellFocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxLoadGameListItem
// 0x0020 (0x0330 - 0x0310)
class UGFxLoadGameListItem : public UGbxGFxListCell
{
public:
	class UGbxGFxObject*                               CharacterClassIcon;                                       // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0318(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLoadGameListItem");
		return ptr;
	}

};


// Class OakGame.GFxLoadGameMenu
// 0x0170 (0x07F0 - 0x0680)
class UGFxLoadGameMenu : public UGbxGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0680(0x0008) MISSED OFFSET
	TSoftObjectPtr<class UGbxMenuData>                 ClassSelectionMenuData;                                   // 0x0688(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x20];                                      // 0x06B0(0x0020) MISSED OFFSET
	TArray<struct FLoadGameMenuEntry>                  LoadGameMenuEntries;                                      // 0x06D0(0x0010) (BlueprintReadOnly, ZeroConstructor, Config)
	unsigned char                                      UnknownData02[0x60];                                      // 0x06E0(0x0060) MISSED OFFSET
	TSoftObjectPtr<class UGbxMenuData>                 MainMenuMenuData;                                         // 0x0740(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	class UGbxTextField*                               PlayerName;                                               // 0x0768(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MenuTitle;                                                // 0x0770(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LoadInProgressClip;                                       // 0x0778(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LoadCharacterPanel;                                       // 0x0780(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxRadioButtonList*                      SaveGameList;                                             // 0x0788(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSaveGameDetails*                         SaveGameDetails;                                          // 0x0790(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               CreateCharacterButton;                                    // 0x0798(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           CreateCharacterButtonHint;                                // 0x07A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CountdownText;                                            // 0x07A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AGbxPlayerController*                        TargetPC;                                                 // 0x07B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class APlayerStandIn*                              PlayerStandIn;                                            // 0x07B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x07C0(0x0008) MISSED OFFSET
	TSoftObjectPtr<class UDialogScriptData>            DialogScript;                                             // 0x07C8(0x0028) (BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLoadGameMenu");
		return ptr;
	}


	void OnSaveGameItemFocused(class UGbxGFxButton* FocusedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnSaveGameItemClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnPromptNoSaveGame(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnPromptDeleteCorruptSavegame(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnDeleteCharacterChoiceMade(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnCreateCharacterButtonClicked(class UGbxGFxButton* FocusedButton, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxLobbyWidget
// 0x0280 (0x03F0 - 0x0170)
class UGFxLobbyWidget : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0170(0x0010) MISSED OFFSET
	float                                              RecommendedFriendsPopupTimeout;                           // 0x0180(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0184(0x0004) MISSED OFFSET
	struct FGbxGFxListConfig                           ContextMenuConfig;                                        // 0x0188(0x0090) (Edit)
	float                                              TimeRequiredToReinvite;                                   // 0x0218(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x021C(0x0004) MISSED OFFSET
	struct FTimerHandle                                HideRecommendedFriendsTimer;                              // 0x0220(0x0008) (Transient)
	TArray<struct FRecommendedFriendInviteStatus>      CurrentFriendInvites;                                     // 0x0228(0x0010) (ZeroConstructor, Transient)
	TWeakObjectPtr<class AOakPlayerController>         OverridePrimaryPlayer;                                    // 0x0238(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0xA8];                                      // 0x0240(0x00A8) MISSED OFFSET
	class UGFxLobbyWidgetPlayerList*                   PlayerList;                                               // 0x02E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x02F0(0x0010) MISSED OFFSET
	class UGbxGFxHintWidget*                           LobbyWidgetHint;                                          // 0x0300(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x20];                                      // 0x0308(0x0020) MISSED OFFSET
	class UGbxGFxButton*                               AddFriendsButton;                                         // 0x0328(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x10];                                      // 0x0330(0x0010) MISSED OFFSET
	class UGFxLobbyWidgetSettingsButton*               SettingsButton;                                           // 0x0340(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLobbyWidgetSettingsPanel*                SettingsPanel;                                            // 0x0348(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxWidgetFocusManager*                      FocusManager;                                             // 0x0350(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x18];                                      // 0x0358(0x0018) MISSED OFFSET
	struct FContextMenu                                ContextMenu;                                              // 0x0370(0x0040) (Transient)
	TWeakObjectPtr<class UGbxGFxMenu>                  OwningMenu;                                               // 0x03B0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x38];                                      // 0x03B8(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLobbyWidget");
		return ptr;
	}


	void OnSettingsButtonClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnSelectionChanged(class UGbxGFxListCell* Item);
	void OnRecommendedFriendUnhovered(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnRecommendedFriendHovered(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnRecommendedFriendClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnQuitChoiceMade(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnPlayerOptionSelected(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnPlayerItemChanged(class UGbxGFxListCell* Item);
	void OnMenuStackMenuActivated(class UObject* ActiveMenu);
	void OnLobbyWidgetHovered(class UGbxGFxObject* HoveredObject, const struct FGbxMenuInputEvent& InputInfo);
	void OnContextMenuSelectionChanged(class UGbxGFxListCell* Item);
	void OnAddFriendsUnhovered(class UGbxGFxButton* HoveredButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnAddFriendsHovered(class UGbxGFxButton* HoveredButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnAddFriendsFocused(class UGbxGFxButton* FocusedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnAddFriendsButtonClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxLobbyWidgetSettingsButton
// 0x0010 (0x02E0 - 0x02D0)
class UGFxLobbyWidgetSettingsButton : public UGbxGFxButton
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x02D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLobbyWidgetSettingsButton");
		return ptr;
	}

};


// Class OakGame.GFxLobbyWidgetMatchmakingWidget
// 0x0030 (0x01A0 - 0x0170)
class UGFxLobbyWidgetMatchmakingWidget : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                               MatchmakingWidget;                                        // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ModeNameTextClip;                                         // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ProgressTextClip;                                         // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsShowing;                                               // 0x0188(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x17];                                      // 0x0189(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLobbyWidgetMatchmakingWidget");
		return ptr;
	}

};


// Class OakGame.GFxLobbyWidgetPlayerItem
// 0x0020 (0x0330 - 0x0310)
class UGFxLobbyWidgetPlayerItem : public UGbxGFxListCell
{
public:
	class UGbxGFxObject*                               ContextualMenuAnchor;                                     // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakGameInstance*                            CachedGameInstance;                                       // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      CurrentStateFrame;                                        // 0x0320(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLobbyWidgetPlayerItem");
		return ptr;
	}

};


// Class OakGame.GFxLobbyWidgetPlayerList
// 0x0050 (0x0370 - 0x0320)
class UGFxLobbyWidgetPlayerList : public UGbxGFxGridScrollingList
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0320(0x0038) MISSED OFFSET
	class UGFxLobbyWidget*                             LobbyWidgetOwner;                                         // 0x0358(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0360(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLobbyWidgetPlayerList");
		return ptr;
	}


	void OnPlayerItemUnhovered(class UGbxGFxButton* HoveredButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnPlayerItemHovered(class UGbxGFxButton* HoveredButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnPlayerItemClicked(class UGbxGFxButton* ClickedButton, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxLobbyWidgetSettingsCell
// 0x0000 (0x0310 - 0x0310)
class UGFxLobbyWidgetSettingsCell : public UGbxGFxListCell
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLobbyWidgetSettingsCell");
		return ptr;
	}

};


// Class OakGame.GFxLobbyWidgetSettingList
// 0x0050 (0x0370 - 0x0320)
class UGFxLobbyWidgetSettingList : public UGbxGFxRadioButtonList
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0320(0x0040) MISSED OFFSET
	TWeakObjectPtr<class UGbxGFxMenu>                  OwningMenu;                                               // 0x0360(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0368(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLobbyWidgetSettingList");
		return ptr;
	}


	void OnSettingListItemUnhovered(class UGbxGFxButton* HoveredButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnSettingListHovered(class UGbxGFxButton* HoveredButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnSettingItemFocused(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.PrivacySettingList
// 0x0020 (0x0390 - 0x0370)
class UPrivacySettingList : public UGFxLobbyWidgetSettingList
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0370(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PrivacySettingList");
		return ptr;
	}


	void OnConfirmChangeNetworkMode(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.LootModeSettingList
// 0x0010 (0x0380 - 0x0370)
class ULootModeSettingList : public UGFxLobbyWidgetSettingList
{
public:
	TArray<EOakGameStateUIGroupMode>                   LootModeListOrder;                                        // 0x0370(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.LootModeSettingList");
		return ptr;
	}

};


// Class OakGame.GFxLobbyWidgetSettingsPanel
// 0x00A0 (0x0210 - 0x0170)
class UGFxLobbyWidgetSettingsPanel : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0170(0x0020) MISSED OFFSET
	class UGFxPrivacySettingWidget*                    PrivacySettingWidget;                                     // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLootModeSettingWidget*                   LootModeSettingWidget;                                    // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               PrivacySettingPanel;                                      // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UPrivacySettingList*                         PrivacySettingList;                                       // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LootModeSettingPanel;                                     // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ULootModeSettingList*                        LootModeSettingList;                                      // 0x01B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ToolTipWrapperClip;                                       // 0x01C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ToolTipClip;                                              // 0x01C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxWidgetFocusManager*                      FocusManager;                                             // 0x01D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UObject>                      LastHoveredWidget;                                        // 0x01D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLobbyWidget*                             OwningLobbyWidget;                                        // 0x01E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x01E8(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLobbyWidgetSettingsPanel");
		return ptr;
	}

};


// Class OakGame.GFxLobbyWidgetSettingWidget
// 0x0020 (0x0190 - 0x0170)
class UGFxLobbyWidgetSettingWidget : public UGbxGFxObject
{
public:
	class UGbxTextField*                               Label;                                                    // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               Icon;                                                     // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGbxGFxMenu>                  OwningMenu;                                               // 0x0180(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0188(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLobbyWidgetSettingWidget");
		return ptr;
	}

};


// Class OakGame.GFxPrivacySettingWidget
// 0x0000 (0x0190 - 0x0190)
class UGFxPrivacySettingWidget : public UGFxLobbyWidgetSettingWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPrivacySettingWidget");
		return ptr;
	}

};


// Class OakGame.GFxLootModeSettingWidget
// 0x0000 (0x0190 - 0x0190)
class UGFxLootModeSettingWidget : public UGFxLobbyWidgetSettingWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLootModeSettingWidget");
		return ptr;
	}

};


// Class OakGame.GFxLobbyWidgetText
// 0x02A0 (0x02C8 - 0x0028)
class UGFxLobbyWidgetText : public UObject
{
public:
	struct FText                                       FriendsOnlyText;                                          // 0x0028(0x0028) (Transient, Config)
	struct FText                                       InviteOnlyText;                                           // 0x0040(0x0028) (Transient, Config)
	struct FText                                       OpenToPublicText;                                         // 0x0058(0x0028) (Transient, Config)
	struct FText                                       LANText;                                                  // 0x0070(0x0028) (Transient, Config)
	struct FText                                       OfflineText;                                              // 0x0088(0x0028) (Transient, Config)
	struct FText                                       GroupModeText;                                            // 0x00A0(0x0028) (Transient, Config)
	struct FText                                       ClassicModeText;                                          // 0x00B8(0x0028) (Transient, Config)
	struct FText                                       SharedModeText;                                           // 0x00D0(0x0028) (Transient, Config)
	struct FText                                       ClassicModeTooltipText;                                   // 0x00E8(0x0028) (Transient, Config)
	struct FText                                       SharedModeTooltipText;                                    // 0x0100(0x0028) (Transient, Config)
	struct FText                                       LootModeLockedText;                                       // 0x0118(0x0028) (Transient, Config)
	struct FText                                       FriendsOnlyTooltipText;                                   // 0x0130(0x0028) (Transient, Config)
	struct FText                                       InviteOnlyTooltipText;                                    // 0x0148(0x0028) (Transient, Config)
	struct FText                                       PublicTooltipText;                                        // 0x0160(0x0028) (Transient, Config)
	struct FText                                       LANTooltipText;                                           // 0x0178(0x0028) (Transient, Config)
	struct FText                                       OfflineTooltipText;                                       // 0x0190(0x0028) (Transient, Config)
	struct FText                                       OfflinePCTooltipText;                                     // 0x01A8(0x0028) (Transient, Config)
	struct FText                                       LeaveGroupDialogTitleText;                                // 0x01C0(0x0028) (Transient, Config)
	struct FText                                       LeaveGroupDialogBodyText;                                 // 0x01D8(0x0028) (Transient, Config)
	struct FText                                       LeaveGroupDialogAdditionalBodyText;                       // 0x01F0(0x0028) (Transient, Config)
	struct FText                                       GoOnline;                                                 // 0x0208(0x0028) (Transient, Config)
	struct FText                                       ConnectToLan;                                             // 0x0220(0x0028) (Transient, Config)
	struct FText                                       OfflineConnectionHeader;                                  // 0x0238(0x0028) (Transient, Config)
	struct FText                                       OfflineConnectionInformation;                             // 0x0250(0x0028) (Transient, Config)
	struct FText                                       NotLanConnectionHeader;                                   // 0x0268(0x0028) (Transient, Config)
	struct FText                                       NotLanConnectionInformation;                              // 0x0280(0x0028) (Transient, Config)
	struct FText                                       InGameConnectionHeader;                                   // 0x0298(0x0028) (Transient, Config)
	struct FText                                       InGameConnectionInformation;                              // 0x02B0(0x0028) (Transient, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLobbyWidgetText");
		return ptr;
	}

};


// Class OakGame.GFxMainAndPauseBaseMenu
// 0x0350 (0x09D0 - 0x0680)
class UGFxMainAndPauseBaseMenu : public UGbxGFxMenu
{
public:
	TSoftObjectPtr<class UGbxMenuData>                 NewGameSettingsMenuData;                                  // 0x0680(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxMenuData>                 LoadGameMenuData;                                         // 0x06A8(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxMenuData>                 PlaythroughSelectionMenuData;                             // 0x06D0(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxMenuData>                 CreditsMenuData;                                          // 0x06F8(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxMenuData>                 MultiplayerMenuData;                                      // 0x0720(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxMenuData>                 OptionsMenuData;                                          // 0x0748(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxMenuData>                 TestMapMenuData;                                          // 0x0770(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxMenuData>                 EchoNetMenuData;                                          // 0x0798(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxMenuData>                 LANBrowserMenuData;                                       // 0x07C0(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxMenuData>                 StoreMenuData;                                            // 0x07E8(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxMenuData>                 NewsMenuData;                                             // 0x0810(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxMenuData>                 DLCMenuData;                                              // 0x0838(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	class UGbxGFxMenuData*                             FrontendMenuData;                                         // 0x0860(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TSoftObjectPtr<class UGFxBehindTheScenesMenuData>  BehindTheScenesMenuData;                                  // 0x0868(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	class UGFxBehindTheScenesMenuData*                 BehindTheScenesMenuDataReference;                         // 0x0890(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EGFxMainAndPauseMenuType                           MenuType;                                                 // 0x0898(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0898(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData01[0x4];                                       // 0x089C(0x0004) MISSED OFFSET
	TArray<struct FMenuItemButton>                     MenuItems;                                                // 0x08A0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0xD0];                                      // 0x08B0(0x00D0) MISSED OFFSET
	class UGbxGFxGridScrollingList*                    MenuList;                                                 // 0x0980(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxFrontendMenu*                            FrontendMenu;                                             // 0x0988(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EMenuTransition                                    OnGoingMenuTransition;                                    // 0x0990(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsMenuLevel;                                             // 0x0991(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x0992(0x0006) MISSED OFFSET
	class AMainMenuCameraController*                   CachedCameraController;                                   // 0x0998(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AMenuMapMenuFlow*                            CachedMenuMapMenuFlow;                                    // 0x09A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x28];                                      // 0x09A8(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMainAndPauseBaseMenu");
		return ptr;
	}


	void OnSocialCoreClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnNetworkClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnInvitesClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnInviteListItemClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnInviteListClearClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnGraphicsClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnGameplayClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnControlsClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnAudioClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnAccessibilityClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxManagedWidget
// 0x0010 (0x0640 - 0x0630)
class UGFxManagedWidget : public UGbxGFxHUDWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0630(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxManagedWidget");
		return ptr;
	}


	void extShowAnimationFinished();
};


// Class OakGame.GFxMapMenu
// 0x06E0 (0x0D90 - 0x06B0)
class UGFxMapMenu : public UGFxStatusMenuSubmenu
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x06B0(0x0040) MISSED OFFSET
	TMap<EGFxMapMenuState, struct FGFxMapMenuStateInfo> StateInfoMap;                                             // 0x06F0(0x0050) (Edit, BlueprintReadOnly, ZeroConstructor)
	EGFxMapMenuState                                   InitialMenuState;                                         // 0x0740(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0741(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UGalaxyData>                  GalaxyDataRef;                                            // 0x0748(0x0028) (Edit, BlueprintReadOnly)
	TSoftObjectPtr<class UZoneMapData>                 SanctuaryLevelData;                                       // 0x0770(0x0028) (Edit, BlueprintReadOnly)
	TSoftObjectPtr<class UPlanetData>                  SanctuaryPlanetData;                                      // 0x0798(0x0028) (Edit, BlueprintReadOnly)
	TSoftObjectPtr<class UZoneMapPOITypeData>          FastTravelPOIType;                                        // 0x07C0(0x0028) (Edit, BlueprintReadOnly)
	struct FName                                       Sanctuary3Name;                                           // 0x07E8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CameraMoveThreshold;                                      // 0x07F0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FriendStatusUpdateRateSeconds;                            // 0x07F4(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ChallengeProviderClass;                                   // 0x07F8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FChallengeFilterType>                AvailableGalaxyChallengeFilters;                          // 0x0800(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FChallengeFilterType>                AvailableZoneChallengeFilters;                            // 0x0810(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FGFxMenuTutorialCollection                  Tutorials;                                                // 0x0820(0x0020) (Edit, BlueprintReadOnly)
	struct FName                                       FirstTimeTutorial;                                        // 0x0840(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       FastTravelTutorial;                                       // 0x0848(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FirstTimeShowStage1Index;                                 // 0x0850(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FirstTimeShowStage2Index;                                 // 0x0854(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FirstTimeShowStage3Index;                                 // 0x0858(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FirstTimeShowStage4Index;                                 // 0x085C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FirstTimeShowStage5Index;                                 // 0x0860(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FirstTimeFreeNavigationIndex;                             // 0x0864(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FastTravelOrbitZoomIndex;                                 // 0x0868(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FastTravelChooseZoneInfoIndex;                            // 0x086C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FastTravelChooseZoneIndex;                                // 0x0870(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FastTravelChooseLocationIndex;                            // 0x0874(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   FriendListSplitScreenScalePlayer0;                        // 0x0878(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   FriendListSplitScreenPositionPlayer0;                     // 0x0880(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   FriendListSplitScreenScalePlayer1;                        // 0x0888(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   FriendListSplitScreenPositionPlayer1;                     // 0x0890(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0898(0x0004) MISSED OFFSET
	struct FVector2D                                   ContextMenuOffsetExpandingDown;                           // 0x089C(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   ContextMenuOffsetExpandingUp;                             // 0x08A4(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   ContextMenuScale;                                         // 0x08AC(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FGFxMapMenu_Adjustment                      ContextMenuAdjustmentHorizontalSplitScreen;               // 0x08B4(0x0010) (Edit, BlueprintReadOnly)
	unsigned char                                      UnknownData03[0x4];                                       // 0x08C4(0x0004) MISSED OFFSET
	class UGbxGFxObject*                               MenuRoot;                                                 // 0x08C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxMapMenuProgressPanel*                    ProgressPanel;                                            // 0x08D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    NavBar;                                                   // 0x08D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    FastTravelList;                                           // 0x08E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x08E8(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    TravelListSelectionChangedDelegate;                       // 0x08F8(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference)
	class UGbxGFxGridScrollingList*                    ChallengeList;                                            // 0x0908(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    FriendList;                                               // 0x0910(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CurrentGalaxyChallengeFilterIndex;                        // 0x0918(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CurrentZoneChallengeFilterIndex;                          // 0x091C(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ChallengeListWrapper;                                     // 0x0920(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           ChallengeFilterHint;                                      // 0x0928(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               IconContainer;                                            // 0x0930(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxMapMenuCrosshair*                        CrosshairContainers[0x2];                                 // 0x0938(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxMapMenuCrosshair*                        CurrentCrosshair;                                         // 0x0948(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxMouseCapturePanel*                    MouseCapturePanel;                                        // 0x0950(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxMapMenuZoomLevelInfo*                    ZoomLevelInfo;                                            // 0x0958(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxMapDetailsPanel*                         DetailsPanel;                                             // 0x0960(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               HyperspaceHeader;                                         // 0x0968(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MapWarning;                                               // 0x0970(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MapError;                                                 // 0x0978(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MapErrorText;                                             // 0x0980(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxTutorialWidget*                          TutorialWidget;                                           // 0x0988(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FZoneMapPOIEntry>                    FastTravelStationListData;                                // 0x0990(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class UZoneMapData*>                        LevelListData;                                            // 0x09A0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class UPlanetData*>                         PlanetListData;                                           // 0x09B0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TWeakObjectPtr<class UZoneMapData>                 PlayerLevel;                                              // 0x09C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakUIChallengeDataProvider*                 ChallengeProvider;                                        // 0x09C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TMap<struct FUniqueNetIdRepl, struct FZoneMapIconInfo> FriendIcons;                                              // 0x09D0(0x0050) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData05[0x40];                                      // 0x0A20(0x0040) MISSED OFFSET
	class UOakChallenge*                               ChallengeToFocusAfterLoad;                                // 0x0A60(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0A68(0x0008) MISSED OFFSET
	struct FZoneMapIconInfo                            TargetIconInfo;                                           // 0x0A70(0x0270) (BlueprintReadOnly, Transient)
	TArray<struct FZoneMapIconInfo>                    MapIconInfos;                                             // 0x0CE0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TSoftObjectPtr<class AZoneMapDisplayActor>         FocusedPOIActor;                                          // 0x0CF0(0x0028) (BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData07[0x10];                                      // 0x0D18(0x0010) MISSED OFFSET
	class UPlanetData*                                 PendingPOIPlanet;                                         // 0x0D28(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x60];                                      // 0x0D30(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMapMenu");
		return ptr;
	}


	void OnTutorialComplete();
	void OnTutorialAdvanced();
	void OnPlanetSelected(class UGbxGFxListCell* ListItem);
	void OnPlanetClicked(class UGbxGFxListCell* ListItem, const struct FGbxMenuInputEvent& InputInfo);
	void OnNavBarItemSelected(class UGbxGFxListCell* ListItem);
	void OnMinimapIconComponentEndTracking(class UOakMinimapIconComponent* MinimapIconComponent);
	void OnMinimapIconComponentBeginTracking(class UOakMinimapIconComponent* MinimapIconComponent);
	void OnMapIconUnhovered(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnMapIconClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnLevelSelected(class UGbxGFxListCell* ListItem);
	void OnLevelClicked(class UGbxGFxListCell* ListItem, const struct FGbxMenuInputEvent& InputInfo);
	void OnFriendSelected(class UGbxGFxListCell* ListItem);
	void OnFriendClicked(class UGbxGFxListCell* ListItem, const struct FGbxMenuInputEvent& InputInfo);
	void OnFastTravelStationSelectedExplicitly(class UGbxGFxListCell* ListItem);
	void OnFastTravelStationSelected(class UGbxGFxListCell* ListItem);
	void OnFastTravelStationClicked(class UGbxGFxListCell* ListItem, const struct FGbxMenuInputEvent& InputInfo);
	void OnFastTravelAvailabilityChanged(bool bAvailable);
	void OnChallengeSelected(class UGbxGFxListCell* ListItem);
	void OnChallengeListItemUpdated(const struct FOakUIChallengeListData& ListData);
	void OnChallengeClicked(class UGbxGFxListCell* ListItem, const struct FGbxMenuInputEvent& InputInfo);
	void InitForHyperspaceMenu();
};


// Class OakGame.GFxMapMenuFastTravelCell
// 0x0030 (0x0340 - 0x0310)
class UGFxMapMenuFastTravelCell : public UGbxGFxListCell
{
public:
	class UGbxGFxObject*                               NewIndicator;                                             // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               CurrentLocation;                                          // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               FriendWidget;                                             // 0x0320(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               FriendCount;                                              // 0x0328(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MissionIndicator;                                         // 0x0330(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0338(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMapMenuFastTravelCell");
		return ptr;
	}

};


// Class OakGame.GFxMapMenuFriendCell
// 0x0060 (0x0370 - 0x0310)
class UGFxMapMenuFriendCell : public UGbxGFxListCell
{
public:
	class UGbxTextField*                               FriendNameText;                                           // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               FriendInfoText;                                           // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ItemIcon;                                                 // 0x0320(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0328(0x0010) MISSED OFFSET
	class FString                                      IconPath;                                                 // 0x0338(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0348(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMapMenuFriendCell");
		return ptr;
	}

};


// Class OakGame.GFxMapMenuNavItemCell
// 0x0000 (0x0310 - 0x0310)
class UGFxMapMenuNavItemCell : public UGbxGFxListCell
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMapMenuNavItemCell");
		return ptr;
	}

};


// Class OakGame.GFxMapMenuProgressPanel
// 0x0050 (0x01C0 - 0x0170)
class UGFxMapMenuProgressPanel : public UGbxGFxObject
{
public:
	class UGbxTextField*                               ProgressHeader;                                           // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ProgressPercentText;                                      // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGbxGFxObject*>                       ProgressLines;                                            // 0x0180(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0190(0x0008) MISSED OFFSET
	TArray<struct FText>                               CachedProgressTextLines;                                  // 0x0198(0x0010) (ZeroConstructor, Transient)
	TArray<struct FText>                               CachedProgressFractionLines;                              // 0x01A8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x01B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMapMenuProgressPanel");
		return ptr;
	}

};


// Class OakGame.GFxMapMenuZoomLevelInfo
// 0x0030 (0x01A0 - 0x0170)
class UGFxMapMenuZoomLevelInfo : public UGbxGFxObject
{
public:
	class UGbxTextField*                               LocationNameLabel;                                        // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LocationIcon;                                             // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               LocationParentNameLabel;                                  // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LocationParentIcon;                                       // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LayerIndicator;                                           // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0198(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMapMenuZoomLevelInfo");
		return ptr;
	}

};


// Class OakGame.GFxMapMenuCrosshair
// 0x0020 (0x0190 - 0x0170)
class UGFxMapMenuCrosshair : public UGbxGFxObject
{
public:
	class UGbxGFxProgressBar*                          ProgressFill;                                             // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0178(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMapMenuCrosshair");
		return ptr;
	}

};


// Class OakGame.GFxMapDetailsPanel
// 0x0180 (0x02F0 - 0x0170)
class UGFxMapDetailsPanel : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                               ContentPanel;                                             // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LocationPreviewContainer;                                 // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               HeaderField;                                              // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               SubHeaderField;                                           // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               DescriptionText;                                          // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               GeneralIcon;                                              // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               DLCChallengeIcon;                                         // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               BackgroundPanel;                                          // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               DetailsPanelHintWrapper;                                  // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           PanelHint;                                                // 0x01B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               RewardsHeader;                                            // 0x01C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGbxTextField*>                       RewardLines;                                              // 0x01C8(0x0010) (ZeroConstructor, Transient)
	TArray<class UGbxGFxObject*>                       RewardLineSymbols;                                        // 0x01D8(0x0010) (ZeroConstructor, Transient)
	class UGbxGFxObject*                               RewardItemTypeContainer;                                  // 0x01E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               RewardRarityContainer;                                    // 0x01F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               RewardItemType;                                           // 0x01F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               RewardBackground;                                         // 0x0200(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MissionTypeIcon;                                          // 0x0208(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGbxTextField*>                       ObjectiveLines;                                           // 0x0210(0x0010) (ZeroConstructor, Transient)
	class UGFxMapMenu*                                 OwnerMapMenu;                                             // 0x0220(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MayhemModLines[0x5];                                      // 0x0228(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MayhemCoreMods[0x6];                                      // 0x0250(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MayhemLevel;                                              // 0x0280(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UUIStatData*>                         CollatedMayhemCoreUIStats;                                // 0x0288(0x0010) (ZeroConstructor, Transient)
	class AOakPlayerController*                        OwnerPlayerController;                                    // 0x0298(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x02A0(0x0008) MISSED OFFSET
	struct FGbxHintInfo                                CachedDetailsHintInfo;                                    // 0x02A8(0x0040) (Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x02E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMapDetailsPanel");
		return ptr;
	}

};


// Class OakGame.GFxMatchmakingHUDWidget
// 0x0050 (0x0680 - 0x0630)
class UGFxMatchmakingHUDWidget : public UGbxGFxHUDWidget
{
public:
	class UGbxGFxObject*                               MatchmakingWidgetObject;                                  // 0x0630(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MatchMessageText;                                         // 0x0638(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MatchTypeIcon;                                            // 0x0640(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MatchStatusIcon;                                          // 0x0648(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MessageShowDuration;                                      // 0x0650(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2C];                                      // 0x0654(0x002C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMatchmakingHUDWidget");
		return ptr;
	}


	void OnShrinkDelayExpired();
	void OnMatchmakingWidgetStateChanged();
	void OnInputDeviceChanged();
	void OnHideDelayExpired();
};


// Class OakGame.GFxMayhemMenuData
// 0x0000 (0x0118 - 0x0118)
class UGFxMayhemMenuData : public UGFxStatusMenuSubmenuData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMayhemMenuData");
		return ptr;
	}

};


// Class OakGame.GFxMayhemModifierListItem
// 0x0010 (0x0320 - 0x0310)
class UGFxMayhemModifierListItem : public UGbxGFxListCell
{
public:
	class UGbxTextField*                               BodyText;                                                 // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0318(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMayhemModifierListItem");
		return ptr;
	}

};


// Class OakGame.GFxMayhemMenu
// 0x0170 (0x0820 - 0x06B0)
class UGFxMayhemMenu : public UGFxStatusMenuSubmenu
{
public:
	class UGbxTextField*                               InfoPanelBody;                                            // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CurrentMayhemStatusText;                                  // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ApplyWarningText;                                         // 0x06C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               StatsPanelHeader;                                         // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               StatsPanelText1;                                          // 0x06D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               StatsPanelText2;                                          // 0x06D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               StatsPanelText3;                                          // 0x06E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               StatsPanelBonusText1;                                     // 0x06E8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               StatsPanelBonusText2;                                     // 0x06F0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               StatsPanelBonusText3;                                     // 0x06F8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ModifiersPanelHeader;                                     // 0x0700(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    ModifiersList;                                            // 0x0708(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      MayhemOptionStatusSpinner;                                // 0x0710(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemNumber*                       MayhemOptionLevelSlider;                                  // 0x0718(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               MayhemOptionApplyButton;                                  // 0x0720(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x68];                                      // 0x0728(0x0068) MISSED OFFSET
	TArray<class UGbxTextField*>                       StatsArray;                                               // 0x0790(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class UUIStatData*>                         CollatedMayhemCoreUIStats;                                // 0x07A0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FMayhemModifierSet>                  ModifierSets;                                             // 0x07B0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	struct FText                                       MayhemDescriptionText;                                    // 0x07C0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ApplyWarningLocText;                                      // 0x07D8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ApplyConfirmationLocText;                                 // 0x07F0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       VehicleWarningLocText;                                    // 0x0808(0x0028) (Edit, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMayhemMenu");
		return ptr;
	}


	void OnMayhemValueChanged();
	void OnMayhemOptionFocused();
	void OnMayhemExitDialogChoiceMade(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnMayhemApplyChoiceMade(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnMayhemApplyButtonClicked();
	void OnMayhemActivationChanged();
};


// Class OakGame.GFxMenuDamageWidget
// 0x0020 (0x0650 - 0x0630)
class UGFxMenuDamageWidget : public UGbxGFxHUDWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0630(0x0010) MISSED OFFSET
	float                                              SplitScreenOffsetY;                                       // 0x0640(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0644(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMenuDamageWidget");
		return ptr;
	}

};


// Class OakGame.GFxTutorialDialogWidget
// 0x0050 (0x01C0 - 0x0170)
class UGFxTutorialDialogWidget : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0170(0x0030) MISSED OFFSET
	class UGbxGFxHintBarContainer*                     HintBarContainerClip;                                     // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxHintBar*                                 HintBar;                                                  // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAdvanceOnKeyPress;                                       // 0x01B0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsFinalStageOfTutorial;                                  // 0x01B1(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAllowTutorialSkip;                                       // 0x01B2(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xD];                                       // 0x01B3(0x000D) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxTutorialDialogWidget");
		return ptr;
	}

};


// Class OakGame.GFxTutorialWidget
// 0x00B0 (0x0220 - 0x0170)
class UGFxTutorialWidget : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0170(0x0020) MISSED OFFSET
	struct FGFxMenuTutorialSequence                    TutorialSequence;                                         // 0x0190(0x0010) (Transient)
	int                                                TutorialSequenceReadPosition;                             // 0x01A0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsTutorialActive;                                        // 0x01A4(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAdvanceOnKeyPress;                                       // 0x01A5(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bAllowTutorialSkip;                                       // 0x01A6(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x01A7(0x0001) MISSED OFFSET
	class UGbxGFxObject*                               InnerClip;                                                // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxTutorialDialogWidget*                    LargeDialogWidget;                                        // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxTutorialDialogWidget*                    MediumDialogWidget;                                       // 0x01B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxTutorialDialogWidget*                    SmallDialogWidget;                                        // 0x01C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxTutorialDialogWidget*                    CurrentDialogWidget;                                      // 0x01C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FGFxMenuTutorialTintClipData>        TintClips;                                                // 0x01D0(0x0010) (ZeroConstructor, Transient)
	struct FName                                       CurrentlyPlayingTutorial;                                 // 0x01E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FText                                       CachedHeaderText;                                         // 0x01E8(0x0028) (Transient)
	struct FText                                       CachedBodyText;                                           // 0x0200(0x0028) (Transient)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0218(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxTutorialWidget");
		return ptr;
	}


	void OnInputDeviceChanged(EGbxMenuInputDevice NewInputDevice);
};


// Class OakGame.GFxMinimapWidget
// 0x0210 (0x0840 - 0x0630)
class UGFxMinimapWidget : public UGbxGFxHUDWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0630(0x0010) MISSED OFFSET
	float                                              AreaWaypointToClampIconCushion;                           // 0x0640(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              NorthPseudoDistance;                                      // 0x0644(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BoundingRadius;                                           // 0x0648(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BoundTriggeringRadius;                                    // 0x064C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ClampedIconPerfCutOff;                                    // 0x0650(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   IconClampTransitionBounds;                                // 0x0654(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	float                                              MaxMapWorldTransitionTime;                                // 0x065C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class FString                                      MinimapIconPrefix;                                        // 0x0660(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FVector2D                                   OriginalNorthPosition;                                    // 0x0670(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	class UTexture2D*                                  DefaultTexture;                                           // 0x0678(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxGFxObject*                               ClampedIconStage;                                         // 0x0680(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ClampedSizeReference;                                     // 0x0688(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MailNotification;                                         // 0x0690(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               NorthTextField;                                           // 0x0698(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     NorthPseudoLocation;                                      // 0x06A0(0x000C) (BlueprintReadOnly, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x06AC(0x0004) MISSED OFFSET
	class AZoneMapViewer*                              ZoneMapViewer;                                            // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               InitializationWrapper;                                    // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MinimapTerrainObject;                                     // 0x06C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UTexture*                                    CurrentMinimapTexture;                                    // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FGbxGFxBounds                               ClampedIconStageBounds;                                   // 0x06D0(0x0010) (BlueprintReadOnly, Transient)
	TArray<struct FGFxMinimapWidgetIcon>               TrackedIcons;                                             // 0x06E0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x8];                                       // 0x06F0(0x0008) MISSED OFFSET
	struct FMinimapBoundingCircle                      TopLeftBoundingCircle;                                    // 0x06F8(0x000C) (BlueprintReadOnly, Transient)
	struct FMinimapBoundingCircle                      TopRightBoundingCircle;                                   // 0x0704(0x000C) (BlueprintReadOnly, Transient)
	struct FMinimapBoundingCircle                      BottomLeftBoundingCircle;                                 // 0x0710(0x000C) (BlueprintReadOnly, Transient)
	struct FMinimapBoundingCircle                      BottomRightBoundingCircle;                                // 0x071C(0x000C) (BlueprintReadOnly, Transient)
	TWeakObjectPtr<class AMissionTracker>              MissionTrackerRegisteredWith;                             // 0x0728(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AOakChallengeManager>         ChallengeManagerRegisteredWith;                           // 0x0730(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FTimerHandle                                RegisterTrackerTimerHandle;                               // 0x0738(0x0008) (BlueprintReadOnly, Transient)
	struct FTimerHandle                                RegisterChallengeTimerHandle;                             // 0x0740(0x0008) (BlueprintReadOnly, Transient)
	TArray<class UGbxGFxObject*>                       IconPool;                                                 // 0x0748(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0758(0x0008) MISSED OFFSET
	struct FGFxMinimapWidgetIcon                       CustomWaypointIconData;                                   // 0x0760(0x00D0) (BlueprintReadOnly, Transient)
	int                                                NextIconInstId;                                           // 0x0830(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              NorthDegreeOffset;                                        // 0x0834(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFixedMinimapRotation;                                    // 0x0838(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bNeedRefreshTrackedMissionIcons;                          // 0x0839(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x083A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMinimapWidget");
		return ptr;
	}


	void OnMinimapIconComponentEndTracking(class UOakMinimapIconComponent* MinimapIconComponent);
	void OnMinimapIconComponentBeginTracking(class UOakMinimapIconComponent* MinimapIconComponent);
	void OnHasMailChanged(bool bNewHasMail);
	void OnFixedMinimapRotationChanged(bool bNewValue);
	void OnCustomWaypointChanged(bool bDisplay, const struct FVector& WorldLocation);
	void DeferredSetupForZoneMapViewer();
};


// Class OakGame.GFxMissionCompletedNotificationWidget
// 0x0030 (0x05C0 - 0x0590)
class UGFxMissionCompletedNotificationWidget : public UGFxDisplayedNotificationWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0590(0x0008) MISSED OFFSET
	class UGbxTextField*                               MissionCompletedText;                                     // 0x0598(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxTextField*                               MissionCompletedTextShadow;                               // 0x05A0(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxTextField*                               MissionTitleText;                                         // 0x05A8(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x05B0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMissionCompletedNotificationWidget");
		return ptr;
	}

};


// Class OakGame.GFxMissionDeliveryMenu
// 0x01E0 (0x0860 - 0x0680)
class UGFxMissionDeliveryMenu : public UGbxGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0680(0x0038) MISSED OFFSET
	class UGbxGFxButton*                               AcceptButton;                                             // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               DeclineButton;                                            // 0x06C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MissionDescriptionContainer;                              // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MissionDescriptionText;                                   // 0x06D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxSlider*                               MissionDescriptionScrollBar;                              // 0x06D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MissionDescriptionGridArea;                               // 0x06E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MissionTitleText;                                         // 0x06E8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MissionLevelText;                                         // 0x06F0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MissionLocationText;                                      // 0x06F8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MultiMissionNavBar;                                       // 0x0700(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           MultiMissionPreviousHint;                                 // 0x0708(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               MultiMissionLeftArrow;                                    // 0x0710(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           MultiMissionNextHint;                                     // 0x0718(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               MultiMissionRightArrow;                                   // 0x0720(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MultiMissionMissionPipsWrapper;                           // 0x0728(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGbxGFxButton*>                       MultiMissionMissionPips;                                  // 0x0730(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UGbxTextField*                               DifficultyText;                                           // 0x0740(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               PlacardBG;                                                // 0x0748(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               PlacardTop;                                               // 0x0750(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               PlacardElementsBG;                                        // 0x0758(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               PlacardTopText;                                           // 0x0760(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ModalDetails;                                             // 0x0768(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               FriendAmountText;                                         // 0x0770(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               FriendsOnMissionText;                                     // 0x0778(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               DescriptionCycleGlyph;                                    // 0x0780(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UPlayerBalanceStateComponent> PlayerBalanceState;                                       // 0x0788(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UClass*                                      DisplayedMissionData;                                     // 0x0790(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      DisplayedMissionGiver;                                    // 0x0798(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EMissionDeliveryMenuDisplayState                   CurrentDisplayState;                                      // 0x07A0(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x07A1(0x0007) MISSED OFFSET
	struct FText                                       CachedMissionDescription;                                 // 0x07A8(0x0028) (BlueprintReadOnly, Transient)
	struct FText                                       CachedMissionTitle;                                       // 0x07C0(0x0028) (BlueprintReadOnly, Transient)
	struct FText                                       CachedMissionLocation;                                    // 0x07D8(0x0028) (BlueprintReadOnly, Transient)
	int                                                CachedMissionLevel;                                       // 0x07F0(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x07F4(0x0004) MISSED OFFSET
	struct FText                                       CachedMissionLevelText;                                   // 0x07F8(0x0028) (BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0810(0x0018) MISSED OFFSET
	class AMissionTracker*                             CurrentMissionTracker;                                    // 0x0828(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FTimerHandle                                TimerHandle_PopulateFriendNames;                          // 0x0830(0x0008) (BlueprintReadOnly)
	struct FText                                       WaitingForNameString;                                     // 0x0838(0x0028) (Edit, BlueprintReadOnly)
	struct FName                                       ProjectionFXWidgetName;                                   // 0x0850(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0858(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMissionDeliveryMenu");
		return ptr;
	}


	void OnRejectMission(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnAcceptMission(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void MissionDeliveryEvent__DelegateSignature(bool bMissionAccepted, bool bEmergencyExit, int MissionIndex, class AActor* MissionGiver);
};


// Class OakGame.GFxMissionLogNavCell
// 0x0000 (0x0310 - 0x0310)
class UGFxMissionLogNavCell : public UGbxGFxListCell
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMissionLogNavCell");
		return ptr;
	}

};


// Class OakGame.GFxMissionLogObjective
// 0x0000 (0x0310 - 0x0310)
class UGFxMissionLogObjective : public UGbxGFxListCell
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMissionLogObjective");
		return ptr;
	}

};


// Class OakGame.GFxMissionLogDescriptionBox
// 0x0090 (0x0200 - 0x0170)
class UGFxMissionLogDescriptionBox : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                               ActiveMissionIconClip;                                    // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0178(0x0010) MISSED OFFSET
	class UGbxTextField*                               InfoPanelLabelClip;                                       // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               InfoPanelSecondaryLabelClip;                              // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    ObjectiveList;                                            // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxSlider*                               DescriptionSlider;                                        // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           ReplayAudioHint;                                          // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MissionTimerClip;                                         // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               DescriptionScrollingBoxClip;                              // 0x01B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxSlider*                               DescriptionScrollingBoxScrollbarClip;                     // 0x01C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               DescriptionScrollingBoxMaskClip;                          // 0x01C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AMissionTracker>              MissionTracker;                                           // 0x01D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGFxMissionLogMenu>           OwnerMissionLog;                                          // 0x01D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsVisible;                                               // 0x01E0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x01E1(0x0007) MISSED OFFSET
	struct FText                                       PromptClipReplay;                                         // 0x01E8(0x0028)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMissionLogDescriptionBox");
		return ptr;
	}

};


// Class OakGame.GFxMissionLogMenu
// 0x0310 (0x09C0 - 0x06B0)
class UGFxMissionLogMenu : public UGFxStatusMenuSubmenu
{
public:
	bool                                               bUseDebug;                                                // 0x06B0(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x06B1(0x0007) MISSED OFFSET
	class FString                                      HeaderListItem;                                           // 0x06B8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      ActiveMissionListItem;                                    // 0x06C8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      CompletedMissionListItem;                                 // 0x06D8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FColor                                      CurrentObjectiveHeaderColor;                              // 0x06E8(0x0004) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FColor                                      CurrentObjectiveEntryColor;                               // 0x06EC(0x0004) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FColor                                      OptionalObjectiveHeaderColor;                             // 0x06F0(0x0004) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FColor                                      OptionalObjectiveEntryColor;                              // 0x06F4(0x0004) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   LogListItemSpacing;                                       // 0x06F8(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FName                                       EchoDeviceScreen_MissionVOPlayed;                         // 0x0700(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       EchoDeviceScreen_EchoLogPlayed;                           // 0x0708(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       EchoDeviceScreen_EridianLogPlayed;                        // 0x0710(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       EchoDeviceScreen_TyphonLogPlayed;                         // 0x0718(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class FString                                      EchoNetSubmenuName;                                       // 0x0720(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FText                                       EridianCategoryName;                                      // 0x0730(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       TyphonCategoryName;                                       // 0x0748(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       EchoCategoryName;                                         // 0x0760(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       MissionCategoryName;                                      // 0x0778(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       SocialWidgetViewRoster;                                   // 0x0790(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       EmptyLogString;                                           // 0x07A8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       FilterString;                                             // 0x07C0(0x0028) (Edit, BlueprintReadOnly)
	struct FGbxGFxMediaPlayerConfig                    MediaPlayerConfig;                                        // 0x07D8(0x0030) (Edit, BlueprintReadOnly)
	TMap<EGFxMissionLogNavType, struct FMissionLogEchoDeviceSettings> EchoDeviceSettings;                                       // 0x0808(0x0050) (Edit, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0858(0x0008) MISSED OFFSET
	class AOakPlayerController*                        CachedPlayerController;                                   // 0x0860(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bEchoLogWasPlaying;                                       // 0x0868(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0869(0x0007) MISSED OFFSET
	class UGbxTextField*                               EmptyTextField;                                           // 0x0870(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FText                                       FilterName;                                               // 0x0878(0x0028) (BlueprintReadOnly, Transient)
	class UGbxGFxMediaPlayer*                          MediaPlayer;                                              // 0x0890(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ContentClip;                                              // 0x0898(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    NavBarList;                                               // 0x08A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           NavBarHint;                                               // 0x08A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           NavBarHintPrev;                                           // 0x08B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           NavBarHintNext;                                           // 0x08B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               FilterTextClip;                                           // 0x08C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           FilterHintClip;                                           // 0x08C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x08D0(0x0010) MISSED OFFSET
	class UGFxEchologWidgetBase*                       AudioLogClip;                                             // 0x08E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CategoryTextField;                                        // 0x08E8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x18];                                      // 0x08F0(0x0018) MISSED OFFSET
	class UGFxMissionLogDescriptionBox*                MissionDescriptionBoxClip;                                // 0x0908(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxMissionLogDescriptionBox*                LogDescriptionBoxClip;                                    // 0x0910(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    MissionListBox;                                           // 0x0918(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FGFxMissionLogMissionItem>           MissionBoxItems;                                          // 0x0920(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData05[0x10];                                      // 0x0930(0x0010) MISSED OFFSET
	class UGbxMenuData*                                PlayerDetailsMenuData;                                    // 0x0940(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EGFxMissionLogNavType                              CurrentNav;                                               // 0x0948(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EGFxMissionLogFilterType                           CurrentFilterType;                                        // 0x0949(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x16];                                      // 0x094A(0x0016) MISSED OFFSET
	TWeakObjectPtr<class AMissionTracker>              MyMissionTracker;                                         // 0x0960(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UOakPlayerMissionComponent>   PlayerMissionComponent;                                   // 0x0968(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGbxGFxObject*                               SocialWidget;                                             // 0x0970(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               SocialWidgetHeader;                                       // 0x0978(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           SocialWidgetHint;                                         // 0x0980(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    SocialWidgetScrollingList;                                // 0x0988(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x30];                                      // 0x0990(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMissionLogMenu");
		return ptr;
	}


	void UpdatePauseHint(bool bShouldAddToHintBar);
	void ShowFriendsOnMissionDialog();
	void SetLookingAtMissionInfo(const struct FGFxMissionLogMissionItem& MissionInfo);
	void OnNavCellSelectionChanged(class UGbxGFxListCell* NewSelectedItem);
	void OnMissionSelectionChanged(class UGbxGFxListCell* ListItem);
	void OnMissionListItemClicked(class UGbxGFxListCell* ListItem, const struct FGbxMenuInputEvent& InputInfo);
	void OnFriendSelectedToJoin(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnEchoStarted(class UCharacterEchoData* CharacterData, class UPerformanceEchoData* PerformanceData, const class FString& MoodKeyframe, const class FString& VoGMoodKey, EVoiceOfGodSpeaker VoGSpeakerID, bool bIsNewEcho);
	void OnEchoFinished(class UCharacterEchoData* CharacterData, class UPerformanceEchoData* PerformanceData, bool bCompleted);
};


// Class OakGame.GFxMissionLogMenuItemCell
// 0x0050 (0x0360 - 0x0310)
class UGFxMissionLogMenuItemCell : public UGbxGFxListCell
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0310(0x0030) MISSED OFFSET
	class UGbxTextField*                               FriendsOnMissionTextField;                                // 0x0340(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           HintClip;                                                 // 0x0348(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ActiveMissionIconClip;                                    // 0x0350(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ProgressTextClip;                                         // 0x0358(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMissionLogMenuItemCell");
		return ptr;
	}

};


// Class OakGame.GFxSocialWidgetCell
// 0x0000 (0x0310 - 0x0310)
class UGFxSocialWidgetCell : public UGbxGFxListCell
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSocialWidgetCell");
		return ptr;
	}

};


// Class OakGame.GFxMissionLogMenuDescriptionCell
// 0x0000 (0x0310 - 0x0310)
class UGFxMissionLogMenuDescriptionCell : public UGbxGFxListCell
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMissionLogMenuDescriptionCell");
		return ptr;
	}

};


// Class OakGame.GFxMissionTrackerHUDWidget
// 0x0200 (0x0830 - 0x0630)
class UGFxMissionTrackerHUDWidget : public UGbxGFxHUDWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0630(0x0008) MISSED OFFSET
	class UHUDNotificationAsset*                       NewMissionNotificationAsset;                              // 0x0638(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UHUDNotificationAsset*                       MissionCompletedNotificationAsset;                        // 0x0640(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       RestartMissionText;                                       // 0x0648(0x0028) (Edit, BlueprintReadOnly)
	float                                              MaxTimeTillReturnToTrackedMission;                        // 0x0660(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0664(0x000C) MISSED OFFSET
	float                                              MissionActivateCheatSuppressionDuration;                  // 0x0670(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxNormalRewardsDisplayTime;                              // 0x0674(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxBonusRewardsDisplayTime;                               // 0x0678(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x067C(0x000C) MISSED OFFSET
	class UClass*                                      TempTrackedMission;                                       // 0x0688(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FTimerHandle                                TimerHandle;                                              // 0x0690(0x0008) (BlueprintReadOnly, Transient)
	class AOakMissionTracker*                          MissionTracker;                                           // 0x0698(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               TaskContainer;                                            // 0x06A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x70];                                      // 0x06A8(0x0070) MISSED OFFSET
	TArray<class UGFxMissionTrackerSlot*>              ObjectiveSlots;                                           // 0x0718(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UGbxGFxObject*                               MissionTrackerContainerInner;                             // 0x0728(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x90];                                      // 0x0730(0x0090) MISSED OFFSET
	TArray<struct FGFxMissionTrackerRewardSlot>        RewardSlots;                                              // 0x07C0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UInventoryCategoryData*                      MoneyCurrency;                                            // 0x07D0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UInventoryCategoryData*                      EridiumCurrency;                                          // 0x07D8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FGFxMissionTrackerRewardQueueData>   RewardsToDisplay;                                         // 0x07E0(0x0010) (BlueprintReadOnly, ZeroConstructor)
	class UMissionObjectiveSet*                        CachedMissionObjectiveSet;                                // 0x07F0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxMissionTrackerSlot*                      CurrentTimerFieldSlot;                                    // 0x07F8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxMissionTrackerSlot*                      CurrentProgressBarSlot;                                   // 0x0800(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x28];                                      // 0x0808(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMissionTrackerHUDWidget");
		return ptr;
	}


	void UpdateTracker(class UClass* TrackedMission);
	void SetTrackerAfterDelay();
	void OnMissionActivatedCheatStop();
	void OnMissionActivatedCheatStart();
	void OnInputDeviceChanged();
	void extRewardPanelFadeOutFinished();
};


// Class OakGame.GFxMissionTrackerSlot
// 0x0140 (0x02B0 - 0x0170)
class UGFxMissionTrackerSlot : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0xD0];                                      // 0x0170(0x00D0) MISSED OFFSET
	struct FText                                       CurrentText;                                              // 0x0240(0x0028) (Transient)
	unsigned char                                      UnknownData01[0x58];                                      // 0x0258(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMissionTrackerSlot");
		return ptr;
	}

};


// Class OakGame.GFxModalTutorialDataAsset
// 0x0048 (0x0078 - 0x0030)
class UGFxModalTutorialDataAsset : public UGbxDataAsset
{
public:
	struct FText                                       Header;                                                   // 0x0030(0x0028) (Edit)
	struct FText                                       Body;                                                     // 0x0048(0x0028) (Edit)
	class FString                                      ImageFrameName;                                           // 0x0060(0x0010) (Edit, ZeroConstructor)
	float                                              LockoutDelay;                                             // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUpsellContent;                                           // 0x0074(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bShowEvenIfTutorialsAreDisabled;                          // 0x0075(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0076(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxModalTutorialDataAsset");
		return ptr;
	}

};


// Class OakGame.GFxModalTutorial
// 0x00F0 (0x0770 - 0x0680)
class UGFxModalTutorial : public UGbxGFxMenu
{
public:
	struct FText                                       WaitString;                                               // 0x0680(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ExitString;                                               // 0x0698(0x0028) (Edit, BlueprintReadOnly)
	float                                              TintScale;                                                // 0x06B0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TintOffset;                                               // 0x06B4(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x80];                                      // 0x06B8(0x0080) MISSED OFFSET
	class UGbxGFxHintWidget*                           ExitHint;                                                 // 0x0738(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0740(0x000C) MISSED OFFSET
	bool                                               bAllowMenuAdvance;                                        // 0x074C(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x13];                                      // 0x074D(0x0013) MISSED OFFSET
	class FString                                      ImageFrameName;                                           // 0x0760(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxModalTutorial");
		return ptr;
	}


	void OnNumPlayersChanged(int NewNumPlayers);
	void OnLockoutDelayComplete();
	void extOnIntroComplete();
};


// Class OakGame.GFxMultiplayerMenu
// 0x00C0 (0x0740 - 0x0680)
class UGFxMultiplayerMenu : public UGbxGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0680(0x0020) MISSED OFFSET
	class UGbxGFxGridScrollingList*                    ContentPanel;                                             // 0x06A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListCell*                             LANGamesItem;                                             // 0x06A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListCell*                             OnlineGamesItem;                                          // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListCell*                             NetworkOptionsItem;                                       // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TSoftObjectPtr<class UGbxMenuData>                 NetworkOptionsMenuData;                                   // 0x06C0(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxMenuData>                 LANBrowserMenuData;                                       // 0x06E8(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxMenuData>                 EchoNetMenuData;                                          // 0x0710(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	class UGbxGFxObject*                               AlternateBkg;                                             // 0x0738(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMultiplayerMenu");
		return ptr;
	}


	void OnSwitchProfileClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnSplitscreenControllerSelected(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnSplitscreenClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnShiftClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnRosterClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnNetworkOptionsClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnMatchmakingClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnManagePartyClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnLANBrowserClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxNameplate
// 0x01C0 (0x0330 - 0x0170)
class UGFxNameplate : public UGbxGFxObject
{
public:
	struct FText                                       LevelPrefix;                                              // 0x0170(0x0028) (Edit)
	EEdgeFlashType                                     BarsFlashType;                                            // 0x0188(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0189(0x0007) MISSED OFFSET
	class UGbxGFxObject*                               OverLevelIconPlacement;                                   // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               OverLevelIcon;                                            // 0x0198(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxObject*                               NameTextContainer;                                        // 0x01A0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxObject*                               NameplateBarsContainer;                                   // 0x01A8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxProgressBar*                          BarPrimary;                                               // 0x01B0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxProgressBar*                          BarSecondary;                                             // 0x01B8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxProgressBar*                          BarTertiary;                                              // 0x01C0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxTextField*                               LevelText;                                                // 0x01C8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxTextField*                               CenteredNameText;                                         // 0x01D0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxTextField*                               LeftNameText;                                             // 0x01D8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FNameplateBarData                           NameplateDataArray[0x3];                                  // 0x01E0(0x0028)
	class UCurveFloat*                                 RangeFadeCurve;                                           // 0x0258(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              FadeStartDistance;                                        // 0x0260(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              FadeEndDistance;                                          // 0x0264(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              BracketFadeCooldown;                                      // 0x0268(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x026C(0x0004) MISSED OFFSET
	TScriptInterface<class UNameplateInfoProviderInterface> CurrentTarget;                                            // 0x0270(0x0010) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0280(0x0010) MISSED OFFSET
	class UDamageComponent*                            CurrentTargetDamageComponent;                             // 0x0290(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FText                                       EnemyName;                                                // 0x0298(0x0028)
	ENameplateStyle                                    NameplateStyle;                                           // 0x02B0(0x0001) (ZeroConstructor, IsPlainOldData)
	ETargetedNameplateType                             DesiredTargetedNameplateType;                             // 0x02B1(0x0001) (ZeroConstructor, IsPlainOldData)
	ETargetedNameplateState                            TargetedNameplateState;                                   // 0x02B2(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x02B3(0x0005) MISSED OFFSET
	class FString                                      TargetTextMarkupString;                                   // 0x02B8(0x0010) (ZeroConstructor)
	class FString                                      ImmuneClipID;                                             // 0x02C8(0x0010) (ZeroConstructor, Transient)
	class FString                                      ImmuneAnimation;                                          // 0x02D8(0x0010) (ZeroConstructor, Transient)
	class FString                                      StopAnimationFrame;                                       // 0x02E8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData04[0x38];                                      // 0x02F8(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxNameplate");
		return ptr;
	}


	void OnTeamUpdated(class UTeamComponent* NewTeam, class UTeam* OldTeam);
	void OnPrimaryCharacterChanged(class AGbxCharacter* Character);
	void OnOwningPlayerLevelChanged(int OldExperienceLevel, int NewExperienceLevel);
	void OnNameUpdated();
	void OnLevelChanged(int OldExperienceLevel, int NewExperienceLevel);
	TScriptInterface<class UNameplateInfoProviderInterface> GetTargetInterface();
	void ForceUpdateFocusableBars();
	void extDeathAnimComplete();
	void AnimateBar(int Index, const class FString& AnimationToPlay);
};


// Class OakGame.GFxNetworkOptions
// 0x0048 (0x0100 - 0x00B8)
class UGFxNetworkOptions : public UGFxOptionBase
{
public:
	class UGbxGFxListItemSpinner*                      NetworkModeSpinner;                                       // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      CrossplayStateSpinner;                                    // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x00C8(0x0008) MISSED OFFSET
	class UGbxGFxListItemSpinner*                      FriendSyncStateSpinner;                                   // 0x00D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00D8(0x0004) MISSED OFFSET
	bool                                               bForceStreamingServiceReset;                              // 0x00DC(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x23];                                      // 0x00DD(0x0023) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxNetworkOptions");
		return ptr;
	}


	void OnTradeRequestSpinner(class UGbxGFxListItemSpinner* Item);
	void OnToastLifetimeChanged(class UGbxGFxListItemSpinner* Item);
	void OnToastFrequencyChanged(class UGbxGFxListItemSpinner* Item);
	void OnStreamingServiceChanged(class UGbxGFxListItemSpinner* Item);
	void OnRareChestEventEnabledChanged(class UGbxGFxListItemSpinner* Item);
	void OnPinataEventEnabledChanged(class UGbxGFxListItemSpinner* Item);
	void OnNetworkTypeChanged(class UGbxGFxListItemSpinner* Item);
	void OnMoxxisDrinkEventEnabledChanged(class UGbxGFxListItemSpinner* Item);
	void OnMoxxisDrinkEventBitsProductIdChanged(class UGbxGFxListItemSpinner* Item);
	void OnMatchmakingRegionChanged(class UGbxGFxListItemSpinner* Item);
	void OnIncreasedChanceForSubscribersChanged(class UGbxGFxListItemSpinner* Item);
	void OnHideTextChatSpinner(class UGbxGFxListItemSpinner* Item);
	void OnFriendSyncStateChanged(class UGbxGFxListItemSpinner* Item);
	void OnExtractionEventEnabledChanged(class UGbxGFxListItemSpinner* Item);
	void OnCrossplayStateChanged(class UGbxGFxListItemSpinner* Item);
	void OnBadassEventEnabledChanged(class UGbxGFxListItemSpinner* Item);
	void OnBadassEventCooldownChanged(class UGbxGFxListItemSpinner* Item);
};


// Class OakGame.GFxNewDLCMenuData
// 0x0000 (0x00C0 - 0x00C0)
class UGFxNewDLCMenuData : public UOakGFxMenuData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxNewDLCMenuData");
		return ptr;
	}

};


// Class OakGame.GFxNewDLCCell
// 0x0050 (0x0360 - 0x0310)
class UGFxNewDLCCell : public UGbxGFxListCell
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0310(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxNewDLCCell");
		return ptr;
	}

};


// Class OakGame.GFxNewDLCMenu
// 0x0030 (0x06B0 - 0x0680)
class UGFxNewDLCMenu : public UGbxGFxMenu
{
public:
	class UGbxTextField*                               TitleText;                                                // 0x0680(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CategoryText;                                             // 0x0688(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TipsText;                                                 // 0x0690(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               StartButton;                                              // 0x0698(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           StartButtonHint;                                          // 0x06A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    DLCList;                                                  // 0x06A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxNewDLCMenu");
		return ptr;
	}


	void OnDLCListSelectionClicked(class UGbxGFxListCell* ClickedItem, const struct FGbxMenuInputEvent& InputInfo);
	void OnDLCListSelectionChanged(class UGbxGFxListCell* Item);
};


// Class OakGame.GbxGFxNewGameSettingsButton
// 0x0010 (0x02E0 - 0x02D0)
class UGbxGFxNewGameSettingsButton : public UGbxGFxButton
{
public:
	class UGbxGFxObject*                               Sparkle;                                                  // 0x02D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x02D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxGFxNewGameSettingsButton");
		return ptr;
	}

};


// Class OakGame.GFxNewGameSettings
// 0x01F0 (0x0870 - 0x0680)
class UGFxNewGameSettings : public UGbxGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0680(0x0010) MISSED OFFSET
	TSoftObjectPtr<class UGbxMenuData>                 MainMenuMenuData;                                         // 0x0690(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       StartGameAudioEventName;                                  // 0x06B8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       StoryDifficultyAudioEventName;                            // 0x06C0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NormalDifficultyAudioEventName;                           // 0x06C8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       EasierDifficultyText;                                     // 0x06D0(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       NormalDifficultyText;                                     // 0x06E8(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       RightPanelDifficultyTitleText;                            // 0x0700(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       RightPanelLootModeTitleText;                              // 0x0718(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       RightPanelDifficultyText;                                 // 0x0730(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       RightPanelLootModeText;                                   // 0x0748(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       RightPanelSelectDlcTitleText;                             // 0x0760(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       RightPanelSelectDlcBodyText;                              // 0x0778(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       RightPanelSelectCharacterTitleText;                       // 0x0790(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       RightPanelSelectCharacterBodyText;                        // 0x07A8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       StartFromNewGameText;                                     // 0x07C0(0x0028) (Edit, BlueprintReadOnly)
	class UGbxGFxObject*                               OptionPannel;                                             // 0x07D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CategoryText;                                             // 0x07E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxNewGameSettingsButton*                OptionButton1;                                            // 0x07E8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxNewGameSettingsButton*                OptionButton2;                                            // 0x07F0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TipsLabel;                                                // 0x07F8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               StartButton;                                              // 0x0800(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           StartButtonHint;                                          // 0x0808(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TooltipTitle;                                             // 0x0810(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ToolTipText;                                              // 0x0818(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    ChoiceListClip;                                           // 0x0820(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0828(0x0010) MISSED OFFSET
	TWeakObjectPtr<class AMenuMapMenuFlow>             MenuMapMenuFlowActor;                                     // 0x0838(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x30];                                      // 0x0840(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxNewGameSettings");
		return ptr;
	}


	void OnStartButtonClicked(class UGbxGFxButton* ClickedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnOption2Focused(class UGbxGFxButton* FocusedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnOption2Clicked(class UGbxGFxButton* ClickedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnOption1Focused(class UGbxGFxButton* FocusedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnOption1Clicked(class UGbxGFxButton* ClickedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnChoiceListItemSelected(class UGbxGFxListCell* Item);
	void OnChoiceListItemClicked(class UGbxGFxListCell* ClickedItem, const struct FGbxMenuInputEvent& InputInfo);
	void extUpdateLayout();
	void extOnUITransitionCompleted();
	void extOnStartGame();
	void extOnMenuHid();
	void extClearTipsLabel();
};


// Class OakGame.GFxNewGameListButton
// 0x0030 (0x0340 - 0x0310)
class UGFxNewGameListButton : public UGbxGFxListCell
{
public:
	class UGbxTextField*                               CharacterLevelNumClip;                                    // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CharacterLevelLabelClip;                                  // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               DlcLabelClip;                                             // 0x0320(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0328(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxNewGameListButton");
		return ptr;
	}

};


// Class OakGame.GFxNewMissionNotificationWidget
// 0x0050 (0x05E0 - 0x0590)
class UGFxNewMissionNotificationWidget : public UGFxDisplayedNotificationWidget
{
public:
	struct FVector2D                                   HoldToTrackGlyphSizeOverride;                             // 0x0590(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FText                                       HoldToTrackPromptText;                                    // 0x0598(0x0028) (Edit, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x8];                                       // 0x05B0(0x0008) MISSED OFFSET
	class UGbxTextField*                               MissionTitleText;                                         // 0x05B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               NewMissionText;                                           // 0x05C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           ContextSensitivePrompt;                                   // 0x05C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ContextSensitivePromptBackground;                         // 0x05D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x05D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxNewMissionNotificationWidget");
		return ptr;
	}


	void TrackNotificationTarget();
	void OnInputDeviceChanged();
};


// Class OakGame.GFxNewsMenuItemDataAsset
// 0x0048 (0x0078 - 0x0030)
class UGFxNewsMenuItemDataAsset : public UGbxDataAsset
{
public:
	struct FText                                       Header;                                                   // 0x0030(0x0028) (Edit)
	struct FText                                       Body;                                                     // 0x0048(0x0028) (Edit)
	class UTexture*                                    BackgroundImage;                                          // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture*                                    ForegroundImage;                                          // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDisplayItem;                                             // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxNewsMenuItemDataAsset");
		return ptr;
	}

};


// Class OakGame.GFxNewsMenu
// 0x0030 (0x06B0 - 0x0680)
class UGFxNewsMenu : public UGbxGFxMenu
{
public:
	class UGbxTextField*                               HeaderText;                                               // 0x0680(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               BodyText;                                                 // 0x0688(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxNewsMenuItemDataAsset*                   NewsData;                                                 // 0x0690(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0698(0x0008) MISSED OFFSET
	class UTexture*                                    CachedForegroundNewsImage;                                // 0x06A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UTexture*                                    CachedBackgroundNewsImage;                                // 0x06A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxNewsMenu");
		return ptr;
	}

};


// Class OakGame.GFxNewsWidget
// 0x00C0 (0x0390 - 0x02D0)
class UGFxNewsWidget : public UGbxGFxButton
{
public:
	struct FTimerHandle                                UnhoveredTimerHandle;                                     // 0x02D0(0x0008) (Transient)
	bool                                               bIsHoveredByArrowButton;                                  // 0x02D8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsHoveredBySelf;                                         // 0x02D9(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x02DA(0x0006) MISSED OFFSET
	class UGFxNewsWidgetNavCircles*                    NavigationDots;                                           // 0x02E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               NewsContainer;                                            // 0x02E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FTransition                                 LeftToRight;                                              // 0x02F0(0x0020) (Transient)
	struct FTransition                                 RightToLeft;                                              // 0x0310(0x0020) (Transient)
	class UGbxTextField*                               NewsHint;                                                 // 0x0330(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGFxNewsItem*>                        NewsItemClips;                                            // 0x0338(0x0010) (ZeroConstructor, Transient)
	TWeakObjectPtr<class UGbxGFxButton>                NavLeftButton;                                            // 0x0348(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGbxGFxButton>                NavRightButton;                                           // 0x0350(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGbxGFxObject>                VisibilityClip;                                           // 0x0358(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bVisibilityClipIsVisible;                                 // 0x0360(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2F];                                      // 0x0361(0x002F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxNewsWidget");
		return ptr;
	}


	void OnUnhoverTimeout();
};


// Class OakGame.GFxNewsItem
// 0x0100 (0x03D0 - 0x02D0)
class UGFxNewsItem : public UGbxGFxButton
{
public:
	class UGbxGFxObject*                               BackgroundClip;                                           // 0x02D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               LoadingCircleClip;                                        // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLoadedNewsImage*                         NewsImageClip;                                            // 0x02E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      FrameAndExternalTextureName;                              // 0x02E8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0xD8];                                      // 0x02F8(0x00D8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxNewsItem");
		return ptr;
	}

};


// Class OakGame.GFxNewsWidgetWrapper
// 0x0020 (0x0190 - 0x0170)
class UGFxNewsWidgetWrapper : public UGbxGFxObject
{
public:
	class UGFxNewsWidget*                              NewsWidgetClip;                                           // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               NavLeftButtonClip;                                        // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               NavRightButtonClip;                                       // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0188(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxNewsWidgetWrapper");
		return ptr;
	}


	void OnNavigationButtonUnhovered(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnNavigationButtonHovered(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnNavigationButtonClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxNewsWidgetNavCircles
// 0x0020 (0x0190 - 0x0170)
class UGFxNewsWidgetNavCircles : public UGbxGFxObject
{
public:
	TArray<class UGbxGFxButton*>                       CircleClipButtons;                                        // 0x0170(0x0010) (ZeroConstructor, Transient)
	class UGFxNewsWidget*                              NewsWidgetClip;                                           // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0188(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxNewsWidgetNavCircles");
		return ptr;
	}


	void OnCircleButtonClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxLoadedNewsImage
// 0x0010 (0x01B0 - 0x01A0)
class UGFxLoadedNewsImage : public UGbxGFxMovieLoader
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01A0(0x0008) MISSED OFFSET
	class UGbxGFxObject*                               NewsFrameClip;                                            // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxLoadedNewsImage");
		return ptr;
	}


	void OnNewsImageLoadComplete(class UGbxGFxMovieLoader* MovieLoader);
};


// Class OakGame.GFxNewUWidget
// 0x00E0 (0x0710 - 0x0630)
class UGFxNewUWidget : public UGbxGFxHUDWidget
{
public:
	class FString                                      GFxKEY_TitleField;                                        // 0x0630(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      GFxKEY_DescriptionField;                                  // 0x0640(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      GFxKEY_FeeField;                                          // 0x0650(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FText                                       TitleText;                                                // 0x0660(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       DescriptionText;                                          // 0x0678(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       FeeText;                                                  // 0x0690(0x0028) (Edit, BlueprintReadOnly)
	struct FName                                       OnShowSoundEntryName;                                     // 0x06A8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OnHideSoundEntryName;                                     // 0x06B0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TimeBeforeHide;                                           // 0x06B8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x54];                                      // 0x06BC(0x0054) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxNewUWidget");
		return ptr;
	}


	void OnOwnerResurrected(int CashLost);
};


// Class OakGame.GFxNotificationWidget
// 0x01B0 (0x07E0 - 0x0630)
class UGFxNotificationWidget : public UGbxGFxHUDWidget
{
public:
	float                                              MaxWidgetDisplayTime;                                     // 0x0630(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0634(0x0004) MISSED OFFSET
	TArray<struct FGFxNotificationQueueListItem>       QueduedNotifications;                                     // 0x0638(0x0010) (BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0648(0x0008) MISSED OFFSET
	struct FGFxNotificationQueueListItem               ActiveNotification;                                       // 0x0650(0x0050) (BlueprintReadOnly)
	unsigned char                                      UnknownData02[0x8];                                       // 0x06A0(0x0008) MISSED OFFSET
	struct FGFxNotificationQueueListItem               CurrentError;                                             // 0x06A8(0x0050) (BlueprintReadOnly)
	unsigned char                                      UnknownData03[0xE8];                                      // 0x06F8(0x00E8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxNotificationWidget");
		return ptr;
	}


	void OnWidgetHidden(class UGFxDisplayedNotificationWidget* Widget);
	void OnHUDErrorNotification(const struct FText& Reason);
	void OnGrenadeThrowFailed(EGrenadeThrowFailureReason FailureReason);
	void DisplayNotificationWithId(class UHUDNotificationAsset* Asset, unsigned char NotificationId, const struct FText& MESSAGE, int NotificationPriority, class UClass* TrackedNotificationTarget, bool bMakeActiveImmediately, bool bAbortIfNotImmediatelyActive);
	void DisplayNotification(class UHUDNotificationAsset* Asset, const struct FText& MESSAGE, int NotificationPriority, class UClass* TrackedNotificationTarget, bool bMakeActiveImmediately);
	void DisplayError(const struct FText& MESSAGE);
	void ClearNotifications();
};


// Class OakGame.GFxOakLegalScreenMenu
// 0x0070 (0x06F0 - 0x0680)
class UGFxOakLegalScreenMenu : public UGbxGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0680(0x0010) MISSED OFFSET
	float                                              DelayBeforeInputSkipScreen;                               // 0x0690(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DelayBeforeAutoSkipScreen;                                // 0x0694(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       LegalText;                                                // 0x0698(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       LegalTextPC;                                              // 0x06B0(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	class UGbxGFxObject*                               LogosWrapper;                                             // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x06D0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxOakLegalScreenMenu");
		return ptr;
	}


	void OnLegalScreenTimerExpired();
	void EnableInputToSkipScreen();
};


// Class OakGame.GFxOakMainMenu
// 0x0190 (0x0B60 - 0x09D0)
class UGFxOakMainMenu : public UGFxMainAndPauseBaseMenu
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x09D0(0x0008) MISSED OFFSET
	class UMaterialInterface*                          DarkenBackgroundMaterial;                                 // 0x09D8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DarkenBackgroundTransitionTime;                           // 0x09E0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x09E4(0x0004) MISSED OFFSET
	struct FText                                       SecondPlaythroughTitleText;                               // 0x09E8(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       SecondPlaythroughMessageText;                             // 0x0A00(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	float                                              MaxRotationSpeed;                                         // 0x0A18(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MouseMaxRotationSpeed;                                    // 0x0A1C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxSecondsToReachTargetSpeed;                             // 0x0A20(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0A24(0x0004) MISSED OFFSET
	class UGbxGFxObject*                               MainMenuContainer;                                        // 0x0A28(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x40];                                      // 0x0A30(0x0040) MISSED OFFSET
	struct FText                                       HostBreadcrumbDisplayText;                                // 0x0A70(0x0028) (BlueprintReadOnly, Transient)
	TArray<class UGFxNewsMenuItemDataAsset*>           NewsItemsToView;                                          // 0x0A88(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UGbxGFxMouseCapturePanel*                    MouseCapturePanel;                                        // 0x0A98(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0xB0];                                      // 0x0AA0(0x00B0) MISSED OFFSET
	class UGbxGFxDialogBox*                            CloudSaveProgressDialog;                                  // 0x0B50(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0B58(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxOakMainMenu");
		return ptr;
	}


	void OnUploadSaveClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnTrueVaultHunterClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnTestMapsClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnStoreClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnStartGameClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnStartDLCClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnSplitscreenClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnShiftClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnRosterClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnQuitGameClicked(const struct FGbxMenuInputEvent& InputInfo);
	void OnQuitClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnQuitChoiceMade(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnPlayClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnOtherButtonClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnOptionsClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnNewPlaythroughClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnMultiplayerDebugClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnMatchmakingClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnLoadGameClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnLeaveGroupClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnLanGamesClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnEnableLeaguesClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnDownloadSaveClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnDebugClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnCreditsClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnContinueClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnChoiceMadeTravelToUnreachableDLC(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnChoiceMadeSkipPlayableIntro(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnBehindTheScenesClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnBehindTheScenesCategoryClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnBackOutToTitleChoiceMade(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxOakMenuScrollingList
// 0x0000 (0x0320 - 0x0320)
class UGFxOakMenuScrollingList : public UGbxGFxGridScrollingList
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxOakMenuScrollingList");
		return ptr;
	}

};


// Class OakGame.GFxOakTitleScreenMenuData
// 0x0010 (0x00D0 - 0x00C0)
class UGFxOakTitleScreenMenuData : public UGbxGFxMenuData
{
public:
	class UGbxMenuData*                                MenuToSwitchTo;                                           // 0x00C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxGFxMenuData*                             FirstBootMenu;                                            // 0x00C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxOakTitleScreenMenuData");
		return ptr;
	}

};


// Class OakGame.GFxOakTitleScreenMenu
// 0x0070 (0x06F0 - 0x0680)
class UGFxOakTitleScreenMenu : public UGbxGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0680(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSwitchToNextMenu;                                       // 0x0690(0x0010) (BlueprintReadOnly, ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x28];                                      // 0x06A0(0x0028) MISSED OFFSET
	class UGbxTextField*                               GFxHintText;                                              // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x06D0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxOakTitleScreenMenu");
		return ptr;
	}


	void OnQuitChoiceMade(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxRolloutMessage
// 0x0370 (0x09A0 - 0x0630)
class UGFxRolloutMessage : public UGbxGFxHUDWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0630(0x0010) MISSED OFFSET
	struct FUIManagerMessage                           CachedMessage;                                            // 0x0640(0x0168) (BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData01[0xB8];                                      // 0x07A8(0x00B8) MISSED OFFSET
	class UGbxGFxHintWidget*                           GlyphField;                                               // 0x0860(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0868(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnShowMessageComplete;                                    // 0x0870(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnHideMessageComplete;                                    // 0x0880(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference)
	float                                              MinimumDisplaySeconds;                                    // 0x0890(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0894(0x0004) MISSED OFFSET
	class FString                                      InnerInstanceString;                                      // 0x0898(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      EventIconInstanceName;                                    // 0x08A8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      TitleFieldInstanceName;                                   // 0x08B8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      DescriptionFieldInstanceName;                             // 0x08C8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      DescriptionWithGlyphFieldInstanceName;                    // 0x08D8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      GlyphFieldInstanceName;                                   // 0x08E8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      PlayerNameFieldInstanceName;                              // 0x08F8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      CommandFieldInstanceName;                                 // 0x0908(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      SpinnerInstanceName;                                      // 0x0918(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      SpinnerPulseInstanceName;                                 // 0x0928(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TMap<EOakMessageType, struct FOakLevelSyncMessageText> SocialEventTextMap;                                       // 0x0938(0x0050) (Edit, BlueprintReadOnly, ZeroConstructor)
	bool                                               bHUDWidget;                                               // 0x0988(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x17];                                      // 0x0989(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxRolloutMessage");
		return ptr;
	}


	void RolloutMessageDelegate__DelegateSignature(class UGFxRolloutMessage* Widget);
	void OnInputDeviceChanged();
	void extShowAnimationFinished();
};


// Class OakGame.GFxOnlineMessageAnimationWidget
// 0x0090 (0x0A30 - 0x09A0)
class UGFxOnlineMessageAnimationWidget : public UGFxRolloutMessage
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x09A0(0x0008) MISSED OFFSET
	TArray<float>                                      SubtitleBackgroundSizeMapping;                            // 0x09A8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	float                                              UserPicWidthPadding;                                      // 0x09B8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               DebugForUserPic;                                          // 0x09BC(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x53];                                      // 0x09BD(0x0053) MISSED OFFSET
	class FString                                      InnerInstanceStringMenu;                                  // 0x0A10(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      InnerInstanceStringHud;                                   // 0x0A20(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxOnlineMessageAnimationWidget");
		return ptr;
	}

};


// Class OakGame.GFxOperativeSkillScreenTree
// 0x00A0 (0x0FB0 - 0x0F10)
class UGFxOperativeSkillScreenTree : public UGFxSkillScreenTree
{
public:
	class UGbxTextField*                               SkillLabel;                                               // 0x0F10(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ModsLabel;                                                // 0x0F18(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenLoadoutSlot*                  TopSkillSlot;                                             // 0x0F20(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenLoadoutSlot*                  TopSkillMods[0x2];                                        // 0x0F28(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenLoadoutSlot*                  BottomSkillSlot;                                          // 0x0F38(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenLoadoutSlot*                  BottomSkillMods[0x2];                                     // 0x0F40(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FText                                       DeviceSlotDescription;                                    // 0x0F50(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       AugmentSlotDescription;                                   // 0x0F68(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       GrenadeName;                                              // 0x0F80(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       GrenadeDescription;                                       // 0x0F98(0x0028) (Edit, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxOperativeSkillScreenTree");
		return ptr;
	}

};


// Class OakGame.GFxOptionsControlsPanel
// 0x0070 (0x01E0 - 0x0170)
class UGFxOptionsControlsPanel : public UGbxGFxObject
{
public:
	class UGbxTextField*                               TitleLabel;                                               // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TooltipLine1;                                             // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TooltipLine2;                                             // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x58];                                      // 0x0188(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxOptionsControlsPanel");
		return ptr;
	}

};


// Class OakGame.GFxControlsKeybindingItem
// 0x0030 (0x01A0 - 0x0170)
class UGFxControlsKeybindingItem : public UGbxGFxObject
{
public:
	class UGbxTextField*                               KeybindingName;                                           // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               Glyph;                                                    // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               BadBindingIcon;                                           // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGbxGFxObject*>                       LineObjects;                                              // 0x0188(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0198(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxControlsKeybindingItem");
		return ptr;
	}

};


// Class OakGame.GFxOptionsMenu
// 0x0110 (0x0790 - 0x0680)
class UGFxOptionsMenu : public UGbxGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0680(0x0008) MISSED OFFSET
	TArray<TSoftObjectPtr<class UGbxInputRebindContext>> ControllerSchemesWalking;                                 // 0x0688(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class UGbxGFxMenuData*                             SafeFrameMenuData;                                        // 0x0698(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxGFxMenuData*                             HDRCalibrationMenuData;                                   // 0x06A0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TSoftObjectPtr<class UGbxInputRebindCategory>      KeyBindCategory_Common;                                   // 0x06A8(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxInputRebindCategory>      KeyBindCategory_Walking;                                  // 0x06D0(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxInputRebindCategory>      KeyBindCategory_Driving;                                  // 0x06F8(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       RestartRequiredText;                                      // 0x0720(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	float                                              MouseScaleMinValue;                                       // 0x0738(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MouseScaleMaxValue;                                       // 0x073C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0740(0x0008) MISSED OFFSET
	class UGFxOptionBase*                              CurrentMenu;                                              // 0x0748(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0750(0x0018) MISSED OFFSET
	class UOptionDescriptionData*                      OptionsDescriptionGlobal;                                 // 0x0768(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0770(0x0008) MISSED OFFSET
	class UGFxMainOptionPanel*                         MainPanel;                                                // 0x0778(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               RestartTextField;                                         // 0x0780(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0788(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxOptionsMenu");
		return ptr;
	}


	void SubtitleNavigationClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnSubtitlesButtonClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnRestoreDefaultChoiceMade(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnNonStadiaControllerDialogClicked(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnContentPanelSelectionChanged(class UGbxGFxListCell* SelectedItem);
};


// Class OakGame.GFxMainOptionPanel
// 0x00A0 (0x0210 - 0x0170)
class UGFxMainOptionPanel : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                               Title;                                                    // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    ContentPanel;                                             // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxOptionPreviewPanel*                      DescriptionPanel;                                         // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxSlider*                               ScrollBar;                                                // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      ControlSchemeSpinner;                                     // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      ControlSchemeDrivingSpinner;                              // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      ControlSchemeJoystickSpinner;                             // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxListItemSpinner*                      ControlSchemeJoystickDrivingSpinner;                      // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FSubtitleBarItems                           SubtitleBarItems;                                         // 0x01B0(0x0040) (Transient)
	class UGbxTextField*                               SubSectionTitle;                                          // 0x01F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxOptionsControlsPanel*                    ControlsRightPanel;                                       // 0x01F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxOptionsMenu*                             OwningMenu;                                               // 0x0200(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0208(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxMainOptionPanel");
		return ptr;
	}

};


// Class OakGame.GFxOptionPreviewPanel
// 0x0110 (0x0280 - 0x0170)
class UGFxOptionPreviewPanel : public UGbxGFxObject
{
public:
	TMap<EOptionType, struct FText>                    TitleTextOverrides;                                       // 0x0170(0x0050) (ZeroConstructor, Transient)
	TMap<EOptionType, struct FText>                    DescriptionTextOverrides;                                 // 0x01C0(0x0050) (ZeroConstructor, Transient)
	TMap<EOptionType, class UTexture2D*>               HelperTextureOverrides;                                   // 0x0210(0x0050) (ZeroConstructor, Transient)
	class UGbxTextField*                               Title;                                                    // 0x0260(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               Description;                                              // 0x0268(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxMovie*                                GraphicsPreview;                                          // 0x0270(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0278(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxOptionPreviewPanel");
		return ptr;
	}

};


// Class OakGame.GFxOutOfBoundsWarning
// 0x0000 (0x0630 - 0x0630)
class UGFxOutOfBoundsWarning : public UGbxGFxHUDWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxOutOfBoundsWarning");
		return ptr;
	}


	void OnBoundaryWarningStateChanged(bool bWarningActive);
};


// Class OakGame.GFxOverheadNameplate
// 0x0100 (0x0350 - 0x0250)
class UGFxOverheadNameplate : public UGFxInWorldIcon
{
public:
	class UGbxGFxObject*                               CenteredNameObject;                                       // 0x0250(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0258(0x0018) MISSED OFFSET
	class UGbxGFxObject*                               StateContainer;                                           // 0x0270(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               StateObject;                                              // 0x0278(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0280(0x0018) MISSED OFFSET
	class UGbxGFxObject*                               StateIndicator;                                           // 0x0298(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               StateArrow;                                               // 0x02A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               StateArrowColors;                                         // 0x02A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               WaypointIcon;                                             // 0x02B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               OverheadArrow;                                            // 0x02B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          ReviveBar;                                                // 0x02C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          DyingBar;                                                 // 0x02C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x02D0(0x0010) MISSED OFFSET
	TScriptInterface<class UNameplateInfoProviderInterface> CachedNameplateInfoProvider;                              // 0x02E0(0x0010) (ZeroConstructor, Transient, IsPlainOldData)
	EOverheadNameplateHealthState                      CachedOverheadNameplateHealthState;                       // 0x02F0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	EOverheadNameplateDisplayState                     CachedOverheadNameplateDisplayState;                      // 0x02F1(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5E];                                      // 0x02F2(0x005E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxOverheadNameplate");
		return ptr;
	}


	void OnPlayerLocationChanged(const struct FVector& NewLocation);
};


// Class OakGame.GFxPassiveSkillWidget
// 0x0040 (0x0670 - 0x0630)
class UGFxPassiveSkillWidget : public UGbxGFxHUDWidget
{
public:
	TArray<class UGFxPassiveSkillIcon*>                Icons;                                                    // 0x0630(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FGFxPassiveSkillWidgetSlotData>      ActiveAbilityQueue;                                       // 0x0640(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0650(0x0008) MISSED OFFSET
	TArray<struct FVector2D>                           SlotPositions;                                            // 0x0658(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TWeakObjectPtr<class UOakPlayerAbilityManagerComponent> AbilityManager;                                           // 0x0668(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPassiveSkillWidget");
		return ptr;
	}

};


// Class OakGame.GFxPassiveSkillIcon
// 0x0070 (0x01E0 - 0x0170)
class UGFxPassiveSkillIcon : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0170(0x0008) MISSED OFFSET
	class UGbxGFxProgressBar*                          CooldownProgressBar;                                      // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0180(0x0028) MISSED OFFSET
	class UGbxGFxObject*                               TextureContainer;                                         // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGbxGFxHUDWidget>             OwningWidget;                                             // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UTexture>                     TextureRef;                                               // 0x01B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x01C0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPassiveSkillIcon");
		return ptr;
	}

};


// Class OakGame.GFxPauseMenu
// 0x06F0 (0x10C0 - 0x09D0)
class UGFxPauseMenu : public UGFxMainAndPauseBaseMenu
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x09D0(0x0010) MISSED OFFSET
	struct FPostProcessSettings                        PostProcessSettings;                                      // 0x09E0(0x0600) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	float                                              BlendWeight;                                              // 0x0FE0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0FE4(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UGbxMenuData>                 CharacterSelectMenu;                                      // 0x0FE8(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x80];                                      // 0x1010(0x0080) MISSED OFFSET
	class UGbxGFxGridScrollingList*                    ContentPanel;                                             // 0x1090(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UTravelStationData*                          AbandonDestination;                                       // 0x1098(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AOakGameState>                OakGameState;                                             // 0x10A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x18];                                      // 0x10A8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPauseMenu");
		return ptr;
	}


	void OnRosterClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnResumeClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnQuitToDesktopSaveComplete(const class FString& SlotName, bool bSuccess);
	void OnQuitGameClicked(const struct FGbxMenuInputEvent& InputInfo);
	void OnQuitClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnQuitChoiceMade(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnPhotoModeClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnOptionsClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnNumPlayersChanged(int NewNumPlayers);
	void OnNewsWidgetClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnMultiplayerDebugClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnMatchmakingClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnLeaveModeClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnLeaveChoiceMade(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnDebugMenuClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnConfirmMatchClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnConfirmCharacterClicked(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnAchievementsClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxPCTextChatBuffer
// 0x00C8 (0x00F0 - 0x0028)
class UGFxPCTextChatBuffer : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnTextLogChangedDelegate;                                 // 0x0028(0x0010) (ZeroConstructor, Transient, InstancedReference)
	unsigned char                                      UnknownData00[0xB8];                                      // 0x0038(0x00B8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPCTextChatBuffer");
		return ptr;
	}

};


// Class OakGame.GFxPCTextChatMenu
// 0x0070 (0x06F0 - 0x0680)
class UGFxPCTextChatMenu : public UGbxGFxMenu
{
public:
	int                                                MaxLinesShown;                                            // 0x0680(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ScrollThumbTrackMinSize;                                  // 0x0684(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class FString                                      PlayerNameColor;                                          // 0x0688(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	bool                                               bCloseInMenuChatWhenSubmitting;                           // 0x0698(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0699(0x0007) MISSED OFFSET
	class UGbxTextField*                               TextChatLogClip;                                          // 0x06A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxSlider*                               ScrollBarClip;                                            // 0x06A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               TextInputMCClip;                                          // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxEditableTextField*                    TextInputClip;                                            // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               PlaceholderTextMCClip;                                    // 0x06C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               PlaceholderTextClip;                                      // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               ButtonCloseClip;                                          // 0x06D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                ScrollPosition;                                           // 0x06D8(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                NumScrollEntries;                                         // 0x06DC(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bNeedsToUpdateLogThisFrame;                               // 0x06E0(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bDefaultMessageShowing;                                   // 0x06E1(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xE];                                       // 0x06E2(0x000E) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPCTextChatMenu");
		return ptr;
	}


	void OnTextLogChanged(class UGFxPCTextChatBuffer* TextChatBuffer);
	void OnTextChanged(class UGbxGFxEditableTextField* EditableTextField, const class FString& Text);
	void OnSubmit(class UGbxGFxEditableTextField* EditableTextField, const class FString& Text);
	void OnScrollBarUpdated(float SliderPercent);
	void OnPrePushMenu();
	void OnCloseButtonClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxPCTextChatMenuData
// 0x0000 (0x00C0 - 0x00C0)
class UGFxPCTextChatMenuData : public UGbxGFxMenuData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPCTextChatMenuData");
		return ptr;
	}

};


// Class OakGame.GFxPCTextChatMenuNotification
// 0x0020 (0x06A0 - 0x0680)
class UGFxPCTextChatMenuNotification : public UGbxGFxMenu
{
public:
	float                                              NotificationDuration;                                     // 0x0680(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0684(0x0004) MISSED OFFSET
	class UGbxGFxButton*                               ChatButtonClip;                                           // 0x0688(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              Duration;                                                 // 0x0690(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bChatMenuIsOpen;                                          // 0x0694(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xB];                                       // 0x0695(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPCTextChatMenuNotification");
		return ptr;
	}


	void OnMenuStackEmptied();
	void OnChatButtonClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxPCTextChatWidget
// 0x00B0 (0x06E0 - 0x0630)
class UGFxPCTextChatWidget : public UGbxGFxHUDWidget
{
public:
	class FString                                      PlayerNameColor;                                          // 0x0630(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	int                                                MaxLinesShown;                                            // 0x0640(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SecondsUntilHide;                                         // 0x0644(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TSoftObjectPtr<class UGbxInputKeyRebindData_Button> RebindDataForOpenChatKey;                                 // 0x0648(0x0028) (Edit, BlueprintReadOnly)
	TSoftObjectPtr<class UGbxInputRebindCategory>      KeyBindCategory_Common;                                   // 0x0670(0x0028) (Edit, BlueprintReadOnly)
	float                                              PromptGlyphHeight;                                        // 0x0698(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x069C(0x0004) MISSED OFFSET
	struct FKey                                        KeyToShowForOpenTextChat;                                 // 0x06A0(0x0018) (BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData01[0x1];                                       // 0x06B8(0x0001) MISSED OFFSET
	bool                                               bTextChatEnabled;                                         // 0x06B9(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x06BA(0x0006) MISSED OFFSET
	class UGbxGFxObject*                               TextChatFeedClip;                                         // 0x06C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TextChatLogClip;                                          // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FTimerHandle                                HideTimerHandle;                                          // 0x06D0(0x0008) (BlueprintReadOnly, Transient)
	bool                                               bNeedsToUpdateLogThisFrame;                               // 0x06D8(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x06D9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPCTextChatWidget");
		return ptr;
	}


	void OnTextLogChanged(class UGFxPCTextChatBuffer* TextChatBuffer);
	void OnTextChatOptionChanged(bool bIsActive);
	void OnMenuActivated(class UObject* MenuObject);
};


// Class OakGame.GFxPetCommandWidget
// 0x00A0 (0x06D0 - 0x0630)
class UGFxPetCommandWidget : public UGbxGFxHUDWidget
{
public:
	class UGbxGFxObject*                               StateWrapper;                                             // 0x0630(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           CommandHint;                                              // 0x0638(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               PetIcon;                                                  // 0x0640(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               CantUseFlourish;                                          // 0x0648(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          StatusBar;                                                // 0x0650(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CountdownTimerText;                                       // 0x0658(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0660(0x0008) MISSED OFFSET
	class UGbxGFxObject*                               DynamicSkillIcon;                                         // 0x0668(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FLinearColor                                ReadyForActivationColor;                                  // 0x0670(0x0010) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                RechargingOrCooldownColor;                                // 0x0680(0x0010) (Edit, BlueprintReadOnly, IsPlainOldData)
	float                                              MaxPreAttackTime;                                         // 0x0690(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0694(0x000C) MISSED OFFSET
	int                                                CoundownSecondsMaxValue;                                  // 0x06A0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CountdownSecondsAudioValue;                               // 0x06A4(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SkillUsedFailAudioEventName;                              // 0x06A8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBeastmasterCharacterComponent*              CachedBeastmasterComponent;                               // 0x06B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x06B8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPetCommandWidget");
		return ptr;
	}


	void OnPetSpawnStateChanged(class AOakCharacter* Pet);
	void OnPetAttackCommandFailed();
	void OnInputDeviceChanged();
};


// Class OakGame.GFxPhotoModeMenuSpinner
// 0x0050 (0x03B0 - 0x0360)
class UGFxPhotoModeMenuSpinner : public UGbxGFxListItemSpinner
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0360(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPhotoModeMenuSpinner");
		return ptr;
	}

};


// Class OakGame.GFxPhotoModeMenuSlider
// 0x0050 (0x03F0 - 0x03A0)
class UGFxPhotoModeMenuSlider : public UGbxGFxListItemNumber
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x03A0(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPhotoModeMenuSlider");
		return ptr;
	}

};


// Class OakGame.GFxPhotoModeMenu
// 0x0110 (0x0790 - 0x0680)
class UGFxPhotoModeMenu : public UGbxGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0680(0x0008) MISSED OFFSET
	struct FName                                       PhotoModeCloseMenuSound;                                  // 0x0688(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       PhotoModeSwitchTabsSound;                                 // 0x0690(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       PhotoModeToggleSound;                                     // 0x0698(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       PhotoModeResetSettingSound;                               // 0x06A0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       PhotoModeTakePhotoSound;                                  // 0x06A8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       PhotoModeSliderSound;                                     // 0x06B0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       PhotoModeSpinnerSound;                                    // 0x06B8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       PhotoModeNavigateSound;                                   // 0x06C0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class APhotoModeController*                        CachedPhotoModeController;                                // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UPhotoModeGlobals*                           CachedPhotoModeGlobals;                                   // 0x06D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bUseCurrentTimeOfDayAsDefault;                            // 0x06D8(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x06D9(0x0003) MISSED OFFSET
	float                                              TimeOfDayWhenEnteringPhotoMode;                           // 0x06DC(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x06E0(0x0010) MISSED OFFSET
	class UGbxGFxButton*                               CameraButton;                                             // 0x06F0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               DepthOfFieldButton;                                       // 0x06F8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               ColorButton;                                              // 0x0700(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               SceneButton;                                              // 0x0708(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               FilterButton;                                             // 0x0710(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               FrameButton;                                              // 0x0718(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGbxGFxButton*>                       Buttons;                                                  // 0x0720(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UGbxGFxButton*                               SelectedButton;                                           // 0x0730(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           PhotoModePrevHint;                                        // 0x0738(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           PhotoModeNextHint;                                        // 0x0740(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxPhotoModeMenuSpinner*                    FilterSpinner;                                            // 0x0748(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxPhotoModeMenuSlider*                     FilterIntensitySlider;                                    // 0x0750(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxPhotoModeMenuSlider*                     TimeOfDaySlider;                                          // 0x0758(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxPhotoModeMenuSpinner*                    HidePlayerSpinner;                                        // 0x0760(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxPhotoModeMenuSpinner*                    OverrideFocusSpinner;                                     // 0x0768(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxPhotoModeMenuSlider*                     FocusDistanceSlider;                                      // 0x0770(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxPhotoModeMenuSlider*                     FocusRegionSlider;                                        // 0x0778(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxPhotoModeMenuSlider*                     FocusIntensitySlider;                                     // 0x0780(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    ItemList;                                                 // 0x0788(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPhotoModeMenu");
		return ptr;
	}


	void OnSpinnerItemChanged(class UGbxGFxListItemSpinner* Item);
	void OnSliderItemChanged(class UGbxGFxListItemNumber* Item);
	void OnOptionSetButtonClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxPlayerStorageMenu
// 0x0400 (0x0AA0 - 0x06A0)
class UGFxPlayerStorageMenu : public UAdvancedInteractiveObjectOwnedGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x06A0(0x0010) MISSED OFFSET
	struct FText                                       BankLabel;                                                // 0x06B0(0x0028) (Edit, BlueprintReadOnly)
	class UGbxMenuData*                                ItemInspectionMenuData;                                   // 0x06C8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FOakInventoryMenuFilter>             SortFilters;                                              // 0x06D0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FOakInventoryMenuFilter>             CurrentFilters;                                           // 0x06E0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FOakInventoryMenuTypePriorityInfo>   ItemTypeSortPriorities;                                   // 0x06F0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class USwfMovie*                                   ItemCardMovie;                                            // 0x0700(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FEchoDeviceUIController                     EchoDeviceController;                                     // 0x0708(0x0020) (Edit, BlueprintReadOnly)
	struct FName                                       EchoDeviceMenuName;                                       // 0x0728(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       EchoDeviceIdleScreenName;                                 // 0x0730(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       EchoDeviceDepositIdleScreenName;                          // 0x0738(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxBackpackSize;                                          // 0x0740(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxBankSize;                                              // 0x0744(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   BackpackCellBounds;                                       // 0x0748(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   CompareBackpackCellBounds;                                // 0x0750(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   BackpackCellSpacing;                                      // 0x0758(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	int                                                NumBigBagCellsFullScreen;                                 // 0x0760(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumBigBagCellsSplitScreen;                                // 0x0764(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumCompareBagCellsFullScreen;                             // 0x0768(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumCompareBagCellsSplitScreen;                            // 0x076C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumBigBagColumns;                                         // 0x0770(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxDelayTimeToLoadThumbnails;                             // 0x0774(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EGFxPlayerStorageMenuState                         MenuState;                                                // 0x0778(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0779(0x0003) MISSED OFFSET
	TWeakObjectPtr<class UOakInventoryListComponent>   BankInventory;                                            // 0x077C(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UOakInventoryListComponent>   CharacterInventory;                                       // 0x0784(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x078C(0x0004) MISSED OFFSET
	class UOakThumbnailManager*                        IconManager;                                              // 0x0790(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               StorageContainerClip;                                     // 0x0798(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               CompareContainerLeftClip;                                 // 0x07A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               CompareContainerRightClip;                                // 0x07A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxPlayerStorageListCapacityObject*         ListCapacityPanelClip;                                    // 0x07B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxPlayerStorageListCapacityObject*         ListCapacityPanelLeftClip;                                // 0x07B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxPlayerStorageNavObject*                  NavClip;                                                  // 0x07C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxPlayerStorageHeader*                     StorageHeader;                                            // 0x07C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLoadedItemCardBase*                      ItemCard1Clip;                                            // 0x07D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLoadedItemCardBase*                      ItemCard2Clip;                                            // 0x07D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGFxLoadedItemCardBase>       BigBagItemCard;                                           // 0x07E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGFxLoadedItemCardBase>       CompareItemCards[0x2];                                    // 0x07E8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bWaitingForUpdateFromServer;                              // 0x07F8(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bRefreshBagsNextTick;                                     // 0x07F9(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x07FA(0x0002) MISSED OFFSET
	int                                                SortIndex;                                                // 0x07FC(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                NumItemCardsLoading;                                      // 0x0800(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bMenuHasStarted;                                          // 0x0804(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bNeedsIconsRefreshed;                                     // 0x0805(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0806(0x0002) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       CompareSourceItem;                                        // 0x0808(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EGFxPlayerStorageMenuState                         StateBeforeCompare;                                       // 0x0810(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0811(0x0007) MISSED OFFSET
	struct FGFxPlayerStorageBag                        PagedBigBag;                                              // 0x0818(0x00D0) (BlueprintReadOnly, Transient)
	struct FGFxPlayerStorageBag                        PagedCompareBankBag;                                      // 0x08E8(0x00D0) (BlueprintReadOnly, Transient)
	struct FGFxPlayerStorageBag                        PagedCompareInventoryBag;                                 // 0x09B8(0x00D0) (BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData06[0x18];                                      // 0x0A88(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPlayerStorageMenu");
		return ptr;
	}


	void OnThumbnailLoaded();
	void OnItemCardReady();
	void OnInventoryCompareItemSelected(const struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget);
	void OnCompareInventoryBagScrollBarUpdated(float SliderPercentage);
	void OnCompareBankBagScrollBarUpdated(float SliderPercentage);
	void OnCharacterItemUpdated(const struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnCharacterItemRemoved(const struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnCharacterItemAdded(const struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnBigBagScrollBarUpdated(float SliderPercentage);
	void OnBigBagItemSelected(const struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget);
	void OnBigBagItemClicked(const struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget, const struct FGbxMenuInputEvent& InputInfo);
	void OnBankItemUpdated(const struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnBankItemRemoved(const struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnBankItemAdded(const struct FInventoryListEntryHandle& UpdatedItemHandle);
	void OnBankCompareItemSelected(const struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget);
	void extOnCompareIntroComplete();
};


// Class OakGame.GFxPlayerStorageListCapacityObject
// 0x0020 (0x0190 - 0x0170)
class UGFxPlayerStorageListCapacityObject : public UGbxGFxObject
{
public:
	class UGbxTextField*                               SecondListHeaderClip;                                     // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ListCapacityLabelClip;                                    // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ListTypeIconClip;                                         // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0188(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPlayerStorageListCapacityObject");
		return ptr;
	}

};


// Class OakGame.GFxPlayerStorageNavObject
// 0x0030 (0x01A0 - 0x0170)
class UGFxPlayerStorageNavObject : public UGbxGFxObject
{
public:
	TWeakObjectPtr<class UGFxPlayerStorageMenu>        OwnerStorageMenu;                                         // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           PreviousButtonTextClip;                                   // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           NextButtonTextClip;                                       // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxPlayerStorageNavButton*                  BankButton;                                               // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxPlayerStorageNavButton*                  InventoryButton;                                          // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MenuLabelClip;                                            // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPlayerStorageNavObject");
		return ptr;
	}

};


// Class OakGame.GFxPlayerStorageNavButton
// 0x0010 (0x02E0 - 0x02D0)
class UGFxPlayerStorageNavButton : public UGbxGFxButton
{
public:
	class UGbxGFxObject*                               IconClip;                                                 // 0x02D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	EInventoryListType                                 NavToType;                                                // 0x02D8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x02D9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPlayerStorageNavButton");
		return ptr;
	}


	void OnNavButtonClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	class FString GetNavFrameState(class UGbxGFxButton* BUTTON, EGbxFocusableWidgetState ButtonState);
};


// Class OakGame.GFxPlayerStorageHeader
// 0x0030 (0x01A0 - 0x0170)
class UGFxPlayerStorageHeader : public UGbxGFxObject
{
public:
	TWeakObjectPtr<class UGFxPlayerStorageMenu>        OwnerStorageMenu;                                         // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           SortHintClip;                                             // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ListHeaderLabelClip;                                      // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               FilterTextClip;                                           // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ListTypeIconClip;                                         // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0198(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPlayerStorageHeader");
		return ptr;
	}

};


// Class OakGame.GFxPlayerStorageBackpackItem
// 0x0000 (0x06D0 - 0x06D0)
class UGFxPlayerStorageBackpackItem : public UGFxInventoryItemWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPlayerStorageBackpackItem");
		return ptr;
	}

};


// Class OakGame.GFxPlaythroughSelectionMenu
// 0x0160 (0x07E0 - 0x0680)
class UGFxPlaythroughSelectionMenu : public UGbxGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0680(0x0008) MISSED OFFSET
	TArray<struct FPlaythroughSelectionModeEntry>      ModeEntries;                                              // 0x0688(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FText                                       MenuTitleString;                                          // 0x0698(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ToolTipTitleString;                                       // 0x06B0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ToolTipDescriptionString;                                 // 0x06C8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       AcceptString;                                             // 0x06E0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       CancelString;                                             // 0x06F8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ResetProgressString;                                      // 0x0710(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ResetProgressDialogHeader;                                // 0x0728(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ResetProgressDialogBody;                                  // 0x0740(0x0028) (Edit, BlueprintReadOnly)
	TSoftObjectPtr<class UGbxMenuData>                 MainMenuMenuData;                                         // 0x0758(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	class UGbxGFxObject*                               SelectionContainer;                                       // 0x0780(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ToolTipPane;                                              // 0x0788(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TitleText;                                                // 0x0790(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ModeDescriptionText;                                      // 0x0798(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ModeTitleText;                                            // 0x07A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ToolTipTitleText;                                         // 0x07A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ToolTipDescText;                                          // 0x07B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           AcceptHint;                                               // 0x07B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           ResetProgressHint;                                        // 0x07C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    ModesList;                                                // 0x07C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UObject*                                     FocusedObjectBeforeLobbyWidget;                           // 0x07D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CachedPlaythroughNum;                                     // 0x07D8(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x07DC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPlaythroughSelectionMenu");
		return ptr;
	}


	void OnResetProgressChoiceMade(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnPlaythroughModeCellFocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnPlaythroughModeCellClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void extOnUITransitionCompleted();
	void extOnMenuHid();
};


// Class OakGame.GFxPlaythroughModeCell
// 0x0050 (0x0360 - 0x0310)
class UGFxPlaythroughModeCell : public UGbxGFxListCell
{
public:
	struct FPlaythroughSelectionModeEntry              ModeData;                                                 // 0x0310(0x0050) (Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxPlaythroughModeCell");
		return ptr;
	}

};


// Class OakGame.GFxQuickChangeRespecTreeBranch
// 0x0040 (0x01B0 - 0x0170)
class UGFxQuickChangeRespecTreeBranch : public UGbxGFxObject
{
public:
	TArray<struct FQuickChangeRespecTreeBranchRow>     Rows;                                                     // 0x0170(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0180(0x0008) MISSED OFFSET
	class UGbxTextField*                               ProgressText;                                             // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          BackgroundFill;                                           // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakPlayerAbilityTreeBranchData*             CachedBranchData;                                         // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x01A0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxQuickChangeRespecTreeBranch");
		return ptr;
	}

};


// Class OakGame.GFxQuickChangeMenuBase
// 0x0590 (0x0C30 - 0x06A0)
class UGFxQuickChangeMenuBase : public UAdvancedInteractiveObjectOwnedGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x06A0(0x0030) MISSED OFFSET
	class UGbxGFxObject*                               MainContent;                                              // 0x06D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TopperText;                                               // 0x06D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               EmoteWheel;                                               // 0x06E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    MenuList;                                                 // 0x06E8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    SelectionList;                                            // 0x06F0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TMap<EBaseQuickChangeMenuState, struct FBaseQuickChangeMenuStateData> StateDataMap;                                             // 0x06F8(0x0050) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<class UGbxCustomizationData*>               UnlockedCustomizationsDataArray;                          // 0x0748(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class UGbxCustomizationData*>               LockedCustomizationsDataArray;                            // 0x0758(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0768(0x0008) MISSED OFFSET
	struct FName                                       EchoDeviceMenuName;                                       // 0x0770(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       EchoDeviceIdleScreenName;                                 // 0x0778(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       EchoDeviceMenuName_EchoSkin;                              // 0x0780(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       EchoDeviceIdleScreenName_EchoSkin;                        // 0x0788(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FColor>                              ColorizationDataArray;                                    // 0x0790(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FStandInUIController                        StandInController;                                        // 0x07A0(0x0390) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FEchoDeviceUIController                     EchoDeviceController;                                     // 0x0B30(0x0020) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       ProjectionFXWidgetName;                                   // 0x0B50(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UGFxBaseQuickChangeMenuItem*>         EmoteLoadoutButtons;                                      // 0x0B58(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UGbxGFxMouseCapturePanel*                    MouseCapturePanel;                                        // 0x0B68(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               EquippedEmoteLabel;                                       // 0x0B70(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakCustomizationData*                       EmoteToSlot;                                              // 0x0B78(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               CounterWrapper;                                           // 0x0B80(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CounterText;                                              // 0x0B88(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EGbxGFxButtonType                                  CustomizationButtonType;                                  // 0x0B90(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0B91(0x0003) MISSED OFFSET
	float                                              MaxRotationSpeed;                                         // 0x0B94(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MouseMaxRotationSpeed;                                    // 0x0B98(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxSecondsToReachTargetSpeed;                             // 0x0B9C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x80];                                      // 0x0BA0(0x0080) MISSED OFFSET
	class UGbxCustomizationData*                       PendingStandInCustomization;                              // 0x0C20(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0C28(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxQuickChangeMenuBase");
		return ptr;
	}


	void OnSelectionListSelectionChanged(class UGbxGFxListCell* SelectedItem);
	void OnSelectionListItemClicked(class UGbxGFxListCell* ClickedItem, const struct FGbxMenuInputEvent& InputInfo);
	void OnQuickChangeChoiceMade(EBaseQuickChangeChoiceType ChoiceType);
	void OnMenuListItemClicked(class UGbxGFxListCell* ClickedItem, const struct FGbxMenuInputEvent& InputInfo);
	void OnEmoteLoadoutButtonClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxQuickChangeMenu
// 0x0050 (0x0C80 - 0x0C30)
class UGFxQuickChangeMenu : public UGFxQuickChangeMenuBase
{
public:
	class UGbxGFxObject*                               RenameSaveGameContainer;                                  // 0x0C30(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               RenameCharacterLabel;                                     // 0x0C38(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxEditableTextField*                    RenameCharacterField;                                     // 0x0C40(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               RenamePetContainer;                                       // 0x0C48(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               RenamePetLabel;                                           // 0x0C50(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxEditableTextField*                    RenamePetField;                                           // 0x0C58(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxColorPickerWidget*                       ColorPicker;                                              // 0x0C60(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGFxQuickChangeRespecTreeBranch*>     RespecTreeBranches;                                       // 0x0C68(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0C78(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxQuickChangeMenu");
		return ptr;
	}


	void OnSaveGameRenamed(class UGbxGFxEditableTextField* SaveGameField, const class FString& NewName);
	void OnSaveGameRenameAborted(class UGbxGFxEditableTextField* SaveGameField, const class FString& NewName);
	void OnRespecChoiceMade(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnPetRenamed(class UGbxGFxEditableTextField* SaveGameField, const class FString& NewName);
	void OnPetRenameAborted(class UGbxGFxEditableTextField* SaveGameField, const class FString& NewName);
	void OnMenuListItemSelectionChanged(class UGbxGFxListCell* SelectedItem);
	void OnEmoteLoadoutButtonFocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnColorSelected(const struct FColor& NewColor, bool bIsSplit, int Index, bool bIsDefault);
	void OnColorFocused(const struct FColor& NewColor, bool bIsSplit, int Index, bool bIsDefault);
};


// Class OakGame.GFxBaseQuickChangeMenuItem
// 0x0060 (0x0370 - 0x0310)
class UGFxBaseQuickChangeMenuItem : public UGbxGFxListCell
{
public:
	class UGbxGFxObject*                               ItemIcon;                                                 // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               NewIcon;                                                  // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ItemNameFieldHighlighted;                                 // 0x0320(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ItemDescriptionField;                                     // 0x0328(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ItemDescriptionFieldHighlighted;                          // 0x0330(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               EridiumCounter;                                           // 0x0338(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0340(0x0010) MISSED OFFSET
	class FString                                      IconPath;                                                 // 0x0350(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0360(0x0008) MISSED OFFSET
	EBaseQuickChangeMenuState                          MenuState;                                                // 0x0368(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0369(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxBaseQuickChangeMenuItem");
		return ptr;
	}

};


// Class OakGame.GFxQuickChangeMenuStore
// 0x00A0 (0x0CD0 - 0x0C30)
class UGFxQuickChangeMenuStore : public UGFxQuickChangeMenuBase
{
public:
	TArray<class UGbxCustomizationData*>               DebugCustomizationsArray;                                 // 0x0C30(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<class UGbxCustomizationData*>               CrazyEarlCustomizationList;                               // 0x0C40(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UGFxCurrencyCounterClip*                     PlayerEridiumCounter;                                     // 0x0C50(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               InsufficientFundsTextClip;                                // 0x0C58(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               InsufficientFundsTextShadowClip;                          // 0x0C60(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               InsufficientFundsObj;                                     // 0x0C68(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxBaseQuickChangeMenuItem*                 CachedClickedItem;                                        // 0x0C70(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxCustomizationUnlockedWidget*             CustomizationUnlockedWidget;                              // 0x0C78(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSoldOutAnimationWidget*                  SoldOutWidget;                                            // 0x0C80(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UPlayerShopManagerComponent*                 ShopMgr;                                                  // 0x0C88(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UInventoryListComponent*                     InventoryList;                                            // 0x0C90(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AOakCharacter*                               CachedOakCharacter;                                       // 0x0C98(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0CA0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxQuickChangeMenuStore");
		return ptr;
	}


	void OnInventoryQuantityChanged(const struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int Quantity, int MaxQuantity);
	void extPlayAnimationFinished();
};


// Class OakGame.GFxCustomizationUnlockedWidget
// 0x0040 (0x01B0 - 0x0170)
class UGFxCustomizationUnlockedWidget : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0170(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxCustomizationUnlockedWidget");
		return ptr;
	}

};


// Class OakGame.GFxSoldOutAnimationWidget
// 0x0020 (0x0190 - 0x0170)
class UGFxSoldOutAnimationWidget : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0170(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSoldOutAnimationWidget");
		return ptr;
	}

};


// Class OakGame.GFxEmoteWheelButton
// 0x0010 (0x02E0 - 0x02D0)
class UGFxEmoteWheelButton : public UGbxGFxButton
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x02D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxEmoteWheelButton");
		return ptr;
	}

};


// Class OakGame.GFxQuickMenu
// 0x0090 (0x0710 - 0x0680)
class UGFxQuickMenu : public UGbxGFxMenu
{
public:
	class FString                                      GFxKEY_ButtonPattern;                                     // 0x0680(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      GFxNAME_RollOverLabel;                                    // 0x0690(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	float                                              OutroTime;                                                // 0x06A0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RadialTolerance;                                          // 0x06A4(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UGFxEmoteWheelButton*>                WheelButtons;                                             // 0x06A8(0x0010) (BlueprintReadOnly, ZeroConstructor)
	class UGbxTextField*                               RolloverLabel;                                            // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x06C0(0x0030) MISSED OFFSET
	class AOakPlayerState*                             CurrentTargetOtherPlayer;                                 // 0x06F0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxEmoteWheelButton*                        CurrentFocusedButton;                                     // 0x06F8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0700(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxQuickMenu");
		return ptr;
	}


	void WheelButtonUnfocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void WheelButtonPressed(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void WheelButtonFocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void extWheelDisplayed();
};


// Class OakGame.GFxRaidSpectatorWidget
// 0x0020 (0x0650 - 0x0630)
class UGFxRaidSpectatorWidget : public UGbxGFxHUDWidget
{
public:
	class UGbxHintBar*                                 HintBar;                                                  // 0x0630(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintBarContainer*                     HintBarContainer;                                         // 0x0638(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TargetPlayerName;                                         // 0x0640(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0648(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxRaidSpectatorWidget");
		return ptr;
	}


	void OnRaidSpectatorTargetChanged(struct FText* NewSpectatorTargetName);
	void OnNumSpectatablePlayersChanged(int NewNumSpectatablePlayers);
	void OnInputDeviceChanged();
};


// Class OakGame.GFxReloadWidget
// 0x0050 (0x0680 - 0x0630)
class UGFxReloadWidget : public UGbxGFxHUDWidget
{
public:
	class AWeapon*                                     CachedWeapon;                                             // 0x0630(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UWeaponCOVHeatComponent*                     CachedCOVHeatComponent;                                   // 0x0638(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWeaponAmmoComponent*                        CachedAmmoComponent;                                      // 0x0640(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWeaponReloadComponent*                      CachedReloadComponent;                                    // 0x0648(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGbxGFxObject*                               ReloadIcon;                                               // 0x0650(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               KeybindingText;                                           // 0x0658(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ReloadTextWrapper;                                        // 0x0660(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ReloadText;                                               // 0x0668(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0670(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxReloadWidget");
		return ptr;
	}


	void UpdateCachedAmmoCounts();
	void UpdateCachedAmmoComponent();
	void OnWeaponChanged(class AWeapon* NewWeapon, class AWeapon* LastWeapon);
	void OnUsabilityChanged(class UUsableComponent* NewUsableComponent, const struct FUsabilityInfo& InUsabilityInfo);
	void OnReloadStarted(bool bAuto);
	void OnReloadEnded(bool bCompleted);
	void OnLadderExit();
	void OnLadderEnter();
	void OnInputDeviceChanged();
	void OnCurrentUsableChanged(class UUsableComponent* NewUsableComponent, const struct FUsabilityInfo& InUsabilityInfo, const struct FVector& NewUsableComponentImpactPoint, float NewUsableComponentDistanceAway);
};


// Class OakGame.GFxResolutionsMenu
// 0x0040 (0x06C0 - 0x0680)
class UGFxResolutionsMenu : public UGbxGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0680(0x0008) MISSED OFFSET
	class UGbxGFxGridScrollingList*                    ContentPanel;                                             // 0x0688(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               AlternateBkg;                                             // 0x0690(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0698(0x0018) MISSED OFFSET
	class UGbxGFxDialogBox*                            ResolutionDlg;                                            // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x06B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxResolutionsMenu");
		return ptr;
	}


	void OnResolutionItemClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnConfirmNewResolution(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxSafeAreaCalibrationMenu
// 0x0070 (0x06F0 - 0x0680)
class UGFxSafeAreaCalibrationMenu : public UGbxGFxMenu
{
public:
	struct FText                                       SafeAreaTitle;                                            // 0x0680(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       SafeAreaDescrption;                                       // 0x0698(0x0028) (Edit, BlueprintReadOnly)
	float                                              SafeAreaStep;                                             // 0x06B0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DefaultSafeAreaPercent;                                   // 0x06B4(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxTextField*                               TitleText;                                                // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               DescriptionText;                                          // 0x06C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               SafeAreaBox;                                              // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               Background;                                               // 0x06D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               HintBarWrapper;                                           // 0x06D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x06E0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSafeAreaCalibrationMenu");
		return ptr;
	}

};


// Class OakGame.GFxSaveGameDetails
// 0x0030 (0x01A0 - 0x0170)
class UGFxSaveGameDetails : public UGbxGFxObject
{
public:
	class UGbxTextField*                               SaveGameName;                                             // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ChapterMission;                                           // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CurrentMission;                                           // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               VaultHunterMode;                                          // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TimePlayed;                                               // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0198(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSaveGameDetails");
		return ptr;
	}

};


// Class OakGame.GFxTextFeedback
// 0x0010 (0x0180 - 0x0170)
class UGFxTextFeedback : public UGbxGFxObject
{
public:
	class UGbxTextField*                               InnerText;                                                // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               InnerTextShadow;                                          // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxTextFeedback");
		return ptr;
	}

};


// Class OakGame.GFxSDUVendorMenu
// 0x0080 (0x0700 - 0x0680)
class UGFxSDUVendorMenu : public UGbxGFxMenu
{
public:
	class USwfMovie*                                   ItemCardMovie;                                            // 0x0680(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CurrencySpinnerOverrideHeight;                            // 0x0688(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CurrencySpinnerSpinTime;                                  // 0x068C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CurrencyWidgetPauseOnNewValueTime;                        // 0x0690(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0694(0x0004) MISSED OFFSET
	struct FText                                       SDUUnlockedText;                                          // 0x0698(0x0028) (Edit, BlueprintReadOnly)
	struct FName                                       BuyItemSoundFX;                                           // 0x06B0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       WarningSoundFX;                                           // 0x06B8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGFxLoadedItemCard*                          LoadedItemCard;                                           // 0x06C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSDUVendorMenuInfoContainer*              PlayerInfoContainerClip;                                  // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class ASDUCase>                     SDUCase;                                                  // 0x06D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class ASDUCaseProxy>                SDUCaseProxy;                                             // 0x06D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxTextFeedback*                            PurchasedItemText;                                        // 0x06E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxTextFeedback*                            WarningText;                                              // 0x06E8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bMenuContentReady;                                        // 0x06F0(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bGameDataReady;                                           // 0x06F1(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bItemCardReady;                                           // 0x06F2(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xD];                                       // 0x06F3(0x000D) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSDUVendorMenu");
		return ptr;
	}


	void OnSelectedSDUChanged(int CurrentSDULevel, class UOakSDUData* SDUData);
	void OnSDUPurchased(class UOakSDUData* OakSDUData, bool bIsSoldOut);
	void OnItemCardReady();
	void OnInsufficientFunds(class UOakSDUData* OakSDUData);
	void OnCurrencyQuantityChanged(const struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int Quantity, int MaxQuantity);
};


// Class OakGame.GFxSDUVendorMenuInfoContainer
// 0x0050 (0x01C0 - 0x0170)
class UGFxSDUVendorMenuInfoContainer : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                               PlayerIconClip;                                           // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               UpgradeTextClip;                                          // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxCurrencyCounterClip*                     CurrencyClip;                                             // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ContextualSelectClip;                                     // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               OwnedTextClip;                                            // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               AmmoTextClip;                                             // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               OwnedAmountClip;                                          // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TotalAmountClip;                                          // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakSDUData*                                 LastViewedSDUData;                                        // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                LastViewedSDULevel;                                       // 0x01B8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                LastOwnedCurrencyQuantity;                                // 0x01BC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSDUVendorMenuInfoContainer");
		return ptr;
	}

};


// Class OakGame.GFxServerBrowserListItem
// 0x0030 (0x0340 - 0x0310)
class UGFxServerBrowserListItem : public UGbxGFxListCell
{
public:
	class UGbxTextField*                               PlayThrough;                                              // 0x0310(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxTextField*                               Mission;                                                  // 0x0318(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxTextField*                               NumOfPlayers;                                             // 0x0320(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxTextField*                               MaxPlayers;                                               // 0x0328(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxTextField*                               Latency;                                                  // 0x0330(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxObject*                               NetworkStrengthIcon;                                      // 0x0338(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxServerBrowserListItem");
		return ptr;
	}

};


// Class OakGame.GFxServerBrowserMenu
// 0x0070 (0x0700 - 0x0690)
class UGFxServerBrowserMenu : public UGFxEchoNetSubMenu
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0690(0x0018) MISSED OFFSET
	class UGbxTextField*                               GamesFoundLabel;                                          // 0x06A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               SearchResultPanel;                                        // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               SearchResultPanelLabel;                                   // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    ContentPanel;                                             // 0x06C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               SortCriteriaLabel;                                        // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               HintSortCriteria;                                         // 0x06D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               HintSortingOrder;                                         // 0x06D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           FilterHint;                                               // 0x06E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MenuPagerTextClip;                                        // 0x06E8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x06F0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxServerBrowserMenu");
		return ptr;
	}


	void OnSessionCellSelected(class UGbxGFxListCell* Item);
	void OnServerSelected(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnRefreshSelected(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
	void OnErrorDialogClicked(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnBackClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxShieldBar
// 0x00F0 (0x0720 - 0x0630)
class UGFxShieldBar : public UGbxGFxHUDWidget
{
public:
	unsigned char                                      UnknownData00[0x70];                                      // 0x0630(0x0070) MISSED OFFSET
	struct FGameResourcePoolReference                  CurrentShieldResourcePool;                                // 0x06A0(0x0018) (BlueprintReadOnly, Transient)
	class FString                                      NAME_ProgressBarId;                                       // 0x06B8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FName                                       NAME_ShieldFull;                                          // 0x06C8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       NAME_ShieldLow;                                           // 0x06D0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxGFxRechargeableProgressBar*              ProgressBar;                                              // 0x06D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               EdgeFlash;                                                // 0x06E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               HitDetect;                                                // 0x06E8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ShieldGlowAnim;                                           // 0x06F0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CachedShieldValue;                                        // 0x06F8(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsBeingDamaged;                                          // 0x06FC(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsDepleted;                                              // 0x06FD(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EHealthTypeState                                   CachedHealthTypeState;                                    // 0x06FE(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EGameResourcePoolState                             CachedResourcePoolState;                                  // 0x06FF(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TScriptInterface<class UShieldProviderInterface>   CurrentShieldProvider;                                    // 0x0700(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0710(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxShieldBar");
		return ptr;
	}


	void OnTakeShieldDamage(int Index, const struct FHealthType& HealthType, float Damage, const struct FSecondaryHealthDamageEventDetails& Details);
	void OnShieldUnequippedOnSlot();
	void OnShieldsVeryLow(const struct FHealthType& HealthType, int Index);
	void OnShieldsRegenerating();
	void OnShieldsNormal(const struct FHealthType& HealthType, int Index);
	void OnShieldsLow(const struct FHealthType& HealthType, int Index);
	void OnShieldsFull();
	void OnShieldsDepleted(const struct FHealthTypeDepletedDetails& Details);
	void OnShieldMinMaxValueUpdate(float MinValue, float MaxValue, struct FGameResourcePoolReference* ResourcePoolReference);
	void OnShieldEquippedOnSlot();
	void OnShieldCurrentValueUpdate(float CurrentValue, struct FGameResourcePoolReference* ResourcePoolReference);
};


// Class OakGame.GFxSHiFTMenu
// 0x0040 (0x06D0 - 0x0690)
class UGFxSHiFTMenu : public UGFxEchoNetSubMenu
{
public:
	TWeakObjectPtr<class AGbxPlayerController>         TargetPC;                                                 // 0x0690(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x38];                                      // 0x0698(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSHiFTMenu");
		return ptr;
	}


	void HandleEULAResponse(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxSHiFTMenuPage
// 0x0090 (0x0200 - 0x0170)
class UGFxSHiFTMenuPage : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x90];                                      // 0x0170(0x0090) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSHiFTMenuPage");
		return ptr;
	}


	void OnEditableTextFocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnEditableTextClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxSHiFTMenuCodeRedemptionPage
// 0x0060 (0x0260 - 0x0200)
class UGFxSHiFTMenuCodeRedemptionPage : public UGFxSHiFTMenuPage
{
public:
	class UGbxTextField*                               ErrorTextField;                                           // 0x0200(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               AccountNameTextField;                                     // 0x0208(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               PageDescription;                                          // 0x0210(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGFxSHiFTMenuEditableTextField*>      CodeSegments;                                             // 0x0218(0x0010) (ZeroConstructor, Transient)
	class UGbxGFxObject*                               CheckVerificationClip;                                    // 0x0228(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               DiamondKeyTextField;                                      // 0x0230(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               GoldenkeyTextField;                                       // 0x0238(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               CodeRedemptionButton;                                     // 0x0240(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               RewardHistoryButton;                                      // 0x0248(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               SubmitButton;                                             // 0x0250(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0258(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSHiFTMenuCodeRedemptionPage");
		return ptr;
	}


	void OnClickSubmit(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnClickRewardHistory(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnButtonFocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxSHiFTMenuCreateAccountPage
// 0x0030 (0x0230 - 0x0200)
class UGFxSHiFTMenuCreateAccountPage : public UGFxSHiFTMenuPage
{
public:
	class UGFxSHiFTMenuEditableTextField*              EmailTextField;                                           // 0x0200(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSHiFTMenuEditableTextField*              PasswordTextField;                                        // 0x0208(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSHiFTMenuEditableTextField*              ConfirmPasswordTextField;                                 // 0x0210(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               SubmitButton;                                             // 0x0218(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0220(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSHiFTMenuCreateAccountPage");
		return ptr;
	}


	void OnClickSubmit(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnButtonFocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnAgeConfirmedClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxSHiFTMenuNoCrossplay
// 0x02A0 (0x0930 - 0x0690)
class UGFxSHiFTMenuNoCrossplay : public UGFxEchoNetSubMenu
{
public:
	class UGFxSHiFTMenuPage*                           ActivePage;                                               // 0x0690(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSHiFTMenuNotSignedInPage*                NotSignedInPage;                                          // 0x0698(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSHiFTMenuResetPasswordPage*              ResetPasswordPageWidget;                                  // 0x06A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSHiFTMenuSignInAccountPage*              SignInAccountPage;                                        // 0x06A8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSHiFTMenuCreateAccountPage*              CreateAccountPageWidget;                                  // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSHiFTMenuRewardHistoryPage*              RewardHistoryPageWidget;                                  // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSHiFTMenuCodeRedemptionPage*             CodeRedemptionPageWidget;                                 // 0x06C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSHiFTMenuOfflinePage*                    OfflinePageWidget;                                        // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TargetPlayerName;                                         // 0x06D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AGbxPlayerController>         TargetPC;                                                 // 0x06D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x06E0(0x0018) MISSED OFFSET
	struct FText                                       PageDescriptionText;                                      // 0x06F8(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       EmailDescriptionText;                                     // 0x0710(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       AgeDescriptionText;                                       // 0x0728(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       PasswordDescriptionText;                                  // 0x0740(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       ConfirmPasswordDescriptionText;                           // 0x0758(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       PasswordInvalidText;                                      // 0x0770(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       AgeInvalidText;                                           // 0x0788(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       EmailInvalidText;                                         // 0x07A0(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       ConfirmPasswordInvalidText;                               // 0x07B8(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       ResetPasswordDescription;                                 // 0x07D0(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       PasswordResetResponseText;                                // 0x07E8(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       CodeRedemptionPageDescriptionText;                        // 0x0800(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       CodeRedemptionErrorText;                                  // 0x0818(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       NoRewardText;                                             // 0x0830(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       WebSiteLinkText;                                          // 0x0848(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       WebSiteLinkFormatText;                                    // 0x0860(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       OfflineMessageText;                                       // 0x0878(0x0028) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x40];                                      // 0x0890(0x0040) MISSED OFFSET
	class UGbxMenuData*                                ErrorMessageDialogBox;                                    // 0x08D0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                ErrorTextColor;                                           // 0x08D8(0x0010) (Edit, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	class FString                                      EditableTextClickedAudioEventName;                        // 0x08E8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class FString                                      EditableTextSubmittedAudioEventName;                      // 0x08F8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class FString                                      EditableTextEditAbortedAudioEventName;                    // 0x0908(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class FString                                      EditableTextInputAudioEventName;                          // 0x0918(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0928(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSHiFTMenuNoCrossplay");
		return ptr;
	}


	void HandleEULAResponse(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void extFinishedHide();
};


// Class OakGame.GFxSHiFTMenuNotSignedInPage
// 0x0020 (0x0220 - 0x0200)
class UGFxSHiFTMenuNotSignedInPage : public UGFxSHiFTMenuPage
{
public:
	class UGbxGFxButton*                               CreateAccountButton;                                      // 0x0200(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               DescriptionTextFieldClip;                                 // 0x0208(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxSlider*                               DescriptionTextFieldScrollBarClip;                        // 0x0210(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               DescriptionTextFieldGridAreaClip;                         // 0x0218(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSHiFTMenuNotSignedInPage");
		return ptr;
	}


	void OnClickSignIn(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnClickCreateAccount(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxSHiFTMenuOfflinePage
// 0x0010 (0x0210 - 0x0200)
class UGFxSHiFTMenuOfflinePage : public UGFxSHiFTMenuPage
{
public:
	class UGbxGFxButton*                               RetryButton;                                              // 0x0200(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0208(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSHiFTMenuOfflinePage");
		return ptr;
	}


	void OnClickRetry(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxSHiFTMenuEditableTextField
// 0x0010 (0x0430 - 0x0420)
class UGFxSHiFTMenuEditableTextField : public UGbxGFxEditableTextField
{
public:
	class UGbxTextField*                               DescriptionTextField;                                     // 0x0420(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0428(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSHiFTMenuEditableTextField");
		return ptr;
	}

};


// Class OakGame.GFxSHiFTMenuResetPasswordPage
// 0x0010 (0x0210 - 0x0200)
class UGFxSHiFTMenuResetPasswordPage : public UGFxSHiFTMenuPage
{
public:
	class UGbxTextField*                               ErrorTextBox;                                             // 0x0200(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               SubmitButton;                                             // 0x0208(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSHiFTMenuResetPasswordPage");
		return ptr;
	}


	void OnSubmitFocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnClickSubmit(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxSHiftMenuRewardHistoryPageItem
// 0x0000 (0x0310 - 0x0310)
class UGFxSHiftMenuRewardHistoryPageItem : public UGbxGFxListCell
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSHiftMenuRewardHistoryPageItem");
		return ptr;
	}

};


// Class OakGame.GFxSHiFTMenuRewardHistoryPage
// 0x0070 (0x0270 - 0x0200)
class UGFxSHiFTMenuRewardHistoryPage : public UGFxSHiFTMenuPage
{
public:
	class UGbxTextField*                               NoRewardTextField;                                        // 0x0200(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    MainRewardList;                                           // 0x0208(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               CodeRedemptionMenuButton;                                 // 0x0210(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               RewardHistoryMenuButton;                                  // 0x0218(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               AccountNameTextField;                                     // 0x0220(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               DiamondKeyTextField;                                      // 0x0228(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               GoldenkeyTextField;                                       // 0x0230(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      EmptyRewardScaleformClass;                                // 0x0238(0x0010) (Edit, ZeroConstructor)
	class FString                                      NonEmptyRewardScaleformClass;                             // 0x0248(0x0010) (Edit, ZeroConstructor)
	class FString                                      NonEmptyRewardScaleformClassSplit;                        // 0x0258(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      ListItemNativeClass;                                      // 0x0268(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSHiFTMenuRewardHistoryPage");
		return ptr;
	}


	void OnClickCodeRedemption(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxSHiFTMenuSignInAccountPage
// 0x0020 (0x0220 - 0x0200)
class UGFxSHiFTMenuSignInAccountPage : public UGFxSHiFTMenuPage
{
public:
	class UGbxTextField*                               ErrorTextBox;                                             // 0x0200(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSHiFTMenuEditableTextField*              EmailTextField;                                           // 0x0208(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSHiFTMenuEditableTextField*              PasswordTextField;                                        // 0x0210(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               SubmitButton;                                             // 0x0218(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSHiFTMenuSignInAccountPage");
		return ptr;
	}


	void OnSubmitFocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnClickSubmit(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnClickCancel(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxSirenSkillScreenTree
// 0x00A0 (0x0FB0 - 0x0F10)
class UGFxSirenSkillScreenTree : public UGFxSkillScreenTree
{
public:
	class UGbxTextField*                               ComboLabel;                                               // 0x0F10(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               PassivesText;                                             // 0x0F18(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenLoadoutSlot*                  SkillSlot;                                                // 0x0F20(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenLoadoutSlot*                  ModSlot;                                                  // 0x0F28(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenLoadoutSlot*                  ElementalEffectSlot;                                      // 0x0F30(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FText                                       SkillSlotDescription;                                     // 0x0F38(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       AugmentSlotDescription;                                   // 0x0F50(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ShockDescription;                                         // 0x0F68(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ShockName;                                                // 0x0F80(0x0028) (Edit, BlueprintReadOnly)
	class FString                                      ShockFrameName;                                           // 0x0F98(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0FA8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSirenSkillScreenTree");
		return ptr;
	}

};


// Class OakGame.GFxSkillBar
// 0x0060 (0x01D0 - 0x0170)
class UGFxSkillBar : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                               Wrapper;                                                  // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGbxGFxProgressBar*>                  SkillDurationBars;                                        // 0x0178(0x0010) (ZeroConstructor, Transient)
	class UGbxGFxObject*                               ChargeIconWrapper;                                        // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGbxGFxObject*>                       ChargesRemainingIcons;                                    // 0x0190(0x0010) (ZeroConstructor, Transient)
	class UGbxGFxObject*                               SecondaryFill;                                            // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakActionAbility*                           CachedAbility;                                            // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x01B0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSkillBar");
		return ptr;
	}

};


// Class OakGame.GFxSkillDurationBars
// 0x0020 (0x0650 - 0x0630)
class UGFxSkillDurationBars : public UGbxGFxHUDWidget
{
public:
	class UGbxGFxObject*                               SkillBarWrapper;                                          // 0x0630(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillBar*                                LeftSkillBar;                                             // 0x0638(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillBar*                                RightSkillBar;                                            // 0x0640(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0648(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSkillDurationBars");
		return ptr;
	}


	void OnActionSkillCoolingDown(class UOakActionAbility* InActionAbility);
	void OnActionAbilityAugmentChanged(class UClass* ActionAbilityClass, class UOakActionAbilityAugmentSlotData* SlotData);
	void OnAbilitySlotChanged(class UOakPlayerAbilitySlotData* SlotData);
};


// Class OakGame.GFxSkillScreenBranch
// 0x01C0 (0x0490 - 0x02D0)
class UGFxSkillScreenBranch : public UGbxGFxButton
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x02D0(0x0008) MISSED OFFSET
	class UGbxGFxObject*                               LayoutBranch;                                             // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenRowList*                      SkillRowList;                                             // 0x02E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakPlayerAbilityTree*                       PlayerAbilityTree;                                        // 0x02E8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UOakPlayerAbilityTreeBranchData*             BranchData;                                               // 0x02F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x02F8(0x0018) MISSED OFFSET
	class UGbxGFxProgressBar*                          BackgroundFill;                                           // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenRow*                          PreviousRow;                                              // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x170];                                     // 0x0320(0x0170) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSkillScreenBranch");
		return ptr;
	}


	void OnTreeItemUnfocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnTreeItemPressed(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnTreeItemFocused(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnItemUsableStateChanged(class UGFxSkillScreenItem* UpdatedItem);
	void OnItemUnlockedAudioRequest();
	void OnItemSlotRequest(class UGFxSkillScreenItem* ItemToSlot, int SlotIndex);
	void OnItemIncreasedAudioRequest(int AudioIndex);
	void OnAbilityTierChanged(class UOakPlayerAbilityTreeTierData* TierData);
	void OnAbilityPointsChanged(int RemainingAbilityPoints);
};


// Class OakGame.GFxSkillScreenItem
// 0x0300 (0x05D0 - 0x02D0)
class UGFxSkillScreenItem : public UGbxGFxButton
{
public:
	unsigned char                                      UnknownData00[0x188];                                     // 0x02D0(0x0188) MISSED OFFSET
	class UOakPlayerAbilityTreeItemData*               ItemData;                                                 // 0x0458(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakPlayerAbilityTree*                       AbilityTree;                                              // 0x0460(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGFxSkillScreenRowList*                      OwnerRowList;                                             // 0x0468(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0470(0x0008) MISSED OFFSET
	struct FLinearColor                                CurrentTextColor;                                         // 0x0478(0x0010) (Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x148];                                     // 0x0488(0x0148) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSkillScreenItem");
		return ptr;
	}


	class FString GetButtonState(class UGbxGFxButton* BUTTON, EGbxFocusableWidgetState State);
};


// Class OakGame.GFxSkillScreenLoadoutChoiceItem
// 0x0080 (0x0390 - 0x0310)
class UGFxSkillScreenLoadoutChoiceItem : public UGbxGFxListCell
{
public:
	class UGbxGFxObject*                               IconColored;                                              // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               IconSelected;                                             // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               BackgroundGray;                                           // 0x0320(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               BackgroundColored;                                        // 0x0328(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               BackgroundSelected;                                       // 0x0330(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FText                                       ChoiceSelectionName;                                      // 0x0338(0x0028) (Transient)
	struct FText                                       ChoiceSelectedName;                                       // 0x0350(0x0028) (Transient)
	struct FText                                       ChoiceDescription;                                        // 0x0368(0x0028) (Transient)
	EGFxSkillScreenLoadoutChoiceEquipState             EquipState;                                               // 0x0380(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0381(0x0007) MISSED OFFSET
	class UOakPlayerAbilityTreeItemData*               ItemData;                                                 // 0x0388(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSkillScreenLoadoutChoiceItem");
		return ptr;
	}


	class FString GetButtonState(class UGbxGFxButton* BUTTON, EGbxFocusableWidgetState State);
};


// Class OakGame.GFxSkillScreenLoadoutSlot
// 0x0160 (0x0430 - 0x02D0)
class UGFxSkillScreenLoadoutSlot : public UGbxGFxButton
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x02D0(0x0008) MISSED OFFSET
	class UGbxGFxObject*                               LockedOverlay;                                            // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ReceiveHighlight;                                         // 0x02E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               SlotIndicator;                                            // 0x02E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	ESkillScreenReceiveHighlightState                  ReceiveHighlightState;                                    // 0x02F0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x02F1(0x0007) MISSED OFFSET
	class UOakActionAbility*                           AssociatedActiveAbility;                                  // 0x02F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x30];                                      // 0x0300(0x0030) MISSED OFFSET
	struct FGFxSkillScreenSkillInfo                    EmptySlotInfo;                                            // 0x0330(0x00C8) (Transient)
	class UGFxSkillScreenLoadoutSlot*                  SwapSlot;                                                 // 0x03F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxSkillScreenLoadoutSlot*                  IronCubSwapSlot;                                          // 0x0400(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakActionAbilityAugmentSlotData*            AugmentSlotData;                                          // 0x0408(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakPlayerAbilitySlotData*                   AbilitySlotData;                                          // 0x0410(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UPlayerCharacterComponentSlotData*           CharacterAugmentSlotData;                                 // 0x0418(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0420(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSkillScreenLoadoutSlot");
		return ptr;
	}


	void OnAssociatedResourcePoolUpdated(float NewValue, struct FGameResourcePoolReference* ResourcePool);
	void OnActionSkillCoolingDown(class UOakActionAbility* InActionAbility);
	void OnActionSkillActivated(class UOakActionAbility* InActionAbility);
};


// Class OakGame.GFxSkillScreenMenuData
// 0x0000 (0x0118 - 0x0118)
class UGFxSkillScreenMenuData : public UGFxStatusMenuSubmenuData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSkillScreenMenuData");
		return ptr;
	}

};


// Class OakGame.GFxSkillScreenRow
// 0x0060 (0x0370 - 0x0310)
class UGFxSkillScreenRow : public UGbxGFxListCell
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0310(0x0020) MISSED OFFSET
	class UOakPlayerAbilityTreeTierData*               TierData;                                                 // 0x0330(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x38];                                      // 0x0338(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSkillScreenRow");
		return ptr;
	}

};


// Class OakGame.GFxSkillScreenRowList
// 0x0000 (0x0330 - 0x0330)
class UGFxSkillScreenRowList : public UGbxGFxGridScrollingListPaged
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSkillScreenRowList");
		return ptr;
	}

};


// Class OakGame.GFxSkillScreenDragObject
// 0x0030 (0x01A0 - 0x0170)
class UGFxSkillScreenDragObject : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0170(0x0020) MISSED OFFSET
	class UGbxGFxObject*                               SkillIconArt;                                             // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0198(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSkillScreenDragObject");
		return ptr;
	}

};


// Class OakGame.GFxStatusMenuData
// 0x0010 (0x00F0 - 0x00E0)
class UGFxStatusMenuData : public UGbxGFxMenuSwitcherMenuData
{
public:
	struct FName                                       FirstMenuToLookAt;                                        // 0x00E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UObject*                                     FirstMenuSelectionObject;                                 // 0x00E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxStatusMenuData");
		return ptr;
	}

};


// Class OakGame.GFxStatusMenu
// 0x0410 (0x0AB0 - 0x06A0)
class UGFxStatusMenu : public UGbxGFxMenuSwitcher
{
public:
	TArray<struct FGFxStatusMenuSubmenuKeyMap>         SubmenuKeymapping;                                        // 0x06A0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       StatusMenuInputAction;                                    // 0x06B0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FEchoDeviceUIController                     EchoDeviceController;                                     // 0x06B8(0x0020) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x8];                                       // 0x06D8(0x0008) MISSED OFFSET
	struct FStandInUIController                        StandInController;                                        // 0x06E0(0x0390) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       BackgroundParticleEffectWipeSound;                        // 0x0A70(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       BackgroundParticleEffectCloseSound;                       // 0x0A78(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class AOakGameState>                OakGameState;                                             // 0x0A80(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxStatusMenuNavBar*                        StatusMenuNavBar;                                         // 0x0A88(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AZoneMapViewer*                              ZoneMapViewer;                                            // 0x0A90(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bBackgroundParticleStateOn;                               // 0x0A98(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0A99(0x0007) MISSED OFFSET
	TArray<struct FGFxStatusMenuNavBarInfo>            NavBarInfos;                                              // 0x0AA0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxStatusMenu");
		return ptr;
	}


	void OnPlayTransitionAnimation(EGFxStatusMenuTransitionReason Reason);
	void OnPlayerWeaponChanged(class AWeapon* NewWeapon, class AWeapon* LastWeapon);
	void OnNumPlayersChanged(int NewNumPlayers);
};


// Class OakGame.GFxStatusMenuNavBar
// 0x0060 (0x01D0 - 0x0170)
class UGFxStatusMenuNavBar : public UGbxGFxObject
{
public:
	class UGbxGFxGridScrollingList*                    NavListClip;                                              // 0x0170(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxGFxHintWidget*                           PrevButtonHintClip;                                       // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           NextButtonHintClip;                                       // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x38];                                      // 0x0188(0x0038) MISSED OFFSET
	class UGFxStatusMenuSubmenu*                       OwnerSubmenu;                                             // 0x01C0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x01C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxStatusMenuNavBar");
		return ptr;
	}


	void OnNavCellClicked(class UGbxGFxListCell* ClickedItem, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxStatusMenuNavBarButton
// 0x0020 (0x0330 - 0x0310)
class UGFxStatusMenuNavBarButton : public UGbxGFxListCell
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0310(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxStatusMenuNavBarButton");
		return ptr;
	}

};


// Class OakGame.GFxStoreMenu
// 0x0070 (0x06F0 - 0x0680)
class UGFxStoreMenu : public UGbxGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0680(0x0008) MISSED OFFSET
	TArray<class FString>                              SampleTextureUrls;                                        // 0x0688(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class UGFxStoreMenuItemBrowserWidget*              ItemBrowserWidgetClip;                                    // 0x0698(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxStoreMenuDetailsWidget*                  DetailsWidgetClip;                                        // 0x06A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FGFxStoreMenuDLCItem>                AllDLCDatas;                                              // 0x06A8(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FGFxStoreMenuPage>                   Pages;                                                    // 0x06B8(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UOakThumbnailManager*                        PreviewImageManager;                                      // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPreviewImagesNeedRefresh;                                // 0x06D0(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1F];                                      // 0x06D1(0x001F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxStoreMenu");
		return ptr;
	}


	void OnPreviewImageLoaded();
	void OnClickStoreButton(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxStoreMenuWidget
// 0x0010 (0x0180 - 0x0170)
class UGFxStoreMenuWidget : public UGbxGFxObject
{
public:
	bool                                               bIsShowing;                                               // 0x0170(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0171(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxStoreMenuWidget");
		return ptr;
	}

};


// Class OakGame.GFxStoreMenuNavBarTabButton
// 0x0010 (0x02E0 - 0x02D0)
class UGFxStoreMenuNavBarTabButton : public UGbxGFxButton
{
public:
	EGFxStoreMenuTabType                               TabType;                                                  // 0x02D0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02D0(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData01[0xC];                                       // 0x02D4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxStoreMenuNavBarTabButton");
		return ptr;
	}

};


// Class OakGame.GFxStoreMenuItemBrowserNavBarWidget
// 0x0020 (0x0190 - 0x0170)
class UGFxStoreMenuItemBrowserNavBarWidget : public UGbxGFxObject
{
public:
	TArray<class UGFxStoreMenuNavBarTabButton*>        TabButtonClips;                                           // 0x0170(0x0010) (ZeroConstructor, Transient)
	class UGbxGFxHintWidget*                           PrevHintClip;                                             // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           NextHintClip;                                             // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxStoreMenuItemBrowserNavBarWidget");
		return ptr;
	}


	void OnTabButtonClicked(class UGbxGFxButton* PressedButton, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxStoreMenuItemBrowserPageWidget
// 0x0020 (0x0190 - 0x0170)
class UGFxStoreMenuItemBrowserPageWidget : public UGbxGFxObject
{
public:
	class UGbxTextField*                               PageTextClip;                                             // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           PrevHintClip;                                             // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           NextHintClip;                                             // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0188(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxStoreMenuItemBrowserPageWidget");
		return ptr;
	}

};


// Class OakGame.GFxStoreMenuBrowserItemWidget
// 0x0080 (0x0350 - 0x02D0)
class UGFxStoreMenuBrowserItemWidget : public UGbxGFxButton
{
public:
	class UGbxGFxObject*                               ItemPictureClip;                                          // 0x02D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ItemTypeTextClip;                                         // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      PreviewImageUrl;                                          // 0x02E0(0x0010) (ZeroConstructor, Transient)
	bool                                               bIsFeaturedType;                                          // 0x02F0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x02F1(0x0007) MISSED OFFSET
	struct FGFxStoreMenuDLCItem                        CurrentData;                                              // 0x02F8(0x0050) (Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0348(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxStoreMenuBrowserItemWidget");
		return ptr;
	}

};


// Class OakGame.GFxStoreMenuBrowserWidget
// 0x0010 (0x02E0 - 0x02D0)
class UGFxStoreMenuBrowserWidget : public UGbxGFxButton
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x02D0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxStoreMenuBrowserWidget");
		return ptr;
	}

};


// Class OakGame.GFxStoreMenuItemBrowserWidget
// 0x0040 (0x01C0 - 0x0180)
class UGFxStoreMenuItemBrowserWidget : public UGFxStoreMenuWidget
{
public:
	class UGbxTextField*                               TitleTextClip;                                            // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxStoreMenuItemBrowserNavBarWidget*        NavBarClip;                                               // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               SubTitleTextClip;                                         // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxStoreMenuBrowserWidget*                  ItemBrowserListClip;                                      // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxStoreMenuItemBrowserPageWidget*          PageNavBarClip;                                           // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	EGFxStoreMenuTabType                               CurrentTab;                                               // 0x01A8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01A8(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData01[0xC];                                       // 0x01AC(0x000C) MISSED OFFSET
	int                                                CurrentPageIndex;                                         // 0x01B8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x01BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxStoreMenuItemBrowserWidget");
		return ptr;
	}

};


// Class OakGame.GFxStoreMenuDetailsWidget
// 0x0040 (0x01C0 - 0x0180)
class UGFxStoreMenuDetailsWidget : public UGFxStoreMenuWidget
{
public:
	class UGbxTextField*                               DetailTitleClip;                                          // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               DetailTypeClip;                                           // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               DetailDescClip;                                           // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               InstalledClip;                                            // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               InstalledTextClip;                                        // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               PurchasedClip;                                            // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               PurchasedTextClip;                                        // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           HintButtonClip;                                           // 0x01B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxStoreMenuDetailsWidget");
		return ptr;
	}

};


// Class OakGame.GFxStoreMenuData
// 0x0000 (0x00C0 - 0x00C0)
class UGFxStoreMenuData : public UGbxGFxMenuData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxStoreMenuData");
		return ptr;
	}

};


// Class OakGame.GFxSubtitlesWidget
// 0x0090 (0x06C0 - 0x0630)
class UGFxSubtitlesWidget : public UGbxGFxHUDWidget
{
public:
	float                                              ClosedCaptionLifetime;                                    // 0x0630(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxTextScalingForLargestBackground;                       // 0x0634(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<float>                                      SubtitleBackgroundSizeMapping;                            // 0x0638(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class UGbxTextField*                               SubtitleField;                                            // 0x0648(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               SubtitleBackground;                                       // 0x0650(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	ESubtitleLayoutType                                CurrentSubtitleLayoutType;                                // 0x0658(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0659(0x0007) MISSED OFFSET
	class UGbxGFxObject*                               ClosedCaptioningContainer;                                // 0x0660(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FClosedCaptionEntry>                 ClosedCaptioningLines;                                    // 0x0668(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FSubtitleLine>                       SubtitleLines;                                            // 0x0678(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0688(0x0008) MISSED OFFSET
	int64_t                                            CurrentSubtitleID;                                        // 0x0690(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bStopAfterCurrentSubtitle;                                // 0x0698(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bSubtitleChangePending;                                   // 0x0699(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x069A(0x0002) MISSED OFFSET
	float                                              SubtitleLifetime;                                         // 0x069C(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x06A0(0x0008) MISSED OFFSET
	struct FText                                       CachedSubtitle;                                           // 0x06A8(0x0028) (BlueprintReadOnly, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxSubtitlesWidget");
		return ptr;
	}

};


// Class OakGame.GFxTargetedNameplate
// 0x0020 (0x0650 - 0x0630)
class UGFxTargetedNameplate : public UGbxGFxHUDWidget
{
public:
	class UGFxNameplate*                               Nameplate;                                                // 0x0630(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UCurveFloat*                                 RangeFadeCurve;                                           // 0x0638(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeStartDistance;                                        // 0x0640(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeEndDistance;                                          // 0x0644(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LingerDuration;                                           // 0x0648(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x064C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxTargetedNameplate");
		return ptr;
	}

};


// Class OakGame.GFxTrophyCaseMenu
// 0x0050 (0x06D0 - 0x0680)
class UGFxTrophyCaseMenu : public UGbxGFxMenu
{
public:
	TWeakObjectPtr<class ATrophyCase>                  TrophyCase;                                               // 0x0680(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class ATrophyCaseProxy>             TrophyCaseProxy;                                          // 0x0688(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	ETrophyCaseViewingState                            CurrentViewingState;                                      // 0x0690(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0691(0x0007) MISSED OFFSET
	struct FText                                       CachedSetName;                                            // 0x0698(0x0028) (BlueprintReadOnly, Transient)
	int                                                CachedSetPercent;                                         // 0x06B0(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bMenuContentReady;                                        // 0x06B4(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bGameDataReady;                                           // 0x06B5(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x06B6(0x0002) MISSED OFFSET
	class UGFxTrophyCaseMenuLargeNavObject*            LargeNavClip;                                             // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxTrophyCaseMenuSmallNavObject*            SmallNavClip;                                             // 0x06C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxTrophyCaseMenuTrophyPanel*               TrophyPanel;                                              // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxTrophyCaseMenu");
		return ptr;
	}


	void OnTrophyCaseViewingStateChanged(ETrophyCaseViewingState NewViewingState);
	void OnTrophyCaseCurrentTrophySetChanged(const struct FText& TrophySetName, const struct FText& TrophySetDescription, int NumComplete, int NumTotal);
	void OnTrophyCaseCurrentTrophyGroupChanged(const struct FText& TrophyGroupName, const struct FText& TrophyGroupDescription, int NumComplete, int NumTotal);
	void OnTrophyCaseCurrentTrophyChanged(const struct FText& TrophyName, const struct FText& TrophyDescription, bool bLocked, int CompletedProgressLevel, int MaxProgressLevel, class UChallenge* AssociatedChallenge);
};


// Class OakGame.GFxTrophyCaseMenuLargeNavObject
// 0x0030 (0x01A0 - 0x0170)
class UGFxTrophyCaseMenuLargeNavObject : public UGbxGFxObject
{
public:
	class UGbxTextField*                               CategoryNameTextClip;                                     // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CompletionTextClip;                                       // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               NavButtonLeftClip;                                        // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               NavButtonRightClip;                                       // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bShowing;                                                 // 0x0190(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0191(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxTrophyCaseMenuLargeNavObject");
		return ptr;
	}

};


// Class OakGame.GFxTrophyCaseMenuSmallNavObject
// 0x0030 (0x01A0 - 0x0170)
class UGFxTrophyCaseMenuSmallNavObject : public UGbxGFxObject
{
public:
	class UGbxTextField*                               CategoryNameTextClip;                                     // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               CompletionTextClip;                                       // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           PromptHintWrapperRBClip;                                  // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           PromptHintWrapperLBClip;                                  // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bShowing;                                                 // 0x0190(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0191(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxTrophyCaseMenuSmallNavObject");
		return ptr;
	}

};


// Class OakGame.GFxTrophyCaseMenuTrophyPanel
// 0x0070 (0x01E0 - 0x0170)
class UGFxTrophyCaseMenuTrophyPanel : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                               TrophyPanelClip;                                          // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               EnemyNameTextClip;                                        // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TrophyColorTextClip;                                      // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               NextRankTextClip;                                         // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               KillsLabelTextClip;                                       // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               KillsCountTextClip;                                       // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    PanelNavClip;                                             // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           PanelNavHintClip;                                         // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               EnemyDescriptionTextClip;                                 // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               EnemyDescriptionTextMaskClip;                             // 0x01B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxSlider*                               EnemyDescriptionScrollbarClip;                            // 0x01C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          ProgressBarClip;                                          // 0x01C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bShowing;                                                 // 0x01D0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x01D1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxTrophyCaseMenuTrophyPanel");
		return ptr;
	}

};


// Class OakGame.GFxTutorialMessageWidget
// 0x0050 (0x0680 - 0x0630)
class UGFxTutorialMessageWidget : public UGbxGFxHUDWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0630(0x0010) MISSED OFFSET
	class UGbxGFxObject*                               TutorialWidgetContainer;                                  // 0x0640(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               HeaderText;                                               // 0x0648(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               BodyText;                                                 // 0x0650(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UTutorialMessageDataAsset*>           TutorialMessageQueue;                                     // 0x0658(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class UTutorialMessageDataAsset*                   CurrentTutorialMessage;                                   // 0x0668(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0670(0x0008) MISSED OFFSET
	class UTutorialMessageDataAsset*                   TestMessage;                                              // 0x0678(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxTutorialMessageWidget");
		return ptr;
	}


	void OnInputDeviceChanged();
	void extOnRolloutComplete();
};


// Class OakGame.TutorialMessageDataAsset
// 0x0038 (0x0068 - 0x0030)
class UTutorialMessageDataAsset : public UGbxDataAsset
{
public:
	struct FText                                       Header;                                                   // 0x0030(0x0028) (Edit)
	struct FText                                       Body;                                                     // 0x0048(0x0028) (Edit)
	float                                              Duration;                                                 // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TutorialMessageDataAsset");
		return ptr;
	}

};


// Class OakGame.GFxUISpinnerWidget
// 0x0030 (0x01A0 - 0x0170)
class UGFxUISpinnerWidget : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0170(0x0010) MISSED OFFSET
	unsigned char                                      TargetValue;                                              // 0x0180(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0181(0x0007) MISSED OFFSET
	class UGbxGFxObject*                               AnimationWrapper;                                         // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      TotalDigitsDisplayed;                                     // 0x0190(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xF];                                       // 0x0191(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxUISpinnerWidget");
		return ptr;
	}

};


// Class OakGame.GFxVaultCardMenu
// 0x02B0 (0x0960 - 0x06B0)
class UGFxVaultCardMenu : public UGFxStatusMenuSubmenu
{
public:
	class UGbxGFxObject*                               RewardsRowClip;                                           // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               RewardHeaderIconClip;                                     // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               FloatingPanelKeyIconClip;                                 // 0x06C0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ChallengePanelKeyIconClip;                                // 0x06C8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxVaultCardFloatingPanel*                  FloatingPanelClip;                                        // 0x06D0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxVaultCardChallengePanel*                 ChallengePanelClip;                                       // 0x06D8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxGridScrollingList*                    NavBarList;                                               // 0x06E0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           NavBarHintPrev;                                           // 0x06E8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           NavBarHintNext;                                           // 0x06F0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               VaultCardTitleTextField;                                  // 0x06F8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AOakUIActorContainer*                        VaultCardChestContainer;                                  // 0x0700(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class ALootableObject*                             VaultCardLootableChest;                                   // 0x0708(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakThumbnailManager*                        ThumbnailManager;                                         // 0x0710(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLoadedItemCardBase*                      ItemCardBase;                                             // 0x0718(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLoadedItemCardBase*                      ItemCardReward;                                           // 0x0720(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               RewardTypeClip;                                           // 0x0728(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FText                                       ChestRewardTitleText;                                     // 0x0730(0x0028) (BlueprintReadOnly, Transient)
	struct FText                                       ChestRewardDescText;                                      // 0x0748(0x0028) (BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData00[0x154];                                     // 0x0760(0x0154) MISSED OFFSET
	TWeakObjectPtr<class UWeaponSkinPartData>          OriginalWeaponSkin;                                       // 0x08B4(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x08BC(0x0014) MISSED OFFSET
	struct FName                                       PurchaseRewardSoundFX;                                    // 0x08D0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       InsufficientFundsSoundFX;                                 // 0x08D8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       OpenChestSoundFX;                                         // 0x08E0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       RedeemRewardSoundFX;                                      // 0x08E8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       StartInspectItemSoundFX;                                  // 0x08F0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       StopInspectItemSoundFX;                                   // 0x08F8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VaultCardChestContainerClass;                             // 0x0900(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MysteryGearClass;                                         // 0x0908(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OperativeStandInClass;                                    // 0x0910(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      GunnerStandInClass;                                       // 0x0918(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      BeastmasterStandInClass;                                  // 0x0920(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SirenStandInClass;                                        // 0x0928(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USwfMovie*                                   ItemCardMovie;                                            // 0x0930(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxMenuData*                                ItemInspectionMenuData;                                   // 0x0938(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumberOfVisibleRewardRows;                                // 0x0940(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumberOfVisibleRewardRows_Split;                          // 0x0944(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   RewardRowSize;                                            // 0x0948(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0950(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVaultCardMenu");
		return ptr;
	}


	void SetAdjancenyInfoForCells();
	void OnStandInActorCreated(class AActor* InStandInActor);
	void OnRewardsListScrollBarUpdated(float SliderPercentage);
	void OnRewardItemCardReady();
	void OnPlayerOpenChest(class ALootableObject* InLootable);
	void OnNavCellSelectionChanged(class UGbxGFxListCell* ListItem);
	void OnItemCardReady();
	void OnChestOpeningAnimationComplete(class ALootableObject* InLootable);
	void extOpenChestAnimationComplete();
};


// Class OakGame.GFxVaultCardRewardCell
// 0x0080 (0x0350 - 0x02D0)
class UGFxVaultCardRewardCell : public UGbxGFxButton
{
public:
	unsigned char                                      UnknownData00[0x78];                                      // 0x02D0(0x0078) MISSED OFFSET
	class UGbxGFxObject*                               UnlockAnimClip;                                           // 0x0348(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVaultCardRewardCell");
		return ptr;
	}

};


// Class OakGame.GFxVaultCardRewardsRow
// 0x0030 (0x01A0 - 0x0170)
class UGFxVaultCardRewardsRow : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0170(0x0020) MISSED OFFSET
	TArray<class UGFxVaultCardRewardCell*>             RewardCells;                                              // 0x0190(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVaultCardRewardsRow");
		return ptr;
	}

};


// Class OakGame.GFxVaultCardFloatingPanel
// 0x0080 (0x01F0 - 0x0170)
class UGFxVaultCardFloatingPanel : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x78];                                      // 0x0170(0x0078) MISSED OFFSET
	class UGbxGFxHintWidget*                           HintClip;                                                 // 0x01E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVaultCardFloatingPanel");
		return ptr;
	}

};


// Class OakGame.GFxVaultCardChallengePanel
// 0x0080 (0x01F0 - 0x0170)
class UGFxVaultCardChallengePanel : public UGbxGFxObject
{
public:
	unsigned char                                      UnknownData00[0x70];                                      // 0x0170(0x0070) MISSED OFFSET
	class UGbxGFxGridScrollingList*                    ChallengeListClip;                                        // 0x01E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x01E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVaultCardChallengePanel");
		return ptr;
	}

};


// Class OakGame.GFxVaultCardChallengeCell
// 0x0030 (0x0340 - 0x0310)
class UGFxVaultCardChallengeCell : public UGbxGFxListCell
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0310(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVaultCardChallengeCell");
		return ptr;
	}

};


// Class OakGame.GFxVaultCardMenuData
// 0x0000 (0x0118 - 0x0118)
class UGFxVaultCardMenuData : public UGFxStatusMenuSubmenuData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVaultCardMenuData");
		return ptr;
	}

};


// Class OakGame.GFxVaultCardRankUpWidget
// 0x0000 (0x0590 - 0x0590)
class UGFxVaultCardRankUpWidget : public UGFxDisplayedNotificationWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVaultCardRankUpWidget");
		return ptr;
	}

};


// Class OakGame.GFxVaultHunterProfileCard
// 0x0060 (0x01D0 - 0x0170)
class UGFxVaultHunterProfileCard : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                               PictureClip;                                              // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               PlayerNameClip;                                           // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxVaultHunterProfileCardPlayerStatusWidget* PlayerStatusClip;                                         // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxVaultHunterProfileCardSkillsWidget*      SkillClip;                                                // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxVaultHunterProfileCardInventoryWidget*   InventoryClip;                                            // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxVaultHunterProfileCardStatsWidget*       StatsClip;                                                // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MissionNameTextClip;                                      // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	EGFxVaultHunterProfileCardMode                     CardMode;                                                 // 0x01A8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	EGFxVaultHunterProfileCardView                     CurrentView;                                              // 0x01A9(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x01AA(0x0002) MISSED OFFSET
	TWeakObjectPtr<class AOakPlayerController>         SelfOakPC;                                                // 0x01AC(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsOff;                                                   // 0x01B4(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1B];                                      // 0x01B5(0x001B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVaultHunterProfileCard");
		return ptr;
	}

};


// Class OakGame.GFxVaultHunterProfileCardChangeStatusCell
// 0x0000 (0x0310 - 0x0310)
class UGFxVaultHunterProfileCardChangeStatusCell : public UGbxGFxListCell
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVaultHunterProfileCardChangeStatusCell");
		return ptr;
	}

};


// Class OakGame.GFxVaultHunterProfileCardChangeStatusList
// 0x0010 (0x0330 - 0x0320)
class UGFxVaultHunterProfileCardChangeStatusList : public UGbxGFxGridScrollingList
{
public:
	TWeakObjectPtr<class UGbxGFxObject>                WrapperClip;                                              // 0x0320(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVaultHunterProfileCardChangeStatusList");
		return ptr;
	}

};


// Class OakGame.GFxVaultHunterProfileCardPlayerStatusWidget
// 0x0050 (0x01C0 - 0x0170)
class UGFxVaultHunterProfileCardPlayerStatusWidget : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                               StatusWrapperClip;                                        // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               LookingForHelpTextClip;                                   // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               StatusTextClip;                                           // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               StatusIconClip;                                           // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ChangeStatusWrapperClip;                                  // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxVaultHunterProfileCardChangeStatusList*  ChangeHunterStatusClip;                                   // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           ToggleHelpHintClip;                                       // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxHintWidget*                           UpdateStatusHintClip;                                     // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCurrentLookingForHelp;                                   // 0x01B0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCurrentHasStatus;                                        // 0x01B1(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x01B2(0x0002) MISSED OFFSET
	TWeakObjectPtr<class UGFxVaultHunterProfileCard>   OwningProfileCard;                                        // 0x01B4(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVaultHunterProfileCardPlayerStatusWidget");
		return ptr;
	}


	void OnActivityCellClicked(class UGbxGFxListCell* ClickedItem, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.GFxVaultHunterProfileCardSkillsWidget
// 0x0070 (0x01E0 - 0x0170)
class UGFxVaultHunterProfileCardSkillsWidget : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                               ClassIconClip;                                            // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          GreenProgressBarClip;                                     // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               GreenProgressBarIconClip;                                 // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               GreenPercentLabelClip;                                    // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          BlueProgressBarClip;                                      // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               BlueProgressBarIconClip;                                  // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               BluePercentLabelClip;                                     // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          RedProgressBarClip;                                       // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               RedProgressBarIconClip;                                   // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               RedPercentLabelClip;                                      // 0x01B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          PurpleProgressBarClip;                                    // 0x01C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               PurpleProgressBarIconClip;                                // 0x01C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               PurplePercentLabelClip;                                   // 0x01D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x01D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVaultHunterProfileCardSkillsWidget");
		return ptr;
	}

};


// Class OakGame.GFxVaultHunterProfileCardInventoryItemWidget
// 0x0020 (0x0190 - 0x0170)
class UGFxVaultHunterProfileCardInventoryItemWidget : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                               RarityClip;                                               // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               WeaponTypeClip;                                           // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               IconGearClip;                                             // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0188(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVaultHunterProfileCardInventoryItemWidget");
		return ptr;
	}

};


// Class OakGame.GFxVaultHunterProfileCardInventoryWidget
// 0x0040 (0x01B0 - 0x0170)
class UGFxVaultHunterProfileCardInventoryWidget : public UGbxGFxObject
{
public:
	class UGFxVaultHunterProfileCardInventoryItemWidget* WeaponClips[0x4];                                         // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxVaultHunterProfileCardInventoryItemWidget* GrenadeClip;                                              // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxVaultHunterProfileCardInventoryItemWidget* ShieldClip;                                               // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxVaultHunterProfileCardInventoryItemWidget* ClassModClip;                                             // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxVaultHunterProfileCardInventoryItemWidget* RelicClip;                                                // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVaultHunterProfileCardInventoryWidget");
		return ptr;
	}

};


// Class OakGame.GFxVaultHunterProfileCardStatItemWidget
// 0x0010 (0x0330 - 0x0320)
class UGFxVaultHunterProfileCardStatItemWidget : public UGbxGFxProgressBar
{
public:
	class UGbxTextField*                               PercentageTextClip;                                       // 0x0320(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0328(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVaultHunterProfileCardStatItemWidget");
		return ptr;
	}

};


// Class OakGame.GFxVaultHunterProfileCardStatsWidget
// 0x0040 (0x01B0 - 0x0170)
class UGFxVaultHunterProfileCardStatsWidget : public UGbxGFxObject
{
public:
	class UGbxGFxObject*                               StatBarContainerClip;                                     // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxSlider*                               StatBarsScrollerClip;                                     // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               StatBarsGridAreaClip;                                     // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGFxVaultHunterProfileCardStatItemWidget*> StatClips;                                                // 0x0188(0x0010) (ZeroConstructor, Transient)
	class UGbxTextField*                               TimePlayedTextClip;                                       // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector2D                                   StatBarsInitialPosition;                                  // 0x01A0(0x0008) (Transient, IsPlainOldData)
	float                                              StatBarWindowHeight;                                      // 0x01A8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              StatBarContentHeight;                                     // 0x01AC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVaultHunterProfileCardStatsWidget");
		return ptr;
	}


	void OnStatBarScrollerUpdated(float SliderPercent);
};


// Class OakGame.GFxVehicleBoostbar
// 0x0020 (0x0650 - 0x0630)
class UGFxVehicleBoostbar : public UGbxGFxHUDWidget
{
public:
	class UGbxGFxProgressBar*                          BoostMeter;                                               // 0x0630(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               BoostText;                                                // 0x0638(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               FillDividersClip;                                         // 0x0640(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0648(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVehicleBoostbar");
		return ptr;
	}

};


// Class OakGame.GFxVehiclePartsWidget
// 0x0060 (0x0690 - 0x0630)
class UGFxVehiclePartsWidget : public UGbxGFxHUDWidget
{
public:
	class UGbxGFxObject*                               InnerClip;                                                // 0x0630(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               NotificationText;                                         // 0x0638(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               NewPartCountText;                                         // 0x0640(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               CondensedPartIcon;                                        // 0x0648(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGbxGFxObject*>                       PartIcons;                                                // 0x0650(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0660(0x0010) MISSED OFFSET
	int                                                MaxNumPartIcons;                                          // 0x0670(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1C];                                      // 0x0674(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVehiclePartsWidget");
		return ptr;
	}


	void RefreshWidget();
	void PlayTurnInAnimation(TSoftObjectPtr<class UInventoryData> Vehicle, TSoftObjectPtr<class UInventoryPartData> Part);
	void extBeginCondensed();
};


// Class OakGame.GFxVehiclePartUnlockedWidget
// 0x0070 (0x06A0 - 0x0630)
class UGFxVehiclePartUnlockedWidget : public UGbxGFxHUDWidget
{
public:
	int                                                NumPartIcons;                                             // 0x0630(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0634(0x0004) MISSED OFFSET
	class UGbxGFxObject*                               ContentClip;                                              // 0x0638(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               HeaderTextClip;                                           // 0x0640(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               HeaderTextShadowClip;                                     // 0x0648(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               UnlockedTextClip;                                         // 0x0650(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               PartIconsClip;                                            // 0x0658(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGbxGFxObject*>                       IconClips;                                                // 0x0660(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	int                                                CurrentIconCount;                                         // 0x0670(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EUGFxVehiclePartUnlockedWidgetState                RevealState;                                              // 0x0674(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0674(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData02[0x28];                                      // 0x0678(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVehiclePartUnlockedWidget");
		return ptr;
	}


	void OnPartUnlocked(TSoftObjectPtr<class UInventoryData> Vehicle, TSoftObjectPtr<class UInventoryPartData> Part);
	void extOnPlayComplete();
};


// Class OakGame.GFxVehicleSpeedometer
// 0x0020 (0x0650 - 0x0630)
class UGFxVehicleSpeedometer : public UGbxGFxHUDWidget
{
public:
	class UGbxGFxProgressBar*                          SpeedMeter;                                               // 0x0630(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               SpeedText;                                                // 0x0638(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               MPHorKPHText;                                             // 0x0640(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0648(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVehicleSpeedometer");
		return ptr;
	}

};


// Class OakGame.GFxVehicleWeaponContainer
// 0x0030 (0x0660 - 0x0630)
class UGFxVehicleWeaponContainer : public UGbxGFxHUDWidget
{
public:
	class UGFxVehicleWeaponWidget*                     LeftWeaponWidget;                                         // 0x0630(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxVehicleWeaponWidget*                     RightWeaponWidget;                                        // 0x0638(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      LeftWeaponWidgetID;                                       // 0x0640(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	class FString                                      RightWeaponWidgetID;                                      // 0x0650(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVehicleWeaponContainer");
		return ptr;
	}

};


// Class OakGame.GFxVehicleWeaponWidget
// 0x0130 (0x02A0 - 0x0170)
class UGFxVehicleWeaponWidget : public UGbxGFxObject
{
public:
	EGFxVehicleWeaponType                              WeaponType;                                               // 0x0170(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0171(0x0007) MISSED OFFSET
	class UWeaponAmmoComponent*                        CachedAmmoComponent;                                      // 0x0178(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWeaponHeatComponent*                        CachedHeatComponent;                                      // 0x0180(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWeaponChargeComponent*                      CachedChargeComponent;                                    // 0x0188(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UActiveWeaponsComponent*                     ActiveWeaponsComponent;                                   // 0x0190(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGbxGFxObject*                               VisibilityClip;                                           // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ResourceIconContainerClip;                                // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               DriverWeaponsClip;                                        // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               WeaponIcon;                                               // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               DynamicWeaponIcon;                                        // 0x01B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               WeaponIconFrames;                                         // 0x01C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class USwfMovie*                                   CurrentlyLoadedWeaponIcons;                               // 0x01C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      DesiredWeaponIconFrame;                                   // 0x01D0(0x0010) (ZeroConstructor, Transient)
	TArray<class UGbxGFxProgressBar*>                  AmmoProgressBars;                                         // 0x01E0(0x0010) (ZeroConstructor, Transient)
	int                                                CachedWeaponSlot;                                         // 0x01F0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01F4(0x0004) MISSED OFFSET
	class FString                                      VisibilityClipID;                                         // 0x01F8(0x0010) (ZeroConstructor, Transient)
	class FString                                      ResourceIconContainerClipID;                              // 0x0208(0x0010) (ZeroConstructor, Transient)
	class FString                                      DriverWeaponsID;                                          // 0x0218(0x0010) (ZeroConstructor, Transient)
	class FString                                      ResourceIconClipID;                                       // 0x0228(0x0010) (ZeroConstructor, Transient)
	class FString                                      HeatMeterID;                                              // 0x0238(0x0010) (ZeroConstructor, Transient)
	class FString                                      ChargeMeterID;                                            // 0x0248(0x0010) (ZeroConstructor, Transient)
	class FString                                      MagazineMeterID;                                          // 0x0258(0x0010) (ZeroConstructor, Transient)
	class FString                                      WeaponIconID;                                             // 0x0268(0x0010) (ZeroConstructor, Transient)
	class FString                                      ResourceWeaponFrameName;                                  // 0x0278(0x0010) (ZeroConstructor, Transient)
	class FString                                      DisabledBar;                                              // 0x0288(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0298(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVehicleWeaponWidget");
		return ptr;
	}


	void UpdateWeaponDisplay();
	void UpdateAmmoAmounts();
	void OnWeaponChanged(class AWeapon* NewWeapon, class AWeapon* LastWeapon);
};


// Class OakGame.GFxVendingMachineBackpackItemWidget
// 0x0060 (0x0730 - 0x06D0)
class UGFxVendingMachineBackpackItemWidget : public UGFxInventoryItemWidget
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x06D0(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVendingMachineBackpackItemWidget");
		return ptr;
	}

};


// Class OakGame.GFxVendingMachineMenu
// 0x0A50 (0x10F0 - 0x06A0)
class UGFxVendingMachineMenu : public UAdvancedInteractiveObjectOwnedGFxMenu
{
public:
	unsigned char                                      UnknownData00[0x110];                                     // 0x06A0(0x0110) MISSED OFFSET
	int                                                BackpackVisibleCells;                                     // 0x07B0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   BackpackCellSize;                                         // 0x07B4(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   BackpackCellSpacing;                                      // 0x07BC(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   ItemCardOffset;                                           // 0x07C4(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   BackpackItemCardOffset;                                   // 0x07CC(0x0008) (Edit, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x07D4(0x0004) MISSED OFFSET
	struct FName                                       BuyCameraState;                                           // 0x07D8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       SellCameraState;                                          // 0x07E0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       CompareFromMachineCameraState;                            // 0x07E8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       CompareFromInventoryCameraState;                          // 0x07F0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       BuyEchoOrientation;                                       // 0x07F8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       SellEchoOrientation;                                      // 0x0800(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       CompareFromMachineEchoOrientation;                        // 0x0808(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       CompareFromInventoryEchoOrientation;                      // 0x0810(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       DefaultProjectionFXWidgetName;                            // 0x0818(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ItemCardScale;                                            // 0x0820(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ItemCardCurrencyWidgetTime;                               // 0x0824(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ItemCardScaleSplitScreen;                                 // 0x0828(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x082C(0x0004) MISSED OFFSET
	class UClass*                                      ItemCardClass;                                            // 0x0830(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USwfMovie*                                   ItemCardSwf;                                              // 0x0838(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxMenuData*                                ItemInspectionMenuData;                                   // 0x0840(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x0848(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x084C(0x0004) MISSED OFFSET
	class UOakThumbnailManager*                        IconManager;                                              // 0x0850(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxBillboardComponent*                      GFxItemInfoDisplayComponent;                              // 0x0858(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              RadiusDebug;                                              // 0x0860(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0864(0x0004) MISSED OFFSET
	TArray<bool>                                       ShouldUseVec;                                             // 0x0868(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FEchoDeviceUIController                     EchoDeviceController;                                     // 0x0878(0x0020) (Edit, BlueprintReadOnly)
	TArray<struct FVector>                             ShelfScorecardOffsets;                                    // 0x0898(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	float                                              AmountToModify;                                           // 0x08A8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x08AC(0x0004) MISSED OFFSET
	struct FVendingTabOrder                            NavigationTabOrder;                                       // 0x08B0(0x0018) (Edit, BlueprintReadOnly)
	TArray<struct FGFxCurrencyCounterCategoryData>     CounterCategories;                                        // 0x08C8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FName                                       AddedToInventorySoundFX;                                  // 0x08D8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       RemovedFromInventorySoundFX;                              // 0x08E0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       WarningSoundFX;                                           // 0x08E8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       OpenBackpackFX;                                           // 0x08F0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       BuyItemSoundFX;                                           // 0x08F8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       SellItemSoundFX;                                          // 0x0900(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       HealthFilledFX;                                           // 0x0908(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       AmmoFilledFX;                                             // 0x0910(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       IODDisplayedFX;                                           // 0x0918(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       SoldAllJunkFX;                                            // 0x0920(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FVendingIDToSocketNameMap>           IdToSockets;                                              // 0x0928(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0938(0x0008) MISSED OFFSET
	TArray<struct FVendingObjectToSocketLocationMap>   ObjectToSocketLocations;                                  // 0x0940(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	int                                                CurrentSocketMap;                                         // 0x0950(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              CurrencyWidgetSpinnerHeightOverride;                      // 0x0954(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CurrencyWidgetCostSpinTime;                               // 0x0958(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CurrencyWidgetPauseOnNewValueTime;                        // 0x095C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxThumbnails;                                            // 0x0960(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0964(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UGbxAmmoTypeData>             GrenadeAmmoType;                                          // 0x0968(0x0028) (Edit, BlueprintReadOnly)
	TSoftObjectPtr<class UGameResourceData>            GrenadePool;                                              // 0x0990(0x0028) (Edit, BlueprintReadOnly)
	TArray<TSoftObjectPtr<class UGameResourceData>>    AmmoTypesToTrack;                                         // 0x09B8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData08[0x10];                                      // 0x09C8(0x0010) MISSED OFFSET
	bool                                               bQueueRefreshThumbnails;                                  // 0x09D8(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bBackpackHidden;                                          // 0x09D9(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x6];                                       // 0x09DA(0x0006) MISSED OFFSET
	TArray<struct FInventoryListEntryHandle>           CurrentInventory;                                         // 0x09E0(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	int                                                CurrentInventoryMaxSize;                                  // 0x09F0(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bNeedsBackpackUpdateOnTick;                               // 0x09F4(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bSetIndexToZeroForBackpackRefresh;                        // 0x09F5(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x2];                                       // 0x09F6(0x0002) MISSED OFFSET
	EGFxVendingMachineMenuBackpackState                CurrentBackpackState;                                     // 0x09F8(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData11[0x3];                                       // 0x09F6(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	TWeakObjectPtr<class UInventoryCategoryData>       CurrentPlayerWidgetCategory;                              // 0x09FC(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x0A04(0x0004) MISSED OFFSET
	class AOakPlayerController*                        CachedPlayerController;                                   // 0x0A08(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AOakCharacter*                               CachedOakCharacter;                                       // 0x0A10(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UInventoryListComponent*                     InventoryList;                                            // 0x0A18(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TMap<class UGbxGFxObject*, struct FVector>         ObjectToSocketLocationMap;                                // 0x0A20(0x0050) (BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class UGFxBillboardComponent*>              SavedBillboards;                                          // 0x0A70(0x0010) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient)
	struct FGFxVendingMenuConfig                       Config;                                                   // 0x0A80(0x0070) (Edit, BlueprintReadOnly)
	class UGFxLoadedItemCardBase*                      BackpackItemCardLoader;                                   // 0x0AF0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxLoadedItemCardBase*                      VendingItemCardLoader;                                    // 0x0AF8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       CachedCompareInventoryActor;                              // 0x0B00(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGFxVendingMachineBackpackItemWidget> CachedComparedBackpackItem;                               // 0x0B08(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGbxGFxButton*>                       NavButtons;                                               // 0x0B10(0x0010) (BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData13[0x4];                                       // 0x0B20(0x0004) MISSED OFFSET
	int                                                CurrentFilterIndex;                                       // 0x0B24(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FOakInventoryMenuFilter>             CurrentFilters;                                           // 0x0B28(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData14[0x8];                                       // 0x0B38(0x0008) MISSED OFFSET
	float                                              BackpackDoubleClickTimeLimit;                             // 0x0B40(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CurrentNavIndex;                                          // 0x0B44(0x0004) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bWantUpdateEverythingOnNextBagUpdate;                     // 0x0B48(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData15[0x7];                                       // 0x0B49(0x0007) MISSED OFFSET
	class AVendingMachineProxy*                        CachedVendingMachineProxy;                                // 0x0B50(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AVendingMachine*                             CachedVendingMachine;                                     // 0x0B58(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UPlayerShopManagerComponent*                 PlayerShopManager;                                        // 0x0B60(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UInventoryShopComponent*                     CurrentShopComponent;                                     // 0x0B68(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGbxGFxButton*                               VendingMachineFocusWidget;                                // 0x0B70(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EGFxVendingMachineDisplayMode                      CurrentDisplayMode;                                       // 0x0B78(0x0001) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData16[0x37];                                      // 0x0B79(0x0037) MISSED OFFSET
	class UGbxGFxObject*                               NavBarContainerClip;                                      // 0x0BB0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               NavBuyButton;                                             // 0x0BB8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               NavBuyBackButton;                                         // 0x0BC0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxButton*                               NavSellButton;                                            // 0x0BC8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxItemCard*                                InspectionItemCard;                                       // 0x0BD0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FGFxBackpackWidget                          Backpack;                                                 // 0x0BD8(0x0198) (BlueprintReadOnly, Transient)
	class UGbxGFxObject*                               BackpackContainer;                                        // 0x0D70(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               MarcusTipContainer;                                       // 0x0D78(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData17[0x48];                                      // 0x0D80(0x0048) MISSED OFFSET
	class UGbxGFxObject*                               ItemOfTheDayClip;                                         // 0x0DC8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData18[0x28];                                      // 0x0DD0(0x0028) MISSED OFFSET
	class UGFxVendingMachinePlayerWidget*              VendingPlayerWidget;                                      // 0x0DF8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData19[0x10];                                      // 0x0E00(0x0010) MISSED OFFSET
	class UGbxGFxObject*                               BackpackOuterContainerClip;                               // 0x0E10(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MaxDelayTimeToLoadThumbnails;                             // 0x0E18(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x4];                                       // 0x0E1C(0x0004) MISSED OFFSET
	class FString                                      VendingPlayerWidgetString;                                // 0x0E20(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      MarcusHeadClipString;                                     // 0x0E30(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      MarcusTooltipContainerString;                             // 0x0E40(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      ItemOfTheDayShelfString;                                  // 0x0E50(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      VendingMachineListBoxID;                                  // 0x0E60(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      BuyStateNavID;                                            // 0x0E70(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      BuyBackStateNavID;                                        // 0x0E80(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      SellStateNavID;                                           // 0x0E90(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      StateTextID;                                              // 0x0EA0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      iodTimerTextID;                                           // 0x0EB0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      ItemOfTheDayTextID;                                       // 0x0EC0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      NavMenuID;                                                // 0x0ED0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      NavBuyButtonID;                                           // 0x0EE0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      NavBuyBackButtonID;                                       // 0x0EF0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      NavSellButtonID;                                          // 0x0F00(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      NavMenuLeftGlyphID;                                       // 0x0F10(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      NavMenuRightGlyphID;                                      // 0x0F20(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      MarcusHeadSlotBaseID;                                     // 0x0F30(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      BackpackSortID;                                           // 0x0F40(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      BackpackHeaderID;                                         // 0x0F50(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      BackpackID;                                               // 0x0F60(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      PreviousButtonTextClipID;                                 // 0x0F70(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      NextButtonTextClipID;                                     // 0x0F80(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      MarcusTipContainerID;                                     // 0x0F90(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      SmallPlayerHeadID;                                        // 0x0FA0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      VendingItemClass;                                         // 0x0FB0(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FText                                       LimitedTimeString;                                        // 0x0FC0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ItemOfTheDayString;                                       // 0x0FD8(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       CantSellFavoriteText;                                     // 0x0FF0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       CantSellItemGenericText;                                  // 0x1008(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       CloseString;                                              // 0x1020(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       BackString;                                               // 0x1038(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       CompareString;                                            // 0x1050(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       BuyString;                                                // 0x1068(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       BuyBackString;                                            // 0x1080(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       SellString;                                               // 0x1098(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       SellJunkString;                                           // 0x10B0(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       InspectString;                                            // 0x10C8(0x0028) (Edit, BlueprintReadOnly)
	unsigned char                                      UnknownData21[0x10];                                      // 0x10E0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVendingMachineMenu");
		return ptr;
	}


	void OnVendingSelectionChanged();
	void OnVendingMachineScroll(EVendingMachineScrollDirection ScrollDirection);
	void OnVendingMachineDirty();
	void OnVendingMachineBoughtItem(EVendingMachineBuyType BuyType, class AActor* InventoryActor);
	void OnVendingItemClicked(class UGbxGFxButton* BUTTON, const struct FGbxMenuInputEvent& InputInfo);
	void OnThumbnailLoaded();
	void OnRigthItemCardReady();
	void OnNavMenuItemClicked(class UGbxGFxButton* Widget, const struct FGbxMenuInputEvent& InputInfo);
	void OnLeftItemCardReady();
	void OnInventoryQuantityChanged(const struct FInventoryListEntryHandle& UpdatedItemHandle, class UInventoryCategoryData* ItemCategory, int Quantity, int MaxQuantity);
	void OnInventoryItemUpdated(const struct FInventoryListEntryHandle& ItemHandle);
	void OnInventoryItemUnequipped(class AActor* ChangedActor, class UInventorySlotData* SlotData);
	void OnInventoryItemRemoved(const struct FInventoryListEntryHandle& ItemHandle);
	void OnInventoryItemEquipped(class AActor* ChangedActor, class UInventorySlotData* SlotData);
	void OnInventoryItemAdded(const struct FInventoryListEntryHandle& ItemHandle);
	void OnBackpackGridItemSelected(const struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget);
	void OnBackpackGridItemClicked(const struct FOakUIInventoryItemDisplayInfo& Item, class UGbxGFxObject* GridWidget, const struct FGbxMenuInputEvent& InputInfo);
	void OnAmmoMinMaxValueUpdate(float MinValue, float MaxValue, struct FGameResourcePoolReference* ResourcePoolReference);
	void OnAmmoCurrentValueUpdate(float CurrentValue, struct FGameResourcePoolReference* ResourcePoolReference);
};


// Class OakGame.GFxVendingMachinePlayerWidget
// 0x0320 (0x0490 - 0x0170)
class UGFxVendingMachinePlayerWidget : public UGbxGFxObject
{
public:
	struct FText                                       PurchasedText;                                            // 0x0170(0x0028) (Edit)
	struct FText                                       SoldText;                                                 // 0x0188(0x0028) (Edit)
	struct FText                                       HealthFullText;                                           // 0x01A0(0x0028) (Edit)
	struct FText                                       AmmoFullText;                                             // 0x01B8(0x0028) (Edit)
	struct FText                                       BagFullText;                                              // 0x01D0(0x0028) (Edit)
	struct FText                                       InsufficientFundsText;                                    // 0x01E8(0x0028) (Edit)
	class UGbxGFxObject*                               VendingPlayerWidgetTopClip;                               // 0x0200(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1D0];                                     // 0x0208(0x01D0) MISSED OFFSET
	class UGbxGFxObject*                               VendingPlayerWidgetClip;                                  // 0x03D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x50];                                      // 0x03E0(0x0050) MISSED OFFSET
	class UGbxGFxProgressBar*                          VendingShieldClip;                                        // 0x0430(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          VendingHealthClip;                                        // 0x0438(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x40];                                      // 0x0440(0x0040) MISSED OFFSET
	class UGFxCurrencyCounterClip*                     CurrencyWidgetClip;                                       // 0x0480(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0488(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVendingMachinePlayerWidget");
		return ptr;
	}

};


// Class OakGame.GFxVendingMachineMenuData
// 0x0010 (0x00D0 - 0x00C0)
class UGFxVendingMachineMenuData : public UOakGFxMenuData
{
public:
	TArray<struct FGFxVendingMachineMenuFilter>        Filters;                                                  // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVendingMachineMenuData");
		return ptr;
	}

};


// Class OakGame.GFxVendingMachinePrompt
// 0x0A20 (0x1050 - 0x0630)
class UGFxVendingMachinePrompt : public UGbxGFxHUDWidget
{
public:
	struct FOakThumbnailManagerRenderProperties        RenderPropertiesForGunThumbnail;                          // 0x0630(0x0670) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FVendingMachineSocketLocationAndOffset      SocketLocationAndOffset;                                  // 0x0CA0(0x0028) (Edit, BlueprintReadOnly)
	class AOakPlayerController*                        CachedOakPlayerController;                                // 0x0CC8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector2D                                   CachedScreenSocketLocation;                               // 0x0CD0(0x0008) (BlueprintReadOnly, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0CD8(0x0008) MISSED OFFSET
	struct FTransform                                  CachedOriginalTransform;                                  // 0x0CE0(0x0030) (BlueprintReadOnly, Transient, IsPlainOldData)
	class AActor*                                      FeaturedItemActor;                                        // 0x0D10(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakThumbnailManager*                        IconManager;                                              // 0x0D18(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AOakCharacter*                               VendingMachineMenuCharacter;                              // 0x0D20(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UPlayerShopManagerComponent*                 PlayerShopManager;                                        // 0x0D28(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInventoryShopComponent*                     CurrentShopComponent;                                     // 0x0D30(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x118];                                     // 0x0D38(0x0118) MISSED OFFSET
	float                                              VisibilityDistance;                                       // 0x0E50(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0E54(0x0004) MISSED OFFSET
	class UCurveFloat*                                 DistanceScaleCurve;                                       // 0x0E58(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       FlavorTextString;                                         // 0x0E60(0x0028) (Edit, BlueprintReadOnly)
	struct FText                                       ItemOfTheDayTextString;                                   // 0x0E78(0x0028) (Edit, BlueprintReadOnly)
	struct FName                                       SocketName;                                               // 0x0E90(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class FString                                      RarityContentID;                                          // 0x0E98(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      TimerTextID;                                              // 0x0EA8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      IODTextID;                                                // 0x0EB8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      ItemScoreID;                                              // 0x0EC8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      ManufacturerContentID;                                    // 0x0ED8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      RarityTextID;                                             // 0x0EE8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      RaysID;                                                   // 0x0EF8(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      FlavorTextID;                                             // 0x0F08(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      ElementalIconID;                                          // 0x0F18(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      WeaponIconID;                                             // 0x0F28(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      WeaponIconShadowID;                                       // 0x0F38(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      HeadTypeID;                                               // 0x0F48(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      ManufacturerIconID;                                       // 0x0F58(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      ManufactrerRarityClipID;                                  // 0x0F68(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      ExtRenderClipID;                                          // 0x0F78(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class FString                                      ExtShadowRenderClipID;                                    // 0x0F88(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	float                                              ViewportBaseScaleFactor;                                  // 0x0F98(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0F9C(0x0004) MISSED OFFSET
	struct FText                                       SoldOutText;                                              // 0x0FA0(0x0028) (Edit, BlueprintReadOnly)
	class UGbxGFxObject*                               ItemOfTheDayClip;                                         // 0x0FB8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               HeadType;                                                 // 0x0FC0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ElementalIcon;                                            // 0x0FC8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               RarityContent;                                            // 0x0FD0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               RarityTextClip;                                           // 0x0FD8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               Rays;                                                     // 0x0FE0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               WeaponIcon;                                               // 0x0FE8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               TimerText;                                                // 0x0FF0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               IODText;                                                  // 0x0FF8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ItemScore;                                                // 0x1000(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ManufacturerContent;                                      // 0x1008(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ManufacturerIcon;                                         // 0x1010(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               RarityText;                                               // 0x1018(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               FlavorText;                                               // 0x1020(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               WeaponIconShadow;                                         // 0x1028(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ManufacturerRarityClip;                                   // 0x1030(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ExtRenderClip;                                            // 0x1038(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxObject*                               ExtShadowRenderClip;                                      // 0x1040(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               SoldOutTextClip;                                          // 0x1048(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxVendingMachinePrompt");
		return ptr;
	}


	void UpdateWidgetLocation(const struct FVector& DistVector);
	struct FVector UpdateDistanceToVendingMachine();
	void RefreshIcon();
	void OnThumbnailLoaded();
	void OnLookedAwayFromByPlayer(class UUsableComponent* NewUsableComponent);
	void OnLookedAtByPlayer(class UUsableComponent* NewUsableComponent);
	void InitSocketLocation(class AVendingMachine* VendingMachine);
	void BuildVendingMachinePrompt(class AVendingMachine* VendingMachine);
};


// Class OakGame.OakCharacterAnimInstance
// 0x01A0 (0x0AF0 - 0x0950)
class UOakCharacterAnimInstance : public UGbxCharacterAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0950(0x0008) MISSED OFFSET
	bool                                               IsMantling;                                               // 0x0958(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsSprinting;                                              // 0x0959(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCanUseWeaponWhileSprinting;                              // 0x095A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsSliding;                                                // 0x095B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsUsingLadder;                                            // 0x095C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsLadderSliding;                                          // 0x095D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsPerformingUpdwardLadderJump;                            // 0x095E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x095F(0x0001) MISSED OFFSET
	bool                                               IsUsingWeapon;                                            // 0x0960(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsReloading;                                              // 0x0961(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsZoomed;                                                 // 0x0962(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0963(0x0001) MISSED OFFSET
	float                                              ZoomDuration;                                             // 0x0964(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bShouldLowerWeapon;                                       // 0x0968(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bDisableIdleToSprintTransition;                           // 0x0969(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x096A(0x0002) MISSED OFFSET
	float                                              HandToWeaponAlpha;                                        // 0x096C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1];                                       // 0x0970(0x0001) MISSED OFFSET
	ECoverUserState                                    DesiredCoverState;                                        // 0x0971(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x0972(0x0006) MISSED OFFSET
	class UCoverStyleData*                             CoverStyle;                                               // 0x0978(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UCoverViewData*                              CoverView;                                                // 0x0980(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsInCover;                                                // 0x0988(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               WantsToLeaveCover;                                        // 0x0989(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsCoverFlanked;                                           // 0x098A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsInCoverFireIdle;                                        // 0x098B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsInCoverFireIdleAndWantsToLeaveCover;                    // 0x098C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x098D(0x0003) MISSED OFFSET
	float                                              ClothWeightFromCurve;                                     // 0x0990(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              FacialAnimWeight;                                         // 0x0994(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     FacialTeethOffset;                                        // 0x0998(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	bool                                               bCanUpdateClothBlendWeight;                               // 0x09A4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x1];                                       // 0x09A5(0x0001) MISSED OFFSET
	unsigned char                                      AnimStyle;                                                // 0x09A6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x1];                                       // 0x09A7(0x0001) MISSED OFFSET
	class AOakVehicle*                                 CurrentVehicle;                                           // 0x09A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ATurretSeatPawn*                             CurrentTurret;                                            // 0x09B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UVehicleSeatComponent*                       VehicleSeatComponent;                                     // 0x09B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UVehicleHoverComponent*                      VehicleHoverComponent;                                    // 0x09C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData09[0x30];                                      // 0x09C8(0x0030) MISSED OFFSET
	bool                                               InVehicle;                                                // 0x09F8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x09F9(0x0003) MISSED OFFSET
	float                                              DisableAlphaInVehicle;                                    // 0x09FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               InMannedTurret;                                           // 0x0A00(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsSeatedTurret;                                           // 0x0A01(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               InRollerCoaster;                                          // 0x0A02(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData11[0x5];                                       // 0x0A03(0x0005) MISSED OFFSET
	struct FName                                       VehicleArchetype;                                         // 0x0A08(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                SeatIndex;                                                // 0x0A10(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              VehicleThrottleInput;                                     // 0x0A14(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              VehicleSpeed;                                             // 0x0A18(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              VehicleSteerAngle;                                        // 0x0A1C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              VehicleSteerAngleExplicitTime;                            // 0x0A20(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               VehicleIsInReverse;                                       // 0x0A24(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsVehicleFlipped;                                        // 0x0A25(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0x2];                                       // 0x0A26(0x0002) MISSED OFFSET
	float                                              VehicleAcceleration;                                      // 0x0A28(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              VehicleTurningDelta;                                      // 0x0A2C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              VehicleDampedAccelInterpSpeed;                            // 0x0A30(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              VehicleSmoothedZVelocity;                                 // 0x0A34(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              VehicleSlotAlpha;                                         // 0x0A38(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FrontBackWorldAdditive;                                   // 0x0A3C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              LeftRightWorldAdditive;                                   // 0x0A40(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              DriverAdditiveForwardAccelerationTreshold;                // 0x0A44(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DriverAdditiveForwardInterpSpeed;                         // 0x0A48(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DriverAdditiveLateralAccelerationTreshold;                // 0x0A4C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DriverAdditiveLateralInterpSpeed;                         // 0x0A50(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DriverAdditiveUpwardAccelerationTreshold;                 // 0x0A54(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DriverAdditiveUpwardInterpSpeed;                          // 0x0A58(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EVehicleArchetype                                  VehicleArchetypeEnum;                                     // 0x0A5C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0A5D(0x0003) MISSED OFFSET
	float                                              NegativeSpeedToPlayTurnWheelBackward;                     // 0x0A60(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x0A64(0x0004) MISSED OFFSET
	struct FName                                       VehicleSlotName;                                          // 0x0A68(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       AnimNameTurnWheel;                                        // 0x0A70(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       AnimSetNameTurnWheel;                                     // 0x0A78(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       AnimNameTurnWheelInReverse;                               // 0x0A80(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       AnimSetNameTurnWheelInReverse;                            // 0x0A88(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       AnimNameTurretIdle;                                       // 0x0A90(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       AnimSetNameTurretIdle;                                    // 0x0A98(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       AnimNameAdditiveFlinchFront;                              // 0x0AA0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       AnimNameAdditiveFlinchBack;                               // 0x0AA8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       AnimNameAdditiveFlinchLeft;                               // 0x0AB0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       AnimNameAdditiveFlinchRight;                              // 0x0AB8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequenceBase*                           AdditiveFlinchPlaying;                                    // 0x0AC0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData15[0x4];                                       // 0x0AC8(0x0004) MISSED OFFSET
	float                                              ForwardDynamicsAlpha;                                     // 0x0ACC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bWheeledCharacter;                                        // 0x0AD0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData16[0x3];                                       // 0x0AD1(0x0003) MISSED OFFSET
	float                                              TireRadius;                                               // 0x0AD4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    TireRotation;                                             // 0x0AD8(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               bForceEnableHandIK;                                       // 0x0AE4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData17[0xB];                                       // 0x0AE5(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCharacterAnimInstance");
		return ptr;
	}


	void VehicleHitReaction(const struct FVector2D& ImpactTrehsold, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void SetHasWeaponPoses(bool bHasLeft, bool bHasRight);
	void OnWeaponModeChanged_Native();
	void OnWeaponModeChanged();
	void OnWeaponChanged_Native(class AWeapon* NewWeapon, class AWeapon* PrevWeapon);
	void OnWeaponChanged(class AWeapon* NewWeapon, class AWeapon* PrevWeapon);
	void OnVehicleComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnExitVehicleStarted_Native(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnExitVehicleFinished_Native(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnExitTurretStarted_Native(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnExitTurretFinished_Native(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnEnterVehicleStarted_Native(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnEnterTurretStarted_Native(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnChangeVehicleSeat_Native(class UPawnAttachSlotComponent* FromSeat, class UPawnAttachSlotComponent* ToSeat);
	void OnAnimStyleChanged();
};


// Class OakGame.GoliathAnimInstance
// 0x0000 (0x0AF0 - 0x0AF0)
class UGoliathAnimInstance : public UOakCharacterAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GoliathAnimInstance");
		return ptr;
	}

};


// Class OakGame.GoreAoEDamageData
// 0x0020 (0x0050 - 0x0030)
class UGoreAoEDamageData : public UGbxDataAsset
{
public:
	uint32_t                                           MaxBones;                                                 // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Chance;                                                   // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CumulativeChanceModifier;                                 // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 RadiusChanceCurve;                                        // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDamageFilter*                               DamageFilter;                                             // 0x0048(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GoreAoEDamageData");
		return ptr;
	}

};


// Class OakGame.GoreDamageData
// 0x0110 (0x0140 - 0x0030)
class UGoreDamageData : public UGbxDataAsset
{
public:
	struct FName                                       RootDamageBone;                                           // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIncludeChildBones;                                       // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bTriggerOnlyOnDeath;                                      // 0x0039(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bTriggeredByAoEDamage;                                    // 0x003A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideTriggerThreshold;                                // 0x003B(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TriggerThreshold;                                         // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EGoreRegionType                                    GoreRegionType;                                           // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOverwriteStumpInstancedMaterialParameters;               // 0x0041(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	bool                                               bOverwriteLimbInstancedMaterialParameters;                // 0x0042(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	bool                                               bInheritStumpMaterialParameters;                          // 0x0043(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EMaterialParameterCopyMethod                       InheritStumpMaterialParametersMethod;                     // 0x0044(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bInheritLimbMaterialParameters;                           // 0x0045(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EMaterialParameterCopyMethod                       InheritLimbMaterialParametersMethod;                      // 0x0046(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideSourceMaterialIndex;                             // 0x0047(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SourceMaterialIndex;                                      // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FName                                       StumpSocket;                                              // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StumpBoneScale;                                           // 0x0058(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     StumpDecalSize;                                           // 0x0064(0x000C) (Edit, IsPlainOldData)
	bool                                               bStumpReceivesDecals;                                     // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	struct FName                                       LimbSocket;                                               // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FGoreSizeSelectionData>              GoreSizeData;                                             // 0x0080(0x0010) (Edit, ZeroConstructor)
	class UHitReactionTag*                             DeathHitReactionOverride;                                 // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UStaticMesh*>                         StumpMeshes;                                              // 0x0098(0x0010) (Edit, ZeroConstructor)
	TArray<class UParticleSystem*>                     StumpParticles;                                           // 0x00A8(0x0010) (Edit, ZeroConstructor)
	TArray<class UMaterialInstanceConstant*>           StumpDecals;                                              // 0x00B8(0x0010) (Edit, ZeroConstructor)
	class UWwiseEvent*                                 StumpSound;                                               // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceConstant*                   StumpMaterialOverride;                                    // 0x00D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      LimbActorClass;                                           // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UObject*>                             LimbMeshes;                                               // 0x00E0(0x0010) (Edit, ZeroConstructor)
	TArray<class UParticleSystem*>                     LimbParticles;                                            // 0x00F0(0x0010) (Edit, ZeroConstructor)
	class UMaterialInstanceConstant*                   LimbMaterialOverride;                                     // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FForceSelection                             LimbForce;                                                // 0x0108(0x0020) (Edit)
	bool                                               bScaleLimbToStump;                                        // 0x0128(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0129(0x0003) MISSED OFFSET
	float                                              LimbScale;                                                // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LimbMassScale;                                            // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDisableDialog;                                           // 0x0134(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0135(0x0003) MISSED OFFSET
	class UDialogEvent*                                GoreDialogEvent;                                          // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GoreDamageData");
		return ptr;
	}


	void GenerateGore(class AActor* Actor, const struct FName& StumpSocketOverride, const struct FName& LimbSocketOverride, struct FGoreSelectionResults* Results);
};


// Class OakGame.OakProjectile
// 0x0060 (0x06E0 - 0x0680)
class AOakProjectile : public AProjectile
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0680(0x0010) MISSED OFFSET
	bool                                               bIgnoreCollisionWithInstigatorAndChildrens;               // 0x0690(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsGrenade;                                               // 0x0691(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSuppressSpawnModifierEffect;                             // 0x0692(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0693(0x0001) MISSED OFFSET
	struct FCauseDamageStatusEffectOverrides           StatusEffectOverrides;                                    // 0x0694(0x001C) (Edit, BlueprintVisible)
	class UBalanceStateComponent*                      BalanceComponent;                                         // 0x06B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	EOakElementalStackBucketType                       ElementalEffectBucketType;                                // 0x06B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x06B9(0x0010) MISSED OFFSET
	bool                                               bRegisterAsTargetable;                                    // 0x06C9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldDisplayNameplate;                                  // 0x06CA(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x06CB(0x0005) MISSED OFFSET
	class UDamageComponent*                            DamageComponent;                                          // 0x06D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTargetableComponent*                        TargetableComponent;                                      // 0x06D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakProjectile");
		return ptr;
	}


	void SetIsGrenade(bool bNewIsGrenade);
	void OnSkagProjectileStop(const struct FHitResult& Hit);
	class UBalanceStateComponent* GetBalanceComponent();
};


// Class OakGame.Grenade
// 0x0278 (0x0958 - 0x06E0)
class AGrenade : public AOakProjectile
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x06E0(0x0008) MISSED OFFSET
	class AGrenadeMod*                                 GrenadeMod;                                               // 0x06E8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AOakCharacter*                               OwningCharacter;                                          // 0x06F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USphereComponent*                            SphereCollision;                                          // 0x06F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      GrenadeMesh;                                              // 0x0700(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        DefaultMesh;                                              // 0x0708(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        StandMesh;                                                // 0x0710(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCapsuleComponent*                           StandCapsuleCollision;                                    // 0x0718(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMesh*                                 ChildMesh;                                                // 0x0720(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UGrenadeProjectileMovementComponent*         GrenadeMovementComponent;                                 // 0x0728(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGrenadeHomingComponent*                     GrenadeHomingComponent;                                   // 0x0730(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UDrunkenRandomMovementComponent*             RandomMovementComponent;                                  // 0x0738(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UDrunkenWaveMovementComponent*               WaveMovementComponent;                                    // 0x0740(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UWwiseAudioComponent*                        AudioComponent;                                           // 0x0748(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0xD];                                       // 0x0750(0x000D) MISSED OFFSET
	bool                                               bHasImpacted;                                             // 0x075D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x075E(0x0002) MISSED OFFSET
	float                                              GrenadeImpactFuseTime;                                    // 0x0760(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bTriggerFuseOnImpact;                                     // 0x0764(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xB];                                       // 0x0765(0x000B) MISSED OFFSET
	class UParticleSystemComponent*                    FuseWarningComponent;                                     // 0x0770(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               bCauseDamageOnExplode;                                    // 0x0778(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDestroyOnExplode;                                        // 0x0779(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x077A(0x0006) MISSED OFFSET
	TArray<class UParticleSystemComponent*>            AttachedParticles;                                        // 0x0780(0x0010) (ExportObject, ZeroConstructor, Transient)
	class UParticleSystemComponent*                    AttachedTrail;                                            // 0x0790(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<struct FGrenadeAttachedTrail>               AttachedTrailStack;                                       // 0x0798(0x0010) (ZeroConstructor, Transient)
	float                                              InitialVelocityZOffset;                                   // 0x07A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GrenadeDamage;                                            // 0x07AC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              GrenadeExplosionRadius;                                   // 0x07B0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              GrenadeExplosionForce;                                    // 0x07B4(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	struct FGrenadeChildGenerationData                 ChildGenerationData;                                      // 0x07B8(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst)
	bool                                               bStopRotatingWhenNotMoving;                               // 0x07E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseDefaultMesh;                                          // 0x07E1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x07E2(0x0006) MISSED OFFSET
	class UGrenadeBehavior_Delivery*                   DeliveryMethod;                                           // 0x07E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FPayloadInstanceData                        DeliveryInstanceData;                                     // 0x07F0(0x0030) (BlueprintVisible, Transient)
	TMap<class UGrenadeBehavior_Payload*, struct FPayloadInstanceData> PayloadMethods;                                           // 0x0820(0x0050) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	float                                              GrenadeMeshCollisionOffset;                               // 0x0870(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0874(0x0004) MISSED OFFSET
	class UClass*                                      BasicTrailData;                                           // 0x0878(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 FuseTriggeredAudioEvent;                                  // 0x0880(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x8];                                       // 0x0888(0x0008) MISSED OFFSET
	struct FEnvQueryParams                             BouncyAimAssistQuery;                                     // 0x0890(0x00B8) (Edit, BlueprintVisible)
	float                                              MaxAssistAngle;                                           // 0x0948(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AssistAngleDot;                                           // 0x094C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x8];                                       // 0x0950(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.Grenade");
		return ptr;
	}


	void UnstickGrenade(class AActor* DamageReceiver, class AActor* DamageCauser);
	void TurnAttachedTrailOn(bool bRestartTrail);
	void StopAudioEventFromBehavior(class UClass* BehaviorClass);
	void StopAudioEvent(class UWwiseEvent* AudioEvent);
	void SetLongbowTarget(const struct FVector& InLocation);
	void SetLingering(bool bIsLingering);
	void SetFuseTriggeredAudioEvent(class UWwiseEvent* NewFuseTriggerEvent);
	void SetAttachedTrail(class UParticleSystem* NewTrail, const struct FName& TrailName);
	void ResetFuse();
	void RemoveAttachedTrail(bool bDestroyTrail, bool bAttachingNewTrail, const struct FName& TrailName);
	void OnStuckGrenadeActorDestroyed(class AActor* Actor);
	void OnGrenadeStop(const struct FHitResult& ImpactResult);
	void OnGrenadeLastBounce(const struct FHitResult& ImpactResult);
	void OnGrenadeBounce(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);
	void MultiplyRadiusBy(float RadiusScalar);
	void MultiplyDamageBy(float DamageScalar);
	bool IsLingering();
	void IncrementChildOffset(class AGrenade* ParentGrenade, class UGrenadeBehavior_Payload* Payload);
	void IgnorePayloadMethod(class UClass* PayloadToIgnore);
	bool GrenadeUsesPayload(class UClass* Payload);
	int GetPayloadChildValue(TEnumAsByte<EChildPayloadType> PayloadType);
	struct FVector GetLongbowTarget();
	struct FPayloadInstanceData GetInstanceDataFromPayload(class UGrenadeBehavior_Payload* Payload);
	class UGrenadeHomingComponent* GetHomingComponent();
	float GetGrenadeRadius();
	float GetGrenadeDamage();
	class UDrunkenWaveMovementComponent* GetDrunkenWaveComponent();
	class UDrunkenRandomMovementComponent* GetDrunkenRandomComponent();
	struct FGrenadeChildGenerationData GetChildOffset();
	class UParticleSystemComponent* GetAttachedTrail(const struct FName& TrailName);
	void FuseTriggered();
	void DisableBasicTrail();
	void ClearDeliveryMethod();
	void AIProjectile_Disarm();
	void AIProjectile_Detonate();
	bool AIProjectile_CanBeStolen();
	void AIProjectile_Arm();
};


// Class OakGame.GrenadeBehavior
// 0x0000 (0x0028 - 0x0028)
class UGrenadeBehavior : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_Delivery
// 0x0008 (0x0030 - 0x0028)
class UGrenadeBehavior_Delivery : public UGrenadeBehavior
{
public:
	class UWwiseEvent*                                 GrenadeThrownEvent;                                       // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_Delivery");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_DeliveryBlueprint
// 0x0000 (0x0030 - 0x0030)
class UGrenadeBehavior_DeliveryBlueprint : public UGrenadeBehavior_Delivery
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_DeliveryBlueprint");
		return ptr;
	}


	void SetDelay(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, float Delay, const struct FName& DelayName);
	void K2_StopBehaviorAudio(class AGrenade* Grenade);
	void K2_NativeDelayCallback(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, const struct FName& DelayName);
	void K2_GrenadeLastBounce(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod);
	void K2_GrenadeInitialized(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod);
	void K2_GrenadeImpact(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, const struct FHitResult& HitResult);
	void K2_GrenadeExplode(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod);
	void K2_GrenadeEndPlay(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod);
	void K2_GrenadeBounce(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod);
	void K2_GrenadeBeginPlay(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod);
	void K2_AttachedToGrenadeMod(class AGrenadeMod* GrenadeMod);
};


// Class OakGame.GrenadeBehavior_DeliveryFrag
// 0x0008 (0x0038 - 0x0030)
class UGrenadeBehavior_DeliveryFrag : public UGrenadeBehavior_DeliveryBlueprint
{
public:
	float                                              FragBounciness;                                           // 0x0030(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FragFriction;                                             // 0x0034(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_DeliveryFrag");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_DeliveryHeavy
// 0x0000 (0x0030 - 0x0030)
class UGrenadeBehavior_DeliveryHeavy : public UGrenadeBehavior_DeliveryBlueprint
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_DeliveryHeavy");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_DeliveryHoming
// 0x01A8 (0x01D8 - 0x0030)
class UGrenadeBehavior_DeliveryHoming : public UGrenadeBehavior_DeliveryBlueprint
{
public:
	float                                              HomingStartDelay;                                         // 0x0030(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HomingRetryDelay;                                         // 0x0034(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HomingHitTargetDelay;                                     // 0x0038(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HomingBounceDelay;                                        // 0x003C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGrenadeHomingComponent*                     HomingTemplate;                                           // 0x0040(0x0008) (Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	float                                              HomingMaxSpeed;                                           // 0x0048(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HomingAcceleration;                                       // 0x004C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HomingGravityScale;                                       // 0x0050(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HomingFriction;                                           // 0x0054(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HomingBounciness;                                         // 0x0058(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	struct FEnvQueryParams                             InitialSearchQuery;                                       // 0x0060(0x00B8) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FEnvQueryParams                             RetrySearchQuery;                                         // 0x0118(0x00B8) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	float                                              EQSRetriggerDelay;                                        // 0x01D0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01D4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_DeliveryHoming");
		return ptr;
	}


	void K2_HomingTargetLost(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod);
	void K2_FoundHomingTarget(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, class AActor* HomingTarget);
};


// Class OakGame.GrenadeBehavior_DeliveryImpact
// 0x0000 (0x0030 - 0x0030)
class UGrenadeBehavior_DeliveryImpact : public UGrenadeBehavior_DeliveryBlueprint
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_DeliveryImpact");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_DeliveryLongbow
// 0x0060 (0x0090 - 0x0030)
class UGrenadeBehavior_DeliveryLongbow : public UGrenadeBehavior_DeliveryBlueprint
{
public:
	float                                              LongbowInitialVelocity;                                   // 0x0030(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LongbowFinalVelocity;                                     // 0x0034(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LongbowTeleportDelay;                                     // 0x0038(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LongbowTeleportMaxDistance;                               // 0x003C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             LongbowTeleportLineParticleTemplate;                      // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 LongbowStartTeleportingAudioEvent;                        // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             LongbowStartTeleportingParticleTemplate;                  // 0x0050(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<ETraceTypeQuery>                       LongbowTeleportTraceChannel;                              // 0x0058(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	float                                              LongbowTeleportProximityTraceRadius;                      // 0x005C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<ETraceTypeQuery>                       LongbowTeleportProximityTraceChannel;                     // 0x0060(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	class UWwiseEvent*                                 LongbowEndTeleportingAudioEvent;                          // 0x0068(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LongbowRainSplitSpeed;                                    // 0x0070(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LongbowRainSplitAcceleration;                             // 0x0074(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LongbowRainHeightScalar;                                  // 0x0078(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	class UParticleSystem*                             LongbowEndTeleportingParticleTemplate;                    // 0x0080(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DividerLongbowTeleportDelay;                              // 0x0088(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x008C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_DeliveryLongbow");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_DeliveryRubberized
// 0x0090 (0x00C0 - 0x0030)
class UGrenadeBehavior_DeliveryRubberized : public UGrenadeBehavior_DeliveryBlueprint
{
public:
	int                                                RubberizedBounceCount;                                    // 0x0030(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	class UExplosionData*                              RubberizedExplosionData;                                  // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             RubberizedGrenadeEmitterTemplate;                         // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RubberizedForwardBounceVelocity;                          // 0x0048(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RubberizedUpdwardBounceVelocity;                          // 0x004C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 RubberizedBounceEvent;                                    // 0x0050(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FDamageTypeParticleProperty                 DamageTypeParticleProperty;                               // 0x0058(0x0060) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	float                                              RubberizedDamageScalePerBounce;                           // 0x00B8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RubberizedRadiusScalePerBounce;                           // 0x00BC(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_DeliveryRubberized");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_Payload
// 0x0020 (0x0048 - 0x0028)
class UGrenadeBehavior_Payload : public UGrenadeBehavior
{
public:
	TArray<struct FAttributeInitializationData>        StackValues;                                              // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0038(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_Payload");
		return ptr;
	}


	float GetValueFromInstanceData(const struct FPayloadInstanceData& InstanceData);
};


// Class OakGame.GrenadeBehavior_PayloadBlueprint
// 0x0000 (0x0048 - 0x0048)
class UGrenadeBehavior_PayloadBlueprint : public UGrenadeBehavior_Payload
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadBlueprint");
		return ptr;
	}


	class AGrenade* SpawnChildGrenade(class AGrenade* ParentGrenade, const struct FTransform& SpawnTransform);
	void SetDelay(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, float Delay, const struct FName& DelayName, struct FPayloadInstanceData* InstanceData);
	void K2_UpdateChildGeneration(const struct FGrenadeChildGenerationData& InGenerationData, struct FGrenadeChildGenerationData* GenerationData);
	void K2_StopBehaviorAudio(class AGrenade* Grenade);
	void K2_NativeDelayCallback(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, const struct FName& DelayName, struct FPayloadInstanceData* InstanceData);
	void K2_GrenadeLastBounce(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, struct FPayloadInstanceData* InstanceData);
	void K2_GrenadeInitialized(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, struct FPayloadInstanceData* InstanceData);
	void K2_GrenadeImpact(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, const struct FHitResult& HitResult, struct FPayloadInstanceData* InstanceData);
	void K2_GrenadeExplode(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, struct FPayloadInstanceData* InstanceData);
	void K2_GrenadeEndPlay(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, struct FPayloadInstanceData* InstanceData);
	void K2_GrenadeDamageDealt(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, class AOakCharacter* Character, const struct FDamageDataEventDetails& DamageEvent, struct FPayloadInstanceData* InstanceData);
	void K2_GrenadeBounce(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, struct FPayloadInstanceData* InstanceData);
	void K2_GrenadeBeginPlay(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, struct FPayloadInstanceData* InstanceData);
	void K2_AttachedToGrenadeMod(class AGrenadeMod* GrenadeMod, struct FPayloadInstanceData* InstanceData);
};


// Class OakGame.GrenadeBehavior_PayloadArtillery
// 0x0040 (0x0088 - 0x0048)
class UGrenadeBehavior_PayloadArtillery : public UGrenadeBehavior_PayloadBlueprint
{
public:
	class UClass*                                      ArtilleryDamageData;                                      // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StatusEffectChance;                                       // 0x0050(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StatusEffectDuration;                                     // 0x0054(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StatusEffectDamage;                                       // 0x0058(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ArtilleryRadius;                                          // 0x005C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ArtilleryAdditionalDuration;                              // 0x0060(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ArtilleryExplosionRadius;                                 // 0x0064(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ArtilleryLastBounceVelocity;                              // 0x0068(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ArtilleryLastBounceBounciness;                            // 0x006C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ArtilleryLastBounceFriction;                              // 0x0070(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseCustomMeshOffset;                                     // 0x0074(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0075(0x0003) MISSED OFFSET
	float                                              CustomMeshOffset;                                         // 0x0078(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	class UStaticMesh*                                 CustomOffsetMesh;                                         // 0x0080(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadArtillery");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_PayloadBouncy
// 0x0018 (0x0060 - 0x0048)
class UGrenadeBehavior_PayloadBouncy : public UGrenadeBehavior_PayloadBlueprint
{
public:
	class UParticleSystem*                             TrailSystemTemplate;                                      // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BouncyForwardBounceVelocity;                              // 0x0050(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BouncyUpdwardBounceVelocity;                              // 0x0054(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 BouncyBounceEvent;                                        // 0x0058(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadBouncy");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_PayloadDivider
// 0x0020 (0x0068 - 0x0048)
class UGrenadeBehavior_PayloadDivider : public UGrenadeBehavior_PayloadBlueprint
{
public:
	float                                              InitialDivideDelay;                                       // 0x0048(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinSpawnOffsetAngle;                                      // 0x004C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSpawnOffsetAngle;                                      // 0x0050(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	class UParticleSystem*                             DivideParticleTemplate;                                   // 0x0058(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 DividerAudioEvent;                                        // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadDivider");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_PayloadElementalDamage
// 0x0000 (0x0048 - 0x0048)
class UGrenadeBehavior_PayloadElementalDamage : public UGrenadeBehavior_PayloadBlueprint
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadElementalDamage");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_PayloadForce
// 0x0010 (0x0058 - 0x0048)
class UGrenadeBehavior_PayloadForce : public UGrenadeBehavior_PayloadBlueprint
{
public:
	class UWwiseEvent*                                 ForceWiseEvent;                                           // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             ForceEmitterTemplate;                                     // 0x0050(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadForce");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_PayloadGenerator
// 0x0040 (0x0088 - 0x0048)
class UGrenadeBehavior_PayloadGenerator : public UGrenadeBehavior_PayloadBlueprint
{
public:
	class UHealthTypeData*                             TriggeringHealthType;                                     // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      HealingDamageData;                                        // 0x0050(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      HealingDamageType;                                        // 0x0058(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             HealingParticles;                                         // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UClass*>                              ValidDamageSources;                                       // 0x0068(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class UWwiseEvent*                                 HealingAudioEvent;                                        // 0x0078(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 HealingImpactAudioEvent;                                  // 0x0080(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadGenerator");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_PayloadLarge
// 0x0000 (0x0048 - 0x0048)
class UGrenadeBehavior_PayloadLarge : public UGrenadeBehavior_PayloadBlueprint
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadLarge");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_PayloadLingering
// 0x0080 (0x00C8 - 0x0048)
class UGrenadeBehavior_PayloadLingering : public UGrenadeBehavior_PayloadBlueprint
{
public:
	TMap<class UClass*, struct FLingeringDamageTypeInfo> LingeringDamageTypeAssociations;                          // 0x0048(0x0050) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              LingeringBurstDuration;                                   // 0x0098(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LingeringBurstDelay;                                      // 0x009C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FinalExplosionRadius;                                     // 0x00A0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MirvChildFinalExplosionRadius;                            // 0x00A4(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RainChildFinalExplosionRadius;                            // 0x00A8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LingeringBounceVelocity;                                  // 0x00AC(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                LingeringNumBounces;                                      // 0x00B0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LingeringBounciness;                                      // 0x00B4(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseCustomMeshOffset;                                     // 0x00B8(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00B9(0x0003) MISSED OFFSET
	float                                              CustomMeshOffset;                                         // 0x00BC(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 CustomOffsetMesh;                                         // 0x00C0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadLingering");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_PayloadLink
// 0x0000 (0x0048 - 0x0048)
class UGrenadeBehavior_PayloadLink : public UGrenadeBehavior_PayloadBlueprint
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadLink");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_PayloadMiniMirv
// 0x0010 (0x0058 - 0x0048)
class UGrenadeBehavior_PayloadMiniMirv : public UGrenadeBehavior_PayloadBlueprint
{
public:
	float                                              MiniMirvSpeed;                                            // 0x0048(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MiniMirvGravityScale;                                     // 0x004C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 MiniMirvSplitAudio;                                       // 0x0050(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadMiniMirv");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_PayloadMirv
// 0x0030 (0x0078 - 0x0048)
class UGrenadeBehavior_PayloadMirv : public UGrenadeBehavior_PayloadBlueprint
{
public:
	float                                              MinSpawnOffsetAngle;                                      // 0x0048(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSpawnOffsetAngle;                                      // 0x004C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MirvSpeed;                                                // 0x0050(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MirvGravityScale;                                         // 0x0054(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MirvChildSpawnDelay;                                      // 0x0058(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	class UWwiseEvent*                                 MirvBeginAudioEvent;                                      // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 MirvChildSpawnAudioEvent;                                 // 0x0068(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMirvAlongSurfaceHitNormal;                               // 0x0070(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMirvOnFirstBounce;                                       // 0x0071(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0072(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadMirv");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_PayloadMoney
// 0x0030 (0x0078 - 0x0048)
class UGrenadeBehavior_PayloadMoney : public UGrenadeBehavior_PayloadBlueprint
{
public:
	TArray<struct FMoneyStackValues>                   MoneyStackValues;                                         // 0x0048(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                     SpawnLocationOffset;                                      // 0x0058(0x000C) (Edit, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	class ULootSpawnPatternData*                       SpawningPatternData;                                      // 0x0068(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             SpawningParticles;                                        // 0x0070(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadMoney");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_PayloadNuke
// 0x0018 (0x0060 - 0x0048)
class UGrenadeBehavior_PayloadNuke : public UGrenadeBehavior_PayloadBlueprint
{
public:
	float                                              DamageScaleIncreasePerGrenade;                            // 0x0048(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RadiusScaleIncreasePerGrenade;                            // 0x004C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxAttributeData*                           GrenadeAmmoAttribute;                                     // 0x0050(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UExplosionData*                              NukeExplosionData;                                        // 0x0058(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadNuke");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_PayloadRain
// 0x0040 (0x0088 - 0x0048)
class UGrenadeBehavior_PayloadRain : public UGrenadeBehavior_PayloadBlueprint
{
public:
	float                                              RainShotHeight;                                           // 0x0048(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	class UWwiseEvent*                                 RainShotAudioEvent;                                       // 0x0050(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RainSplitSpeed;                                           // 0x0058(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RainSplitAcceleration;                                    // 0x005C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RainSplitDelay;                                           // 0x0060(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RainChildExplosionRadiusScale;                            // 0x0064(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RainSplitAngleOffset;                                     // 0x0068(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RainSplitShotDelay;                                       // 0x006C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RainSplitShotSpawnDistanceFromSource;                     // 0x0070(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	class UWwiseEvent*                                 RainSplitAudioEvent;                                      // 0x0078(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 RainSplitEndAudioEvent;                                   // 0x0080(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadRain");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_PayloadRoider
// 0x0000 (0x0048 - 0x0048)
class UGrenadeBehavior_PayloadRoider : public UGrenadeBehavior_PayloadBlueprint
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadRoider");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_PayloadSingularity
// 0x00E8 (0x0130 - 0x0048)
class UGrenadeBehavior_PayloadSingularity : public UGrenadeBehavior_PayloadBlueprint
{
public:
	float                                              SingularityRadiusScale;                                   // 0x0048(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinSingularityRadius;                                     // 0x004C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSingularityRadius;                                     // 0x0050(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SingularityRisingSpeed;                                   // 0x0054(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSingularityInitializationInfo              SingularityInfo;                                          // 0x0058(0x00C0) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	class UExplosionData*                              SingularityExplosionData;                                 // 0x0118(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 FinalExplosionAudioEvent;                                 // 0x0120(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             RainSingularityEndEffect;                                 // 0x0128(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadSingularity");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_PayloadSpring
// 0x0030 (0x0078 - 0x0048)
class UGrenadeBehavior_PayloadSpring : public UGrenadeBehavior_PayloadBlueprint
{
public:
	TArray<struct FAttributeInitializationData>        SpringNumBounces;                                         // 0x0048(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              InitialSpringSpeed;                                       // 0x0058(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpringGravityScale;                                       // 0x005C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             SpringTrail;                                              // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 SpringAudioEvent;                                         // 0x0068(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LongbowSpringDistance;                                    // 0x0070(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LongbowHitTeleportOffset;                                 // 0x0074(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadSpring");
		return ptr;
	}

};


// Class OakGame.GrenadeBehavior_PayloadSticky
// 0x0058 (0x00A0 - 0x0048)
class UGrenadeBehavior_PayloadSticky : public UGrenadeBehavior_PayloadBlueprint
{
public:
	float                                              StickyFuseTimer;                                          // 0x0048(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<ECollisionChannel>                     MeshCollisionChannel;                                     // 0x004C(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	class UParticleSystem*                             ProximityTriggerParticleTemplate;                         // 0x0050(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TriggerParticleSizePropertyName;                          // 0x0058(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ProximityMaxDuration;                                     // 0x0060(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinProximityRadius;                                       // 0x0064(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxProximityRadius;                                       // 0x0068(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	class UGbxCondition*                               TriggerCondition;                                         // 0x0070(0x0008) (Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UClass*                                      StuckDamageData;                                          // 0x0078(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 StickToTargetAudioEvent;                                  // 0x0080(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 StickToWorldAudioEvent;                                   // 0x0088(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 StickyProximityTriggeredAudioEvent;                       // 0x0090(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 StuckIdleAudioEvent;                                      // 0x0098(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadSticky");
		return ptr;
	}


	void StuckGrenadeUnoverlappedActor(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void StuckGrenadeOverlappedActor(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void K2_StuckGrenadeOverlappedEnded(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, class AActor* OverlappedActor);
	void K2_StuckGrenadeOverlapped(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, class AActor* OverlappedActor);
	void K2_GrenadeStuckTo(class AGrenade* Grenade, class AGrenadeMod* GrenadeMod, class AActor* StickTarget, const struct FHitResult& HitResult, struct FPayloadInstanceData* InstanceData);
};


// Class OakGame.GrenadeBehavior_PayloadTransfusion
// 0x0040 (0x0088 - 0x0048)
class UGrenadeBehavior_PayloadTransfusion : public UGrenadeBehavior_PayloadBlueprint
{
public:
	class UHealthTypeData*                             TriggeringHealthType;                                     // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      HealingDamageData;                                        // 0x0050(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      HealingDamageType;                                        // 0x0058(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             HealingParticles;                                         // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UClass*>                              ValidDamageSources;                                       // 0x0068(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class UWwiseEvent*                                 HealingAudioEvent;                                        // 0x0078(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 HealingImpactAudioEvent;                                  // 0x0080(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehavior_PayloadTransfusion");
		return ptr;
	}

};


// Class OakGame.OakDamageData
// 0x0118 (0x0310 - 0x01F8)
class UOakDamageData : public UDamageData
{
public:
	struct FAttributeInitializationData                BaseStatusEffectChance;                                   // 0x01F8(0x0038) (Edit, BlueprintReadOnly)
	struct FAttributeInitializationData                BaseStatusEffectDamage;                                   // 0x0230(0x0038) (Edit, BlueprintReadOnly)
	struct FAttributeInitializationData                BaseStatusEffectDuration;                                 // 0x0268(0x0038) (Edit, BlueprintReadOnly)
	struct FDamageDataCustomStatusEffectApplicationSpec CustomStatusEffect;                                       // 0x02A0(0x0050) (Edit, BlueprintReadOnly)
	bool                                               bPenetrates;                                              // 0x02F0(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x02F1(0x0007) MISSED OFFSET
	class UClass*                                      LightBeamData;                                            // 0x02F8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       BeamTargetSocket;                                         // 0x0300(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bOnlyDrawParticleIfShieldsAreDepleted;                    // 0x0308(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRootCharacter;                                           // 0x0309(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EDamagePresentationModifier                        PresentationModifier;                                     // 0x030A(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x030B(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDamageData");
		return ptr;
	}

};


// Class OakGame.GrenadeDamageData
// 0x0000 (0x0310 - 0x0310)
class UGrenadeDamageData : public UOakDamageData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeDamageData");
		return ptr;
	}

};


// Class OakGame.GrenadeDamageTypeAspectData
// 0x0008 (0x0040 - 0x0038)
class UGrenadeDamageTypeAspectData : public UInventoryAspectData
{
public:
	class UClass*                                      DamageType;                                               // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeDamageTypeAspectData");
		return ptr;
	}

};


// Class OakGame.GrenadeDeliveryMethodAspectData
// 0x0008 (0x0040 - 0x0038)
class UGrenadeDeliveryMethodAspectData : public UInventoryAspectData
{
public:
	class UGrenadeBehavior_Delivery*                   DeliveryBehavior;                                         // 0x0038(0x0008) (Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeDeliveryMethodAspectData");
		return ptr;
	}

};


// Class OakGame.GrenadeHealingProjectile
// 0x0058 (0x0738 - 0x06E0)
class AGrenadeHealingProjectile : public AOakProjectile
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x06E0(0x0008) MISSED OFFSET
	class UProjectileHomingComponent*                  HomingComponent;                                          // 0x06E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USphereComponent*                            SphereComponent;                                          // 0x06F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UClass*                                      HealingDamageData;                                        // 0x06F8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      HealingDamageType;                                        // 0x0700(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              DamagePercent;                                            // 0x0708(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x070C(0x0004) MISSED OFFSET
	class UHealthTypeData*                             TriggeringHealthType;                                     // 0x0710(0x0008) (ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             HealingParticles;                                         // 0x0718(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UWwiseAudioComponent*                        AudioComponent;                                           // 0x0720(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWwiseEvent*                                 PersistantAudioEvent;                                     // 0x0728(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 HealingAudioEvent;                                        // 0x0730(0x0008) (Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeHealingProjectile");
		return ptr;
	}


	void OnOverlapActor(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void HealHomingTarget();
};


// Class OakGame.GrenadeHomingComponent
// 0x0070 (0x0298 - 0x0228)
class UGrenadeHomingComponent : public UProjectileHomingComponent
{
public:
	class AGrenade*                                    OwnerGrenade;                                             // 0x0228(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ATedioreProjectile*                          OwnerTedioreProjectile;                                   // 0x0230(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FTimerHandle                                HomingResetTimerHandle;                                   // 0x0238(0x0008) (Transient)
	class UParticleSystem*                             HomingTrailTemplate;                                      // 0x0240(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TrailRelativeScale;                                       // 0x0248(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     HomingTrailOffset;                                        // 0x024C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TargetLockedParameterName;                                // 0x0258(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TargetLockedOffValue;                                     // 0x0260(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TargetLockedOnValue;                                      // 0x0264(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 SearchingForTargetEvent;                                  // 0x0268(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 TargetFoundEvent;                                         // 0x0270(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystemComponent*                    HomingTrail;                                              // 0x0278(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0280(0x0008) MISSED OFFSET
	float                                              LastEQSTime;                                              // 0x0288(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x028C(0x0004) MISSED OFFSET
	struct FTimerHandle                                EQSRetriggerHandle;                                       // 0x0290(0x0008)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeHomingComponent");
		return ptr;
	}


	void ResetHoming();
	void OnHomingTargetDestroyed(class AActor* Actor);
};


// Class OakGame.GrenadeLingeringBeamTriggerComponent
// 0x0040 (0x0760 - 0x0720)
class UGrenadeLingeringBeamTriggerComponent : public USphereComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0720(0x0008) MISSED OFFSET
	class UClass*                                      BeamData;                                                 // 0x0728(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0730(0x0010) MISSED OFFSET
	class UClass*                                      DamageType;                                               // 0x0740(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageSource;                                             // 0x0748(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class AActor*>                              RemovedOverlappedActors;                                  // 0x0750(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeLingeringBeamTriggerComponent");
		return ptr;
	}


	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};


// Class OakGame.GrenadeBehaviorStackValueResolver
// 0x0028 (0x0050 - 0x0028)
class UGrenadeBehaviorStackValueResolver : public UAttributeValueResolver
{
public:
	TSoftObjectPtr<class UClass>                       Behavior;                                                 // 0x0028(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehaviorStackValueResolver");
		return ptr;
	}

};


// Class OakGame.GrenadeBehaviorValueResolver
// 0x0068 (0x0090 - 0x0028)
class UGrenadeBehaviorValueResolver : public UAttributeValueResolver
{
public:
	TSoftObjectPtr<class UClass>                       Behavior;                                                 // 0x0028(0x0028) (Edit)
	EInstanceDataOperator                              Operator;                                                 // 0x0050(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	struct FAttributeInitializationData                ValueB;                                                   // 0x0058(0x0038) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehaviorValueResolver");
		return ptr;
	}

};


// Class OakGame.GrenadeBehaviorTableResolver
// 0x0028 (0x0050 - 0x0028)
class UGrenadeBehaviorTableResolver : public UAttributeValueResolver
{
public:
	struct FDataTableRowHandle                         TableGrenadeBehavior;                                     // 0x0028(0x0010) (Edit)
	class UGbxAttributeData*                           AttributeBehaviorTier;                                    // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxAttributeData*                           AttributeBehaviorPowerScalar;                             // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCheckPrimary;                                            // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeBehaviorTableResolver");
		return ptr;
	}

};


// Class OakGame.OakInventoryItem
// 0x0048 (0x04A0 - 0x0458)
class AOakInventoryItem : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnItemPickedUp;                                           // 0x0458(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnItemUsedInInventory;                                    // 0x0468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               CanBeUsedInInventory;                                     // 0x0478(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ConsumeWhenUsed;                                          // 0x0479(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x047A(0x0006) MISSED OFFSET
	struct FText                                       OverrideErrorText;                                        // 0x0480(0x0028) (Edit)
	class UInventoryBalanceStateComponent*             InventoryBalanceState;                                    // 0x0498(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInventoryItem");
		return ptr;
	}


	void OnPickedUp(class AOakCharacter* PickupInstigator);
	void InventoryUsedDelegate__DelegateSignature(class AOakCharacter* PickupInstigator);
	void InventoryPickedUpDelegate__DelegateSignature(class AOakCharacter* PickupInstigator);
	bool HasValidInventoryBalanceState();
	struct FText GetOverrideErrorText();
	bool CanBeUsedFromInventory(class AOakCharacter* InventoryOwner);
	bool CanBePickedUp(class AOakCharacter* PickupInstigator, int Quantity, bool UsedByInstigator, class AInventoryItemPickup* WorldPickupActor);
};


// Class OakGame.OakInventoryEquippableItem
// 0x0020 (0x04C0 - 0x04A0)
class AOakInventoryEquippableItem : public AOakInventoryItem
{
public:
	struct FScriptMulticastDelegate                    OnEquippedDelegate;                                       // 0x04A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUnequippedDelegate;                                     // 0x04B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInventoryEquippableItem");
		return ptr;
	}


	void OnUnequipped(class AOakCharacter* EquipInstigator);
	void OnEquipped(class AOakCharacter* EquipInstigator);
	void InventoryEquipDelegate__DelegateSignature(class AOakCharacter* EquipInstigator);
};


// Class OakGame.GrenadeMod
// 0x0100 (0x05C0 - 0x04C0)
class AGrenadeMod : public AOakInventoryEquippableItem
{
public:
	class UGrenadeModBalanceStateComponent*            BalanceStateComponent;                                    // 0x04C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      Mesh3P;                                                   // 0x04C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        MeshOverride;                                             // 0x04D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FCauseDamageStatusEffectOverrides           StatusEffectOverrides;                                    // 0x04D8(0x001C) (Transient)
	struct FGbxAttributeFloat                          GrenadeMod_StatusEffectDamage;                            // 0x04F4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGbxAttributeFloat                          GrenadeMod_StatusEffectChance;                            // 0x0500(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x4];                                       // 0x050C(0x0004) MISSED OFFSET
	class UGrenadeBehavior_Delivery*                   GrenadeDelivery;                                          // 0x0510(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TMap<class UGrenadeBehavior_Payload*, struct FPayloadInstanceData> PayloadBehaviorStacks;                                    // 0x0518(0x0050) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	class UExplosionData*                              ExplosionDataOverride;                                    // 0x0568(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FGbxAttributeFloat                          GrenadeMod_Damage;                                        // 0x0570(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGbxAttributeFloat                          GrenadeMod_ExplosionRadius;                               // 0x057C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGbxAttributeFloat                          GrenadeMod_ImpactFuseTime;                                // 0x0588(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              DefaultGrenadeForce;                                      // 0x0594(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FGbxAttributeFloat                          GrenadeMod_Force;                                         // 0x0598(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x4];                                       // 0x05A4(0x0004) MISSED OFFSET
	TArray<class AActor*>                              HomingTargets;                                            // 0x05A8(0x0010) (ZeroConstructor, Transient)
	int                                                GrenadeThrowAnimationOverride;                            // 0x05B8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x05BC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeMod");
		return ptr;
	}

};


// Class OakGame.OakCondition_HasGrenadeThrowAnimationOverride
// 0x0008 (0x0090 - 0x0088)
class UOakCondition_HasGrenadeThrowAnimationOverride : public UGbxCondition
{
public:
	int                                                GrenadeThrowAnimationOverride;                            // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x008C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCondition_HasGrenadeThrowAnimationOverride");
		return ptr;
	}

};


// Class OakGame.OakInventoryBalanceStateComponent
// 0x0040 (0x0388 - 0x0348)
class UOakInventoryBalanceStateComponent : public UInventoryBalanceStateComponent
{
public:
	bool                                               bIsInstanced;                                             // 0x0348(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0349(0x0007) MISSED OFFSET
	TArray<class UInventoryAbilityAspectData*>         AbilityAspects;                                           // 0x0350(0x0010) (ZeroConstructor, Transient)
	TArray<class UWeaponBonusAspectData*>              BonusAspectList;                                          // 0x0360(0x0010) (Edit, ZeroConstructor, Transient, EditConst)
	TArray<class UInventoryMeshAttachmentAspectData*>  AttachmentAspects;                                        // 0x0370(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0380(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInventoryBalanceStateComponent");
		return ptr;
	}


	void HandleActorDestroyed(class AActor* Actor);
};


// Class OakGame.GrenadeModBalanceStateComponent
// 0x0030 (0x03B8 - 0x0388)
class UGrenadeModBalanceStateComponent : public UOakInventoryBalanceStateComponent
{
public:
	class UGrenadeDamageTypeAspectData*                DamageTypeAspect;                                         // 0x0388(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGrenadeDeliveryMethodAspectData*            DeliveryAspect;                                           // 0x0390(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGrenadeBehavior_Payload*>            PayloadAspects;                                           // 0x0398(0x0010) (ZeroConstructor, Transient)
	class UGrenadeOverrideMeshAspectData*              OverrideMesh;                                             // 0x03A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x03B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeModBalanceStateComponent");
		return ptr;
	}

};


// Class OakGame.GrenadeOverrideMeshAspectData
// 0x0008 (0x0040 - 0x0038)
class UGrenadeOverrideMeshAspectData : public UInventoryAspectData
{
public:
	class UStaticMesh*                                 OverrideMesh;                                             // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeOverrideMeshAspectData");
		return ptr;
	}

};


// Class OakGame.GrenadePayloadMethodAspectData
// 0x0008 (0x0040 - 0x0038)
class UGrenadePayloadMethodAspectData : public UInventoryAspectData
{
public:
	class UGrenadeBehavior_Payload*                    PayloadBehavior;                                          // 0x0038(0x0008) (Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadePayloadMethodAspectData");
		return ptr;
	}

};


// Class OakGame.GrenadeProjectileMovementComponent
// 0x0010 (0x02D8 - 0x02C8)
class UGrenadeProjectileMovementComponent : public UGbxProjectileMovementComponent
{
public:
	bool                                               bRotate;                                                  // 0x02C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02C9(0x0003) MISSED OFFSET
	struct FRotator                                    RotationRate;                                             // 0x02CC(0x000C) (Edit, BlueprintVisible, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeProjectileMovementComponent");
		return ptr;
	}

};


// Class OakGame.SingularityComponent
// 0x00A0 (0x07C0 - 0x0720)
class USingularityComponent : public USphereComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0720(0x0008) MISSED OFFSET
	TArray<class AActor*>                              PendingRemoveTargets;                                     // 0x0728(0x0010) (ZeroConstructor)
	TArray<class AActor*>                              IgnoreActors;                                             // 0x0738(0x0010) (ZeroConstructor)
	class AProjectile*                                 OwningProjectile;                                         // 0x0748(0x0008) (ZeroConstructor, IsPlainOldData)
	class UTeamComponent*                              OwnerTeam;                                                // 0x0750(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    SingularityParticles;                                     // 0x0758(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UHitReactionTag*                             PullTag;                                                  // 0x0760(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x58];                                      // 0x0768(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SingularityComponent");
		return ptr;
	}


	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void STATIC_CreateSingularityBurst(class AActor* Instigator, const struct FSingularityBurstInfo& SingularityInfo);
	class USingularityComponent* STATIC_CreateSingularity(class AActor* Owner, float Radius, const struct FSingularityInitializationInfo& SingularityInfo);
};


// Class OakGame.GuardianRankAttributePropertyValueResolver
// 0x0008 (0x0030 - 0x0028)
class UGuardianRankAttributePropertyValueResolver : public UAttributeValueResolver
{
public:
	class UGuardianRankRewardData*                     RewardData;                                               // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GuardianRankAttributePropertyValueResolver");
		return ptr;
	}

};


// Class OakGame.GuardianRankModifierFormulaAttributeValueResolver
// 0x00A8 (0x00D0 - 0x0028)
class UGuardianRankModifierFormulaAttributeValueResolver : public UAttributeValueResolver
{
public:
	struct FAttributeInitializationData                ModifierGrowthRate;                                       // 0x0028(0x0038) (Edit, DisableEditOnInstance)
	struct FAttributeInitializationData                ModifierRank;                                             // 0x0060(0x0038) (Edit, DisableEditOnInstance)
	struct FAttributeInitializationData                ModifierBaseValue;                                        // 0x0098(0x0038) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GuardianRankModifierFormulaAttributeValueResolver");
		return ptr;
	}

};


// Class OakGame.GuardianRankPerkData
// 0x0078 (0x00A8 - 0x0030)
class UGuardianRankPerkData : public UGbxDataAsset
{
public:
	class UGuardianRankRewardCategoryData*             PerkCategory;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FText                                       DisplayName;                                              // 0x0038(0x0028) (Edit)
	struct FText                                       Description;                                              // 0x0050(0x0028) (Edit)
	class FString                                      PerkFrameName;                                            // 0x0068(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      PerkAbilityClass;                                         // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UOakCustomizationData*>               PerkCustomizations;                                       // 0x0080(0x0010) (Edit, ZeroConstructor)
	TArray<class UWeaponSkinPartData*>                 PerkWeaponSkins;                                          // 0x0090(0x0010) (Edit, ZeroConstructor)
	int                                                GuardianTokensForPerk;                                    // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                CachedPerkIndex;                                          // 0x00A4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GuardianRankPerkData");
		return ptr;
	}

};


// Class OakGame.GuardianRankRewardCategoryData
// 0x0048 (0x0078 - 0x0030)
class UGuardianRankRewardCategoryData : public UGbxDataAsset
{
public:
	struct FText                                       DisplayName;                                              // 0x0030(0x0028) (Edit)
	struct FText                                       Description;                                              // 0x0048(0x0028) (Edit)
	class FString                                      IconFrameName;                                            // 0x0060(0x0010) (Edit, ZeroConstructor)
	int                                                SortPriority;                                             // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GuardianRankRewardCategoryData");
		return ptr;
	}

};


// Class OakGame.GuardianRankRewardData
// 0x0058 (0x0088 - 0x0030)
class UGuardianRankRewardData : public UGbxDataAsset
{
public:
	class UGuardianRankRewardCategoryData*             RankCategory;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FAttributeEffectData>                RewardAttributeEffects;                                   // 0x0038(0x0010) (Edit, ZeroConstructor)
	struct FText                                       DisplayName;                                              // 0x0048(0x0028) (Edit)
	struct FText                                       Description;                                              // 0x0060(0x0028) (Edit)
	class UUIStatData_Attribute*                       RewardUIStat;                                             // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                CachedRewardIndex;                                        // 0x0080(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0084(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GuardianRankRewardData");
		return ptr;
	}

};


// Class OakGame.SeatPawn
// 0x0040 (0x0500 - 0x04C0)
class ASeatPawn : public APawn
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04C0(0x0010) MISSED OFFSET
	float                                              MaxWeaponAimAdjustmentAngle;                              // 0x04D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04D4(0x0004) MISSED OFFSET
	class UOakPawnAttachSlotComponent*                 SeatComponent;                                            // 0x04D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UClass*                                      InputComponentClass;                                      // 0x04E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UActiveWeaponsComponent*                     WeaponsComponent;                                         // 0x04E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UBodyWeaponHoldManagerComponent*             BodyWeaponHoldManager;                                    // 0x04F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               bResetTurretRotationWhenUnoccupied;                       // 0x04F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x04F9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SeatPawn");
		return ptr;
	}


	void StopZooming(bool bForcedStop);
	void StopUsingWeapon(class UWeaponSlotData* Slot, unsigned char InputChannel);
	void StopReload(class UWeaponSlotData* Slot);
	void StartZooming();
	void StartUsingWeapon(class UWeaponSlotData* Slot, unsigned char InputChannel);
	void SeatAttachStateChanged();
	void Reload(class UWeaponSlotData* Slot);
	bool IsOccupied(bool bIncludeDetaching);
	class APawn* GetOccupant(bool bIncludeDetaching);
	void AttachSeat(const struct FName& AttachSocket, class USceneComponent* AttachComponent);
};


// Class OakGame.GunnersNestSeatPawn
// 0x0010 (0x0510 - 0x0500)
class AGunnersNestSeatPawn : public ASeatPawn
{
public:
	class UPassthroughBalanceStateComponent*           BalanceComponent;                                         // 0x0500(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGbxCustomizationComponent*                  CustomizationComponent;                                   // 0x0508(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GunnersNestSeatPawn");
		return ptr;
	}

};


// Class OakGame.GunnerStandInComponent
// 0x0090 (0x02E8 - 0x0258)
class UGunnerStandInComponent : public UStandInCharacterComponent
{
public:
	class UClass*                                      IronBearBlueprint;                                        // 0x0258(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     IronBearTranslationOffset;                                // 0x0260(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x026C(0x0004) MISSED OFFSET
	class UClass*                                      IronBearSpawnAction;                                      // 0x0270(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TSoftObjectPtr<class UOakActionAbilityAugmentData> IronCubAugment;                                           // 0x0278(0x0028) (Edit)
	class UClass*                                      IronCubBlueprint;                                         // 0x02A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     IronCubTranslationOffset;                                 // 0x02A8(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x02B4(0x0004) MISSED OFFSET
	class UClass*                                      IronCubSpawnAction;                                       // 0x02B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      GunnerSpawnIronCubAction;                                 // 0x02C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IronCubSpawnDelay;                                        // 0x02C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x02CC(0x0004) MISSED OFFSET
	struct FName                                       IronCubPositionSettingContextOverrideName;                // 0x02D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AStandInAuxiliaryActor_IronBear*             IronBear;                                                 // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x02E0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GunnerStandInComponent");
		return ptr;
	}

};


// Class OakGame.OakInventoryItemPickup
// 0x00C8 (0x0728 - 0x0660)
class AOakInventoryItemPickup : public ADroppedInventoryItemPickup
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0660(0x0018) MISSED OFFSET
	float                                              ItemCardDelay;                                            // 0x0678(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bFlyToOnPickup;                                           // 0x067C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x067D(0x0003) MISSED OFFSET
	EPickupFlyToAlignmentType                          FlyToAlignment;                                           // 0x0680(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x067D(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	struct FRotator                                    FlyToAlignmentOffset;                                     // 0x0684(0x000C) (Edit, IsPlainOldData)
	class UPickupFlyToData*                            DroppedPickupFlyToSettings;                               // 0x0690(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPickupFlyToData*                            ContainerPickupFlyToSettings;                             // 0x0698(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPickupFlyToData*                            AutoLootContainerPickupFlyToSettings;                     // 0x06A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UItemPoolData*                               DefaultPickupItemPool;                                    // 0x06A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ItemCardSocketName;                                       // 0x06B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EVaultRewardType                                   VaultRewardType;                                          // 0x06B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bTouchPickupOnFoot : 1;                                   // 0x06B9(0x0001) (Edit)
	unsigned char                                      bTouchPickupInVehicle : 1;                                // 0x06B9(0x0001) (Edit)
	unsigned char                                      UnknownData03[0x6];                                       // 0x06BA(0x0006) MISSED OFFSET
	class UUsableComponent*                            CachedUsableComponent;                                    // 0x06C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    LootBeamComponent;                                        // 0x06C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              AutoPickupDelay;                                          // 0x06D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bMassPickupable;                                          // 0x06D4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCauseMassPickupOnHoldUse;                                // 0x06D5(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EPickupFlyToSettingsType                           DesiredFlyToType;                                         // 0x06D6(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x35];                                      // 0x06D7(0x0035) MISSED OFFSET
	unsigned char                                      bIsInstanced : 1;                                         // 0x070C(0x0001) (Net, Transient)
	unsigned char                                      bPlayedCallout : 1;                                       // 0x070C(0x0001) (Net, Transient)
	unsigned char                                      bPickupEquipped : 1;                                      // 0x070C(0x0001) (Net, Transient)
	unsigned char                                      bNoLootBeam : 1;                                          // 0x070C(0x0001) (Net, Transient)
	unsigned char                                      UnknownData05[0x3];                                       // 0x070D(0x0003) MISSED OFFSET
	class UInventoryRarityData*                        AssociatedInventoryRarityData;                            // 0x0710(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMissionIconComponent*                       MissionIconComponent;                                     // 0x0718(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	EPlayerAlertType                                   PlayerAlertType;                                          // 0x0720(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0721(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInventoryItemPickup");
		return ptr;
	}


	void TryMassPickupBy(class AActor* GiveToActor);
	void SetupZoneMapIcon();
	void SetNoLootBeam(bool bNoBeam);
	void OnRep_NoLootBeam();
	void OnRep_bIsInstanced();
	void HandleActorDestroyed(class AActor* Actor);
};


// Class OakGame.GunRackDisplayItem
// 0x0050 (0x0778 - 0x0728)
class AGunRackDisplayItem : public AOakInventoryItemPickup
{
public:
	struct FScriptMulticastDelegate                    OnItemChanged;                                            // 0x0728(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnItemPickedUp;                                           // 0x0738(0x0010) (ZeroConstructor, InstancedReference)
	unsigned char                                      AttachedToSlot;                                           // 0x0748(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0749(0x0007) MISSED OFFSET
	class UGunRackSlotData*                            AttachedToData;                                           // 0x0750(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bLeavePlacedItemInInventory;                              // 0x0758(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0759(0x0007) MISSED OFFSET
	class UGbxMenuData*                                PlaceObjectMenuData;                                      // 0x0760(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             AttachedToComponent;                                      // 0x0768(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextRenderComponent*                        DisplayTextComponent;                                     // 0x0770(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GunRackDisplayItem");
		return ptr;
	}


	bool IsItemOwnedBy(class AOakPlayerController* User);
	bool IsEmptyDisplayItem();
};


// Class OakGame.InventorySlotData
// 0x0048 (0x0078 - 0x0030)
class UInventorySlotData : public UGbxDataAsset
{
public:
	struct FName                                       SocketName;                                               // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bShowHolsteredOnBody;                                     // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               InitiallyEnabled;                                         // 0x0039(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
	struct FText                                       DisplayName;                                              // 0x0040(0x0028) (Edit, DisableEditOnInstance)
	struct FText                                       DisplayDescription;                                       // 0x0058(0x0028) (Edit, DisableEditOnInstance)
	class UInventoryCategoryData*                      InventoryCategory;                                        // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.InventorySlotData");
		return ptr;
	}

};


// Class OakGame.GunRackSlotData
// 0x0010 (0x0088 - 0x0078)
class UGunRackSlotData : public UInventorySlotData
{
public:
	class UClass*                                      EmptyPickupActor;                                         // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWeaponTypeData*                             WeaponTypeForSlot;                                        // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GunRackSlotData");
		return ptr;
	}

};


// Class OakGame.HealthBarInfoProviderInterface
// 0x0000 (0x0028 - 0x0028)
class UHealthBarInfoProviderInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.HealthBarInfoProviderInterface");
		return ptr;
	}

};


// Class OakGame.HealthDamagePassthroughInterface
// 0x0000 (0x0028 - 0x0028)
class UHealthDamagePassthroughInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.HealthDamagePassthroughInterface");
		return ptr;
	}

};


// Class OakGame.HighlightComponent
// 0x0010 (0x0188 - 0x0178)
class UHighlightComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0178(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.HighlightComponent");
		return ptr;
	}


	void Enable();
	void Disable();
	void CreateDecalStaticMeshesComponent(class UMaterialInstanceDynamic* MaterialInstanceDynamic);
};


// Class OakGame.HitReactionLayer_OakBase
// 0x0030 (0x0060 - 0x0030)
class UHitReactionLayer_OakBase : public UHitReactionLayer
{
public:
	float                                              LaunchChanceScale;                                        // 0x0030(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StaggerChanceScale;                                       // 0x0034(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ForceOnlyDamageSource;                                    // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  MassTable;                                                // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UHitReactionTag*                             FlinchTag;                                                // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UHitReactionTag*                             StaggerTag;                                               // 0x0050(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UHitReactionTag*                             LaunchTag;                                                // 0x0058(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.HitReactionLayer_OakBase");
		return ptr;
	}

};


// Class OakGame.HolsteredGearSlot
// 0x0060 (0x04B8 - 0x0458)
class AHolsteredGearSlot : public AActor
{
public:
	struct FHolsteredGearSlotOptions                   Options;                                                  // 0x0458(0x0010)
	struct FHolsteredGearAttachmentSlot                AttachmentSlot1P;                                         // 0x0468(0x0018)
	struct FHolsteredGearAttachmentSlot                AttachmentSlot3P;                                         // 0x0480(0x0018)
	class AActor*                                      PendingLikenessActor;                                     // 0x0498(0x0008) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      CurrentLikenessActor;                                     // 0x04A0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGbxActionComponent*                         ActionComponent;                                          // 0x04A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	EHolsteredGearState                                CurrentState;                                             // 0x04B0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x04B1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.HolsteredGearSlot");
		return ptr;
	}

};


// Class OakGame.HomingEffectCollectionData
// 0x0028 (0x0050 - 0x0028)
class UHomingEffectCollectionData : public UEffectCollectionData
{
public:
	unsigned char                                      bHasEffect : 1;                                           // 0x0028(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      bHasAudio : 1;                                            // 0x0028(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	class UParticleSystem*                             DefaultEffect;                                            // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             HomingEffect;                                             // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 DefaultAudio;                                             // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 HomingAudio;                                              // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.HomingEffectCollectionData");
		return ptr;
	}

};


// Class OakGame.HUDContainer
// 0x0010 (0x02F0 - 0x02E0)
class UHUDContainer : public UGbxHUDContainer
{
public:
	class AOakPlayerController*                        OakPCOwner;                                               // 0x02E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AOakHUD*                                     OakHUD;                                                   // 0x02E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.HUDContainer");
		return ptr;
	}

};


// Class OakGame.HUDContainer_IronBear
// 0x0000 (0x02F0 - 0x02F0)
class UHUDContainer_IronBear : public UHUDContainer
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.HUDContainer_IronBear");
		return ptr;
	}


	void UpdateManualHoldPanel(float HoldTime);
	void TriggerCoreCooldown(float Duration);
	void SetupHUD(class AOakCharacter_IronBear* IronBearOwner);
	void SetManualExitPanelVisible(bool bVisible);
};


// Class OakGame.HUDInWorldIcon
// 0x0068 (0x0378 - 0x0310)
class UHUDInWorldIcon : public UGbxHUDWidget
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0310(0x0010) MISSED OFFSET
	int                                                Stacks;                                                   // 0x0320(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0324(0x0004) MISSED OFFSET
	class UInWorldIconData*                            IconData;                                                 // 0x0328(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       TargetSocketName;                                         // 0x0330(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x40];                                      // 0x0338(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.HUDInWorldIcon");
		return ptr;
	}


	void SetTargetRadius(float InRadius);
	void SetTargetLocationOffset(const struct FVector& InLocationOffset);
	void SetTargetLocationComponent(class USceneComponent* InTargetLocationComponent);
	void SetTargetActor(class AActor* InTarget);
	void SetLifeTimer(float LifeTime);
	void SetIconData(class UInWorldIconData* InIconData);
	void OnVisibilityChanged(bool bVisible);
	void OnTargetOffscreenChanged(bool bOffscreen);
	void OnTargetLocationOffsetChanged(const struct FVector& NewLocationOffset);
	void OnTargetInRangeChanged(bool bTargetInRange);
	void OnTargetChanged(class AActor* NewTarget);
	void OnTargetAngleChanged(float AngleDegrees);
	void OnNumberOfStacksChanged(int NewStacksNumber);
	void OnLocationComponentChanged(class USceneComponent* NewLocationComponent);
	void OnIconDataChanged(class UInWorldIconData* NewIconData);
	bool IsForTarget(const struct FHUDInWorldIconTargetInfo& Target);
	bool HasValidTarget();
	bool HasLifeTimeExpired();
	float GetTargetRadius();
	struct FVector GetTargetLocationOffset();
	class USceneComponent* GetTargetLocationComponent();
	struct FVector GetTargetLocation();
	class AActor* GetTargetActor();
	class UInWorldIconData* GetIconData();
};


// Class OakGame.InWorldIconData
// 0x0058 (0x0088 - 0x0030)
class UInWorldIconData : public UGbxDataAsset
{
public:
	class FString                                      IconFrameName;                                            // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FVector2D                                   IconSize;                                                 // 0x0040(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsAreaWaypoint;                                          // 0x0048(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHasSpecialMinimapVersion;                                // 0x0049(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClampRadarEdge;                                          // 0x004A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x004B(0x0001) MISSED OFFSET
	float                                              MaxClampDistance;                                         // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EInWorldIconClassType                              InWorldIconType;                                          // 0x0050(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EInWorldIconEdgeBehavior                           EdgeBehavior;                                             // 0x0051(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseVisibilityRange;                                      // 0x0052(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EInWorldIconFadeType                               FadeType;                                                 // 0x0053(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HiddenDistance;                                           // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VisibleDistance;                                          // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LifeTime;                                                 // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      MinimapIcon;                                              // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      MinimapAreaIcon;                                          // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   WidgetSize;                                               // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   WidgetAlignment;                                          // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	bool                                               bStackable;                                               // 0x0080(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0081(0x0003) MISSED OFFSET
	float                                              IconOffsetValue;                                          // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.InWorldIconData");
		return ptr;
	}

};


// Class OakGame.HUDNotificationAsset
// 0x0040 (0x0070 - 0x0030)
class UHUDNotificationAsset : public UGbxDataAsset
{
public:
	class UClass*                                      GFxWidgetToDisplay;                                       // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class FString                                      IconFrame;                                                // 0x0038(0x0010) (Edit, ZeroConstructor)
	int                                                DefaultPriority;                                          // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldInterrupt;                                         // 0x004C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bInterruptible;                                           // 0x004D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x004E(0x0002) MISSED OFFSET
	float                                              MinimumDisplayTime;                                       // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DesiredDisplayTime;                                       // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TimeoutTime;                                              // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bStackable;                                               // 0x005C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	struct FName                                       SpawnAudioOverride;                                       // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       DespawnAudioOverride;                                     // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.HUDNotificationAsset");
		return ptr;
	}

};


// Class OakGame.HyperHoopVehicle
// 0x0040 (0x0498 - 0x0458)
class AHyperHoopVehicle : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnStateChanged;                                           // 0x0458(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	EHyperHoopState                                    State;                                                    // 0x0468(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0469(0x0003) MISSED OFFSET
	float                                              DistanceFromEndDecelerate;                                // 0x046C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DelayBeforeMove;                                          // 0x0470(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DelayBeforeExitAnim;                                      // 0x0474(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USplineFollowerComponent*                    SplineFollowerComponent;                                  // 0x0478(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOakPawnAttachSlotComponent*                 PawnAttachSlotComponent;                                  // 0x0480(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0488(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.HyperHoopVehicle");
		return ptr;
	}


	void StartMovement();
	void StartDetatch();
	void SetupAndStart_Rep(class APawn* Pawn, class AActor* SplineCompToFollow, const struct FName& SplineComponentName, bool bIsReverse);
	void SetupAndStart(class AController* Cont, class AActor* SplineActorToAttachTo, const struct FName& SplineComponentName, bool bIsReverse);
	void OnReachedEndOfSpline(class USplineFollowerComponent* SplineFollowerComponent, class AActor* SplineFollowerOwner);
	void OnReachedCallbackDistance(class USplineFollowerComponent* SplineFollowerComponent, class AActor* SplineFollowerOwner, const class FString& CheckpointName);
	void OnDetachFinished(class APawn* Pawn, class AController* Controller);
	void OnAttachFinished(class APawn* Pawn, class AController* Controller);
};


// Class OakGame.HyperionProjectedShield
// 0x0000 (0x0550 - 0x0550)
class AHyperionProjectedShield : public AInteractiveObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.HyperionProjectedShield");
		return ptr;
	}

};


// Class OakGame.TrapTriggerRenderingComponent
// 0x0020 (0x0710 - 0x06F0)
class UTrapTriggerRenderingComponent : public UPrimitiveComponent
{
public:
	TArray<class AInteractiveObject*>                  TrapLinks;                                                // 0x06F0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0700(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TrapTriggerRenderingComponent");
		return ptr;
	}

};


// Class OakGame.InventoryAbilityAspectData
// 0x0010 (0x0048 - 0x0038)
class UInventoryAbilityAspectData : public UInventoryAspectData
{
public:
	TArray<struct FInventoryAspectAbilityInfo>         Abilities;                                                // 0x0038(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.InventoryAbilityAspectData");
		return ptr;
	}

};


// Class OakGame.InventoryCustomizationBalanceStateComponent
// 0x0000 (0x0388 - 0x0388)
class UInventoryCustomizationBalanceStateComponent : public UOakInventoryBalanceStateComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.InventoryCustomizationBalanceStateComponent");
		return ptr;
	}

};


// Class OakGame.InventoryGlobals
// 0x0230 (0x0260 - 0x0030)
class UInventoryGlobals : public UGbxDataAsset
{
public:
	class UClass*                                      DefaultDamageType;                                        // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      GrenadeDamageData;                                        // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventorySlotData*                          GrenadeModSlot;                                           // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UExplosionData*                              DefaultGrenadeExplosionData;                              // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<ECollisionChannel>                     GrenadeCollisionChannel;                                  // 0x0050(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	class UClass*                                      ThrownGrenadeClass;                                       // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             GrenadeFuseWarningEmitter;                                // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FAttributeInitializationData                DefaultDamage;                                            // 0x0068(0x0038) (Edit, DisableEditOnInstance)
	struct FForceSelection                             DefaultForce;                                             // 0x00A0(0x0020) (Edit, DisableEditOnInstance)
	class UInventorySlotData*                          WeaponSlot1;                                              // 0x00C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventorySlotData*                          WeaponSlot2;                                              // 0x00C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventorySlotData*                          WeaponSlot3;                                              // 0x00D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventorySlotData*                          WeaponSlot4;                                              // 0x00D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventorySlotData*                          ShieldSlot;                                               // 0x00E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventorySlotData*                          ClassItemSlot;                                            // 0x00E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventorySlotData*                          ArtifactSlot;                                             // 0x00F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FManufacturerWeaponSightData>        ManufacturerWeaponSightData;                              // 0x00F8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UDataTable*                                  CustomWeaponSightTable;                                   // 0x0108(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                SightTargetCrosshairColors[0x7];                          // 0x0110(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FOakWeaponNamedNamingAttribute>      WeaponNamingAttributes;                                   // 0x0180(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FAttributeInitializationData                EridiumCostFormula;                                       // 0x0190(0x0038) (Edit, DisableEditOnInstance)
	class USkeletalMesh*                               ShieldSkeletalMesh;                                       // 0x01C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGameResourceData*                           ShieldResource;                                           // 0x01D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxAttributeData*                           ShieldDamageAttribute;                                    // 0x01D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFeedbackData*                               ShieldBreakFeedback;                                      // 0x01E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class FString>                              RandomDateBasedVendingMachineStrings;                     // 0x01E8(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FVendingMachineRefillAmmoData>       VendingMachineRefillAmmoData;                             // 0x01F8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UGbxAttributeData*                           VendingMachineMarkupAttribute;                            // 0x0208(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxInventoryCategoryData*                   PartReRollCurrency;                                       // 0x0210(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FAttributeInitializationData                PartReRollCostFormula;                                    // 0x0218(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<struct FAttributeEffectData>                PartReRollAttributeEffects;                               // 0x0250(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.InventoryGlobals");
		return ptr;
	}

};


// Class OakGame.InventoryMeshAttachmentAspectData
// 0x0028 (0x0060 - 0x0038)
class UInventoryMeshAttachmentAspectData : public UInventoryAspectData
{
public:
	class UGestaltData*                                GestaltData;                                              // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       ComponentName;                                            // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               GestaltMeshPartNames;                                     // 0x0048(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FName                                       AttachSocket;                                             // 0x0058(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.InventoryMeshAttachmentAspectData");
		return ptr;
	}


	void EnumerateGestaltMeshPartNames(TArray<struct FName>* OutPartNameList);
};


// Class OakGame.InventoryShopComponent
// 0x0170 (0x04E0 - 0x0370)
class UInventoryShopComponent : public UInventoryListComponent
{
public:
	struct FItemPoolCollection                         StandardItemPools;                                        // 0x0370(0x0020) (Edit, DisableEditOnInstance)
	class UItemPoolData*                               FeaturedItemPool;                                         // 0x0390(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FAttributeInitializationData                FeaturedItemGameStage;                                    // 0x0398(0x0038) (Edit, DisableEditOnInstance)
	class UClass*                                      GameStageVarianceFormula;                                 // 0x03D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bGuaranteeEndGamePartForLoot;                             // 0x03D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x03D9(0x0007) MISSED OFFSET
	struct FAttributeInitializationData                StandardItemMarkup;                                       // 0x03E0(0x0038) (Edit, DisableEditOnInstance)
	struct FAttributeInitializationData                FeaturedItemMarkup;                                       // 0x0418(0x0038) (Edit, DisableEditOnInstance)
	struct FAttributeInitializationData                GearSoldByFriendsMarkup;                                  // 0x0450(0x0038) (Edit, DisableEditOnInstance)
	class UInventoryCategoryData*                      OverridePrimaryCurrency;                                  // 0x0488(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InventoryRelevancyDistance;                               // 0x0490(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0494(0x0004) MISSED OFFSET
	struct FItemPoolCollection                         RandomlySelectedItemPools;                                // 0x0498(0x0020) (Transient)
	TArray<class AActor*>                              FeaturedInventoryList;                                    // 0x04B8(0x0010) (Net, ZeroConstructor, Transient)
	TArray<class AOakPlayerController*>                InstancedForPlayers;                                      // 0x04C8(0x0010) (ZeroConstructor, Transient)
	uint32_t                                           LastResetCounter;                                         // 0x04D8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	uint32_t                                           MayhemLevel;                                              // 0x04DC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.InventoryShopComponent");
		return ptr;
	}


	void OnRep_FeaturedInventory();
	void HandleOwnerExperienceLevelChanged(int OldExperienceLevel, int NewExperienceLevel);
	void HandleActorDestroyed(class AActor* Actor);
};


// Class OakGame.InventorySlotAttributeContextResolver
// 0x0008 (0x0058 - 0x0050)
class UInventorySlotAttributeContextResolver : public UAttributeContextResolver
{
public:
	class UInventorySlotData*                          InventorySlot;                                            // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.InventorySlotAttributeContextResolver");
		return ptr;
	}

};


// Class OakGame.OakPlayerAnimInstance
// 0x0200 (0x0CF0 - 0x0AF0)
class UOakPlayerAnimInstance : public UOakCharacterAnimInstance
{
public:
	bool                                               bIsPistol;                                                // 0x0AF0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0AF1(0x0007) MISSED OFFSET
	class UOakFirstPersonData*                         FirstPersonData;                                          // 0x0AF8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	struct FInputTransforms                            FirstPersonViewModelOffsets;                              // 0x0B00(0x0010) (BlueprintVisible, BlueprintReadOnly, Transient)
	struct FVector                                     FirstPersonWeaponOffsetLocation;                          // 0x0B10(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FRotator                                    FirstPersonWeaponOffsetRotation;                          // 0x0B1C(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FVector                                     FirstPersonOffsetLocation;                                // 0x0B28(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	float                                              FirstPersonSpeed2D;                                       // 0x0B34(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FirstPersonZoomEffect;                                    // 0x0B38(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FirstPersonZoomStartPosition;                             // 0x0B3C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FirstPersonTiltWeight;                                    // 0x0B40(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FirstPersonMuteADSWeight;                                 // 0x0B44(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FirstPersonMantleReachWeight;                             // 0x0B48(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FirstPersonWeaponAngleAlpha;                              // 0x0B4C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0B50(0x0018) MISSED OFFSET
	float                                              FirstPersonRAddAlpha;                                     // 0x0B68(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FirstPersonPistolStockAddAlpha;                           // 0x0B6C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              HeadBobMultiplier;                                        // 0x0B70(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     FirstPersonFallNoise;                                     // 0x0B74(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	float                                              FirstPersonFingerOverrideWeight;                          // 0x0B80(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0B84(0x0008) MISSED OFFSET
	float                                              FirstPersonLadderIdleAdditiveAlpha;                       // 0x0B8C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bFirstPersonUseAimOffset : 1;                             // 0x0B90(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bFirstPersonBranchLeftArm : 1;                            // 0x0B90(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bFirstPersonBlendMantle : 1;                              // 0x0B90(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bFirstPersonWeaponIsLowered : 1;                          // 0x0B90(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bFirstPersonBlendLowerWeapon : 1;                         // 0x0B90(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsEchoDeviceActive : 1;                                  // 0x0B90(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bShouldPlayEchoAnim1P : 1;                                // 0x0B90(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bShouldPlayEchoAnim3P : 1;                                // 0x0B90(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bEchoDeviceOutsideOfMenuMode : 1;                         // 0x0B91(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bEchoDeviceButton1Pressed : 1;                            // 0x0B91(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bEchoDeviceButton2Pressed : 1;                            // 0x0B91(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bEchoDeviceButton3Pressed : 1;                            // 0x0B91(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0B92(0x0002) MISSED OFFSET
	float                                              EchoDeviceDPadXAxis;                                      // 0x0B94(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              EchoDeviceDPadYAxis;                                      // 0x0B98(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              JumpStartVelocityZ;                                       // 0x0B9C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StartFallingVelocityZ;                                    // 0x0BA0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JumpStartFromFallMaximumVelocityZ;                        // 0x0BA4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FallingAnimVelocityZ;                                     // 0x0BA8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CrouchMaxVelocityZ;                                       // 0x0BAC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FirstPersonSprintJumpStartVelocityZ;                      // 0x0BB0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FirstPersonCrouchMaxVelocityZ;                            // 0x0BB4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JumpEndMinSpeed2D;                                        // 0x0BB8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SprintMinSpeed2D;                                         // 0x0BBC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IdleMaxSpeed2D;                                           // 0x0BC0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CrouchEndMaxSpeed2D;                                      // 0x0BC4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InjuredSpeedDivider;                                      // 0x0BC8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InjuredPlayRate;                                          // 0x0BCC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FirstPersonSprintJumpExitMaxSpeed;                        // 0x0BD0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FirstPersonJumpExitMinSpeed;                              // 0x0BD4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FirstPersonSprintMinSpeed2D;                              // 0x0BD8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FirstPersonBunnyHopTiming;                                // 0x0BDC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              FirstPersonBunnyHopTiming_Sprint;                         // 0x0BE0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              BaseFrontDirectionMinThreshold;                           // 0x0BE4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BaseFrontDirectionMaxThreshold;                           // 0x0BE8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FrontToBackTransitionFrontDirectionMinThreshold;          // 0x0BEC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FrontToBackTransitionFrontDirectionMaxThreshold;          // 0x0BF0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InjuredFrontDirectionMinThreshold;                        // 0x0BF4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InjuredFrontDirectionMaxThreshold;                        // 0x0BF8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InjuredFrontToBackTransitionFrontDirectionMinThreshold;   // 0x0BFC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InjuredFrontToBackTransitionFrontDirectionMaxThreshold;   // 0x0C00(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InjuredBackToFrontTransitionFrontDirectionMinThreshold;   // 0x0C04(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InjuredBackToFrontTransitionFrontDirectionMaxThreshold;   // 0x0C08(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SprintFrontDirectionMinThreshold;                         // 0x0C0C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SprintFrontDirectionMaxThreshold;                         // 0x0C10(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsIdling;                                                // 0x0C14(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsCrouchIdling;                                          // 0x0C15(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bWasSprinting;                                            // 0x0C16(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCanFallJump;                                             // 0x0C17(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FallingSpeedAlpha;                                        // 0x0C18(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              StateChangeBlendTime;                                     // 0x0C1C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsJumpEnded;                                             // 0x0C20(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsCrouchMoveEnded;                                       // 0x0C21(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsCrouchMoveNeedEnding;                                  // 0x0C22(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsCrouchEndDone;                                         // 0x0C23(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsCrouchNeedStarting;                                    // 0x0C24(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsCrouchNeedMoving;                                      // 0x0C25(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsCrouchInVehicle;                                       // 0x0C26(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsExitingLadderInAir;                                    // 0x0C27(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsExitingLadderNotInAir;                                 // 0x0C28(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsClimbingLadder;                                        // 0x0C29(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsJumpStart;                                             // 0x0C2A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsSprintJumpStart;                                       // 0x0C2B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsJumpLoop;                                              // 0x0C2C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsSprintJumpLoop;                                        // 0x0C2D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsJumpEndedBySpeed;                                      // 0x0C2E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsBaseLocoGoingForward;                                  // 0x0C2F(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsBaseLocoGoingBackward;                                 // 0x0C30(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsBaseLocoGoingFrontToBack;                              // 0x0C31(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsSprintLocoExitForward;                                 // 0x0C32(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsSprintLocoExitBackward;                                // 0x0C33(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsSprintLocoExitForwardNoBlend;                          // 0x0C34(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsSprintLocoExitBackwardNoBlend;                         // 0x0C35(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsInjuredLocoGoingForward;                               // 0x0C36(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsInjuredLocoGoingBackward;                              // 0x0C37(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsInjuredLocoGoingFrontToBack;                           // 0x0C38(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsInjuredLocoGoingBackToFront;                           // 0x0C39(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCanStartSprinting;                                       // 0x0C3A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1];                                       // 0x0C3B(0x0001) MISSED OFFSET
	float                                              LeftHandIKWhileAimOffset;                                 // 0x0C3C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0C40(0x0008) MISSED OFFSET
	class UGbxBoneSet*                                 AimOffsetDefaultBoneSet;                                  // 0x0C48(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxBoneSet*                                 AimOffsetCurrentBoneSet;                                  // 0x0C50(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonIsJumpLoop;                                   // 0x0C58(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonIsSprintJumpStart;                            // 0x0C59(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonIsCrouchNeedMoving;                           // 0x0C5A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonIsCrouchNeedStarting;                         // 0x0C5B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonIsCrouchExit;                                 // 0x0C5C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonCanUseCrouchTransition;                       // 0x0C5D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x0C5E(0x0002) MISSED OFFSET
	float                                              GunnerBockJockBlitzPassiveSkillModifierAlpha;             // 0x0C60(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonIsJumpIdle;                                   // 0x0C64(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonIsSlidingToLocomotion;                        // 0x0C65(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonIsIdling;                                     // 0x0C66(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonToIdleToSprintTransitionState;                // 0x0C67(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonIdleToSprint;                                 // 0x0C68(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonSprintToIdle;                                 // 0x0C69(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonSprintToSprintTransition;                     // 0x0C6A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonADSJumpEnter;                                 // 0x0C6B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonADSCrouchStart;                               // 0x0C6C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonADSCrouchMove;                                // 0x0C6D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonADSJumpLoop;                                  // 0x0C6E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonADSToHipFire;                                 // 0x0C6F(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonExitLowerWeapon;                              // 0x0C70(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonUnarmedIsJumpStarted;                         // 0x0C71(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonUnarmedIsSprintJumpStart;                     // 0x0C72(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bFirstPersonHardLanded;                                   // 0x0C73(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	int                                                RightHandInteractionBottomPressAssetPlayerIndex;          // 0x0C74(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                RightHandInteractionBottomPressToHoldTransitionIndex;     // 0x0C78(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                RightHandInteractionMiddlePressAssetPlayerIndex;          // 0x0C7C(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                RightHandInteractionMiddleToNeutralTransitionIndex;       // 0x0C80(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                RightHandInteractionTopPressAssetPlayerIndex;             // 0x0C84(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                RightHandInteractionTopPressToHoldTransitionIndex;        // 0x0C88(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                ADSSetStateMachineIndex;                                  // 0x0C8C(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                ADSSetJumpExitStateIndex;                                 // 0x0C90(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                ADSSetJumpExitToJumpEnterTransitionIndex;                 // 0x0C94(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                HipfireSetStateMachineIndex;                              // 0x0C98(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                HipfireSetJumpExitStateIndex;                             // 0x0C9C(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                HipfireSetJumpExitToJumpEnterTransitionIndex;             // 0x0CA0(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                HipfireSetJumpExitToUprightIdleAndMovementTransitionIndex1;// 0x0CA4(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                HipfireSetSprintExitAssetPlayerIndex;                     // 0x0CA8(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                HipfireSetSprintExitToUprightIdleAndMovementTransitionIndex1;// 0x0CAC(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                HipfireSetSprintJumpExitStateIndex;                       // 0x0CB0(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                HipfireSetSprintJumpExitToSprintJumpEnterTransitionIndex; // 0x0CB4(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                HipfireSetSprintJumpExitToSprintExitTransitionIndex;      // 0x0CB8(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                HipfireSetSprintJumpExitToUprightIdleAndMovementTransitionIndex2;// 0x0CBC(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                UprightLocomotionStatesStateMachineIndex;                 // 0x0CC0(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                UprightLocomotionStatesIdleToSprintAssetPlayerIndex;      // 0x0CC4(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                UprightLocomotionStatesIdleToSprintToIdleTransitionIndex2;// 0x0CC8(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                UprightLocomotionStatesIdleToSprintStateIndex;            // 0x0CCC(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                UprightLocomotionStatesIdleToSprintToSprintTransitionTransitionIndex;// 0x0CD0(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                UprightLocomotionStatesSprintTransitionStateIndex;        // 0x0CD4(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                UprightLocomotionStatesSprintTransitionToLocomotionTransitionIndex1;// 0x0CD8(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                UprightLocomotionStatesSprintExitAssetPlayerIndex;        // 0x0CDC(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                UprightLocomotionStatesSprintTransitionToLocomotionTransitionIndex2;// 0x0CE0(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                UnarmedSetStateMachineIndex;                              // 0x0CE4(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                UnarmedSetJumpExitStateIndex;                             // 0x0CE8(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                UnarmedSetJumpExitToJumpEnterTransitionIndex;             // 0x0CEC(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAnimInstance");
		return ptr;
	}


	void OnWeaponReloadStarted(class AWeapon* Weapon, bool bAuto);
	void OnWeaponReloadEnded(class AWeapon* Weapon, bool bCompleted);
	void AnimNotify_Raised();
	void AnimNotify_IsLowered();
};


// Class OakGame.IronBearAnimInstance_FirstPerson
// 0x0020 (0x0D10 - 0x0CF0)
class UIronBearAnimInstance_FirstPerson : public UOakPlayerAnimInstance
{
public:
	bool                                               Slot_HPL_Active;                                          // 0x0CF0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               Slot_HPR_Active;                                          // 0x0CF1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0CF2(0x0002) MISSED OFFSET
	float                                              R_Fist_Weight;                                            // 0x0CF4(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              L_Fist_Weight;                                            // 0x0CF8(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              L_Fist_Weight_Inv;                                        // 0x0CFC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              R_Fist_Weight_Inv;                                        // 0x0D00(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FistTorsoWeight;                                          // 0x0D04(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0D08(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.IronBearAnimInstance_FirstPerson");
		return ptr;
	}

};


// Class OakGame.IronBearAnimInstance_ThirdPerson
// 0x0010 (0x0D00 - 0x0CF0)
class UIronBearAnimInstance_ThirdPerson : public UOakPlayerAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0CF0(0x0008) MISSED OFFSET
	float                                              R_Fist_Weight;                                            // 0x0CF8(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              L_Fist_Weight;                                            // 0x0CFC(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.IronBearAnimInstance_ThirdPerson");
		return ptr;
	}


	bool IsAugmentSlotted(class UOakActionAbilityAugmentData* InAugment);
};


// Class OakGame.IronBearBubbleShieldAnimInstance
// 0x0040 (0x0480 - 0x0440)
class UIronBearBubbleShieldAnimInstance : public UAnimInstance
{
public:
	struct FRotator                                    FanRotator;                                               // 0x0440(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, IsPlainOldData)
	int                                                BlendPose;                                                // 0x044C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FVector                                     RotationAxis;                                             // 0x0450(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              SpinDownRateMultiplier;                                   // 0x045C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpinUpRateMultiplier;                                     // 0x0460(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0464(0x0004) MISSED OFFSET
	class AOakWeapon_IronBearHardPoint*                RailgunHardpoint;                                         // 0x0468(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bCanBeginSpinning;                                        // 0x0470(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0471(0x0003) MISSED OFFSET
	float                                              NewRotationRate;                                          // 0x0474(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0478(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.IronBearBubbleShieldAnimInstance");
		return ptr;
	}


	void OnRailgunStartFiring();
	void OnRailgunFired_Default();
	void OnRailgunFinishFiring();
};


// Class OakGame.IronBearGunnersNestAnimInstance
// 0x0020 (0x0460 - 0x0440)
class UIronBearGunnersNestAnimInstance : public UAnimInstance
{
public:
	struct FRotator                                    TurretRotator;                                            // 0x0440(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x044C(0x0004) MISSED OFFSET
	class ASeatPawn*                                   SeatPawnActor;                                            // 0x0450(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bDetaching;                                               // 0x0458(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0459(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.IronBearGunnersNestAnimInstance");
		return ptr;
	}

};


// Class OakGame.IronBearMinigunAnimInstance
// 0x0040 (0x0480 - 0x0440)
class UIronBearMinigunAnimInstance : public UAnimInstance
{
public:
	struct FRotator                                    UpperBarrelRotation;                                      // 0x0440(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, IsPlainOldData)
	struct FRotator                                    LowerBarrelRotation;                                      // 0x044C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, IsPlainOldData)
	struct FVector                                     DefaultSpinRate;                                          // 0x0458(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     Mod3SpinRate;                                             // 0x0464(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	class AOakWeapon_IronBearHardPoint*                MinigunHardpoint;                                         // 0x0470(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0478(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.IronBearMinigunAnimInstance");
		return ptr;
	}

};


// Class OakGame.IronBearMinigunEffectCollectionData
// 0x0020 (0x0048 - 0x0028)
class UIronBearMinigunEffectCollectionData : public UEffectCollectionData
{
public:
	class UParticleSystem*                             DefaultEffect;                                            // 0x0028(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             CryoEffect;                                               // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ExplosiveEffect;                                          // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             OverheatEffect;                                           // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.IronBearMinigunEffectCollectionData");
		return ptr;
	}

};


// Class OakGame.WeaponGenericUseComponent
// 0x0018 (0x0230 - 0x0218)
class UWeaponGenericUseComponent : public UWeaponUseComponent
{
public:
	bool                                               bIsSelfContainedLoopingMontage;                           // 0x0218(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsUsing;                                                 // 0x0219(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x16];                                      // 0x021A(0x0016) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponGenericUseComponent");
		return ptr;
	}


	void OnRep_bIsUsing();
};


// Class OakGame.IronBearWeaponUseComponent_Jackhammer
// 0x0018 (0x0248 - 0x0230)
class UIronBearWeaponUseComponent_Jackhammer : public UWeaponGenericUseComponent
{
public:
	struct FGbxAttributeFloat                          FireRate;                                                 // 0x0230(0x000C) (Edit, BlueprintVisible, Net)
	struct FGbxAttributeFloat                          AccuracyImpulse;                                          // 0x023C(0x000C) (Edit, BlueprintVisible, Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.IronBearWeaponUseComponent_Jackhammer");
		return ptr;
	}


	void AnimNotify_OnUsed();
};


// Class OakGame.JumpPad
// 0x0048 (0x0598 - 0x0550)
class AJumpPad : public AInteractiveObject
{
public:
	class UPrimitiveComponent*                         LaunchTouchComponent;                                     // 0x0550(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FName                                       LaunchTouchComponentName;                                 // 0x0558(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ControlledMoveClass;                                      // 0x0560(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxCondition*                               LaunchCondition;                                          // 0x0568(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bLockInstanceLaunchSpeed;                                 // 0x0570(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0571(0x0003) MISSED OFFSET
	float                                              LaunchSpeed;                                              // 0x0574(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LaunchAngle;                                              // 0x0578(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bLinkDestination;                                         // 0x057C(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x057D(0x0003) MISSED OFFSET
	struct FVector                                     Destination;                                              // 0x0580(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, IsPlainOldData)
	bool                                               bSpawnUserEdge;                                           // 0x058C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x058D(0x0003) MISSED OFFSET
	class AHavokUserEdgeActor*                         LinkedUserEdge;                                           // 0x0590(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.JumpPad");
		return ptr;
	}


	void SetJumpPadEnabled(bool bEnabled);
	void OnLaunched(class AOakCharacter* Character);
	void OnCharacterTouch(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Launch(class AOakCharacter* Character);
	void GetValidAssociatedComponentNames(TArray<struct FName>* Array);
};


// Class OakGame.JumpPadRenderingComponent
// 0x0000 (0x06F0 - 0x06F0)
class UJumpPadRenderingComponent : public UPrimitiveComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.JumpPadRenderingComponent");
		return ptr;
	}

};


// Class OakGame.LargeLiquidBody
// 0x00C8 (0x0558 - 0x0490)
class ALargeLiquidBody : public AVolume
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0490(0x0008) MISSED OFFSET
	class ULargeLiquidBodyConfigurationData*           LargeLiquidBodyConfiguration;                             // 0x0498(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bPlayDefaultPuddleAudio : 1;                              // 0x04A0(0x0001) (Edit)
	unsigned char                                      UseFloorMesh : 1;                                         // 0x04A0(0x0001) (Edit)
	unsigned char                                      IsSeaLevelActor : 1;                                      // 0x04A0(0x0001) (Edit)
	unsigned char                                      bOverrideColor : 1;                                       // 0x04A0(0x0001) (Edit)
	unsigned char                                      bOverrideOpacity : 1;                                     // 0x04A0(0x0001) (Edit)
	unsigned char                                      bOverrideNormalStrength : 1;                              // 0x04A0(0x0001) (Edit)
	unsigned char                                      bOverrideMovementSpeed : 1;                               // 0x04A0(0x0001) (Edit)
	unsigned char                                      bOverrideDepthFade : 1;                                   // 0x04A0(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x7];                                       // 0x04A1(0x0007) MISSED OFFSET
	class UMaterialInterface*                          FloorMesh_Material;                                       // 0x04A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FloorMesh_Offset;                                         // 0x04B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x04B4(0x0004) MISSED OFFSET
	class UMaterialParameterCollection*                SeaLevelMaterialParameterCollection;                      // 0x04B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SeaLevelValue;                                            // 0x04C0(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FLinearColor                                Color;                                                    // 0x04C4(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                ColorHighlights;                                          // 0x04D4(0x0010) (Edit, IsPlainOldData)
	float                                              Opacity;                                                  // 0x04E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NormalStrength;                                           // 0x04E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MovementSpeed;                                            // 0x04EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DepthFade;                                                // 0x04F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x04F4(0x0004) MISSED OFFSET
	class UWwiseAudioComponent*                        LiquidAudioComponent;                                     // 0x04F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UProceduralMeshComponent*                    LiquidSurfaceMesh;                                        // 0x0500(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class URegionBalanceStateComponent*                BalanceState;                                             // 0x0508(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UElementalInteractionComponent*              ElementalInteraction;                                     // 0x0510(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGbxNavMeshPainterComponent*                 PainterComponent;                                         // 0x0518(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<struct FLargeLiquidBodySurfaceSection>      SurfaceSections;                                          // 0x0520(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData04[0x28];                                      // 0x0530(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.LargeLiquidBody");
		return ptr;
	}


	void OnEndOverlapSurfaceMesh(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnEndNegateElementalDamage(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnElementalReactionDestroyed(class AActor* ElementalReaction);
	void OnBeginOverlapSurfaceMesh(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnBeginNegateElementalDamage(class AActor* OverlappedActor, class AActor* OtherActor);
};


// Class OakGame.LargeLiquidBodyConfigurationData
// 0x0030 (0x0060 - 0x0030)
class ULargeLiquidBodyConfigurationData : public UGbxDataAsset
{
public:
	class UParticleSystem*                             SurfaceParticle;                                          // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UExplosionData*                              NearbyExplosionData;                                      // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UElementalInteractionConfigurationData*      ElementalInteractionConfiguration;                        // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UElementalPuddleConfigurationData*           ElementalReactionConfiguration;                           // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bElementalReactionNegatesDamage;                          // 0x0050(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	class UClass*                                      LocalReactionPuddleClass;                                 // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.LargeLiquidBodyConfigurationData");
		return ptr;
	}

};


// Class OakGame.LevelActorPersistenceInterface
// 0x0000 (0x0028 - 0x0028)
class ULevelActorPersistenceInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.LevelActorPersistenceInterface");
		return ptr;
	}

};


// Class OakGame.LevelActorPersistenceManager
// 0x0068 (0x0090 - 0x0028)
class ULevelActorPersistenceManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x58];                                      // 0x0028(0x0058) MISSED OFFSET
	TArray<TScriptInterface<class ULevelActorPersistenceInterface>> AllCurrentMapActors;                                      // 0x0080(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.LevelActorPersistenceManager");
		return ptr;
	}

};


// Class OakGame.LevelAssetListData
// 0x0010 (0x0080 - 0x0070)
class ULevelAssetListData : public UPrimaryAssetLabel
{
public:
	TArray<struct FLevelAssetList>                     LevelData;                                                // 0x0070(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.LevelAssetListData");
		return ptr;
	}

};


// Class OakGame.LevelMultiplierAttributeValueResolver
// 0x00B0 (0x00D8 - 0x0028)
class ULevelMultiplierAttributeValueResolver : public UAttributeValueResolver
{
public:
	struct FLevelMultiplierDefinedValueRow             Value;                                                    // 0x0028(0x00B0) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.LevelMultiplierAttributeValueResolver");
		return ptr;
	}

};


// Class OakGame.LootableObject
// 0x0298 (0x07E8 - 0x0550)
class ALootableObject : public AInteractiveObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0550(0x0008) MISSED OFFSET
	class ULootableBalanceData*                        LootDefinition;                                           // 0x0558(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ELootSpawnTiming                                   SpawnLootTiming;                                          // 0x0560(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               ShouldAttachLoot;                                         // 0x0561(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMaintainStateAcrossMapLoads;                             // 0x0562(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0563(0x0001) MISSED OFFSET
	struct FLootablePersistenceData                    PersistenceData;                                          // 0x0564(0x0008) (Edit, DisableEditOnInstance)
	unsigned char                                      bOptOutOfLevelPersistence : 1;                            // 0x056C(0x0001) (Edit, DisableEditOnTemplate)
	unsigned char                                      bOpenInResponseToDamage : 1;                              // 0x056C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUseOverlapEventsIfDamageable : 1;                        // 0x056C(0x0001) (Edit)
	unsigned char                                      bSimulatePhysicsAfterOpening : 1;                         // 0x056C(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x056D(0x0003) MISSED OFFSET
	float                                              DelayBeforeSimulatePhysics;                               // 0x0570(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0574(0x0004) MISSED OFFSET
	TArray<struct FLootableDirectionalResponse>        DamagedOpeningInteractions;                               // 0x0578(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FLootableInteractionResponse>        OpeningInteractions;                                      // 0x0588(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FConditionalLootableInteractionResponse> ConditionalOpeningInteractions;                           // 0x0598(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FLootableInteractionResponse>        ClosingInteractions;                                      // 0x05A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	bool                                               bIsBonePile;                                              // 0x05B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x05B9(0x0007) MISSED OFFSET
	TArray<struct FName>                               Bones;                                                    // 0x05C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FLootablePileInteractionResponse            DefaultBonePileResponse;                                  // 0x05D0(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FLootablePileDamageInteraction>      BonePileDamageResponses;                                  // 0x05E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	bool                                               bUseMeshSwap;                                             // 0x05F0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x05F1(0x0007) MISSED OFFSET
	struct FLootableMeshSwapData                       MeshSwapData;                                             // 0x05F8(0x0020) (Edit, DisableEditOnInstance)
	TArray<struct FName>                               PhysicsBodiesToDisablePawnCollisionWithAfterOpening;      // 0x0618(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	bool                                               bSearchableByEQS;                                         // 0x0628(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bControlledByMissionPickupObjective;                      // 0x0629(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	EMissionDrivenLootableType                         MissionDrivenType;                                        // 0x062A(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData06[0x5];                                       // 0x062B(0x0005) MISSED OFFSET
	struct FMissionObjectiveReferenceWeak              SelfMissionObjective;                                     // 0x0630(0x0050) (Edit, DisableEditOnTemplate)
	struct FMissionObjectiveReferenceWeak              PickupMissionObjective;                                   // 0x0680(0x0050) (Edit, DisableEditOnTemplate, EditConst)
	struct FMissionEventReference                      MissionEventToSendOnOpening;                              // 0x06D0(0x0010) (Edit, DisableEditOnTemplate)
	class UGbxCondition*                               OpenedCondition;                                          // 0x06E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGbxCondition*                               ClosedCondition;                                          // 0x06E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUsableComponent*                            UsableComponent;                                          // 0x06F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class APlayerController*                           PlayerThatOpenedMe;                                       // 0x06F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	ELootableOpenReason                                OpenReason;                                               // 0x0700(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0701(0x0007) MISSED OFFSET
	class UClass*                                      OpeningDamageSource;                                      // 0x0708(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     OpeningDamageHitForce;                                    // 0x0710(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FVector                                     OpeningDamageHitLocation;                                 // 0x071C(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FLootableAnimState                          AnimState;                                                // 0x0728(0x0010) (Net, Transient, IsPlainOldData)
	class USkeletalMeshComponent*                      MeshComponent;                                            // 0x0738(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UOakLootableComponent*                       LootableComponent;                                        // 0x0740(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UOakMissionIconComponent*                    MissionIconComponent;                                     // 0x0748(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMissionObserverComponent*                   MissionObserverComponent;                                 // 0x0750(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FLootableInteractionResponse                CurrentResponse;                                          // 0x0758(0x0010) (Transient)
	int8_t                                             CustomResponseIdx;                                        // 0x0768(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x57];                                      // 0x0769(0x0057) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnOpened;                                                 // 0x07C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnOpening;                                                // 0x07D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData09[0x8];                                       // 0x07E0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.LootableObject");
		return ptr;
	}


	void OnUsedBy(const struct FUseEvent& UseEvent);
	void OnRep_AnimState();
	void OnLootableTakeDamage(const struct FLootableObjectDamageEventDetails& Details);
	void DoLootSpawning();
	void DisassociateSpawnedLootFromThis();
	void ClearCurrentInteractionResponse();
	void ChangeBalanceTableRow(const struct FDataTableRowHandle& NewBalanceTableRow);
};


// Class OakGame.LootSpawnPatternData
// 0x0010 (0x0108 - 0x00F8)
class ULootSpawnPatternData : public UPhysicsSpawnPatternData
{
public:
	unsigned char                                      bEnableRadius : 1;                                        // 0x00F8(0x0001) (Edit)
	unsigned char                                      bEnableRadiusRange : 1;                                   // 0x00F8(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F9(0x0003) MISSED OFFSET
	float                                              Radius;                                                   // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxRadius;                                                // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0104(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.LootSpawnPatternData");
		return ptr;
	}

};


// Class OakGame.LostLootMachine
// 0x0008 (0x0558 - 0x0550)
class ALostLootMachine : public AInteractiveObject
{
public:
	int                                                CurrentLostLootCount;                                     // 0x0550(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxLostLootSize;                                          // 0x0554(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.LostLootMachine");
		return ptr;
	}


	void OnSetScreenState(float UsagePercentage);
	void OnLostLootChanged();
};


// Class OakGame.LowGravHoveringComponent
// 0x0020 (0x0198 - 0x0178)
class ULowGravHoveringComponent : public UActorComponent
{
public:
	float                                              TotalHoveringTime;                                        // 0x0178(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DisplacementHeightOnHit;                                  // 0x017C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TotalOscillation;                                         // 0x0180(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x14];                                      // 0x0184(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.LowGravHoveringComponent");
		return ptr;
	}


	void OnHit(class AActor* OwnerActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
};


// Class OakGame.MainMenuCameraController
// 0x0088 (0x04E0 - 0x0458)
class AMainMenuCameraController : public AActor
{
public:
	float                                              MinZoomDistance;                                          // 0x0458(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              MaxZoomDistance;                                          // 0x045C(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              ZoomSpeed;                                                // 0x0460(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              MinOffsetDistance;                                        // 0x0464(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              MaxOffsetDistance;                                        // 0x0468(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              MinFocusDistance;                                         // 0x046C(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              MaxFocusDistance;                                         // 0x0470(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              MinFocalDistance;                                         // 0x0474(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              MaxFocalDistance;                                         // 0x0478(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              MaxPitchAngle;                                            // 0x047C(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              MinPitchAngle;                                            // 0x0480(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              RotationSpeed;                                            // 0x0484(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class AActor*                                      LookAtActor;                                              // 0x0488(0x0008) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      SubjectActor;                                             // 0x0490(0x0008) (ZeroConstructor, IsPlainOldData)
	class ACameraActor*                                CameraActor;                                              // 0x0498(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x40];                                      // 0x04A0(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MainMenuCameraController");
		return ptr;
	}


	void Setup(class AActor* InLookAtActor, class AActor* InSubjectActor, class ACameraActor* InCameraActor);
};


// Class OakGame.MainMenuCameraManager
// 0x0010 (0x2CD0 - 0x2CC0)
class AMainMenuCameraManager : public APlayerCameraModesManager
{
public:
	struct FName                                       DefaultCameraMode;                                        // 0x2CC0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x2CC8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MainMenuCameraManager");
		return ptr;
	}

};


// Class OakGame.ManagedWidget
// 0x0030 (0x0340 - 0x0310)
class UManagedWidget : public UGbxHUDWidget
{
public:
	struct FScriptMulticastDelegate                    OnCompleteAnimation;                                      // 0x0310(0x0010) (BlueprintVisible, ZeroConstructor, InstancedReference)
	class UWidgetAnimation*                            IntroAnimation;                                           // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWidgetAnimation*                            IdleAnimation;                                            // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWidgetAnimation*                            ExitAnimation;                                            // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	EManagedWidgetType                                 WidgetType;                                               // 0x0338(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0339(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ManagedWidget");
		return ptr;
	}

};


// Class OakGame.MatchmakerSettings
// 0x0028 (0x0050 - 0x0028)
class UMatchmakerSettings : public UObject
{
public:
	float                                              RetryDelaySeconds;                                        // 0x0028(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              RetryJitterSeconds;                                       // 0x002C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              SearchThresholdSeconds;                                   // 0x0030(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MatchmakingRoundDuration;                                 // 0x0034(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              BackfillMatchmakingRoundDuration;                         // 0x0038(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              HostTravelDelaySeconds;                                   // 0x003C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              InitialAdvertiseChance;                                   // 0x0040(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              ConfirmPlayersCountdownSeconds;                           // 0x0044(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              ConfirmPlayersQuickStartCountdownSeconds;                 // 0x0048(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MatchmakerSettings");
		return ptr;
	}

};


// Class OakGame.MatchmakingSearchDefinitions
// 0x00D0 (0x00F8 - 0x0028)
class UMatchmakingSearchDefinitions : public UObject
{
public:
	struct FMatchmakingSearchDefinition                CampaignSearchDefinition;                                 // 0x0028(0x00B8) (Config, GlobalConfig)
	TArray<struct FMatchmakingSearchDefinition>        SearchDefinitions;                                        // 0x00E0(0x0010) (ZeroConstructor, Config, GlobalConfig)
	int                                                DefaultMaxSearchResults;                                  // 0x00F0(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MatchmakingSearchDefinitions");
		return ptr;
	}

};


// Class OakGame.MatchmakingTest
// 0x0010 (0x0038 - 0x0028)
class UMatchmakingTest : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MatchmakingTest");
		return ptr;
	}


	void StartMatchmaking();
	void OnMatchmakingUpdated(int NumPlayers);
	void OnMatchmakingStarted();
	void OnMatchmakingError(const class FString& Error);
	void OnMatchmakingCompleted(bool bSuccess);
	void CancelMatchmaking();
};


// Class OakGame.MayhemModeAbilityStatusEffect
// 0x0010 (0x0098 - 0x0088)
class UMayhemModeAbilityStatusEffect : public UStatusEffectData
{
public:
	class UClass*                                      AbilityClass;                                             // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bAllowedToRunOnVehicles;                                  // 0x0090(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0091(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MayhemModeAbilityStatusEffect");
		return ptr;
	}

};


// Class OakGame.MayhemModeFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UMayhemModeFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MayhemModeFunctionLibrary");
		return ptr;
	}


	EPOIActivationResult STATIC_TryMapReloadForMayhemActivityOrLevelChange(class UObject* WorldContextObject, class AOakPlayerController* OptionalInstigator, int MayhemLevel, int RandomSeed);
	void STATIC_RerollNonCurrent(class UObject* WorldContextObject);
	void STATIC_MutateRandomSeed(class UObject* WorldContextObject);
	bool STATIC_IsMayhemModeAvailable(class UObject* WorldContextObject);
	bool STATIC_IsMayhemModeActive(class UObject* WorldContextObject);
	int STATIC_GetRandomSeed(class UObject* WorldContextObject);
	int STATIC_GetMayhemLevel(class UObject* WorldContextObject);
	int STATIC_GetMaxMayhemLevel(class UObject* WorldContextObject);
	int STATIC_GetConditionallyOverriddenMayhemLevel(class UObject* WorldContextObject);
	void STATIC_DeactivateMayhemMode(class UObject* WorldContextObject);
	void STATIC_AssignOptionalOverrides(class UObject* WorldContextObject, const struct FMayhemDebugOverrides& OptionalOverrides);
	void STATIC_ActivateMayhemMode(class UObject* WorldContextObject, int MayhemLevel, int RandomSeed);
};


// Class OakGame.MayhemModeTwoDataAsset
// 0x0070 (0x00A0 - 0x0030)
class UMayhemModeTwoDataAsset : public UGbxDataAsset
{
public:
	int                                                MaxMayhemLevel;                                           // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FMayhemCoreModifierSet                      CoreModifierSet;                                          // 0x0038(0x0040) (Edit)
	TArray<class UMayhemModifierSlotInterface*>        RandomModifierSlots;                                      // 0x0078(0x0010) (Edit, ZeroConstructor)
	class UMayhemOverrideDataAsset*                    OverrideData;                                             // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               MapsToExclude;                                            // 0x0090(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MayhemModeTwoDataAsset");
		return ptr;
	}

};


// Class OakGame.MayhemModifierSlotInterface
// 0x0000 (0x0030 - 0x0030)
class UMayhemModifierSlotInterface : public UGbxDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MayhemModifierSlotInterface");
		return ptr;
	}

};


// Class OakGame.MayhemModifierSlotDataAsset
// 0x0010 (0x0040 - 0x0030)
class UMayhemModifierSlotDataAsset : public UMayhemModifierSlotInterface
{
public:
	TArray<struct FMayhemModifierSet>                  ModifierSets;                                             // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MayhemModifierSlotDataAsset");
		return ptr;
	}

};


// Class OakGame.MayhemModifierSlotCollectionDataAsset
// 0x0010 (0x0040 - 0x0030)
class UMayhemModifierSlotCollectionDataAsset : public UMayhemModifierSlotInterface
{
public:
	TArray<class UMayhemModifierSlotDataAsset*>        Collection;                                               // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MayhemModifierSlotCollectionDataAsset");
		return ptr;
	}

};


// Class OakGame.MayhemOverrideDataAsset
// 0x0018 (0x0048 - 0x0030)
class UMayhemOverrideDataAsset : public UGbxDataAsset
{
public:
	int                                                MaxMayhemLevelOverride;                                   // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<struct FMayhemModeTwoLevelOverride>         PerLevelOverrides;                                        // 0x0038(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MayhemOverrideDataAsset");
		return ptr;
	}

};


// Class OakGame.MenuMapCameraData
// 0x0DA0 (0x0DD0 - 0x0030)
class UMenuMapCameraData : public UGbxDataAsset
{
public:
	struct FMainMenuCameraBlendParamsSet               DefaultBlendParams[0x7];                                  // 0x0030(0x0034) (Edit)
	unsigned char                                      UnknownData00[0x4];                                       // 0x019C(0x0004) MISSED OFFSET
	TArray<struct FMainMenuCameraViewpointBlendPair>   BlendOverrides;                                           // 0x01A0(0x0010) (Edit, ZeroConstructor)
	float                                              CameraOffsetInterpSpeed;                                  // 0x01B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InspectCameraTransitionDuration;                          // 0x01B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x01B8(0x0008) MISSED OFFSET
	struct FPostProcessSettings                        DefaultPostProcessSettings;                               // 0x01C0(0x0600) (Edit)
	struct FPostProcessSettings                        NewsMenuPostProcessSettings;                              // 0x07C0(0x0600) (Edit)
	float                                              NewsMenuPostProcessBlendInTime;                           // 0x0DC0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NewsMenuPostProcessBlendOutTime;                          // 0x0DC4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0DC8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MenuMapCameraData");
		return ptr;
	}

};


// Class OakGame.MenuMapClaptrapSkitControl
// 0x0018 (0x0470 - 0x0458)
class AMenuMapClaptrapSkitControl : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnPlaySkit;                                               // 0x0458(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0468(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MenuMapClaptrapSkitControl");
		return ptr;
	}


	void OnSkitComplete();
	void OnAllSkitsComplete();
};


// Class OakGame.MenuMapMenuFlow
// 0x0190 (0x05E8 - 0x0458)
class AMenuMapMenuFlow : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnViewpointChanged;                                       // 0x0458(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UGbxMenuData*                                MainMenuMenuData;                                         // 0x0468(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxMenuData*                                TitleScreenMenuData;                                      // 0x0470(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxMenuData*                                LegalScreenMenuData;                                      // 0x0478(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    LegalScreenCompleted;                                     // 0x0480(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0490(0x0018) MISSED OFFSET
	int                                                SecondsBetweenClaptrapSkits;                              // 0x04A8(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04AC(0x0004) MISSED OFFSET
	class UMenuMapCameraData*                          CameraData;                                               // 0x04B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FMainMenuCameraViewpointGroup               CameraViewpoints[0x7];                                    // 0x04B8(0x0018) (Edit, DisableEditOnTemplate)
	struct FScriptMulticastDelegate                    PlayThroughChanged;                                       // 0x0560(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    UIGroupModeChanged;                                       // 0x0570(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    DifficultyChanged;                                        // 0x0580(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AOakPlayerController*                        OakPlayerController;                                      // 0x0590(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxMenuData*                                NextMenuData;                                             // 0x0598(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1C];                                      // 0x05A0(0x001C) MISSED OFFSET
	EMainMenuViewpointType                             CurrentViewpointType;                                     // 0x05BC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2B];                                      // 0x05BD(0x002B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MenuMapMenuFlow");
		return ptr;
	}


	void Start(TEnumAsByte<EInitialPlayerStatus>* OutInitialPlayerStatus);
	void ShowLegalScreen();
	void OnWorldTransitionCompleted();
	void OnPlayerControllerLogIn(class AOakPlayerController* InOakPlayerController);
	void OnMenuTransitionOutCompleted(EMenuTransition InMenuTransition, class UGbxMenuData* InNextMenuData);
	void OnMenuStackPush(class UObject* InMenuPushed);
	void OnLegalScreenCompleted(class UGFxOakLegalScreenMenu* LegalScreenMenu);
};


// Class OakGame.MenuMapScene
// 0x0038 (0x0490 - 0x0458)
class AMenuMapScene : public AActor
{
public:
	TArray<struct FClaptrapSkitSublevel>               ClaptrapSkitSublevels;                                    // 0x0458(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0468(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MenuMapScene");
		return ptr;
	}


	void OnClaptrapSkitSublevelUnloaded();
	void OnClaptrapSkitSublevelLoaded();
};


// Class OakGame.MineCart
// 0x0020 (0x0478 - 0x0458)
class AMineCart : public AActor
{
public:
	class USplineMovementComponentDoubleLinked*        SplineMovementComponent;                                  // 0x0458(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UHavokNavObstacleComponent*                  HavokNavObstacleComponent;                                // 0x0460(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPrimitiveComponent*                         PrimitiveComponent;                                       // 0x0468(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              CharacterImpulse;                                         // 0x0470(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCanBePushedByPlayer;                                     // 0x0474(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldCheckCollision;                                    // 0x0475(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0476(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MineCart");
		return ptr;
	}


	void OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
};


// Class OakGame.MineCart_Skeletal
// 0x0000 (0x0478 - 0x0478)
class AMineCart_Skeletal : public AMineCart
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MineCart_Skeletal");
		return ptr;
	}

};


// Class OakGame.MineCart_Static
// 0x0000 (0x0478 - 0x0478)
class AMineCart_Static : public AMineCart
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MineCart_Static");
		return ptr;
	}

};


// Class OakGame.MinimapWorldAnchor
// 0x0000 (0x0458 - 0x0458)
class AMinimapWorldAnchor : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MinimapWorldAnchor");
		return ptr;
	}

};


// Class OakGame.Mission_InteractiveObject
// 0x00B8 (0x0608 - 0x0550)
class AMission_InteractiveObject : public AInteractiveObject
{
public:
	bool                                               bAutomaticallyControlWaypoint;                            // 0x0550(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseComplexConditions;                                    // 0x0551(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0552(0x0006) MISSED OFFSET
	struct FMissionObjectiveReference                  ObjectiveToCareAbout;                                     // 0x0558(0x0030) (Edit)
	struct FUserStateEnumValue                         ConditionActiveState;                                     // 0x0588(0x0038) (Edit, DisableEditOnInstance)
	struct FUserStateEnumValue                         ConditionCompleteState;                                   // 0x05C0(0x0038) (Edit, DisableEditOnInstance)
	class UMissionObserverComponent*                   ObserverComponent;                                        // 0x05F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMissionIconComponent*                       IconComponent;                                            // 0x0600(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.Mission_InteractiveObject");
		return ptr;
	}

};


// Class OakGame.MissionPathSubpointWidget
// 0x0010 (0x0388 - 0x0378)
class UMissionPathSubpointWidget : public UHUDInWorldIcon
{
public:
	class UWidgetAnimation*                            PathActiveAnimation;                                      // 0x0378(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWidgetAnimation*                            PathSpawnAnimation;                                       // 0x0380(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MissionPathSubpointWidget");
		return ptr;
	}

};


// Class OakGame.MissionTrackerSlotController
// 0x0030 (0x02E8 - 0x02B8)
class UMissionTrackerSlotController : public UGbxUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnCompleteAnimation;                                      // 0x02B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, InstancedReference)
	class UWidgetAnimation*                            CompleteAnimation;                                        // 0x02C8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWidgetAnimation*                            CheckedAnimation;                                         // 0x02D0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWidgetAnimation*                            AddAnimation;                                             // 0x02D8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWidgetAnimation*                            BaseAnimation;                                            // 0x02E0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MissionTrackerSlotController");
		return ptr;
	}


	void SetObjectiveDescription(const struct FText& ObjectiveText);
	void ResetAnimations();
	void MissionTrackerAnimationEvent__DelegateSignature(class UUserWidget* Widget, class UWidgetAnimation* WidgetAnimation);
	struct FText GetObjectiveDescription();
};


// Class OakGame.MissionTrackerTitle
// 0x0000 (0x02B8 - 0x02B8)
class UMissionTrackerTitle : public UGbxUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MissionTrackerTitle");
		return ptr;
	}


	void SetMultipleMissionIconVisibility(bool bIsVisible);
	void SetMissionName(const struct FText& MissionText);
};


// Class OakGame.MovableDamageableHISM
// 0x0040 (0x05E0 - 0x05A0)
class AMovableDamageableHISM : public ADamageableHISM
{
public:
	struct FVector                                     StartLocation;                                            // 0x05A0(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     EndLocation;                                              // 0x05AC(0x000C) (Edit, IsPlainOldData)
	float                                              Speed;                                                    // 0x05B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NumberbOfSM;                                              // 0x05BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UHierarchicalInstancedStaticMeshComponent*   MyHISM;                                                   // 0x05C0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x05C8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MovableDamageableHISM");
		return ptr;
	}


	void StopMovable();
	void StartMovable();
};


// Class OakGame.NameplateInfoProviderInterface
// 0x0000 (0x0028 - 0x0028)
class UNameplateInfoProviderInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.NameplateInfoProviderInterface");
		return ptr;
	}

};


// Class OakGame.NekrobugAnimInstance
// 0x0010 (0x0B00 - 0x0AF0)
class UNekrobugAnimInstance : public UOakCharacterAnimInstance
{
public:
	bool                                               bIsFlyer;                                                 // 0x0AF0(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0AF1(0x0003) MISSED OFFSET
	float                                              FlyerLookAtNodeAlpha;                                     // 0x0AF4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0AF8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.NekrobugAnimInstance");
		return ptr;
	}

};


// Class OakGame.NewGameFlow
// 0x0250 (0x06A8 - 0x0458)
class ANewGameFlow : public AActor
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0458(0x0018) MISSED OFFSET
	TSoftObjectPtr<class AGbxLevelSequenceActor>       RockNRollSequence;                                        // 0x0470(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	TSoftObjectPtr<class UOakCinematicModeData>        RockNRollCinematicMode;                                   // 0x0498(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	TSoftObjectPtr<class AGbxLevelSequenceActor>       BusRideSequence;                                          // 0x04C0(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	TSoftObjectPtr<class UOakCinematicModeData>        BusRideCinematicMode;                                     // 0x04E8(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	TSoftObjectPtr<class UOakCinematicModeData>        CharacterSelectCinematicMode;                             // 0x0510(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	TSoftObjectPtr<class ACineCameraActor>             CharacterSelectCamera;                                    // 0x0538(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	TSoftObjectPtr<class UGbxMenuData>                 CharacterSelectMenu;                                      // 0x0560(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	TSoftObjectPtr<class APlayerStandIn>               StandIn_Gunner;                                           // 0x0588(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	TSoftObjectPtr<class APlayerStandIn>               StandIn_Siren;                                            // 0x05B0(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	TSoftObjectPtr<class APlayerStandIn>               StandIn_Beastmaster;                                      // 0x05D8(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	TSoftObjectPtr<class APlayerStandIn>               StandIn_Operative;                                        // 0x0600(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate)
	class UClass*                                      InitialMission;                                           // 0x0628(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FLinearColor                                TransitionColor_ToRockNRoll;                              // 0x0630(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, IsPlainOldData)
	struct FLinearColor                                TransitionColor_ToCharacterSelect;                        // 0x0640(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, IsPlainOldData)
	struct FLinearColor                                TransitionColor_ToBusRide;                                // 0x0650(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, IsPlainOldData)
	struct FLinearColor                                TransitionColor_ToGameplay;                               // 0x0660(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, IsPlainOldData)
	float                                              TimeOfDay;                                                // 0x0670(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              FadeDuration;                                             // 0x0674(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	struct FVector                                     RnRInitialSceneViewLocation;                              // 0x0678(0x000C) (Edit, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0684(0x0004) MISSED OFFSET
	TArray<class UMaterialInterface*>                  RnRInitialSceneMaterials;                                 // 0x0688(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0698(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.NewGameFlow");
		return ptr;
	}


	void PushCharacterSelectMenu();
	void OnRockNRollStarted();
	void OnRockNRollFinished();
	void OnBusRideStarted();
	void OnBusRideFinished();
};


// Class OakGame.NewGameSettings
// 0x0028 (0x0050 - 0x0028)
class UNewGameSettings : public UObject
{
public:
	int                                                CharacterSelectTimeInSeconds;                             // 0x0028(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                CharacterSelectQuickStartTimeInSeconds;                   // 0x002C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	struct FName                                       NewGameMap;                                               // 0x0030(0x0008) (ZeroConstructor, Config, IsPlainOldData)
	struct FName                                       CharacterSelectCompletionEvent;                           // 0x0038(0x0008) (ZeroConstructor, Config, IsPlainOldData)
	TArray<class FString>                              IntroMovies;                                              // 0x0040(0x0010) (ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.NewGameSettings");
		return ptr;
	}

};


// Class OakGame.NPCInteractionBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UNPCInteractionBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.NPCInteractionBlueprintLibrary");
		return ptr;
	}


	void STATIC_TakeObjectFromPlayerThenGiveBack(class AActor* TheNPC, bool bUseAlternateStance, const struct FMissionEventReference& MissionEvent, const struct FLatentActionInfo& LatentInfo);
	void STATIC_TakeObjectFromPlayer(class AActor* TheNPC, bool bUseAlternateStance, const struct FMissionEventReference& MissionEvent, const struct FLatentActionInfo& LatentInfo);
	void STATIC_SetObjectToHold(class AActor* TheNPC, class UStaticMesh* TheStaticMeshToHold, const struct FItemPoolInfo& ThePickupToHold, const struct FVector& LocationOffset, const struct FRotator& RotationOffset, float ScaleOffset, const struct FName& HandSocketName, float PutAwayTimeOffset, float TakeOutTimeOffset);
	bool STATIC_NotifyNPCUsedByPlayer(class AActor* TheNPC);
	void STATIC_GiveObjectToPlayer(class AActor* TheNPC, bool bUseAlternateStance, const struct FMissionEventReference& MissionEvent, const struct FLatentActionInfo& LatentInfo);
};


// Class OakGame.NPCInteractionComponent
// 0x0108 (0x0280 - 0x0178)
class UNPCInteractionComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnInteractionLootSpawned;                                 // 0x0178(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UStanceDataProvider*                         StanceGiveToPlayer;                                       // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStanceDataProvider*                         StanceGiveToPlayerAlt;                                    // 0x0190(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStanceDataProvider*                         StanceTakeFromPlayer;                                     // 0x0198(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStanceDataProvider*                         StanceTakeFromPlayerAlt;                                  // 0x01A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGameplayTag                                ExamineItemActionKey;                                     // 0x01A8(0x0008) (Edit)
	class UParticleSystem*                             AttractParticleSystem;                                    // 0x01B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          GhostMaterialForHeldObjects;                              // 0x01B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 AudioEventWhenItemChangesHands;                           // 0x01C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       TagForHeldObjectStaticMeshComponent;                      // 0x01C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       DefaultHandSocketName;                                    // 0x01D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FReplicatedInteractionInfo                  ReplicatedState;                                          // 0x01D8(0x0020) (Net, Transient)
	unsigned char                                      UnknownData00[0x68];                                      // 0x01F8(0x0068) MISSED OFFSET
	class UParticleSystemComponent*                    AttractParticleComp;                                      // 0x0260(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UObject*                                     CallbackTarget;                                           // 0x0268(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0270(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.NPCInteractionComponent");
		return ptr;
	}


	void TakeObjectFromPlayerThenGiveBack(bool bUseAlternateStance, const struct FMissionEventReference& InMissionEvent, const struct FLatentActionInfo& LatentInfo);
	void TakeObjectFromPlayer(bool bUseAlternateStance, const struct FMissionEventReference& InMissionEvent, const struct FLatentActionInfo& LatentInfo);
	void SpawnedLootCallback(class ADroppedInventoryItemPickup* Pickup);
	void SetObjectToHold(class UStaticMesh* TheStaticMeshToHold, const struct FItemPoolInfo& ThePickupToHold, const struct FTransform& InOffsetTransform, const struct FName& InHandSocketName, float InPutAwayTimeOffset, float InTakeOutTimeOffset);
	void OnRep_ReplicatedState(const struct FReplicatedInteractionInfo& OldReplicatedState);
	void NPCInteractionLootEvent__DelegateSignature(class ADroppedInventoryItemPickup* Pickup);
	void LootDestroyedCallback(class AActor* DestroyedActor);
	void GiveObjectToPlayer(bool bUseAlternateStance, const struct FMissionEventReference& InMissionEvent, const struct FLatentActionInfo& LatentInfo);
	void ExamineActionFinishedCallback(EGbxActionEndState EndState);
};


// Class OakGame.OakAbilityContextResolver_PetOwner
// 0x0000 (0x0050 - 0x0050)
class UOakAbilityContextResolver_PetOwner : public UCharacterAttributeContextResolver
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAbilityContextResolver_PetOwner");
		return ptr;
	}

};


// Class OakGame.OakAbilityContextResolver_ActionAbility
// 0x0008 (0x0058 - 0x0050)
class UOakAbilityContextResolver_ActionAbility : public UAttributeContextResolver
{
public:
	class UClass*                                      ActionAbilityClass;                                       // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAbilityContextResolver_ActionAbility");
		return ptr;
	}

};


// Class OakGame.GbxListItemText_CharacterDebugMenu
// 0x0018 (0x0300 - 0x02E8)
class UGbxListItemText_CharacterDebugMenu : public UGbxListItemText
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x02E8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxListItemText_CharacterDebugMenu");
		return ptr;
	}

};


// Class OakGame.OakAbilityDebugMenuCascadingList
// 0x0070 (0x0328 - 0x02B8)
class UOakAbilityDebugMenuCascadingList : public UGbxUserWidget
{
public:
	class UClass*                                      DefaultListItemClass;                                     // 0x02B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UGbxGridListWidget*>                  ListViews;                                                // 0x02C0(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x40];                                      // 0x02D0(0x0040) MISSED OFFSET
	class UGbxGridListWidget*                          ActiveList;                                               // 0x0310(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0318(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAbilityDebugMenuCascadingList");
		return ptr;
	}


	void SetActiveList(class UGbxGridListWidget* List);
	void OnItemSelected_Internal(class UGbxListItem* Item);
	void OnItemClicked_Internal(class UGbxListItem* Item);
};


// Class OakGame.OakAbility
// 0x0010 (0x00F8 - 0x00E8)
class UOakAbility : public UGbxAbility
{
public:
	TArray<struct FOakAbilityTimer>                    AbilityTimers;                                            // 0x00E8(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAbility");
		return ptr;
	}


	void StopTimer(class UOakAbilityTimerData* Timer);
	void StopAbilityTimer(class UOakAbilityTimerData* Timer);
	void StartTimer(const struct FOakAbilityTimerSpec& InSpec);
	void StartAbilityTimer(const struct FOakAbilityTimerSpec& InSpec);
	void ResetTimer(class UOakAbilityTimerData* Timer);
	void ResetAbilityTimer(class UOakAbilityTimerData* Timer);
	void OnTimerStopped(const struct FOakAbilityTimerSpec& Spec);
	void OnTimerStarted(const struct FOakAbilityTimerSpec& Spec);
	void OnTimerFinished(const struct FOakAbilityTimerSpec& Spec);
	void OnAbilityTimerStarted(const struct FOakAbilityTimerSpec& Spec);
	void OnAbilityTimerEnded(const struct FOakAbilityTimerSpec& Spec, const struct FOakAbilityTimerResult& Result);
	bool IsTimerActive(class UOakAbilityTimerData* TimerData);
	bool IsAbilityTimerActive(class UOakAbilityTimerData* TimerData);
	float GetAbilityTimerValue(class UOakAbilityTimerData* Timer);
};


// Class OakGame.OakAbilityCondition_OakAnimActionAbilityActionSucceeded
// 0x0000 (0x0088 - 0x0088)
class UOakAbilityCondition_OakAnimActionAbilityActionSucceeded : public UGbxCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAbilityCondition_OakAnimActionAbilityActionSucceeded");
		return ptr;
	}

};


// Class OakGame.OakAbilityEffectTargetResolutionData_Allies
// 0x0000 (0x0030 - 0x0030)
class UOakAbilityEffectTargetResolutionData_Allies : public UGbxAbilityEffectTargetResolutionData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAbilityEffectTargetResolutionData_Allies");
		return ptr;
	}

};


// Class OakGame.OakAbilityEffectTargetResolutionData_Custom
// 0x0030 (0x0060 - 0x0030)
class UOakAbilityEffectTargetResolutionData_Custom : public UGbxAbilityEffectTargetResolutionData
{
public:
	TArray<class UPlanetData*>                         Planets;                                                  // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UTeam*>                               Teams;                                                    // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FGameplayTag>                        GameplayTags;                                             // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAbilityEffectTargetResolutionData_Custom");
		return ptr;
	}

};


// Class OakGame.OakAbilityEffectTargetResolutionData_Enemies
// 0x0008 (0x0038 - 0x0030)
class UOakAbilityEffectTargetResolutionData_Enemies : public UGbxAbilityEffectTargetResolutionData
{
public:
	class UTeam*                                       PlayersTeam;                                              // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAbilityEffectTargetResolutionData_Enemies");
		return ptr;
	}

};


// Class OakGame.OakAbilityEffectTargetResolutionData_HasTag
// 0x0010 (0x0040 - 0x0030)
class UOakAbilityEffectTargetResolutionData_HasTag : public UGbxAbilityEffectTargetResolutionData
{
public:
	TArray<struct FGameplayTag>                        GameplayTags;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAbilityEffectTargetResolutionData_HasTag");
		return ptr;
	}

};


// Class OakGame.OakAbilityEffectTargetResolutionData_OnPlanet
// 0x0010 (0x0040 - 0x0030)
class UOakAbilityEffectTargetResolutionData_OnPlanet : public UGbxAbilityEffectTargetResolutionData
{
public:
	TArray<TSoftObjectPtr<class UPlanetData>>          Planets;                                                  // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAbilityEffectTargetResolutionData_OnPlanet");
		return ptr;
	}

};


// Class OakGame.OakAbilityEffectTargetResolutionData_OnTeam
// 0x0010 (0x0040 - 0x0030)
class UOakAbilityEffectTargetResolutionData_OnTeam : public UGbxAbilityEffectTargetResolutionData
{
public:
	TArray<class UTeam*>                               Teams;                                                    // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAbilityEffectTargetResolutionData_OnTeam");
		return ptr;
	}

};


// Class OakGame.OakAbilityEffectTargetResolutionData_Pet
// 0x0008 (0x0038 - 0x0030)
class UOakAbilityEffectTargetResolutionData_Pet : public UGbxAbilityEffectTargetResolutionData
{
public:
	bool                                               bIsClassModResolver;                                      // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAbilityEffectTargetResolutionData_Pet");
		return ptr;
	}

};


// Class OakGame.OakAbilityEffectTargetResolutionData_PetOfOneOnTeam
// 0x0010 (0x0040 - 0x0030)
class UOakAbilityEffectTargetResolutionData_PetOfOneOnTeam : public UGbxAbilityEffectTargetResolutionData
{
public:
	TArray<class UTeam*>                               Teams;                                                    // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAbilityEffectTargetResolutionData_PetOfOneOnTeam");
		return ptr;
	}

};


// Class OakGame.OakAbilityEffectTargetResolutionData_Vehicles
// 0x0000 (0x0030 - 0x0030)
class UOakAbilityEffectTargetResolutionData_Vehicles : public UGbxAbilityEffectTargetResolutionData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAbilityEffectTargetResolutionData_Vehicles");
		return ptr;
	}

};


// Class OakGame.OakAbilityResourceControllerBlueprintFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UOakAbilityResourceControllerBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAbilityResourceControllerBlueprintFunctionLibrary");
		return ptr;
	}


	void STATIC_UnregisterWeaponShotModifier(const struct FOakAbilityResourceSpec_WeaponShotModifier& Spec, struct FOakAbilityResourceController_WeaponShotModifier* Controller);
	void STATIC_UnregisterSirenRushStack(const struct FOakAbilityResourceSpec_SirenRushStack& Spec, struct FOakAbilityResourceController_SirenRushStack* Controller);
	void STATIC_RegisterWeaponShotModifier(const struct FOakAbilityResourceSpec_WeaponShotModifier& Spec, struct FOakAbilityResourceController_WeaponShotModifier* Controller);
	void STATIC_RegisterSirenRushStack(const struct FOakAbilityResourceSpec_SirenRushStack& Spec, struct FOakAbilityResourceController_SirenRushStack* Controller);
};


// Class OakGame.OakAbilityTimerAttributePropertyValueResolver
// 0x0050 (0x0100 - 0x00B0)
class UOakAbilityTimerAttributePropertyValueResolver : public UAttributePropertyValueResolver
{
public:
	TSoftObjectPtr<class UClass>                       AbilityClass;                                             // 0x00B0(0x0028) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UOakAbilityTimerData>         Timer;                                                    // 0x00D8(0x0028) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAbilityTimerAttributePropertyValueResolver");
		return ptr;
	}

};


// Class OakGame.OakAbilityTimerData
// 0x0008 (0x0038 - 0x0030)
class UOakAbilityTimerData : public UGbxDataAsset
{
public:
	struct FName                                       TimerName;                                                // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAbilityTimerData");
		return ptr;
	}

};


// Class OakGame.OakPassiveAbilityTestGradeValueResolver
// 0x0000 (0x0028 - 0x0028)
class UOakPassiveAbilityTestGradeValueResolver : public UAttributeValueResolver
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPassiveAbilityTestGradeValueResolver");
		return ptr;
	}

};


// Class OakGame.UIStatData_OakPassiveAbilityAttribute
// 0x0010 (0x0230 - 0x0220)
class UUIStatData_OakPassiveAbilityAttribute : public UUIStatData_Numeric
{
public:
	class UStatusEffectData*                           StatusEffectData;                                         // 0x0220(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxAttributeData*                           Attribute;                                                // 0x0228(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.UIStatData_OakPassiveAbilityAttribute");
		return ptr;
	}

};


// Class OakGame.UIStatData_OakPassiveAbilityAttributeInitializer
// 0x0038 (0x0258 - 0x0220)
class UUIStatData_OakPassiveAbilityAttributeInitializer : public UUIStatData_Numeric
{
public:
	struct FAttributeInitializationData                Initializer;                                              // 0x0220(0x0038) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.UIStatData_OakPassiveAbilityAttributeInitializer");
		return ptr;
	}

};


// Class OakGame.OakAchievementUtility
// 0x0000 (0x0028 - 0x0028)
class UOakAchievementUtility : public UAchievementUtility
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAchievementUtility");
		return ptr;
	}


	void UpdateAchievementForPlayer(class AGbxPlayerController* pc, EOakAchievements AchievementId, int ProgressValue);
	void UnlockAchievementForPlayer(class AGbxPlayerController* pc, EOakAchievements AchievementId);
};


// Class OakGame.OakAction_Anim
// 0x0070 (0x0218 - 0x01A8)
class UOakAction_Anim : public UGbxAction_Anim
{
public:
	bool                                               bBlockWeaponActions;                                      // 0x01A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bInterruptWeaponActions;                                  // 0x01A9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x01AA(0x0002) MISSED OFFSET
	int                                                WeaponActions;                                            // 0x01AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bHideWeapons;                                             // 0x01B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bHideWeaponSlot;                                          // 0x01B1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x01B2(0x0006) MISSED OFFSET
	struct FName                                       AnimSlotWeap;                                             // 0x01B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bHasAnimSlotWeapValue;                                    // 0x01C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x01C1(0x0003) MISSED OFFSET
	float                                              BlendInWeap;                                              // 0x01C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bHasBlendInWeapValue;                                     // 0x01C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x01C9(0x0003) MISSED OFFSET
	float                                              DefaultBlendOutWeap;                                      // 0x01CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bHasBlendOutWeapValue;                                    // 0x01D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bBlockSprinting;                                          // 0x01D1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bPauseSprinting;                                          // 0x01D2(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bBlockJumping;                                            // 0x01D3(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bBlockECHOMenu;                                           // 0x01D4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bLockInput;                                               // 0x01D5(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bLockUsingObjects;                                        // 0x01D6(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseActionSkillCrosshair;                                 // 0x01D7(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bShowPlayerMeleeWeapon;                                   // 0x01D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEquipEchoDevice;                                         // 0x01D9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bInterruptWhenZoomed;                                     // 0x01DA(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideBlendOutWhenInterrupted;                         // 0x01DB(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bHideFirstPersonLegs;                                     // 0x01DC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bBringUpWeaponAtEnd;                                      // 0x01DD(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x01DE(0x0002) MISSED OFFSET
	float                                              BringUpWeaponBlendInTime;                                 // 0x01E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bInterruptBringUpWeaponWhenZoomed;                        // 0x01E4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayBringUpWeaponOnSameSlot;                             // 0x01E5(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bBlockEquipAnimation;                                     // 0x01E6(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCheckFootDownWhenFreezing;                               // 0x01E7(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       CameraMode;                                               // 0x01E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraModeBlendInTimeOverride;                            // 0x01F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraModeBlendOutTimeOverride;                           // 0x01F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAnimActionDef                              AnimDefWeap;                                              // 0x01F8(0x0018) (Deprecated)
	class UAnimationAsset*                             AnimationWeap;                                            // 0x0210(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_Anim");
		return ptr;
	}


	void OnBeginBringUpWeapon(class AActor* Actor);
	void K2_SetWeaponSlotHidden(bool bHidden);
	void K2_SetWeaponsHidden(bool bHidden);
	void K2_SetUseActionSkillCrosshair(bool bNewUseActionSkillCrosshair);
	void K2_SetPlayerMeleeWeaponVisible(bool bVisible);
	void K2_SetPauseSprinting(bool bPaused);
	void K2_SetLockObjectUse(bool bLocked);
	void K2_SetLockInput(bool bLocked);
	void K2_SetFirstPersonLegsHidden(bool bHidden);
	void K2_SetEchoDeviceEquipped(bool bEquipped);
	void K2_SetCameraMode(const struct FName& NewCameraMode, float BlendTimeOverride);
	void K2_SetBlockSprinting(bool bBlocked);
	void K2_SetBlockJumping(bool bBlocked);
	void K2_SetBlockEquipAnimation(bool bBlocked);
	void K2_SetBlockedWeaponActions(bool bBlocked, int WeaponActionsMask);
	void K2_SetBlockEchoMenu(bool bBlocked);
	void K2_RestoreCameraMode(float BlendTimeOverride);
	class AWeapon* K2_GetWeapon();
};


// Class OakGame.OakAction_Anim_ActionAbility
// 0x0048 (0x0260 - 0x0218)
class UOakAction_Anim_ActionAbility : public UOakAction_Anim
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0218(0x0010) MISSED OFFSET
	TArray<struct FOakAnimActionAbilityEndAction>      ConditionalEndActions;                                    // 0x0228(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	EOakAnimActionAbilityEndAction                     UnconditionalEndAction;                                   // 0x0238(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0239(0x0007) MISSED OFFSET
	class AOakCharacter_Player*                        OwnerPlayer;                                              // 0x0240(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AOakPlayerController*                        OwnerPlayerController;                                    // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakActionAbility*                           OwnerActionAbility;                                       // 0x0250(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsShuttingDown;                                          // 0x0258(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bBlocksActionAbilityShutdown;                             // 0x0259(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLockMantling;                                            // 0x025A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBlockPlayerLandingNotification;                          // 0x025B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bActionSucceeded;                                         // 0x025C(0x0001) (Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x025D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_Anim_ActionAbility");
		return ptr;
	}


	bool StartedOwnedControlledMove(class UClass* ControlledMoveClass, float SpeedOverride, float DurationOverride, float LaunchAngleOverride, class AActor* TargetActor, const struct FVector& TargetLocation);
	void SetActionSucceeded(bool bSucceeded);
	void ReleaseActionLock();
	void OnOwnedControlledMoveEnded(class UOakControlledMove_ActionAbility* ControlledMove);
	void JumpToMontageSection(const struct FName& SectionName);
	bool IsLocallyControlled();
};


// Class OakGame.OakActionAbility_AnimNotifyState
// 0x0010 (0x0040 - 0x0030)
class UOakActionAbility_AnimNotifyState : public UAnimNotifyState
{
public:
	struct FName                                       StartedEventName;                                         // 0x0030(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       EndedEventName;                                           // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbility_AnimNotifyState");
		return ptr;
	}

};


// Class OakGame.OakAction_Anim_ActionAbility_Operative
// 0x0010 (0x0270 - 0x0260)
class UOakAction_Anim_ActionAbility_Operative : public UOakAction_Anim_ActionAbility
{
public:
	bool                                               bUsesOperativeDevice;                                     // 0x0260(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0261(0x0007) MISSED OFFSET
	class UOperativeCharacterComponent*                OperativeComponent;                                       // 0x0268(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_Anim_ActionAbility_Operative");
		return ptr;
	}


	void K2_SetOperativeDeviceVisible(bool bVisible);
};


// Class OakGame.OakAction_Anim_ActionAbility_Barrier
// 0x0008 (0x0278 - 0x0270)
class UOakAction_Anim_ActionAbility_Barrier : public UOakAction_Anim_ActionAbility_Operative
{
public:
	class UOakActionAbility_Barrier*                   OwnerActionAbility_Barrier;                               // 0x0270(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_Anim_ActionAbility_Barrier");
		return ptr;
	}

};


// Class OakGame.OakAction_Anim_ActionAbility_Digiclone
// 0x0008 (0x0278 - 0x0270)
class UOakAction_Anim_ActionAbility_Digiclone : public UOakAction_Anim_ActionAbility_Operative
{
public:
	class UOakActionAbility_Digiclone*                 OwnerActionAbility_Digiclone;                             // 0x0270(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_Anim_ActionAbility_Digiclone");
		return ptr;
	}

};


// Class OakGame.OakAction_Anim_ActionAbility_GRMLN
// 0x0008 (0x0278 - 0x0270)
class UOakAction_Anim_ActionAbility_GRMLN : public UOakAction_Anim_ActionAbility_Operative
{
public:
	class UOakActionAbility_GRMLN*                     OwnerActionAbility_GRMLN;                                 // 0x0270(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_Anim_ActionAbility_GRMLN");
		return ptr;
	}

};


// Class OakGame.OakAction_Anim_ActionAbility_Pet
// 0x0000 (0x0260 - 0x0260)
class UOakAction_Anim_ActionAbility_Pet : public UOakAction_Anim_ActionAbility
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_Anim_ActionAbility_Pet");
		return ptr;
	}

};


// Class OakGame.OakAction_Anim_ActionAbility_Pet_Jabbermon
// 0x0008 (0x0268 - 0x0260)
class UOakAction_Anim_ActionAbility_Pet_Jabbermon : public UOakAction_Anim_ActionAbility_Pet
{
public:
	class UOakActionAbility_HulkOut*                   OwnerActionAbility_Jabbermon;                             // 0x0260(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_Anim_ActionAbility_Pet_Jabbermon");
		return ptr;
	}

};


// Class OakGame.OakAction_Anim_ActionAbility_Pet_Skag
// 0x0008 (0x0268 - 0x0260)
class UOakAction_Anim_ActionAbility_Pet_Skag : public UOakAction_Anim_ActionAbility_Pet
{
public:
	class UOakActionAbility_RakkAttack*                OwnerActionAbility_Skag;                                  // 0x0260(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_Anim_ActionAbility_Pet_Skag");
		return ptr;
	}

};


// Class OakGame.OakAction_Anim_ActionAbility_Pet_Spiderant
// 0x0008 (0x0268 - 0x0260)
class UOakAction_Anim_ActionAbility_Pet_Spiderant : public UOakAction_Anim_ActionAbility_Pet
{
public:
	class UOakActionAbility_Cloak*                     OwnerActionAbility_Spiderant;                             // 0x0260(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_Anim_ActionAbility_Pet_Spiderant");
		return ptr;
	}

};


// Class OakGame.OakAction_Anim_ActionAbility_PhaseTrance
// 0x0050 (0x02B0 - 0x0260)
class UOakAction_Anim_ActionAbility_PhaseTrance : public UOakAction_Anim_ActionAbility
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0260(0x0008) MISSED OFFSET
	bool                                               bRegisterAsGhostArmController;                            // 0x0268(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0269(0x0007) MISSED OFFSET
	class UMaterialInstance*                           GhostArmMaterial;                                         // 0x0270(0x0008) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData)
	bool                                               bFirstPersonGhostArmsVisible;                             // 0x0278(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData)
	bool                                               bThirdPersonGhostArmsVisible;                             // 0x0279(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData)
	bool                                               bWantsCharacterLandedEvent;                               // 0x027A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x5];                                       // 0x027B(0x0005) MISSED OFFSET
	class UOakActionAbility_PhaseTrance*               OwnerActionAbility_PhaseTrance;                           // 0x0280(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FPhaseTranceActivationComboData             ActivationCombo;                                          // 0x0288(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient)
	struct FName                                       ArmsSkeletalMeshName;                                     // 0x02A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USkeletalMeshComponent*                      GhostArmsMesh_3rd;                                        // 0x02A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_Anim_ActionAbility_PhaseTrance");
		return ptr;
	}


	void OnPlayerLanded(const struct FHitResult& HitResult);
	void OnMovementModeChanged(class ACharacter* Character, TEnumAsByte<EMovementMode> PrevMovementMode, unsigned char PreviousCustomMode);
	void JumpToMontageSection_SirenAndArms(const struct FName& SectionName);
	void JumpToMontageSection_Arms(const struct FName& SectionName);
	void HandlePlayerLanded();
	struct FPhaseTranceActivationComboData AssembleActivationCombo();
};


// Class OakGame.OakAction_Anim_PhaseTranceArms
// 0x0018 (0x0230 - 0x0218)
class UOakAction_Anim_PhaseTranceArms : public UOakAction_Anim
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0218(0x0008) MISSED OFFSET
	class UMaterialInstance*                           SirenArmMaterialInstance;                                 // 0x0220(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0228(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_Anim_PhaseTranceArms");
		return ptr;
	}


	void ActivateThirdPersonArms();
	void ActivateFirstPersonArms();
};


// Class OakGame.OakAction_Anim_PlayerMelee
// 0x0018 (0x0230 - 0x0218)
class UOakAction_Anim_PlayerMelee : public UOakAction_Anim
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0218(0x0008) MISSED OFFSET
	bool                                               bRegisterAsSirenArmController;                            // 0x0220(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0221(0x0007) MISSED OFFSET
	class UMaterialInstance*                           GhostArmMaterial;                                         // 0x0228(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_Anim_PlayerMelee");
		return ptr;
	}

};


// Class OakGame.OakAction_Anim_TedioreReload
// 0x0010 (0x0228 - 0x0218)
class UOakAction_Anim_TedioreReload : public UOakAction_Anim
{
public:
	class UClass*                                      ActionClassToStopOnEndIfNotSuccessful;                    // 0x0218(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       UnhideWeaponReason;                                       // 0x0220(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_Anim_TedioreReload");
		return ptr;
	}

};


// Class OakGame.OakAction_Anim_WeaponReload
// 0x0008 (0x0220 - 0x0218)
class UOakAction_Anim_WeaponReload : public UOakAction_Anim
{
public:
	struct FName                                       MagBoneName;                                              // 0x0218(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_Anim_WeaponReload");
		return ptr;
	}

};


// Class OakGame.OakAction_AttachedAnim
// 0x0008 (0x0220 - 0x0218)
class UOakAction_AttachedAnim : public UOakAction_Anim
{
public:
	struct FPawnInterpolationInfo                      InterpolationInfo;                                        // 0x0218(0x0008) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_AttachedAnim");
		return ptr;
	}

};


// Class OakGame.OakAction_CoordinatedEffect
// 0x0018 (0x0148 - 0x0130)
class UOakAction_CoordinatedEffect : public UGbxAction_CoordinatedEffect
{
public:
	bool                                               bHideWeaponParticles;                                     // 0x0130(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bApplyToWeapons;                                          // 0x0131(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bApplyToAttachedCharacters;                               // 0x0132(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOnlyApplyToEquippedWeapons;                              // 0x0133(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bApplyToLimbGore;                                         // 0x0134(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0135(0x0003) MISSED OFFSET
	TArray<class FString>                              OnlyApplyToComponentByName;                               // 0x0138(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_CoordinatedEffect");
		return ptr;
	}

};


// Class OakGame.OakAction_CoordinatedEffect_ActionAbility
// 0x0030 (0x0178 - 0x0148)
class UOakAction_CoordinatedEffect_ActionAbility : public UOakAction_CoordinatedEffect
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0148(0x0010) MISSED OFFSET
	class AOakCharacter_Player*                        OwnerPlayer;                                              // 0x0158(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AOakPlayerController*                        OwnerPlayerController;                                    // 0x0160(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakActionAbility*                           OwnerActionAbility;                                       // 0x0168(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bBlocksActionAbilityShutdown;                             // 0x0170(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsShuttingDown;                                          // 0x0171(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0172(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_CoordinatedEffect_ActionAbility");
		return ptr;
	}

};


// Class OakGame.OakAction_DetachFromSeat
// 0x0000 (0x0060 - 0x0060)
class UOakAction_DetachFromSeat : public UGbxAction
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_DetachFromSeat");
		return ptr;
	}

};


// Class OakGame.OakAction_Emote
// 0x0000 (0x0218 - 0x0218)
class UOakAction_Emote : public UOakAction_Anim
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_Emote");
		return ptr;
	}

};


// Class OakGame.OakAction_FrozenDeath
// 0x0018 (0x0078 - 0x0060)
class UOakAction_FrozenDeath : public UGbxAction
{
public:
	bool                                               bShatter;                                                 // 0x0060(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	class UParticleSystem*                             Particle;                                                 // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 Sound;                                                    // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_FrozenDeath");
		return ptr;
	}

};


// Class OakGame.OakAction_Gib
// 0x06F0 (0x08F0 - 0x0200)
class UOakAction_Gib : public UGbxAction_Gib
{
public:
	struct FOakElementalGibData                        Corrosive;                                                // 0x0200(0x0160) (Edit)
	struct FOakElementalGibData                        Cryo;                                                     // 0x0360(0x0160) (Edit)
	struct FOakElementalGibData                        Fire;                                                     // 0x04C0(0x0160) (Edit)
	struct FOakElementalGibData                        Shock;                                                    // 0x0620(0x0160) (Edit)
	struct FOakElementalGibData                        Radiation;                                                // 0x0780(0x0160) (Edit)
	float                                              ImpulseModifier;                                          // 0x08E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x08E4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_Gib");
		return ptr;
	}

};


// Class OakGame.OakAction_HostileAttach
// 0x0558 (0x0610 - 0x00B8)
class UOakAction_HostileAttach : public UGbxAction_SimpleAnim
{
public:
	struct FAnimActionDef                              LoopAnim;                                                 // 0x00B8(0x0018) (Edit)
	struct FAnimActionDef                              AttackAnim;                                               // 0x00D0(0x0018) (Edit)
	struct FAnimActionDef                              GripFeedbackAnim;                                         // 0x00E8(0x0018) (Edit)
	class UClass*                                      EjectedAction;                                            // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlendInTime;                                              // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlendOutTime;                                             // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGbxParam                                   AttackWarmupDelay;                                        // 0x0110(0x0080) (Edit)
	struct FGbxParam                                   AttackDelay;                                              // 0x0190(0x0080) (Edit)
	struct FGbxParam                                   VelocityDifferenceWeight;                                 // 0x0210(0x0080) (Edit)
	struct FGbxParam                                   RecoveryRate;                                             // 0x0290(0x0080) (Edit)
	struct FGbxParam                                   ThrowFactor;                                              // 0x0310(0x0080) (Edit)
	struct FGbxParam                                   EjectForce;                                               // 0x0390(0x0080) (Edit)
	struct FGbxParam                                   NoHostileDetachDelay;                                     // 0x0410(0x0080) (Edit)
	struct FGbxParam                                   GripFeedbackValue;                                        // 0x0490(0x0080) (Edit)
	struct FGbxParam                                   GripFeedbackDelay;                                        // 0x0510(0x0080) (Edit)
	struct FGbxParam                                   CanStopFeedBackCooldown;                                  // 0x0590(0x0080) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_HostileAttach");
		return ptr;
	}

};


// Class OakGame.OakAction_LeapOnVehicle
// 0x0020 (0x0310 - 0x02F0)
class UOakAction_LeapOnVehicle : public UGbxAction_NavHomingJump
{
public:
	class UClass*                                      FailedAction;                                             // 0x02F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DistanceToAttach;                                         // 0x02F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ZOffset;                                                  // 0x02FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              NavigationToleranceRadius;                                // 0x0300(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxLeapDistance;                                          // 0x0304(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDoNavigationTest;                                        // 0x0308(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ELeapOnVehicle_SeatType                            SeatType;                                                 // 0x0309(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bSearchNearestSeat;                                       // 0x030A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x030B(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_LeapOnVehicle");
		return ptr;
	}


	TArray<struct FGbxActionRegister> STATIC_MakeActionLeapOnVehicleRegisters(class AOakVehicle* OakVehicle, int SeatIndex);
};


// Class OakGame.OakAction_RandomAnim
// 0x0020 (0x0238 - 0x0218)
class UOakAction_RandomAnim : public UOakAction_Anim
{
public:
	TArray<struct FWeightedAnim>                       RandomAnims;                                              // 0x0218(0x0010) (Edit, ZeroConstructor)
	TArray<struct FRandomAnimDef>                      RandomAnimDefs;                                           // 0x0228(0x0010) (ZeroConstructor, Deprecated)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_RandomAnim");
		return ptr;
	}

};


// Class OakGame.OakAction_PetUltimateAbility
// 0x0020 (0x0258 - 0x0238)
class UOakAction_PetUltimateAbility : public UOakAction_RandomAnim
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0238(0x0008) MISSED OFFSET
	class UOakActionAbility_Beastmaster*               OwnerActionAbility;                                       // 0x0240(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AOakCharacter_Player*                        OwnerPlayer;                                              // 0x0248(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0250(0x0001) MISSED OFFSET
	bool                                               bIsForcedShutdown;                                        // 0x0251(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0252(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_PetUltimateAbility");
		return ptr;
	}

};


// Class OakGame.OakAction_PhaseMove
// 0x0010 (0x03C8 - 0x03B8)
class UOakAction_PhaseMove : public UGbxAction_Loop
{
public:
	float                                              HoverAltitude;                                            // 0x03B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HoverRadius;                                              // 0x03BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HoverAccelerationTime;                                    // 0x03C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HoverSpeed;                                               // 0x03C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_PhaseMove");
		return ptr;
	}


	void STATIC_PlayPhaseMove(class UClass* MoveAction, class ACharacter* Character, class AActor* MoveTarget, const struct FTransform& TargetEndTransform, float Duration, class AActor* HoverTarget);
	class AActor* K2_GetMoveTarget();
	class AActor* K2_GetHoverTarget();
	class ACharacter* K2_GetCharacter();
};


// Class OakGame.OakAction_PhysicalDeath
// 0x0010 (0x0200 - 0x01F0)
class UOakAction_PhysicalDeath : public UGbxAction_PhysicalDeath
{
public:
	EOakElementalDeathEffects                          ElementalDeathEffects;                                    // 0x01F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01F1(0x0003) MISSED OFFSET
	int                                                RagdollWhenGoredRegions;                                  // 0x01F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSkipForcedDeathPhysicsCheck;                             // 0x01F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x01F9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_PhysicalDeath");
		return ptr;
	}


	void K2_SetRagdollWhenGoredRegions(int NewRagdollWhenGoredRegions);
};


// Class OakGame.OakAction_VehicleInteractionAnim
// 0x0008 (0x0220 - 0x0218)
class UOakAction_VehicleInteractionAnim : public UOakAction_Anim
{
public:
	bool                                               bDetachPawnOnBringUpWeapon;                               // 0x0218(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bResetCameraModeOnStart;                                  // 0x0219(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bInterpolateRotationToZero;                               // 0x021A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x021B(0x0001) MISSED OFFSET
	float                                              InterpolateRotationToZeroDuration;                        // 0x021C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_VehicleInteractionAnim");
		return ptr;
	}

};


// Class OakGame.OakAction_VehicleMoveTo
// 0x0018 (0x0078 - 0x0060)
class UOakAction_VehicleMoveTo : public UGbxAction
{
public:
	float                                              ReachRadius;                                              // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WantedSpeed;                                              // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bMaxSpeed;                                                // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseBoost;                                                // 0x0069(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x006A(0x0002) MISSED OFFSET
	float                                              Duration;                                                 // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DotDestination;                                           // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_VehicleMoveTo");
		return ptr;
	}

};


// Class OakGame.AnimNotify_InterpolateVehicleToGround
// 0x0000 (0x0038 - 0x0038)
class UAnimNotify_InterpolateVehicleToGround : public UAnimNotify
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.AnimNotify_InterpolateVehicleToGround");
		return ptr;
	}

};


// Class OakGame.OakAction_VehicleSpawnAnim
// 0x0000 (0x01C0 - 0x01C0)
class UOakAction_VehicleSpawnAnim : public UGbxAction_SpawnAnim
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_VehicleSpawnAnim");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbility
// 0x0028 (0x0120 - 0x00F8)
class UOakPlayerAbility : public UOakAbility
{
public:
	bool                                               bMustBeSlotted;                                           // 0x00F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET
	TArray<class UUIStatData*>                         StatDataItems;                                            // 0x0100(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance)
	class AOakCharacter_Player*                        OakCharacterPlayer;                                       // 0x0110(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakPlayerAbilityManagerComponent*           OakManager;                                               // 0x0118(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbility");
		return ptr;
	}


	bool IsSlotted();
	class UOakPlayerAbilitySlotData* GetCurrentSlot();
};


// Class OakGame.OakActionAbility
// 0x0138 (0x0258 - 0x0120)
class UOakActionAbility : public UOakPlayerAbility
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0120(0x0008) MISSED OFFSET
	TArray<struct FActionSkillFailureCodeDescription>  FailureCodeDescriptions;                                  // 0x0128(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	bool                                               bShouldDisplayDurationBar;                                // 0x0138(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0139(0x0007) MISSED OFFSET
	TArray<class UOakActionAbilityAugmentSlotData*>    SupportedAugmentSlots;                                    // 0x0140(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class UGameResourcePoolData*                       CooldownPoolData;                                         // 0x0150(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGameResourcePoolData*                       DurationPoolData;                                         // 0x0158(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class FString                                      DefaultHUDIconFrameName;                                  // 0x0160(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class USwfMovie*                                   HUDIcon;                                                  // 0x0170(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUsesCharges;                                             // 0x0178(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0179(0x0007) MISSED OFFSET
	struct FAttributeInitializationData                ChargeInitializationData;                                 // 0x0180(0x0038) (Edit, DisableEditOnInstance)
	EOakActionAbilitySecondaryUseActionType            SecondaryUseActionType;                                   // 0x01B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEndOnDownstate;                                          // 0x01B9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCanBeActivatedWhileAttached;                             // 0x01BA(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x01BB(0x0005) MISSED OFFSET
	struct FGameResourcePoolReference                  CooldownPoolRef;                                          // 0x01C0(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	struct FGameResourcePoolReference                  DurationPoolRef;                                          // 0x01D8(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	bool                                               bIsActive;                                                // 0x01F0(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x01F1(0x0007) MISSED OFFSET
	class AOakPlayerController*                        OakPlayerController;                                      // 0x01F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                Charges;                                                  // 0x0200(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FGbxAttributeInteger                        MaxCharges;                                               // 0x0204(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient)
	TArray<TScriptInterface<class UOakActionAbilityOwnedResourceInterface>> OwnedResources;                                           // 0x0210(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData05[0x38];                                      // 0x0220(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbility");
		return ptr;
	}


	void StopActionAbility();
	void StartActionAbility();
	bool ShouldStopAbilityOnPawnSlotComponentAttach();
	bool ShouldDisplayDurationBar();
	bool ShouldAbortActivation(unsigned char* OutAbortCode);
	void ServerStopActionAbility(EOakActionAbilityStopAction StopAction);
	void ServerStartActionAbility();
	void ServerResetActionAbilityCooldown();
	void ResetDurationTimer();
	void ResetActionAbilityCooldown();
	void RemoveScriptingLock(const struct FName& Reason);
	void OnStopActionAbility();
	void OnStartActionAbility();
	void OnRep_Charges();
	void OnRep_bIsActive();
	void OnReady();
	void OnPlayerDeadOrDying();
	void OnOwnerCinematicModeChanged(bool bInCinematicMode);
	void OnInputHoldTapped();
	void OnInputHoldReleased();
	void OnInputHoldPressed();
	void OnInputHoldHeld();
	void OnDurationResourceDepleted(const struct FGameResourcePoolReference& ResourcePool);
	void OnCoolingDown();
	void OnCooldownResourceFilled(const struct FGameResourcePoolReference& ResourcePool);
	void OnChargeCountChanged(int OldCharge);
	bool IsReady();
	bool IsPendingStop();
	bool IsDurationTimerRunning();
	bool IsCoolingDown();
	bool IsAugmentSlotted(class UOakActionAbilityAugmentData* Augment);
	bool IsAugmentInSlot(class UOakActionAbilityAugmentData* Augment, class UOakActionAbilityAugmentSlotData* AugmentSlot);
	bool IsAnyAugmentInSlot(class UOakActionAbilityAugmentSlotData* AugmentSlot);
	bool IsActive();
	bool HasChargesAvailable();
	void HandleInputHoldActivationEnd();
	void HandleInputHoldActivationBegin();
	void HandleInputActivationRelease();
	void HandleInputActivationEnd();
	void HandleInputActivationBegin();
	void HandleInputActivationAttempt();
	class UOakActionAbilityAugmentData* GetSlotAugment(class UOakActionAbilityAugmentSlotData* AugmentSlot);
	class AOakPlayerController* GetOakPlayerController();
	bool GetMaxDurationModifier(EGbxAttributeModifierType* ModifierType, float* Value);
	bool GetMaxCooldownModifier(EGbxAttributeModifierType* ModifierType, float* Value);
	float GetDurationPercent();
	unsigned char GetDefaultActivationErrorCode();
	float GetCooldownRestartPercent();
	float GetCooldownPercent();
	class FString GetActionSkillWidgetKeyframe();
	void ClientNotifyActionSkillActivationFailed(unsigned char FailureCode);
	void CleanupOnActionSkillDeactivation();
	void AddScriptingLock(const struct FName& Reason);
};


// Class OakGame.OakActionAbility_Barrier
// 0x0020 (0x0278 - 0x0258)
class UOakActionAbility_Barrier : public UOakActionAbility
{
public:
	struct FOakActionAbilityEnumMaskHelper             RuntimeMods;                                              // 0x0258(0x0004) (Net, Transient)
	unsigned char                                      UnknownData00[0x4];                                       // 0x025C(0x0004) MISSED OFFSET
	TArray<class UOakActionAbilityAugmentData_Barrier*> PassiveMods;                                              // 0x0260(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class AOperativeBarrier*                           BarrierActor;                                             // 0x0270(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbility_Barrier");
		return ptr;
	}


	bool TryPlaceBarrierAtLocation(const struct FTransform& Transform);
	void TryDropPickup();
	class AOperativeBarrier* SpawnNewBarrier(const struct FTransform& Transform);
	void ServerDoBarrierDropPickup();
	void OnBarrierDestroyed(class AActor* DestroyedActor);
	bool HasRuntimeMod(EOperativeBarrierModType ModType);
};


// Class OakGame.OakActionAbility_Beastmaster
// 0x0010 (0x0268 - 0x0258)
class UOakActionAbility_Beastmaster : public UOakActionAbility
{
public:
	EOakActionAbilityPetType                           AbilityPetType;                                           // 0x0258(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0259(0x0003) MISSED OFFSET
	struct FOakActionAbilityEnumMaskHelper             RuntimeMods;                                              // 0x025C(0x0004) (Net, Transient)
	class UBeastmasterCharacterComponent*              BeastmasterComponent;                                     // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbility_Beastmaster");
		return ptr;
	}


	bool HasRuntimeMod(EOakActionAbilityPetModType ModType);
	class AOakCharacter* GetCurrentPet();
};


// Class OakGame.GbxCondition_IsBeastmasterConsecutiveCritTarget
// 0x0000 (0x0088 - 0x0088)
class UGbxCondition_IsBeastmasterConsecutiveCritTarget : public UGbxCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IsBeastmasterConsecutiveCritTarget");
		return ptr;
	}

};


// Class OakGame.OakAction_Cloak
// 0x0030 (0x0178 - 0x0148)
class UOakAction_Cloak : public UOakAction_CoordinatedEffect
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0148(0x0008) MISSED OFFSET
	class UOakActionAbility_Cloak*                     OwnerActionAbility;                                       // 0x0150(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AOakCharacter_Player*                        OwnerPlayer;                                              // 0x0158(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0160(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAction_Cloak");
		return ptr;
	}


	class UClass* GetTrackedTargetEffect(const struct FOakActionCloak_TrackedTargetState& TrackedTargetState);
};


// Class OakGame.OakActionAbility_Cloak
// 0x0098 (0x0300 - 0x0268)
class UOakActionAbility_Cloak : public UOakActionAbility_Beastmaster
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0268(0x0018) MISSED OFFSET
	struct FAttributeInitializationData                CriticalShotCountInitializer;                             // 0x0280(0x0038) (Edit, DisableEditOnInstance)
	class UWeaponShotModifier*                         CriticalShotCountModifier;                                // 0x02B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UClass*>                              ValidShotChainDamageSourceClasses;                        // 0x02C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UClass*>                              ValidConsumeShotDamageSourceClasses;                      // 0x02D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FOakActionCloak_TrackedTargetState          TrackedTargetState;                                       // 0x02E0(0x0020) (Net, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbility_Cloak");
		return ptr;
	}


	void TrackTarget(class AActor* NewTarget);
	void StartInvisibility();
	void OnTrackedTargetDied();
	void OnRep_TrackedTargetState();
	void OnModifiedWeaponShot(class AWeapon* Weapon, const struct FWeaponShotModifierData& Data);
};


// Class OakGame.OakActionAbility_Digiclone
// 0x01A8 (0x0400 - 0x0258)
class UOakActionAbility_Digiclone : public UOakActionAbility
{
public:
	class UGameResourcePoolData*                       DigicloneCooldownPoolData;                                // 0x0258(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGameResourcePoolReference                  DigicloneCooldownPoolRef;                                 // 0x0260(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	class UGameResourcePoolData*                       SwapPlacesCooldownPoolData;                               // 0x0278(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGameResourcePoolReference                  SwapPlacesCooldownPoolRef;                                // 0x0280(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	struct FEnvQueryParams                             FindNewSpawnLocationQueryParams;                          // 0x0298(0x00B8) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<class UOakActionAbilityAugmentData_Digiclone*> PassiveMods;                                              // 0x0350(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	int                                                DigicloneSwapRetryCount;                                  // 0x0360(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0364(0x0004) MISSED OFFSET
	struct FAttributeInitializationData                JustAcceptCooldownData;                                   // 0x0368(0x0038) (Edit, DisableEditOnInstance)
	TArray<class UClass*>                              JustAcceptDamageSources;                                  // 0x03A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FOakActionAbilityEnumMaskHelper             RuntimeMods;                                              // 0x03B0(0x0004) (Net, Transient)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03B4(0x0004) MISSED OFFSET
	class AOakCharacter*                               CurrentDigiclone;                                         // 0x03B8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x40];                                      // 0x03C0(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbility_Digiclone");
		return ptr;
	}


	bool TryJustAcceptRefund(float Damage, const struct FVector& HitLocation, const struct FVector& HitDirection);
	void SwapPlaces(ECloneSwapReason Reason);
	void StartDigicloneSwapCooldown();
	class AOakCharacter* SpawnNewDigiclone(const struct FVector& Location);
	void SpawnDigiclone(const struct FVector& Location);
	void ServerSwapPlaces();
	void ServerDetonateClone();
	void ServerCancelDetonateClone();
	void ServerBeginDetonateClone();
	void ReleaseDigiclone(class AOakCharacter* Digiclone);
	void OnRep_CurrentDigiclone();
	void OnPlayerSwapSucceeded();
	void OnPlayerSwapStarted();
	void OnPlayerSwapFailed();
	void OnDigicloneRespawnCooldownFilled(const struct FGameResourcePoolReference& ResourcePool);
	void OnDigicloneDied();
	void OnDigicloneDestroyed(class AActor* Digiclone);
	void OnDigicloneDead();
	void OnCorsicanDamage(float Damage, class APawn* DamageSource);
	void OnCloneSwapSucceeded();
	void OnCloneSwapStarted();
	void OnCloneSwapFailed();
	bool IsSafeToSwapPlayerWithClone();
	bool HasDigicloneMod(EDigiCloneModType InModType);
	float GetSwapCooldownPercent();
	void GetQueryParamsForCloneSwapLocationAttempt(int Attempt, struct FEnvQueryParams* Params, class AActor** QueryContext);
	float GetCloneRespawnCooldownPercent();
	void DoCloneSwap();
	void DetonateClone();
	void CancelDetonateClone();
	void BeginDetonateClone();
};


// Class OakGame.OakActionAbility_GRMLN
// 0x0038 (0x0290 - 0x0258)
class UOakActionAbility_GRMLN : public UOakActionAbility
{
public:
	class UClass*                                      CommandRingClass;                                         // 0x0258(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UOakActionAbilityAugmentData_GRMLN*>  PassiveMods;                                              // 0x0260(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class AOakDroneProjectile_GRMLN*                   PrimaryDrone;                                             // 0x0270(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FOakActionAbilityEnumMaskHelper             RuntimeMods;                                              // 0x0278(0x0004) (Net, Transient)
	unsigned char                                      UnknownData00[0x4];                                       // 0x027C(0x0004) MISSED OFFSET
	class ACommandRing_Operative_GRMLN*                CommandRing;                                              // 0x0280(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0288(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbility_GRMLN");
		return ptr;
	}


	class AOakDroneProjectile_GRMLN* TrySpawnPrimaryDrone();
	void TryFindNewDroneTarget();
	void SpawnPrimaryDrone();
	void ServerStopCalledShot();
	void ServerStartCalledShot();
	void ServerFindNewDroneTarget();
	void OnStopCalledShot();
	void OnStartCalledShot();
	void OnSafeguardProtocolActivated();
	bool IsSafeguardProtocolActive();
	bool HasGRMLNMod(EGRMLNModType InModType);
	float GetGoodMisfortuneRechargeValue(int TotalKills);
};


// Class OakGame.OakActionAbility_HulkOut
// 0x0000 (0x0268 - 0x0268)
class UOakActionAbility_HulkOut : public UOakActionAbility_Beastmaster
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbility_HulkOut");
		return ptr;
	}

};


// Class OakGame.OakActionAbility_IronBear
// 0x0020 (0x0278 - 0x0258)
class UOakActionAbility_IronBear : public UOakActionAbility
{
public:
	class AOakCharacter_IronBear*                      CurrentIronBear;                                          // 0x0258(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIronCubActive;                                           // 0x0260(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x17];                                      // 0x0261(0x0017) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbility_IronBear");
		return ptr;
	}


	void TryToSpawnIronCub();
	void StartSummoningIronCub();
	void OnIronCubDestroyed(class AActor* IronCub);
	void OnIronCubDead();
	struct FRotator GetIronBearSpawnRotation();
	struct FVector GetIronBearSpawnLocation();
	class UClass* GetIronBearClass();
	struct FVector GetCrouchLocationOffset();
	bool CanSpawnIronBearAtLocation(class UClass* ActorClass, const struct FTransform& Transform);
	void CancelManualExit();
	void BeginManualExit();
};


// Class OakGame.PhaseTranceCondition_IsActionComboElementalType
// 0x0008 (0x0090 - 0x0088)
class UPhaseTranceCondition_IsActionComboElementalType : public UGbxCondition
{
public:
	class UClass*                                      DamageType;                                               // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PhaseTranceCondition_IsActionComboElementalType");
		return ptr;
	}

};


// Class OakGame.OakActionAbility_PhaseTrance
// 0x00B0 (0x0308 - 0x0258)
class UOakActionAbility_PhaseTrance : public UOakActionAbility
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0258(0x0008) MISSED OFFSET
	class UOakActionAbilityAugmentSlotData*            AttackSlot;                                               // 0x0260(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UOakActionAbilityAugmentSlotData*            EffectSlot;                                               // 0x0268(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UOakActionAbilityAugmentSlotData*            ElementSlot;                                              // 0x0270(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UOakActionAbilityAugmentData_PhaseTrance_Element* DefaultElementalAugmentData;                              // 0x0278(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      PhasetranceDamageSourceClass;                             // 0x0280(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxDamageType*                              DefaultDamageType;                                        // 0x0288(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGameResourcePoolData*                       PhaseGraspDurationPoolData;                               // 0x0290(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGameResourcePoolReference                  PhaseGraspDurationPoolRef;                                // 0x0298(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	struct FPhaseTranceActivationComboData             ActivationCombo;                                          // 0x02B0(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	struct FGbxAttributeInteger                        bCanActivateDuringCooldown;                               // 0x02C8(0x000C) (Net, Transient)
	unsigned char                                      UnknownData01[0x34];                                      // 0x02D4(0x0034) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbility_PhaseTrance");
		return ptr;
	}


	struct FPhaseTranceActivationComboData STATIC_UnpackActivationComboDataFromReplication(class UClass* PhaseTranceClass, const struct FVector& PackedComboData);
	bool TryEffect(const struct FOakPhaseTranceEffectSpec& Spec);
	void SetPhaseGraspTimerRunning(bool bIsRunning);
	void SetEffectsLocked(const struct FOakPhaseTranceLockEffectSpec& Spec);
	void ServerRecallOrb();
	void RecallOrb();
	struct FVector STATIC_PackActivationComboDataForReplication(class UClass* PhaseTranceClass, const struct FPhaseTranceActivationComboData& ComboData);
	bool IsOrbActive();
	bool STATIC_HasPhaseTranceElementType(EPhaseTranceElementalType ElementType, const struct FPhaseTranceActivationComboData& ComboData);
	bool STATIC_HasPhaseTranceEffectType(EPhaseTranceEffectType EffectType, const struct FPhaseTranceActivationComboData& ComboData);
	EPhaseTranceElementalType STATIC_GetPhaseTranceElementType(const struct FPhaseTranceActivationComboData& ComboData);
	EPhaseTranceEffectType STATIC_GetPhaseTranceEffectType(const struct FPhaseTranceActivationComboData& ComboData);
	class UOakActionAbilityAugmentData_PhaseTrance_Element* GetCurrentlyAttunedElementData();
	EPhaseTranceElementalType GetCurrentlyAttunedElement();
	bool DoEffect(const struct FOakPhaseTranceEffectSpec& Spec);
	void STATIC_BreakPhaseTranceElementData(const struct FPhaseTranceActivationComboData& ComboData, EPhaseTranceElementalType* ElementType, class UClass** DamageType, struct FAttributeInitializationData* DamageCoefficientData);
	void STATIC_BreakPhaseTranceEffectData(const struct FPhaseTranceActivationComboData& ComboData, EPhaseTranceEffectType* EffectType, struct FAttributeInitializationData* DamageCoefficientData);
	void STATIC_BreakPhaseTranceAttackData(const struct FPhaseTranceActivationComboData& ComboData, EPhaseTranceAttackFamilyType* AttackFamilyType, class UClass** AttackClass, struct FAttributeInitializationData* DamageCoefficientData, struct FAttributeInitializationData* CooldownCoefficientData);
};


// Class OakGame.OakProjectile_ActionAbility
// 0x0028 (0x0708 - 0x06E0)
class AOakProjectile_ActionAbility : public AOakProjectile
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x06E0(0x0008) MISSED OFFSET
	class UOakActionAbility*                           OwnerActionAbility;                                       // 0x06E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AOakCharacter_Player*                        OwnerPlayer;                                              // 0x06F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxCustomizationComponent*                  CustomizationComponent;                                   // 0x06F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               bBlocksActionAbilityShutdown;                             // 0x0700(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bWasShutDownGracefully;                                   // 0x0701(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0702(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakProjectile_ActionAbility");
		return ptr;
	}


	void ReleaseFromActionAbility();
	void OnShutdownGracefully();
	void OnReceivedOwnerPlayer();
};


// Class OakGame.OakProjectile_RakkAttack_Rakk
// 0x0020 (0x0728 - 0x0708)
class AOakProjectile_RakkAttack_Rakk : public AOakProjectile_ActionAbility
{
public:
	class UOakActionAbility_RakkAttack*                OwnerAbilityRakkAttack;                                   // 0x0708(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FGuid                                       RakkTeamID;                                               // 0x0710(0x0010) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FOakActionAbilityEnumMaskHelper             RuntimeMods;                                              // 0x0720(0x0004) (Net, Transient)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0724(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakProjectile_RakkAttack_Rakk");
		return ptr;
	}


	void SetupRuntimeMods();
	void SetNewHomingTarget(class AActor* NewHomingTarget);
	void ReturnToOwner();
	void OnRep_RuntimeMods();
	bool HasRuntimeMod(EOakActionAbilityPetModType ModType);
};


// Class OakGame.OakActionAbility_RakkAttack
// 0x0010 (0x0278 - 0x0268)
class UOakActionAbility_RakkAttack : public UOakActionAbility_Beastmaster
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0268(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbility_RakkAttack");
		return ptr;
	}

};


// Class OakGame.OakActionAbility_ShoulderCannon
// 0x0018 (0x0270 - 0x0258)
class UOakActionAbility_ShoulderCannon : public UOakActionAbility
{
public:
	class UOakAimAssistParameters*                     CannonAimAsset;                                           // 0x0258(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AInteractiveObject*                          Cannon;                                                   // 0x0260(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0268(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbility_ShoulderCannon");
		return ptr;
	}


	class AInteractiveObject* TrySpawnCannon();
	void SpawnCannon();
	void OnRep_Cannon();
	bool GetShotData(const struct FVector& StartLocation, struct FOakLightProjectileInitializationData* ShotData);
	void CannonRemoved();
};


// Class OakGame.OakActionAbilityAttributePropertyValueResolver
// 0x0028 (0x00D8 - 0x00B0)
class UOakActionAbilityAttributePropertyValueResolver : public UAttributePropertyValueResolver
{
public:
	TSoftObjectPtr<class UClass>                       ActionAbilityClass;                                       // 0x00B0(0x0028) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbilityAttributePropertyValueResolver");
		return ptr;
	}

};


// Class OakGame.OakActionAbilityAugmentData
// 0x0070 (0x00A0 - 0x0030)
class UOakActionAbilityAugmentData : public UGbxDataAsset
{
public:
	struct FText                                       DisplayName;                                              // 0x0030(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       Description;                                              // 0x0048(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FLinearColor                                BarColor;                                                 // 0x0060(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	TArray<class UUIStatData*>                         StatDataItems;                                            // 0x0070(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	bool                                               bIsMutuallyExclusive;                                     // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	TArray<class UOakActionAbilityAugmentData*>        SupportedMods;                                            // 0x0088(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	bool                                               bIsAlwaysAvailable;                                       // 0x0098(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbilityAugmentData");
		return ptr;
	}

};


// Class OakGame.OakActionAbilityAugmentData_Barrier
// 0x0008 (0x00A8 - 0x00A0)
class UOakActionAbilityAugmentData_Barrier : public UOakActionAbilityAugmentData
{
public:
	EOperativeBarrierModType                           ModType;                                                  // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbilityAugmentData_Barrier");
		return ptr;
	}

};


// Class OakGame.OakActionAbilityAugmentData_Digiclone
// 0x0008 (0x00A8 - 0x00A0)
class UOakActionAbilityAugmentData_Digiclone : public UOakActionAbilityAugmentData
{
public:
	EDigiCloneModType                                  ModType;                                                  // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbilityAugmentData_Digiclone");
		return ptr;
	}

};


// Class OakGame.OakActionAbilityAugmentData_GRMLN
// 0x0008 (0x00A8 - 0x00A0)
class UOakActionAbilityAugmentData_GRMLN : public UOakActionAbilityAugmentData
{
public:
	EGRMLNModType                                      ModType;                                                  // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbilityAugmentData_GRMLN");
		return ptr;
	}

};


// Class OakGame.OakActionAbilityAugmentData_IronBear
// 0x0080 (0x0120 - 0x00A0)
class UOakActionAbilityAugmentData_IronBear : public UOakActionAbilityAugmentData
{
public:
	class FString                                      HardpointProgressBarFrameName;                            // 0x00A0(0x0010) (Edit, ZeroConstructor)
	class FString                                      HardpointIconFrameName;                                   // 0x00B0(0x0010) (Edit, ZeroConstructor)
	class FString                                      HardpointProgressBarName;                                 // 0x00C0(0x0010) (Edit, ZeroConstructor)
	class FString                                      HardpointElementalIconName;                               // 0x00D0(0x0010) (Edit, ZeroConstructor)
	struct FText                                       HardpointBarText;                                         // 0x00E0(0x0028) (Edit, DisableEditOnInstance)
	class FString                                      HardpointFallbackElementalIconFrameName;                  // 0x00F8(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      AugmentClass;                                             // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EIronBearCoreType                                  CoreType;                                                 // 0x0110(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EIronBearModType                                   ModType;                                                  // 0x0111(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0112(0x0006) MISSED OFFSET
	class UClass*                                      AugmentOverrideClass;                                     // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbilityAugmentData_IronBear");
		return ptr;
	}

};


// Class OakGame.PlayerCharacterComponentAugmentData
// 0x0040 (0x0070 - 0x0030)
class UPlayerCharacterComponentAugmentData : public UGbxDataAsset
{
public:
	struct FText                                       DisplayName;                                              // 0x0030(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       Description;                                              // 0x0048(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<class UUIStatData*>                         StatDataItems;                                            // 0x0060(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerCharacterComponentAugmentData");
		return ptr;
	}

};


// Class OakGame.OakPlayerCharacterAugmentData_Pet
// 0x0018 (0x0088 - 0x0070)
class UOakPlayerCharacterAugmentData_Pet : public UPlayerCharacterComponentAugmentData
{
public:
	EOakActionAbilityPetType                           PetType;                                                  // 0x0070(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EOakActionAbilityPetEvolutionType                  EvolutionType;                                            // 0x0071(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0072(0x0006) MISSED OFFSET
	class FString                                      HUDIconFrameName;                                         // 0x0078(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerCharacterAugmentData_Pet");
		return ptr;
	}

};


// Class OakGame.OakActionAbilityAugmentData_Pet_Mod
// 0x0008 (0x00A8 - 0x00A0)
class UOakActionAbilityAugmentData_Pet_Mod : public UOakActionAbilityAugmentData
{
public:
	EOakActionAbilityPetType                           ModPetType;                                               // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EOakActionAbilityPetModType                        ModType;                                                  // 0x00A1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00A2(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbilityAugmentData_Pet_Mod");
		return ptr;
	}

};


// Class OakGame.OakActionAbilityAugmentData_Pet_Ability
// 0x0000 (0x00A0 - 0x00A0)
class UOakActionAbilityAugmentData_Pet_Ability : public UOakActionAbilityAugmentData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbilityAugmentData_Pet_Ability");
		return ptr;
	}

};


// Class OakGame.OakActionAbilityAugmentData_PhaseTrance_Attack
// 0x0090 (0x0130 - 0x00A0)
class UOakActionAbilityAugmentData_PhaseTrance_Attack : public UOakActionAbilityAugmentData
{
public:
	EPhaseTranceAttackFamilyType                       AttackFamilyType;                                         // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET
	class UClass*                                      AttackActionClass;                                        // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      SingularityEffectActorClass;                              // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FAttributeInitializationData                DamageCoefficientData;                                    // 0x00B8(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAttributeInitializationData                CooldownCoefficientData;                                  // 0x00F0(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	int                                                DamageEffects;                                            // 0x0128(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUsesGhostArmsOnActivation;                               // 0x012C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x012D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbilityAugmentData_PhaseTrance_Attack");
		return ptr;
	}

};


// Class OakGame.OakActionAbilityAugmentData_PhaseTrance_Element
// 0x0048 (0x00E8 - 0x00A0)
class UOakActionAbilityAugmentData_PhaseTrance_Element : public UOakActionAbilityAugmentData
{
public:
	EPhaseTranceElementalType                          Type;                                                     // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET
	class UClass*                                      DamageType;                                               // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FAttributeInitializationData                DamageCoefficientData;                                    // 0x00B0(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbilityAugmentData_PhaseTrance_Element");
		return ptr;
	}

};


// Class OakGame.OakActionAbilityAugmentData_PhaseTrance_Effect
// 0x00A8 (0x0148 - 0x00A0)
class UOakActionAbilityAugmentData_PhaseTrance_Effect : public UOakActionAbilityAugmentData
{
public:
	EPhaseTranceEffectType                             Type;                                                     // 0x00A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET
	struct FAttributeInitializationData                DamageCoefficientData;                                    // 0x00A8(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	EPhaseTranceEffectTargetType                       TargetType;                                               // 0x00E0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRejectActorsInAttachSlots;                               // 0x00E1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOnlyOncePerActorPerActivation;                           // 0x00E2(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x00E3(0x0005) MISSED OFFSET
	struct FGameplayTagContainer                       RejectionTags;                                            // 0x00E8(0x0020) (Edit, DisableEditOnInstance)
	class UGbxCondition*                               RejectionCondition;                                       // 0x0108(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	struct FAttributeInitializationData                RefireDelayData;                                          // 0x0110(0x0038) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbilityAugmentData_PhaseTrance_Effect");
		return ptr;
	}

};


// Class OakGame.OakActionAbilityAugmentSlotData
// 0x0050 (0x0080 - 0x0030)
class UOakActionAbilityAugmentSlotData : public UGbxDataAsset
{
public:
	struct FText                                       DisplayName;                                              // 0x0030(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       Description;                                              // 0x0048(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bUnlockedByPlayerLevel;                                   // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	int                                                LevelUnlock;                                              // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UOakActionAbilityAugmentData*>        SupportedAugments;                                        // 0x0068(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UOakActionAbilityAugmentSlotData*            ParentSlotData;                                           // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbilityAugmentSlotData");
		return ptr;
	}

};


// Class OakGame.OakActionAbilityBlueprintFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UOakActionAbilityBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbilityBlueprintFunctionLibrary");
		return ptr;
	}


	TArray<struct FGbxActionRegister> STATIC_GetOwnedGbxActionRegisters(class UOakActionAbility* Context);
	TArray<struct FGbxActionRegister> STATIC_GetObjectOwnerActionRegisters(class UObject* Context);
};


// Class OakGame.OakActionAbilityCooldownPoolValueResolver
// 0x0000 (0x00B0 - 0x00B0)
class UOakActionAbilityCooldownPoolValueResolver : public UAttributePropertyValueResolver
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbilityCooldownPoolValueResolver");
		return ptr;
	}

};


// Class OakGame.OakActionAbilityInputComponent
// 0x0008 (0x02F8 - 0x02F0)
class UOakActionAbilityInputComponent : public UGbxInputComponent
{
public:
	class UOakActionAbility*                           OwnerActionAbility;                                       // 0x02F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbilityInputComponent");
		return ptr;
	}

};


// Class OakGame.OakActionAbilityMultiContextResolver
// 0x0000 (0x0050 - 0x0050)
class UOakActionAbilityMultiContextResolver : public UAttributeContextResolver
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbilityMultiContextResolver");
		return ptr;
	}

};


// Class OakGame.OakActionAbilityOwnedResourceInterface
// 0x0000 (0x0028 - 0x0028)
class UOakActionAbilityOwnedResourceInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionAbilityOwnedResourceInterface");
		return ptr;
	}

};


// Class OakGame.OakActionBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UOakActionBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakActionBlueprintLibrary");
		return ptr;
	}


	class UGbxAction* STATIC_K2Play(class UClass* ActionClass, TArray<struct FGbxActionRegister> GbxActionRegisters, EGbxActionNetMode NetMode, class AActor* Target, class UWeaponSlotData* WeaponSlot, float Duration, float PlayRate, const struct FVector& Direction, int MontageLoopCount);
};


// Class OakGame.OakAIActionComponent
// 0x0028 (0x0538 - 0x0510)
class UOakAIActionComponent : public UAIActionComponent
{
public:
	class UClass*                                      VehicleDriverAction;                                      // 0x0510(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VehicleTurretAction;                                      // 0x0518(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VehiclePassengerAction;                                   // 0x0520(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VehicleScriptedLeadAction;                                // 0x0528(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TurretAction;                                             // 0x0530(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAIActionComponent");
		return ptr;
	}

};


// Class OakGame.OakAIBalancedProjectile
// 0x0000 (0x06E0 - 0x06E0)
class AOakAIBalancedProjectile : public AOakProjectile
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAIBalancedProjectile");
		return ptr;
	}

};


// Class OakGame.OakAIController
// 0x00A0 (0x0760 - 0x06C0)
class AOakAIController : public AGbxAIController
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x06C0(0x0008) MISSED OFFSET
	class AOakCharacter*                               OakCharacter;                                             // 0x06C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAIWeaponUserComponent*                      AIWeaponUserComp;                                         // 0x06D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    EnterVehicleEvent;                                        // 0x06D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ExitVehicleEvent;                                         // 0x06E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    EnterTurretEvent;                                         // 0x06F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ExitTurretEvent;                                          // 0x0708(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AOakVehicle*                                 MyVehicle;                                                // 0x0718(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AVehicleSeatPawn*                            MyVehicleSeatPawn;                                        // 0x0720(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UVehicleSeatComponent*                       MyVehicleSeatComponent;                                   // 0x0728(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class ATurretSeatPawn*                             TurretSeatPawn;                                           // 0x0730(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UTurretMovementComponent*                    TurretMovementComponent;                                  // 0x0738(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UOakAIActionComponent*                       OakAIActionComponent;                                     // 0x0740(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UOakNavComponent*                            OakNavComponent;                                          // 0x0748(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UOakNpcGreetingComponent*                    OakNpcGreetingComponent;                                  // 0x0750(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0758(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAIController");
		return ptr;
	}


	void OnSeatDetachFinished(class APawn* DetachedPawn, class AController* DetachedController);
	class UOakNavComponent* GetOakNavComponent();
	class UOakAIActionComponent* GetOakAIActionComponent();
	class AOakVehicle* GetMyVehicle();
	class ATurretSeatPawn* GetMyTurret();
	void ExitVehicleEvent__DelegateSignature();
	void ExitTurretEvent__DelegateSignature();
	void EnterVehicleEvent__DelegateSignature(class AOakVehicle* OakVehicle, int SlotIdx);
	void EnterVehicle(class AOakVehicle* OakVehicle, int SlotIdx, bool bInstant, bool bSkipAITreeSetup);
	void EnterTurretEvent__DelegateSignature(class ASeatPawn* TurretPawn);
	void EnterTurret(class ATurretSeatPawn* TurrentPawn, bool bInstant, bool bSkipAITreeSetup);
};


// Class OakGame.OakAimAssistParameters
// 0x00D0 (0x0100 - 0x0030)
class UOakAimAssistParameters : public UAimAssistParameters
{
public:
	float                                              Stickiness;                                               // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ZoomStickiness;                                           // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ReduceInput;                                              // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RadiusScaleDistance;                                      // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinRadiusScale;                                           // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxRadiusScale;                                           // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FullStrengthRatio;                                        // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FarPlaneMinCap;                                           // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FarPlaneMinDistance;                                      // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FarPlaneMaxDistance;                                      // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NearPlaneMaxDistance;                                     // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NearPlaneMinDistance;                                     // 0x005C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NearPlaneMaxScaling;                                      // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              IdleAimAssistSmoothingDuration;                           // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NoTargetAimAssistSmoothingDuration;                       // 0x0068(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBulletMagnetismAlwaysOn;                                 // 0x006C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	float                                              BulletMagnetismOuterAngle;                                // 0x0070(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BulletMagnetismInnerAngle;                                // 0x0074(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBulletMagnetismZoomScale;                                // 0x0078(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	float                                              BulletMagnetismZoomScale;                                 // 0x007C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   BulletMagnetismCorrectionRate;                            // 0x0080(0x0008) (Edit, IsPlainOldData)
	float                                              MaxBulletMagnetismDeflection;                             // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxSnapToTargetPitch;                                     // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxSnapToTargetYaw;                                       // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0094(0x0004) MISSED OFFSET
	float                                              InitialStickiness;                                        // 0x0098(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InitialZoomStickiness;                                    // 0x009C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InitialReduceInput;                                       // 0x00A0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InitialRadiusScaleDistance;                               // 0x00A4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InitialMinRadiusScale;                                    // 0x00A8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InitialMaxRadiusScale;                                    // 0x00AC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InitialFullStrengthRatio;                                 // 0x00B0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InitialFarPlaneMinCap;                                    // 0x00B4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InitialFarPlaneMinDistance;                               // 0x00B8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InitialFarPlaneMaxDistance;                               // 0x00BC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InitialNearPlaneMaxDistance;                              // 0x00C0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InitialNearPlaneMinDistance;                              // 0x00C4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InitialNearPlaneMaxScaling;                               // 0x00C8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InitialIdleAimAssistSmoothingDuration;                    // 0x00CC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InitialNoTargetAimAssistSmoothingDuration;                // 0x00D0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               InitialbBulletMagnetismAlwaysOn;                          // 0x00D4(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00D5(0x0003) MISSED OFFSET
	float                                              InitialBulletMagnetismOuterAngle;                         // 0x00D8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InitialBulletMagnetismInnerAngle;                         // 0x00DC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               InitialbBulletMagnetismZoomScale;                         // 0x00E0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x00E1(0x0003) MISSED OFFSET
	float                                              InitialBulletMagnetismZoomScale;                          // 0x00E4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector2D                                   InitialBulletMagnetismCorrectionRate;                     // 0x00E8(0x0008) (Transient, IsPlainOldData)
	float                                              InitialMaxBulletMagnetismDeflection;                      // 0x00F0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InitialMaxSnapToTargetPitch;                              // 0x00F4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              InitialMaxSnapToTargetYaw;                                // 0x00F8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAimAssistParameters");
		return ptr;
	}

};


// Class OakGame.OakAimAssistStrategy
// 0x0130 (0x0158 - 0x0028)
class UOakAimAssistStrategy : public UAimAssistStrategy
{
public:
	class AOakPlayerController*                        OakPlayerController;                                      // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UTargetingComponent*                         TargetingComponent;                                       // 0x0030(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UOakGameInstance*                            OakGameInstance;                                          // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      AimAssistActor;                                           // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FAimAssistSmoothingProperties               AimAssistSmoothingProperties;                             // 0x0048(0x0020) (Transient)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0068(0x0018) MISSED OFFSET
	class AActor*                                      CurrentBestTarget;                                        // 0x0080(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xD0];                                      // 0x0088(0x00D0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAimAssistStrategy");
		return ptr;
	}

};


// Class OakGame.OakAISwarmComponent
// 0x01C0 (0x08E0 - 0x0720)
class UOakAISwarmComponent : public UBoxComponent
{
public:
	struct FScriptMulticastDelegate                    OnReachedDestination;                                     // 0x0720(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDestroyed;                                              // 0x0730(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FOakAISwarmMovement                         DefaultMovement;                                          // 0x0740(0x0188) (Edit)
	bool                                               bLimitToBounds;                                           // 0x08C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x08C9(0x0003) MISSED OFFSET
	float                                              ReachedDistance;                                          // 0x08CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FOakAISwarmActor>                    SwarmActors;                                              // 0x08D0(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAISwarmComponent");
		return ptr;
	}


	void SetSwarmMovement(const struct FOakAISwarmMovement& Movement);
	void SetSwarmDestination(class USceneComponent* Destination);
	void SetSwarmActorMovement(class AActor* Actor, const struct FOakAISwarmMovement& Movement);
	void SetSwarmActorDestination(class AActor* Actor, class USceneComponent* Destination);
	void RemoveSwarmActor(class AActor* Actor);
	void AddSwarmActor(class AActor* Actor);
	void ActorDestroyed(class AActor* Actor);
};


// Class OakGame.OakAIWeaponUserComponent
// 0x0030 (0x08E0 - 0x08B0)
class UOakAIWeaponUserComponent : public UAIWeaponUserComponent
{
public:
	class AOakAIController*                            OakAIController;                                          // 0x08B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UWeaponSlotData*                             WeaponSlot;                                               // 0x08B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x08C0(0x0008) MISSED OFFSET
	struct FGbxAttributeInteger                        AIBurstCount;                                             // 0x08C8(0x000C) (Transient)
	struct FGbxAttributeFloat                          AIBurstDelay;                                             // 0x08D4(0x000C) (Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAIWeaponUserComponent");
		return ptr;
	}

};


// Class OakGame.OakAssetManager
// 0x00B0 (0x04C0 - 0x0410)
class UOakAssetManager : public UGbxAssetManager
{
public:
	TArray<class UObject*>                             CrossLevelAssets;                                         // 0x0410(0x0010) (ZeroConstructor)
	class ULevelAssetListData*                         LevelAssetListData;                                       // 0x0420(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0428(0x0028) MISSED OFFSET
	TMap<int, class FString>                           LocVOChunkIds;                                            // 0x0450(0x0050) (Edit, ZeroConstructor, Config)
	unsigned char                                      UnknownData01[0x20];                                      // 0x04A0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAssetManager");
		return ptr;
	}

};


// Class OakGame.OakAssetMappingData
// 0x0230 (0x0490 - 0x0260)
class UOakAssetMappingData : public UAssetMappingData
{
public:
	TMap<uint32_t, class FString>                      AbilityTreeItemsMap;                                      // 0x0260(0x0050) (Edit, ZeroConstructor, EditConst)
	TMap<uint32_t, class FString>                      PlayerAbilitiesMap;                                       // 0x02B0(0x0050) (Edit, ZeroConstructor, EditConst)
	TMap<uint32_t, class FString>                      PlayerAbilitiesSlotMap;                                   // 0x0300(0x0050) (Edit, ZeroConstructor, EditConst)
	TMap<uint32_t, class FString>                      AugmentSlotMap;                                           // 0x0350(0x0050) (Edit, ZeroConstructor, EditConst)
	TMap<uint32_t, class FString>                      AugmentsMap;                                              // 0x03A0(0x0050) (Edit, ZeroConstructor, EditConst)
	TMap<uint32_t, class FString>                      InventorySlotMap;                                         // 0x03F0(0x0050) (Edit, ZeroConstructor, EditConst)
	TMap<uint32_t, class FString>                      PlayerClassesMap;                                         // 0x0440(0x0050) (Edit, ZeroConstructor, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAssetMappingData");
		return ptr;
	}

};


// Class OakGame.OakAttachedDrone
// 0x0308 (0x0760 - 0x0458)
class AOakAttachedDrone : public AActor
{
public:
	class UStaticMeshComponent*                        StaticMeshComponent;                                      // 0x0458(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FName                                       Socket;                                                   // 0x0460(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Slot;                                                     // 0x0468(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimationAsset*                             ExitVehicleBoneAnim;                                      // 0x0470(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimationAsset*                             EnterVehicleBoneAnim;                                     // 0x0478(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 IdleFloatCurve;                                           // 0x0480(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FloatCycleTime;                                           // 0x0488(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FloatHeightDelta;                                         // 0x048C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGbxParam                                   IdleMovementTime;                                         // 0x0490(0x0080) (Edit)
	class UCurveFloat*                                 MovementCurve;                                            // 0x0510(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MovementTime;                                             // 0x0518(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinMovementDistance;                                      // 0x051C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxMovementDistance;                                      // 0x0520(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RotationSpeed;                                            // 0x0524(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 OwnerAccelerationEffect;                                  // 0x0528(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DeathTime;                                                // 0x0530(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ExitBlendTime;                                            // 0x0534(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EnterBlendTime;                                           // 0x0538(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bExplodeOnContact;                                        // 0x053C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x053D(0x0003) MISSED OFFSET
	struct FVector                                     EllipseOffset;                                            // 0x0540(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     EllipseScale;                                             // 0x054C(0x000C) (Edit, IsPlainOldData)
	bool                                               bActiveWhenVehicleHasDriver;                              // 0x0558(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bActiveWhenVehicleHasOccupant;                            // 0x0559(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bActiveWhenVehicleIsDamaged;                              // 0x055A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bActiveWhenOwnerThreatened;                               // 0x055B(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAlwaysActive;                                            // 0x055C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bDebugDrawEllipse;                                        // 0x055D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x055E(0x0002) MISSED OFFSET
	class USphereComponent*                            SphereComponent;                                          // 0x0560(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UWwiseAudioComponent*                        WwiseAudioComponent;                                      // 0x0568(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOakDamageComponent*                         DamageComponent;                                          // 0x0570(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTeamComponent*                              TeamComponent;                                            // 0x0578(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0xD8];                                      // 0x0580(0x00D8) MISSED OFFSET
	struct FVector                                     LocalOffset;                                              // 0x0658(0x000C) (Net, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2C];                                      // 0x0664(0x002C) MISSED OFFSET
	struct FVector                                     WantedLocation;                                           // 0x0690(0x000C) (Net, Transient, IsPlainOldData)
	bool                                               bIsInCombat;                                              // 0x069C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1B];                                      // 0x069D(0x001B) MISSED OFFSET
	bool                                               bIsAtIdleLocation;                                        // 0x06B8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x37];                                      // 0x06B9(0x0037) MISSED OFFSET
	class AActor*                                      CurrentTargetActor;                                       // 0x06F0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class AOakVehicle*                                 MyVehicle;                                                // 0x06F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class USkeletalMeshComponent*                      MyVehicleMesh;                                            // 0x0700(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UAnimInstance*                               MyVehicleAnimInstance;                                    // 0x0708(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x50];                                      // 0x0710(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAttachedDrone");
		return ptr;
	}


	void SphereComponent_OnOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnStopMoving(class AOakVehicle* Vehicle);
	void OnStartMoving(class AOakVehicle* Vehicle);
	void OnRep_WantedLocation();
	void OnExiting(class AOakVehicle* Vehicle);
	void OnEntering(class AOakVehicle* Vehicle);
	void OnDestroyed(class AOakVehicle* Vehicle);
	class UWwiseAudioComponent* GetWwiseAudioComponent();
};


// Class OakGame.OakAttachedDroneAttacker
// 0x0100 (0x0860 - 0x0760)
class AOakAttachedDroneAttacker : public AOakAttachedDrone
{
public:
	class UClass*                                      LightProjectileData;                                      // 0x0760(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AttackDelay;                                              // 0x0768(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                BurstCount;                                               // 0x076C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ProjectileSpeed;                                          // 0x0770(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxPrediction;                                            // 0x0774(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageType;                                               // 0x0778(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0780(0x0008) MISSED OFFSET
	struct FEnvQueryParams                             QueryParams;                                              // 0x0788(0x00B8) (Edit)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0840(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAttachedDroneAttacker");
		return ptr;
	}


	void OnFire(class AOakVehicle* Vehicle, class AActor* FiringAtTarget);
};


// Class OakGame.OakAttachedDroneHealer
// 0x0030 (0x0790 - 0x0760)
class AOakAttachedDroneHealer : public AOakAttachedDrone
{
public:
	class UClass*                                      LightBeamData;                                            // 0x0760(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HealDelay;                                                // 0x0768(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HealDuration;                                             // 0x076C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageType;                                               // 0x0770(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      HealingValueInitializer;                                  // 0x0778(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HealingValueFactor;                                       // 0x0780(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0784(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAttachedDroneHealer");
		return ptr;
	}


	void OnStopHeal(class AOakVehicle* Vehicle);
	void OnStartHeal(class AOakVehicle* Vehicle);
};


// Class OakGame.OakAudioGlobalsData
// 0x0208 (0x03F0 - 0x01E8)
class UOakAudioGlobalsData : public UGbxAudioGlobalsData
{
public:
	class UWwiseEvent*                                 FakePauseGameAudioEvent;                                  // 0x01E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 StopAllOnQuitEvent;                                       // 0x01F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxCondition*                               TiredCondition;                                           // 0x01F8(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOakElementalEffectData*                     FireElementalEffect;                                      // 0x0200(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UOakElementalEffectData*                     CorrosiveElementalEffect;                                 // 0x0208(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UOakElementalEffectData*                     ShockElementalEffect;                                     // 0x0210(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UOakElementalEffectData*                     RadiationElementalEffect;                                 // 0x0218(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UOakStatusEffectPresentationData*            CryoPresentation;                                         // 0x0220(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseSwitch*                                IncendiarySwitch;                                         // 0x0228(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseSwitch*                                CorrosiveSwitch;                                          // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseSwitch*                                ShockSwitch;                                              // 0x0238(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseSwitch*                                RadiationSwitch;                                          // 0x0240(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseSwitch*                                CryoSwitch;                                               // 0x0248(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  PlayerLocationWindRTPC;                                   // 0x0250(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  FireRateInSeconds;                                        // 0x0258(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  FireRateRatio;                                            // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  WeaponChargeRatio;                                        // 0x0268(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  WeaponHeatRatio;                                          // 0x0270(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  WeaponJankinessRatio;                                     // 0x0278(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  WeaponIsFiring;                                           // 0x0280(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  WeaponAmmoCount;                                          // 0x0288(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  WeaponAccuracySpreadInDegrees;                            // 0x0290(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  WeaponZoom;                                               // 0x0298(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  WeaponRandomVariation;                                    // 0x02A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  WeaponTargetLocked;                                       // 0x02A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  WeaponConditionRatio;                                     // 0x02B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  WeaponItemScore;                                          // 0x02B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HighResolutionFireRate;                                   // 0x02C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02C4(0x0004) MISSED OFFSET
	TArray<class UWwiseSwitch*>                        SwitchesToAlwaysPrepare;                                  // 0x02C8(0x0010) (Edit, ZeroConstructor)
	class UWwiseRtpc*                                  GoreAudioScaleRTPC;                                       // 0x02D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  PuddleTransitionRTPC;                                     // 0x02E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  PuddleScaleRTPC;                                          // 0x02E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  PuddleOpacityRTPC;                                        // 0x02F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       VehicleEngineAudioComponentTag;                           // 0x02F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinDelayBetweenJumpAudioEvents;                           // 0x0300(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EngineAttenuationScalingMinValue;                         // 0x0304(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EngineAttenuationScalingRefRPMRatio;                      // 0x0308(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x030C(0x0004) MISSED OFFSET
	class UWwiseRtpc*                                  VehicleHealthRtpc;                                        // 0x0310(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  VehicleIsLocallyControlledRtpc;                           // 0x0318(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  EngineRpmRtpc;                                            // 0x0320(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  ThrottleRtpc;                                             // 0x0328(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  MovementDirectionRtpc;                                    // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  HandbrakeRTPC;                                            // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  CameraRotationRTPC;                                       // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  VehicleApproachSpeedRtpc;                                 // 0x0348(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  TimeSpentInAirRTPC;                                       // 0x0350(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  ForwardSpeedRtpc;                                         // 0x0358(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  HoveringInputRtpc;                                        // 0x0360(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  SuspensionCompressionRtpc;                                // 0x0368(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  WheelSuspensionCompressionSpeedRtpc;                      // 0x0370(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  EngineGearRtpc;                                           // 0x0378(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  EngineGearIsShifingUpRtpc;                                // 0x0380(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  WheelIsAirborneRtpc;                                      // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  WheelSkidAmountRtpc;                                      // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  BoostPoolRTPC;                                            // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  OverspinRTPC;                                             // 0x03A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  WheelSpinRtpc;                                            // 0x03A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 VehicleAirborneStartEvent;                                // 0x03B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 VehicleAirborneStopEvent;                                 // 0x03B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 VehicleHoverStartEvent;                                   // 0x03C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 VehicleHoverStopEvent;                                    // 0x03C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FColor                                      MusicDebuggerPrimaryTextColor;                            // 0x03D0(0x0004) (Edit, IsPlainOldData)
	struct FColor                                      MusicDebuggerErrorTextColor;                              // 0x03D4(0x0004) (Edit, IsPlainOldData)
	struct FColor                                      MusicDebuggerInfoTextColor;                               // 0x03D8(0x0004) (Edit, IsPlainOldData)
	struct FColor                                      MusicDebuggerActiveThreatTextColor;                       // 0x03DC(0x0004) (Edit, IsPlainOldData)
	struct FColor                                      MusicDebuggerStaleThreatTextColor;                        // 0x03E0(0x0004) (Edit, IsPlainOldData)
	struct FColor                                      MusicDebuggerInterestModifierTextColor;                   // 0x03E4(0x0004) (Edit, IsPlainOldData)
	float                                              MinimumLootBeamSoundInterval;                             // 0x03E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03EC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAudioGlobalsData");
		return ptr;
	}

};


// Class OakGame.OakAudioPatchBeneathTheMeridian
// 0x0060 (0x04B8 - 0x0458)
class AOakAudioPatchBeneathTheMeridian : public AActor
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0458(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAudioPatchBeneathTheMeridian");
		return ptr;
	}


	void TryStopVehicleMusic();
	void TryBeginVehicleMusic();
	void StopVehicleMusic(class UWwiseEvent* WwiseEvent);
	void OnTouchedTurnOnRadioTrigger(class AActor* TouchingActor, bool bIsPlayer, class UActorComponent* ComponentTouched);
	void OnMissionObjectiveUpdate(const struct FMissionObjectiveReference& Objective, EMissionObjectiveEvent ObjectiveEvent, int ObjectiveCount);
	void MayaVehicleSpawned(class AOakVehicle* MayaVehicle);
	void MayaVehicleDestroyed(class AActor* MayaVehicleActor);
	void BeginVehicleMusic(class AOakVehicle* Vehicle, class UWwiseEvent* WwiseEvent, class UWwiseState* WwiseState);
};


// Class OakGame.OakAutomationActor
// 0x0000 (0x0458 - 0x0458)
class AOakAutomationActor : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAutomationActor");
		return ptr;
	}

};


// Class OakGame.OakAutomationActorComponent
// 0x0000 (0x0178 - 0x0178)
class UOakAutomationActorComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAutomationActorComponent");
		return ptr;
	}

};


// Class OakGame.OakAutomationHelper
// 0x0000 (0x0028 - 0x0028)
class UOakAutomationHelper : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAutomationHelper");
		return ptr;
	}


	class FString STATIC_SpawnSerialNumberFromPool(class UItemPoolListInterface* Pool, int GameStage, class AActor* Context);
	class AActor* STATIC_SpawnInventoryFromSerialNumber(const class FString& SerialNumber, class UObject* Context);
	class FString STATIC_GetPickupSerialNumber(class AOakInventoryItemPickup* Pickup);
	TArray<class UClass*> STATIC_GetClassListFromGameConfig(const class FString& Section, const class FString& Key);
	bool STATIC_DecodeSerialNumber(const class FString& SerialNumber, class UManufacturerData** Manufacturer, class UInventoryBalanceData** BalanceData, class UInventoryData** InvData, int* GameStage, TArray<class UInventoryPartData*>* Parts, TArray<class UInventoryGenericPartData*>* GenericParts, TArray<class UInventoryCustomizationPartData*>* CustomParts);
};


// Class OakGame.OakBaseMissionRewardData
// 0x00C8 (0x00F8 - 0x0030)
class UOakBaseMissionRewardData : public UMissionRewardData
{
public:
	TSoftObjectPtr<class UInventoryCategoryData>       CurrencyType;                                             // 0x0030(0x0028) (Edit, DisableEditOnInstance)
	struct FAttributeInitializationData                CurrencyReward;                                           // 0x0058(0x0038) (Edit, DisableEditOnInstance)
	bool                                               bIgnoreCreditsRewardFormula;                              // 0x0090(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0091(0x0007) MISSED OFFSET
	struct FAttributeInitializationData                ExperienceReward;                                         // 0x0098(0x0038) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UItemPoolData>                ItemPoolReward;                                           // 0x00D0(0x0028) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakBaseMissionRewardData");
		return ptr;
	}

};


// Class OakGame.OakBenchmarkGameMode
// 0x0008 (0x0550 - 0x0548)
class AOakBenchmarkGameMode : public AGameMode
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0548(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakBenchmarkGameMode");
		return ptr;
	}

};


// Class OakGame.OakBenchmarkPlayerState
// 0x0008 (0x0530 - 0x0528)
class AOakBenchmarkPlayerState : public APlayerState
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0528(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakBenchmarkPlayerState");
		return ptr;
	}

};


// Class OakGame.OakBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UOakBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakBlueprintLibrary");
		return ptr;
	}


	void STATIC_UnregisterModifier(class UObject* WorldContextObject, const class FString& ModifierName);
	void STATIC_UnregisterAllModifiers(class UObject* WorldContextObject);
	void STATIC_UnlockPhotoMode(class AActor* Actor, const struct FName& Reason);
	void STATIC_UnlockEchoLogForAllPlayers(class UObject* WorldContextObject, class UEchoLogData* EchoLog);
	void STATIC_StartCameraFadeAuthoritative(class APlayerController* PlayerController, float FromAlpha, float ToAlpha, float Duration, const struct FLinearColor& Color, bool bShouldFadeAudio, bool bHoldWhenFinished);
	class ADroppedInventoryItemPickup* STATIC_SpawnPickupFromClass(class AActor* ContextActor, class UClass* PickupClass, const struct FName& SocketName, class ULootSpawnPatternData* SpawnPattern, bool bAttachPickup);
	int STATIC_SpawnLootAsync(class AActor* ContextActor, const struct FSpawnDroppedPickupLootRequest& Request);
	void STATIC_SpawnLoot(class AActor* ContextActor, class UItemPoolListInterface* ItemPools, const struct FName& SocketName, class ULootSpawnPatternData* SpawnPattern, float TimeToSpawnLootOver, bool AttachLoot, TArray<class ADroppedInventoryItemPickup*>* AllDroppedPickups);
	void STATIC_SetTickableWhenPausedOnHierarchy(class AActor* RootActor, bool bTickWhenPaused);
	void STATIC_SetTerritory(class AActor* AIActor, class AActor* TerritoryActor);
	void STATIC_SetHandIkToSocket(class AActor* Actor, bool bLeftHandWorld, bool bRightHandWorld, const struct FName& LeftHandSocket, const struct FName& RightHandSocket);
	void STATIC_SetEnableTrueTrialsEvent(class UObject* WorldContextObject, bool bSetEnabled);
	void STATIC_SetCoordinatedEffectSwitchState(class AActor* Actor, unsigned char State);
	void STATIC_SetCoordinatedEffectSwitch(class AActor* Actor, const struct FName& State);
	void STATIC_SetAnimationStyle(class AActor* Actor, unsigned char NewStyle);
	void STATIC_ResourceUnlockWeaponsRestricted(class AActor* Actor, const struct FName& Reason);
	void STATIC_ResourceUnlockSprinting(class AActor* Actor, const struct FName& Reason);
	void STATIC_ResourceUnlockPlayerInfiniteAmmo(class AActor* Actor, const struct FName& Reason);
	void STATIC_ResourceUnlockPlayerGrenadeThrow(class AActor* Actor, const struct FName& Reason);
	void STATIC_ResourceUnlockMelee(class AActor* Actor, const struct FName& Reason);
	void STATIC_ResourceUnlockForcedSlide(class AActor* Actor, const struct FName& Reason);
	void STATIC_ResourceUnlockAllPlayersWeaponsRestricted(class UObject* WorldContextObject, const struct FName& Reason);
	void STATIC_ResourceUnlockAllPlayersInfiniteAmmo(class UObject* WorldContextObject, const struct FName& Reason);
	void STATIC_ResourceLockWeaponsRestricted(class AActor* Actor, const struct FName& Reason);
	void STATIC_ResourceLockSprinting(class AActor* Actor, const struct FName& Reason);
	void STATIC_ResourceLockPlayerInfiniteAmmo(class AActor* Actor, const struct FName& Reason);
	void STATIC_ResourceLockPlayerGrenadeThrow(class AActor* Actor, const struct FName& Reason);
	void STATIC_ResourceLockMelee(class AActor* Actor, const struct FName& Reason);
	void STATIC_ResourceLockForcedSlide(class AActor* Actor, const struct FName& Reason);
	void STATIC_ResourceLockAllPlayersWeaponsRestricted(class UObject* WorldContextObject, const struct FName& Reason);
	void STATIC_ResourceLockAllPlayersInfiniteAmmo(class UObject* WorldContextObject, const struct FName& Reason);
	class UObject* STATIC_ResolveObjectFromPathString(const class FString& ObjectPathString);
	void STATIC_ResetTerritory(class AActor* AIActor);
	class AActor* STATIC_ReRollInventoryGenericParts(class UInventoryBalanceStateComponent* InventoryBalanceState, TArray<class UInventoryGenericPartData*> PreferredGenericParts);
	void STATIC_ReplaceDefaultAITree(class AActor* Target, class UClass* AIAction);
	void STATIC_RemoveGlobalPlayerDemiGodLock(class UObject* WorldContextObject, const struct FName& Reason);
	void STATIC_RemoveGlobalInputLock(class UObject* WorldContextObject, EPlayerInputLockType InputLockType, const struct FName& Reason);
	void STATIC_RegisterModifier(class UObject* WorldContextObject, const class FString& ModifierName, const struct FOakModifierData& ModifierData);
	void STATIC_RegisterCustomModifier(class UObject* WorldContextObject, const class FString& ModifierName, const class FString& TargetResolverName, const class FString& StatusEffectName, float Value);
	void STATIC_PlayEchoDialogForAllPlayers(class UObject* WorldContextObject, class UEchoLogData* EchoLog, class UGbxDialogComponent* PlayOnSpeaker);
	void STATIC_LockPhotoMode(class AActor* Actor, const struct FName& Reason);
	bool STATIC_IsSpawner(class AActor* Spawner);
	bool STATIC_IsPointInPlayerViewFrustum(class APlayerController* PlayerController, const struct FVector& Point);
	bool STATIC_IsInventoryFromLeague(class UInventoryBalanceStateComponent* Inventory, TEnumAsByte<EOakLeague> RequiredLeague, bool bIncludeParts);
	bool STATIC_IsHealthy(class AActor* Actor);
	bool STATIC_IsGameUsingInstancedLoot(class UObject* WorldContextObject);
	bool STATIC_IsAlive(class AActor* Actor);
	void STATIC_InstaKillAllPlayerCharacters(class UObject* WorldContextObject, const struct FVector& SourceLocation, float Range);
	void STATIC_InitializeNonAugmentBoosterPickup(class ADroppedInventoryItemPickup* Pickup, float ShieldChargeModifierValue, class AActor* ManagedActorOwner);
	void STATIC_GiveRewardItem(class AOakCharacter_Player* OakPlayer, class AActor* ContextActor, class UItemPoolData* ItemPool, class UClass* LootGameStageVarianceFormula);
	class UZoneMapData* STATIC_GetZoneMapForLevel(const class FString& LevelName, class UObject* WorldContextObject);
	class AOakTravelStationTracker* STATIC_GetTravelStationTracker(class UObject* WorldContextObject);
	class AOakCharacter_Player* STATIC_GetRandomPlayerCharacter(class UObject* WorldContextObject);
	bool STATIC_GetPlayerShieldInfo(class APlayerController* Controller, struct FHealthType* OutHealthType);
	void STATIC_GetKnownZoneMapDisplayList(class UObject* WorldContextObject, TArray<struct FZoneMapDisplayInfo>* DisplayList);
	bool STATIC_GetEffectiveLevelDifference(class AActor* ActorA, class AActor* ActorB, bool bIncludeLevelSync, int* OutLevelDifference);
	class UOakDialogBlackboard* STATIC_GetDialogBlackboard(class UObject* WorldContextObject);
	unsigned char STATIC_GetCoordinatedEffectSwitchState(class AActor* Actor);
	TEnumAsByte<ETeamAttitude> STATIC_GetAttitudeTowardPlayer(class AActor* SourceActor);
	TEnumAsByte<ETeamAttitude> STATIC_GetAttitudeTowardActor(class AActor* SourceActor, class AActor* TargetActor);
	class ASpawner* STATIC_GetAssociatedSpawner(class AActor* Target);
	unsigned char STATIC_GetAnimationStyle(class AActor* Actor);
	void STATIC_GetAllPlayerPawns(class UObject* WorldContextObject, TArray<class APawn*>* Pawns);
	void STATIC_GetAllPlayerCharacters(class UObject* WorldContextObject, bool bLocalOnly, TArray<class AOakCharacter_Player*>* Characters);
	struct FProjectedMeshResults STATIC_GenerateProjectedMesh(class AActor* Actor, const struct FTransform& ProjectionTransform, const struct FTransform& ComponentTransform, const struct FProjectedMeshOptions& Options);
	class UOakNavComponent* STATIC_FindOakNavComponent(class AActor* Actor);
	class AOakCharacter_Player* STATIC_FindNearestPlayerCharacters(class UObject* WorldContextObject, const struct FVector& Location);
	class AActor* STATIC_FindNearestActorSpawnedBy(const struct FVector& SourceLocation, class AActor* Spawner);
	class AOakCharacter_Player* STATIC_FindFarthestPlayerCharacters(class UObject* WorldContextObject, const struct FVector& Location);
	void STATIC_EnterVehicle(class AActor* Actor, class AActor* Vehicle, int SeatIndex, bool bInstant);
	void STATIC_DetachProjectedShield(class USceneComponent* Component);
	void STATIC_DestroyProjectedShield(class USceneComponent* Component);
	void STATIC_DeactivateAllModifiers(class UObject* WorldContextObject);
	class UViewAttachmentComponent* STATIC_CreateViewAttachmentComponent(class AActor* Owner, bool bUpdateLocation, bool bUpdateRotation, float PitchScale);
	struct FOakProjectedShield STATIC_CreateProjectedShield(class AActor* Owner, class USceneComponent* OwnerComponent, class UStaticMesh* Mesh, const struct FName& CollisionProfile, const struct FTransform& MeshRelativeTransform, const struct FTransform& ParticleSystemTransform);
	void STATIC_CancelCameraFadeAuthoritative(class APlayerController* PlayerController);
	void STATIC_CancelAsyncLootSpawnRequest(class UObject* WorldContextObject, int RequestID);
	bool STATIC_BuildPathTo(class AActor* Actor, const struct FVector& Destination, float SearchRadius, float AgentRadiusOverride, TArray<struct FVector>* OutPoints);
	bool STATIC_BuildPath(class AActor* Actor, const struct FVector& Start, const struct FVector& Destination, float SearchRadius, float AgentRadiusOverride, TArray<struct FVector>* OutPoints);
	void STATIC_BroadcastKilledEnemyFriendEvent(class AActor* KilledActor, EKilledEnemyFriendEventType KilledEnemyFriendEventType, class UGameStatData* KillStat, int KillCount);
	void STATIC_AwardKillExperienceToParty(class AActor* ContextActor, class AOakPlayerController* OptionalKiller);
	void STATIC_AttachProjectedShield(class USceneComponent* Component, class AActor* Owner, const struct FName& AttachSocket);
	bool STATIC_AreAllPlayerInRangeLookingAtActor(class AActor* LookAtTarget, float MaxRange, float ConeAngle);
	void STATIC_AddGlobalPlayerDemiGodLock(class UObject* WorldContextObject, const struct FName& Reason);
	void STATIC_AddGlobalInputLock(class UObject* WorldContextObject, EPlayerInputLockType InputLockType, const struct FName& Reason);
	void STATIC_ActivateAllModifiers(class UObject* WorldContextObject);
};


// Class OakGame.OakBodyMeshLinkedParameterData
// 0x0010 (0x0040 - 0x0030)
class UOakBodyMeshLinkedParameterData : public UGbxDataAsset
{
public:
	TArray<struct FBodyMeshLinkedParameters>           OwnerClassesToParameters;                                 // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakBodyMeshLinkedParameterData");
		return ptr;
	}

};


// Class OakGame.OakCameraInputs
// 0x0618 (0x06D0 - 0x00B8)
class UOakCameraInputs : public UCameraInputs
{
public:
	class AWeapon*                                     Weapon;                                                   // 0x00B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bResetAutoLook;                                           // 0x00C0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bResetAutoLookWaitTimer;                                  // 0x00C1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bEchoDeviceActive;                                        // 0x00C2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xD];                                       // 0x00C3(0x000D) MISSED OFFSET
	struct FPostProcessSettings                        FocusOverridePPSettings;                                  // 0x00D0(0x0600) (Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCameraInputs");
		return ptr;
	}

};


// Class OakGame.OakCapsuleComponent
// 0x0010 (0x0730 - 0x0720)
class UOakCapsuleComponent : public UCapsuleComponent
{
public:
	bool                                               bIronBearNoBounce;                                        // 0x0720(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0721(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCapsuleComponent");
		return ptr;
	}

};


// Class OakGame.OakCARMenuInteractionInterface
// 0x0000 (0x0028 - 0x0028)
class UOakCARMenuInteractionInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCARMenuInteractionInterface");
		return ptr;
	}

};


// Class OakGame.OakCARVehicleData
// 0x0750 (0x0780 - 0x0030)
class UOakCARVehicleData : public UGbxDataAsset
{
public:
	ECARRestrictionType                                RestrictionType;                                          // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0031(0x000F) MISSED OFFSET
	struct FOakCARVehicleUIInfo                        UIInfo;                                                   // 0x0040(0x06E0) (Edit)
	bool                                               bIsSmallVehicle;                                          // 0x0720(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0721(0x0003) MISSED OFFSET
	int                                                SortPriority;                                             // 0x0724(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       StandInDefault;                                           // 0x0728(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       StandInByPart[0x9];                                       // 0x0730(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0778(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCARVehicleData");
		return ptr;
	}

};


// Class OakGame.OakCARMenuLoadout
// 0x01B8 (0x01E8 - 0x0030)
class UOakCARMenuLoadout : public UGbxDataAsset
{
public:
	struct FOakCARMenuVehicleConfig                    VehicleConfig;                                            // 0x0030(0x0188) (Edit)
	TSoftObjectPtr<class UClass>                       TempPreviewActorClass;                                    // 0x01B8(0x0028) (Edit)
	unsigned char                                      UnknownData00[0x8];                                       // 0x01E0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCARMenuLoadout");
		return ptr;
	}

};


// Class OakGame.OakCARVehiclePartData
// 0x0780 (0x07B0 - 0x0030)
class UOakCARVehiclePartData : public UGbxDataAsset
{
public:
	class UOakCARVehicleData*                          PartOfVehicle;                                            // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	ECARPartType                                       PartType;                                                 // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UInventoryData>               Wheel;                                                    // 0x0040(0x0028) (Edit)
	TSoftObjectPtr<class UInventoryBalanceData>        WheelBalance;                                             // 0x0068(0x0028) (Edit)
	TSoftObjectPtr<class UVehiclePartData>             Part;                                                     // 0x0090(0x0028) (Edit)
	unsigned char                                      UnknownData01[0x8];                                       // 0x00B8(0x0008) MISSED OFFSET
	struct FOakCARVehicleUIInfo                        UIInfo;                                                   // 0x00C0(0x06E0) (Edit)
	int                                                SortPriority;                                             // 0x07A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FColor                                      DefaultColor1;                                            // 0x07A4(0x0004) (Edit, IsPlainOldData)
	struct FColor                                      DefaultColor2;                                            // 0x07A8(0x0004) (Edit, IsPlainOldData)
	struct FColor                                      DefaultColor3;                                            // 0x07AC(0x0004) (Edit, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCARVehiclePartData");
		return ptr;
	}

};


// Class OakGame.OakCARVehiclePartStat
// 0x0008 (0x0070 - 0x0068)
class UOakCARVehiclePartStat : public UUIStatData
{
public:
	int                                                StatListDisplayPriority;                                  // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCARVehiclePartStat");
		return ptr;
	}

};


// Class OakGame.OakChallenge
// 0x0148 (0x0260 - 0x0118)
class UOakChallenge : public UChallenge
{
public:
	TSoftObjectPtr<class URegionData>                  REGION;                                                   // 0x0118(0x0028) (Edit, DisableEditOnInstance)
	struct FAttributeInitializationData                ExperienceReward;                                         // 0x0140(0x0038) (Edit, DisableEditOnInstance)
	struct FAttributeInitializationData                CashReward;                                               // 0x0178(0x0038) (Edit, DisableEditOnInstance)
	struct FAttributeInitializationData                EridiumReward;                                            // 0x01B0(0x0038) (Edit, DisableEditOnInstance)
	class UItemPoolData*                               RewardItemPool;                                           // 0x01E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UOakCustomizationData*>               RewardCustomizations;                                     // 0x01F0(0x0010) (Edit, ZeroConstructor)
	TArray<class UWeaponSkinPartData*>                 RewardWeaponSkins;                                        // 0x0200(0x0010) (Edit, ZeroConstructor)
	TArray<class UWeaponTrinketPartData*>              RewardWeaponTrinkets;                                     // 0x0210(0x0010) (Edit, ZeroConstructor)
	TArray<struct FOakChallengeTierRewards>            TierRewards;                                              // 0x0220(0x0010) (ZeroConstructor, Deprecated)
	TArray<struct FOakChallengeTierRewardsPerInstance> TierRewardsPerInstance;                                   // 0x0230(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UActivityFeedReward*                         ActivityFeedReward;                                       // 0x0240(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsCrewChallenge;                                         // 0x0248(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bManuallyGiveTierRewards;                                 // 0x0249(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x024A(0x0006) MISSED OFFSET
	class UPlayerClassIdentifier*                      AssociatedCharacterClass;                                 // 0x0250(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           VaultCardID;                                              // 0x0258(0x0004) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	bool                                               bWeeklyVaultCard;                                         // 0x025C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x025D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakChallenge");
		return ptr;
	}


	int GetChallengeLevel();
};


// Class OakGame.OakChallengeCategoryData
// 0x0048 (0x0098 - 0x0050)
class UOakChallengeCategoryData : public UChallengeCategoryData
{
public:
	class UInWorldIconData*                            LevelActorIcon;                                           // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UInWorldIconData*                            CompleteLevelActorIcon;                                   // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  LevelActorMapIconActive;                                  // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  LevelActorMapIconComplete;                                // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDontUseScaleformIcon;                                    // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	class FString                                      ScaleformMapIconActive;                                   // 0x0078(0x0010) (Edit, ZeroConstructor)
	class FString                                      ScaleformMapIconComplete;                                 // 0x0088(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakChallengeCategoryData");
		return ptr;
	}

};


// Class OakGame.OakChallengeList
// 0x0020 (0x0068 - 0x0048)
class UOakChallengeList : public UChallengeList
{
public:
	uint32_t                                           AssociatedVaultCardID;                                    // 0x0048(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FDataTableRowHandle                         AssociatedSeasonHandle;                                   // 0x0050(0x0010) (Deprecated)
	TEnumAsByte<EOakLeague>                            ChallengeListLeague;                                      // 0x0060(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0061(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakChallengeList");
		return ptr;
	}

};


// Class OakGame.OakChallengeManager
// 0x0050 (0x0568 - 0x0518)
class AOakChallengeManager : public AChallengeManager
{
public:
	TArray<class UGFxInWorldIconContainer*>            IconContainers;                                           // 0x0518(0x0010) (ZeroConstructor, Transient)
	TArray<class UGFxMinimapWidget*>                   MinimapWidgets;                                           // 0x0528(0x0010) (ZeroConstructor, Transient)
	TArray<struct FChallengeInWorldIcon>               ChallengeInWorldIcons;                                    // 0x0538(0x0010) (ZeroConstructor, Transient)
	TArray<struct FChallengeMinimapIcon>               ChallengeMinimapIcons;                                    // 0x0548(0x0010) (ZeroConstructor, Transient)
	TArray<struct FChallengeInWorldIconQueueEntry>     QueuedInWorldIcons;                                       // 0x0558(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakChallengeManager");
		return ptr;
	}

};


// Class OakGame.OakCustomChallengePersistentState
// 0x0010 (0x0038 - 0x0028)
class UOakCustomChallengePersistentState : public UCustomChallengePersistentState
{
public:
	TArray<bool>                                       RewardTiersClaimed;                                       // 0x0028(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCustomChallengePersistentState");
		return ptr;
	}

};


// Class OakGame.OakChallengesComponent
// 0x00D8 (0x02E0 - 0x0208)
class UOakChallengesComponent : public UChallengesComponent
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0208(0x0050) MISSED OFFSET
	TArray<class UClass*>                              RegisteredDamageChallengeClasses;                         // 0x0258(0x0010) (ZeroConstructor, Transient)
	TArray<struct FDamageChallengeData>                QueuedDamageChallengeData;                                // 0x0268(0x0010) (ZeroConstructor, Transient)
	TArray<class UClass*>                              RegisteredKillChallengeClasses;                           // 0x0278(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x58];                                      // 0x0288(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakChallengesComponent");
		return ptr;
	}


	void ServerRequestManualClaimRewards(class UOakChallenge* Challenge, int RequestedTier);
	void DoAsyncWorkComputingCompletionPercentages(bool bForceToFinishNow);
	void ClientNotifyManualClaimRewardsComplete(class UOakChallenge* Challenge, int ClaimedTier);
	void BroadcastChallengeUpdateFriendEvent(class UChallengesComponent* Component, class UClass* ChallengeClass, int NewValue, bool bDisplayNotification, bool bCompleted);
	void BroadcastChallengeCompletedToFriendSystems(class UChallengesComponent* Component, class UClass* ChallengeClass);
};


// Class OakGame.OakCharacter_CameraMan
// 0x0080 (0x2320 - 0x22A0)
class AOakCharacter_CameraMan : public AOakCharacter
{
public:
	float                                              BaseRollRateMultiplier;                                   // 0x22A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MoveRateMultiplier;                                       // 0x22A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DetachedMoveRateMultiplier;                               // 0x22A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CraneRateMultiplier;                                      // 0x22AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DegreesToMoveMultiplier;                                  // 0x22B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAddDefaultMovementBindings;                              // 0x22B4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x22B5(0x0003) MISSED OFFSET
	class UPawnMovementComponent*                      MovementComponent;                                        // 0x22B8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              AttachedRadius;                                           // 0x22C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5C];                                      // 0x22C4(0x005C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCharacter_CameraMan");
		return ptr;
	}

};


// Class OakGame.OakCharacter_IronBear
// 0x01E0 (0x2480 - 0x22A0)
class AOakCharacter_IronBear : public AOakCharacter
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x22A0(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnExitStartedEvent;                                       // 0x22A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnExitCanceledEvent;                                      // 0x22B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UOakActionAbilityAugmentSlotData*            CoreSlot;                                                 // 0x22C8(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	TArray<class UOakActionAbilityAugmentSlotData*>    CoreSlots;                                                // 0x22D0(0x0010) (ZeroConstructor, Deprecated)
	TArray<class UOakActionAbilityAugmentData_IronBear*> CoreAugments;                                             // 0x22E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	bool                                               bDisableIronBearCapsuleCollisionOnExit;                   // 0x22F0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x22F1(0x0003) MISSED OFFSET
	float                                              ManualExitTimeSeconds;                                    // 0x22F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GundamCoreCooldownTimeSeconds;                            // 0x22F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x22FC(0x0004) MISSED OFFSET
	class UClass*                                      GunnersNestClass;                                         // 0x2300(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       GunnersNestAttachSocketName;                              // 0x2308(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      IronBearUberAbilityClass;                                 // 0x2310(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 StartEngineEvent;                                         // 0x2318(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 StartEngineEventQuick;                                    // 0x2320(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 StopEngineEvent;                                          // 0x2328(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 StartManualExitEvent;                                     // 0x2330(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 StopManualExitEvent;                                      // 0x2338(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseRtpc*                                  RtpcManualExit;                                           // 0x2340(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 StartTimeLeftEvent;                                       // 0x2348(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 StopTimeLeftEvent;                                        // 0x2350(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseRtpc*                                  RtpcTimeLeft;                                             // 0x2358(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseRtpc*                                  RtpcRelativeSpeed;                                        // 0x2360(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseRtpc*                                  RtpcDamage;                                               // 0x2368(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseAuxBus*                                DriverEffectsBus;                                         // 0x2370(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DriverEffectBusWetVolume;                                 // 0x2378(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DriverEffectBusDryVolume;                                 // 0x237C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UOakActionAbility_IronBear*                  IronBearActionAbility;                                    // 0x2380(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class AOakCharacter_Player*                        Gunner;                                                   // 0x2388(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	EIronBearSpawnStyle                                SpawnStyle;                                               // 0x2390(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EIronBearExitReason                                ExitReason;                                               // 0x2391(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x2392(0x0002) MISSED OFFSET
	float                                              DurationTimeRemainingOnExit;                              // 0x2394(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AOakPlayerController*                        OakPlayerController;                                      // 0x2398(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class ASeatPawn*                                   GunnersNest;                                              // 0x23A0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	TArray<EIronBearCoreType>                          ActiveCoreTypes;                                          // 0x23A8(0x0010) (Net, ZeroConstructor, Transient)
	class UGameResourceData*                           BubbleShieldResource;                                     // 0x23B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FWwisePlaybackInstance                      EngineLoop;                                               // 0x23C0(0x0018) (Transient)
	struct FWwisePlaybackInstance                      ManualExitLoop;                                           // 0x23D8(0x0018) (Transient)
	struct FWwisePlaybackInstance                      TimeLeftLoop;                                             // 0x23F0(0x0018) (Transient)
	class UPawnAttachSlotComponent*                    PrimarySeatComponent;                                     // 0x2408(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	EIronBearDamageLevel                               CurrentDamageLevel;                                       // 0x2410(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bBubbleShieldEnabled;                                     // 0x2411(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bBubbleShieldFiring;                                      // 0x2412(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsExiting;                                               // 0x2413(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x2414(0x0004) MISSED OFFSET
	struct FGameResourcePoolReference                  BubbleShieldResourcePool;                                 // 0x2418(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	class UWwiseAudioEffect*                           AppliedAudioEffect;                                       // 0x2430(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxCustomizationComponent*                  CustomizationComponent;                                   // 0x2438(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UAIWeaponUserComponent*>              AIWeaponSlotComponents;                                   // 0x2440(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData05[0x20];                                      // 0x2450(0x0020) MISSED OFFSET
	bool                                               bIronCub;                                                 // 0x2470(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0xF];                                       // 0x2471(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCharacter_IronBear");
		return ptr;
	}


	void StartManualExit();
	void StartDigistructIn();
	void OnRep_CurrentDamageLevel();
	void OnRep_bIsExiting();
	void OnRep_bBubbleShieldFiring();
	void OnRep_bBubbleShieldEnabled();
	void OnPlayerLevelChanged(int OldLevel, int NewLevel);
	void OnHealthMinMaxValueChanged(float NewMin, float NewMax, struct FGameResourcePoolReference* HealthPool);
	void OnHealthCurrentValueChanged(float NewValue, struct FGameResourcePoolReference* HealthPool);
	void OnHardPointUseStateChanged();
	void OnExitStarted();
	void OnExiting(bool bInstantExit);
	void OnExited(class AController* OldController);
	void OnEntering(class AOakCharacter_Player* InGunner);
	void OnEntered();
	void OnDriverDetachFinished(class APawn* InPawn, class AController* InController);
	void OnDriverAttachFinished(class APawn* InPawn, class AController* InController);
	void OnDamageLevelChanged();
	void OnBubbleShieldResourceNowNotDepleted(const struct FGameResourcePoolReference& ResourcePool);
	void OnBubbleShieldResourceNowDepleted(const struct FGameResourcePoolReference& ResourcePool);
	void OnBubbleShieldFireStateChanged();
	void OnBubbleShieldEnabledStateChanged();
	void ManualExitStarted();
	void ManualExitCancelled();
	bool IsCoreActive(EIronBearCoreType CoreType);
	bool IsAugmentInModSlot(class UOakActionAbilityAugmentSlotData* Slot, class UOakActionAbilityAugmentData* Augment);
	void IronBearExitEvent__DelegateSignature();
	bool HasBubbleShield();
	void HandleOnDead();
	class UAIWeaponUserComponent* GetWeaponUserForWeaponSlot(class UWeaponSlotData* SlotData);
	class UOakPlayerAbilityManagerComponent* GetPlayerAbilityManagerComponent();
	float GetIronBearTimeLeftPercent();
	float GetIronBearAutoSlideCooldownRefund();
	class AOakWeapon_IronBearHardPoint* GetHardPointWeaponByOrientation(EIronBearHardPointOrientation Orientation);
	class AOakWeapon_IronBearHardPoint* GetHardPointWeapon(class UOakActionAbilityAugmentSlotData* Slot);
	void ExitIronBear(EIronBearExitReason InExitReason);
	void EndHardPointAction(class UOakActionAbilityAugmentSlotData* Slot);
	void ClientFaceRotation(float Yaw);
	void CancelManualExit();
	void BeginHardPointAction(class UOakActionAbilityAugmentSlotData* Slot);
	void ActivateGundamCore();
};


// Class OakGame.OakCharacter_IronCub
// 0x00E0 (0x2560 - 0x2480)
class AOakCharacter_IronCub : public AOakCharacter_IronBear
{
public:
	unsigned char                                      UnknownData00[0xB0];                                      // 0x2480(0x00B0) MISSED OFFSET
	bool                                               bEnableOutline;                                           // 0x2530(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x2531(0x0003) MISSED OFFSET
	struct FLinearColor                                OwnedOutlineColor;                                        // 0x2534(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                UnownedOutlineColor;                                      // 0x2544(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	int                                                OutlineThickness;                                         // 0x2554(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x2558(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCharacter_IronCub");
		return ptr;
	}


	void UpdateOutlineOnWeaponChange(class AWeapon* Weapon, class AWeapon* LastWeapon);
};


// Class OakGame.OakCharacter_Player
// 0x10B0 (0x33D0 - 0x2320)
class AOakCharacter_Player : public AOakCharacter_Default
{
public:
	class UParticleSystem*                             ConnectEffectTemplate;                                    // 0x2320(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ConnectEffectBoneName;                                    // 0x2328(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             DisconnectEffectTemplate;                                 // 0x2330(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       DisconnectEffectBoneName;                                 // 0x2338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x2340(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    DuelInitatedEvent;                                        // 0x2348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    DuelTimedOutEvent;                                        // 0x2358(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    DuelMeleeInstigatedEvent;                                 // 0x2368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    AcceptedCompetitorDuelEvent;                              // 0x2378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    UnacceptedCompetitorDuelEvent;                            // 0x2388(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    CompetitorAcceptedDuelEvent;                              // 0x2398(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    CompetitorUnacceptedDuelEvent;                            // 0x23A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    StartedDuelSetupEvent;                                    // 0x23B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    StartedDuelEvent;                                         // 0x23C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    LostDuelEvent;                                            // 0x23D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    WonDuelEvent;                                             // 0x23E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    TimeElapsedDuelEvent;                                     // 0x23F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    DuelCanceledEvent;                                        // 0x2408(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class APhotoModeController*                        PhotoModeController;                                      // 0x2418(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	class UGFxPhotoModeMenu*                           PhotoModeView;                                            // 0x2420(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x98];                                      // 0x2428(0x0098) MISSED OFFSET
	struct FVector                                     AdditionalInput;                                          // 0x24C0(0x000C) (Transient, IsPlainOldData)
	float                                              AdditionalRoll;                                           // 0x24CC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsRaidSpectating;                                        // 0x24D0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bHasMenuOpen_Replicated : 1;                              // 0x24D1(0x0001) (Net, Transient)
	unsigned char                                      UnknownData02[0x6];                                       // 0x24D2(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnVaultRewardReceived;                                    // 0x24D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData03[0x8];                                       // 0x24E8(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    PlayerCrouchStart;                                        // 0x24F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    PlayerCrouchEnd;                                          // 0x2500(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    GrenadeTossed;                                            // 0x2510(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAlliedPlayerTookDamage;                                 // 0x2520(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData04[0x130];                                     // 0x2530(0x0130) MISSED OFFSET
	struct FScriptMulticastDelegate                    GrenadeThrowFailed;                                       // 0x2660(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bInterruptFriendlyTargeting;                              // 0x2670(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsWeaponLowered;                                         // 0x2671(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x2672(0x0002) MISSED OFFSET
	float                                              FriendlyTargetRange;                                      // 0x2674(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WeaponLowerDelay;                                         // 0x2678(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WeaponRaiseDelay;                                         // 0x267C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class AActor*                                      FriendlyTarget;                                           // 0x2680(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x2688(0x0008) MISSED OFFSET
	struct FName                                       LadderCameraMode;                                         // 0x2690(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LadderCameraBlendOutTime;                                 // 0x2698(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x269C(0x0004) MISSED OFFSET
	class UFeedbackData*                               LadderSlidingFeedback;                                    // 0x26A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFeedbackData*                               LadderSlideLandingFeedback;                               // 0x26A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 LadderSlideAudioLoop;                                     // 0x26B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      GrenadeThrowAction;                                       // 0x26B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GrenadeThrowCooldown;                                     // 0x26C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x26C4(0x0004) MISSED OFFSET
	class UGameResourceData*                           GrenadeResource;                                          // 0x26C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UOakCustomizationData*>               EquippedEmotes;                                           // 0x26D0(0x0010) (ZeroConstructor, Transient)
	TArray<TSoftObjectPtr<class UOakCustomizationData>> DefaultEmotes;                                            // 0x26E0(0x0010) (Edit, EditFixedSize, ZeroConstructor, DisableEditOnInstance)
	struct FPlayerEchoDeviceState                      EchoDeviceState;                                          // 0x26F0(0x0260) (Edit, DisableEditOnInstance)
	struct FOakSDUContainer                            PlayerSDUs;                                               // 0x2950(0x00F8) (Net, Transient)
	class UGbxCustomizationTypeData*                   HeadCustomizationType;                                    // 0x2A48(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxCustomizationTypeData*                   BodyCustomizationType;                                    // 0x2A50(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGbxCustomizationTypeData*                   SkinCustomizationType;                                    // 0x2A58(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UOakCustomizationComponent*                  CustomizationComponent;                                   // 0x2A60(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class FString                                      CharacterIconFrameName;                                   // 0x2A68(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData09[0x10];                                      // 0x2A78(0x0010) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       SkillTreeSubMenuClass;                                    // 0x2A88(0x0028) (Edit)
	struct FReplicatedPlayerEchoDeviceState            EchoDeviceRepState;                                       // 0x2AB0(0x0010) (Net, Transient)
	class UEchoLogData*                                PendingInsertPlayEchoLog;                                 // 0x2AC0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x8];                                       // 0x2AC8(0x0008) MISSED OFFSET
	class UPlayerBalanceStateComponent*                PlayerBalanceComponent;                                   // 0x2AD0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UHavokNavObstacleComponent*                  HavokNavObstacleComponent;                                // 0x2AD8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UOakPlayerAbilityManagerComponent*           PlayerAbilityManagerComponent;                            // 0x2AE0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UCapsuleComponent*                           FFYLCapsuleComponent;                                     // 0x2AE8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FGbxAttributeFloat                          AmmoRegenRate;                                            // 0x2AF0(0x000C) (Transient)
	unsigned char                                      UnknownData11[0x4];                                       // 0x2AFC(0x0004) MISSED OFFSET
	struct FGbxGameSystemCore_FResourceLock            GrenadeFFYLRestrictionLock;                               // 0x2B00(0x0098) (Net, Transient)
	unsigned char                                      ClientWeaponsRestrictedRestoreSlots;                      // 0x2B98(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0x7];                                       // 0x2B99(0x0007) MISSED OFFSET
	TArray<struct FPlayerPainSoundData>                PlayerPainSounds;                                         // 0x2BA0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              SprintExhaustionStartThreshold;                           // 0x2BB0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SprintExhaustionStopThreshold;                            // 0x2BB4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      HUDSkillIconWidgetClass;                                  // 0x2BB8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bTired;                                                   // 0x2BC0(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0x7];                                       // 0x2BC1(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UOakCustomizationData>        DefaultHeadCustomization;                                 // 0x2BC8(0x0028) (Edit)
	TSoftObjectPtr<class UOakCustomizationData>        DefaultBodyCustomization;                                 // 0x2BF0(0x0028) (Edit)
	TSoftObjectPtr<class UOakCustomizationData>        DefaultSkinCustomization;                                 // 0x2C18(0x0028) (Edit)
	unsigned char                                      UnknownData14[0x28];                                      // 0x2C40(0x0028) MISSED OFFSET
	bool                                               bUsesSecondaryActionSkill;                                // 0x2C68(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUsesActionSkillHoldOverrideAction;                       // 0x2C69(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData15[0x6];                                       // 0x2C6A(0x0006) MISSED OFFSET
	class AOakPlayerController*                        OakPlayerController;                                      // 0x2C70(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakHUDSkillIconWidget*                      HUDSkillIconWidget;                                       // 0x2C78(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData16[0x8];                                       // 0x2C80(0x0008) MISSED OFFSET
	class UGbxAttributeData*                           GrenadeAmmoAttribute;                                     // 0x2C88(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData17[0x18];                                      // 0x2C90(0x0018) MISSED OFFSET
	bool                                               bCanWeaponZoomWhileInjured;                               // 0x2CA8(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x7];                                       // 0x2CA9(0x0007) MISSED OFFSET
	class UClass*                                      TeleportAction;                                           // 0x2CB0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x78];                                      // 0x2CB8(0x0078) MISSED OFFSET
	struct FInventorySlotContainer                     EquippedInventoryForSaveGame;                             // 0x2D30(0x00E8) (Net, Transient)
	struct FWeaponSlotContainer                        ActiveWeaponsForSaveGame;                                 // 0x2E18(0x05B8) (Net, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCharacter_Player");
		return ptr;
	}


	void WonDuelDelegate__DelegateSignature(EDuelClassification Classification);
	void UpdateFriendStatusSystemOfInventoryChange(class AActor* InInventory, class UInventorySlotData* SlotData);
	void UnlockPlayerFFYLGrenadeRestriction(const struct FName& Reason);
	void UnequipEchoDevice(bool bInstant, const struct FName& Reason, bool bReplicate);
	bool TryThrowGrenade();
	void TickFriendlyTarget(float DeltaSeconds);
	class AGrenade* SpawnAndThrowGrenade();
	class AGrenade* SpawnAmmoOptionalGrenadeFromSource(class AActor* SourceActor, bool bUseAmmo, const struct FName& ThrowSocketName);
	class AGrenade* SpawnAmmoOptionalGrenade(bool bUseAmmo);
	void SimpleDuelDelegate__DelegateSignature();
	void ShowDisconnectEffect();
	void ShowConnectEffect();
	void SetFriendlyTarget(class AActor* NewFriendly);
	void SetEchoDeviceIdleScreen(const struct FName& NewScreenName);
	void ServerUnequipEchoDevice(bool bInstant);
	void ServerTryThrowGrenade();
	void ServerTryInitiateDuel();
	void ServerTryExitPhotoMode();
	void ServerTryEnterPhotoMode();
	void ServerSetHasMenuOpen(bool bNewValue);
	void ServerSetEquippedEmote(uint32_t Slot, class UOakCustomizationData* EmoteData);
	void ServerPlayTeleportEffectsOnly();
	void ServerPlayEchoDeviceScreen(const struct FName& NewScreenName);
	void ServerNotifyPhotoModeFailed();
	void ServerInterruptEmote();
	void ServerEquipEchoDevice(EWeaponEquipType EquipType);
	void ResumeFriendlyTargeting();
	void PlayEquippedEmote(uint32_t Slot);
	void PlayEchoDeviceScreen(const struct FName& NewScreenName);
	void OnStartDead();
	void OnSDUListUpdated(class UOakSDUData* InSDUData, int InSDULevel);
	void OnRep_EchoDeviceRepState();
	void OnRep_bSanctuaryZeroGravity();
	void OnMaxHealthChanged(float OldValue, float NewValue);
	void OnLevelUp(int OldExperienceLevel, int NewExperienceLevel);
	void OnKilledHostile();
	void OnCinematicStopped_RetryTeleportEffects();
	void NotifyPickedUpEchoDeviceLog(class AActor* EchoActor);
	void NotifyHitFriendly(const struct FHitFriendlyEventDetails& Details);
	void NotifyEchoPutDownFinished();
	void NotifyEchoEquipFinished();
	void Multicast_PlayEchoDeviceInsert(class UClass* InsertAction, class UEchoLogData* EchoLogData);
	void LostDuelDelegate__DelegateSignature(EDuelLoseReason LoseReason, EDuelClassification Classification);
	void LockPlayerFFYLGrenadeRestriction(const struct FName& Reason);
	bool IsPlayingEmote();
	void InterruptFriendlyTargeting();
	void InterruptEmote();
	void InterruptAndPlayNewEmote(class UOakCustomizationData* EmoteData);
	bool HasProjectedShield();
	bool HasEnoughAmmoToThrowGrenade();
	class UOakActionAbility* GetSecondaryActionAbility();
	int GetSDULevel(class UOakSDUData* InSDUData);
	class UOakActionAbility* GetPrimaryActionAbility();
	class AOakCharacter* GetPet();
	bool GetNextSDULevelInfo(class UOakSDUData* InSDUData, int* NextSDULevel, int* OutSDUPrice, class UInventoryCategoryData** OutPriceCurrenty, float* ModifyAmount);
	class AEchoDevice* GetEchoDevice();
	void ExecuteTeleport();
	void EquipEchoDevice(EWeaponEquipType EquipType, const struct FName& Reason, bool bOutsideOfMenu, bool bReplicate);
	void EnableComboGuardianRankPerk(float DamageBonusPerShot, float Duration, int MaxStacks);
	void DuelInstigatorDelegate__DelegateSignature(class AOakCharacter_Player* Other);
	void DisableComboGuardianRankPerk();
	void ClientNotifyVaultRewardGiven(EVaultRewardType VaultRewardType);
	void ClientExitPhotoMode();
	void ClientEnterPhotoMode();
	bool CanStartThrowingGrenade();
	bool CanCurrentlyThrowGrenades();
	void AnimNotify_SpawnGrenade();
	void AddSDU(class UOakSDUData* InSDUData);
	class UOakHUDSkillIconWidget* AddHUDSkillIconWidget();
};


// Class OakGame.OakCharacter_StandIn
// 0x00F0 (0x2390 - 0x22A0)
class AOakCharacter_StandIn : public AOakCharacter
{
public:
	class UGbxSkeletalMeshComponent*                   HeadMesh;                                                 // 0x22A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStandInCharacterComponent*                  CharacterComponent;                                       // 0x22A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UBodyWeaponHoldManagerComponent*             WeaponHoldComponent;                                      // 0x22B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TSoftObjectPtr<class UOakCustomizationData>        DefaultHeadCustomization;                                 // 0x22B8(0x0028) (Edit)
	TSoftObjectPtr<class UOakCustomizationData>        DefaultBodyCustomization;                                 // 0x22E0(0x0028) (Edit)
	class UInventoryBalanceData*                       StandInWeaponBalanceData;                                 // 0x2308(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       OverrideWeaponSocketName;                                 // 0x2310(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UOakCustomizationData*                       EquippedEmote;                                            // 0x2318(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x2320(0x0008) MISSED OFFSET
	struct FPlayerStandInInitData                      InitData;                                                 // 0x2328(0x0030) (Transient)
	class AWeapon*                                     EquippedWeaponTemplate;                                   // 0x2358(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x2360(0x0010) MISSED OFFSET
	class AWeapon*                                     Current_EquippedWeaponInstance;                           // 0x2370(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AWeapon*                                     Pending_PutDownWeaponInstance;                            // 0x2378(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AWeapon*                                     Pending_EquipWeaponInstance;                              // 0x2380(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AOakCharacter_Player*                        OwningPlayer;                                             // 0x2388(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCharacter_StandIn");
		return ptr;
	}


	void OnCustomizationApplied(class UGbxCustomizationData* Customization);
};


// Class OakGame.OakCharacterAbilityListData
// 0x0010 (0x0040 - 0x0030)
class UOakCharacterAbilityListData : public UGbxDataAsset
{
public:
	TArray<class UClass*>                              Abilities;                                                // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCharacterAbilityListData");
		return ptr;
	}

};


// Class OakGame.OakCharacterAbilityManagerComponent
// 0x0010 (0x0258 - 0x0248)
class UOakCharacterAbilityManagerComponent : public UGbxAbilityManagerComponent
{
public:
	class UOakCharacterAbilityListData*                DefaultAbilities;                                         // 0x0248(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UOakInputAbilityListData*                    OakInputAbilities;                                        // 0x0250(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCharacterAbilityManagerComponent");
		return ptr;
	}

};


// Class OakGame.OakInputAbility
// 0x0020 (0x0118 - 0x00F8)
class UOakInputAbility : public UOakAbility
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET
	bool                                               bAvailableOnLadders;                                      // 0x0100(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAvailableWhileMantling;                                  // 0x0101(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAvailableWhenReviving;                                   // 0x0102(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPauseWhenInputLocked;                                    // 0x0103(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EPlayerInputLockType                               RespectGlobalLockType;                                    // 0x0104(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x13];                                      // 0x0105(0x0013) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInputAbility");
		return ptr;
	}

};


// Class OakGame.OakCharacterInputAbility
// 0x0018 (0x0130 - 0x0118)
class UOakCharacterInputAbility : public UOakInputAbility
{
public:
	class AOakCharacter*                               OakCharacter;                                             // 0x0118(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakProfile*                                 OakProfile;                                               // 0x0120(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AOakPlayerController*                        OakPlayerController;                                      // 0x0128(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCharacterInputAbility");
		return ptr;
	}


	void CancelCrouchToggle();
};


// Class OakGame.OakCharacterMechAttributeContextResolver
// 0x0000 (0x0050 - 0x0050)
class UOakCharacterMechAttributeContextResolver : public UCharacterAttributeContextResolver
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCharacterMechAttributeContextResolver");
		return ptr;
	}

};


// Class OakGame.OakCharacterMovementComponent
// 0x0700 (0x2F90 - 0x2890)
class UOakCharacterMovementComponent : public UGbxNavCharacterMovementComponent
{
public:
	float                                              MaxInheritedSpeedFromSimulatingPhysicsMovementBase;       // 0x2890(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseJumpGoals;                                            // 0x2894(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x2895(0x0003) MISSED OFFSET
	float                                              SprintingJumpMaxSpeedPct;                                 // 0x2898(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SprintingJumpHorizontalSpeedScale;                        // 0x289C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FCharacterJumpGoalSetting                   JumpGoal_Default;                                         // 0x28A0(0x000C) (Edit, BlueprintVisible)
	struct FCharacterJumpGoalSetting                   JumpGoal_Sprinting;                                       // 0x28AC(0x000C) (Edit, BlueprintVisible)
	float                                              JumpHorizontalSpeedScaleWhenNoAcceleration;               // 0x28B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FallDelayTime;                                            // 0x28BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FallDelayGravityScale;                                    // 0x28C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JumpQueueTime;                                            // 0x28C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x28C8(0x0004) MISSED OFFSET
	struct FGbxAttributeFloat                          MaxSprintSpeed;                                           // 0x28CC(0x000C) (Edit, BlueprintVisible, Net)
	struct FGbxAttributeFloat                          MaxInjuredSprintSpeed;                                    // 0x28D8(0x000C) (Edit, BlueprintVisible, Net)
	struct FGbxAttributeFloat                          MaxWalkSpeedInjured;                                      // 0x28E4(0x000C) (Edit, BlueprintVisible, Net)
	struct FGbxAttributeFloat                          MaxWalkSpeedInjuredBeingRevived;                          // 0x28F0(0x000C) (Edit, BlueprintVisible, Net)
	float                                              MaxSprintAngle;                                           // 0x28FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SprintAnalogInputThreshold;                               // 0x2900(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIgnoreAnalogInputWhenSprinting : 1;                      // 0x2904(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bMantlingCancelsSprint : 1;                               // 0x2904(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02[0x3];                                       // 0x2905(0x0003) MISSED OFFSET
	float                                              MaxLadderSlideDownSpeed;                                  // 0x2908(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LadderSlideAcceleration;                                  // 0x290C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LadderSlideBrakingDeceleration;                           // 0x2910(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x2914(0x0004) MISSED OFFSET
	class UClass*                                      LadderSlideLandingAnimation;                              // 0x2918(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 CryoPenaltyCurve;                                         // 0x2920(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCharacterSlidingData*                       SlidingData;                                              // 0x2928(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SlidingImpactTraceDelay;                                  // 0x2930(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SlidingSlopeAdaptation;                                   // 0x2934(0x000C) (Edit, IsPlainOldData)
	class UImpactData*                                 WheelRollingImpactData;                                   // 0x2940(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 WheelRollingAudioStart;                                   // 0x2948(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 WheelRollingAudioStop;                                    // 0x2950(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 StartedRollingSound;                                      // 0x2958(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 StoppedRollingSound;                                      // 0x2960(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       WheelBone;                                                // 0x2968(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       RollingSpeedParticleParameterName;                        // 0x2970(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCharacterGroundSlamData*                    GroundSlamData;                                           // 0x2978(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FGbxAttributeFloat                          GroundSlamHeightScalar;                                   // 0x2980(0x000C) (Net, Transient)
	unsigned char                                      UnknownData04[0x134];                                     // 0x298C(0x0134) MISSED OFFSET
	unsigned char                                      bWantsToSprint : 1;                                       // 0x2AC0(0x0001) (Edit, DisableEditOnTemplate, Transient, EditConst)
	unsigned char                                      bWantsToStartSprinting : 1;                               // 0x2AC0(0x0001) (Edit, DisableEditOnTemplate, Transient, EditConst)
	unsigned char                                      bIsSprinting : 1;                                         // 0x2AC0(0x0001) (Edit, Net, DisableEditOnTemplate, Transient, EditConst)
	unsigned char                                      bWantsToSlide : 1;                                        // 0x2AC0(0x0001) (Transient)
	unsigned char                                      bWantsToLadderSlide : 1;                                  // 0x2AC0(0x0001) (Transient)
	unsigned char                                      bIsSlidingDownLadder : 1;                                 // 0x2AC0(0x0001) (Edit, Net, DisableEditOnTemplate, Transient, EditConst)
	unsigned char                                      UnknownData05[0x3];                                       // 0x2AC1(0x0003) MISSED OFFSET
	int                                                GroundSlamGradeIndex;                                     // 0x2AC4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x2AC8(0x0008) MISSED OFFSET
	float                                              MaxSpeedScaleToUseBrakingBoost;                           // 0x2AD0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BrakingFrictionBoostWhenExceedingMaxSpeed;                // 0x2AD4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BrakingDecelerationWalkingBoostWhenExceedingMaxSpeed;     // 0x2AD8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BrakingDecelerationFallingBoostWhenExceedingMaxSpeed;     // 0x2ADC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnStartSprinting;                                         // 0x2AE0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndSprinting;                                           // 0x2AF0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStartSliding;                                           // 0x2B00(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStopSliding;                                            // 0x2B10(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStartGroundSlam;                                        // 0x2B20(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStopGroundSlam;                                         // 0x2B30(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData07[0x30];                                      // 0x2B40(0x0030) MISSED OFFSET
	class UOakLadderInteractData*                      OakLadderInteractData;                                    // 0x2B70(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AOakCharacter*                               OakCharacterOwner;                                        // 0x2B78(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCoverUserComponent*                         CoverUserComponent;                                       // 0x2B80(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UOakStatusEffectManagerComponent*            StatusEffectComponent;                                    // 0x2B88(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UFightForYourLifeComponent*                  FFYLComponent;                                            // 0x2B90(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UOakCharacterAnimInstance*                   OakAnimInstance;                                          // 0x2B98(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bDeceleratingAfterLadderSlide;                            // 0x2BA0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x2BA1(0x0003) MISSED OFFSET
	float                                              JumpGoalGravityScale;                                     // 0x2BA4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	EJumpType                                          CurrentJumpType;                                          // 0x2BA8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x1];                                       // 0x2BA9(0x0001) MISSED OFFSET
	bool                                               bPendingSlideJump;                                        // 0x2BAA(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x5];                                       // 0x2BAB(0x0005) MISSED OFFSET
	TArray<class AOakCharacter*>                       ActorsToPushAwayFrom;                                     // 0x2BB0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData11[0x8];                                       // 0x2BC0(0x0008) MISSED OFFSET
	bool                                               bRepInDelayedFall;                                        // 0x2BC8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0x7];                                       // 0x2BC9(0x0007) MISSED OFFSET
	struct FSlidingImpactState                         SlidingFootImpactState;                                   // 0x2BD0(0x00E8) (Transient)
	struct FSlidingImpactState                         SlidingBaseImpactState;                                   // 0x2CB8(0x00E8) (Transient)
	struct FSlidingImpactState                         RollingImpactState;                                       // 0x2DA0(0x00E8) (Transient)
	unsigned char                                      UnknownData13[0x48];                                      // 0x2E88(0x0048) MISSED OFFSET
	TArray<class ACharacterForcedSlidingVolume*>       OverlappingSlidingVolumes;                                // 0x2ED0(0x0010) (ZeroConstructor, Transient)
	class ACharacterForcedSlidingVolume*               CurrentSlidingVolume;                                     // 0x2EE0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData14[0x98];                                      // 0x2EE8(0x0098) MISSED OFFSET
	class UPrimitiveComponent*                         OldMovementBase;                                          // 0x2F80(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData15[0x8];                                       // 0x2F88(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCharacterMovementComponent");
		return ptr;
	}


	bool TeleportPlayer(const struct FVector& TargetLocation, class UOakPlayerTeleportData* TeleportData);
	void SetWantsToLadderSlide(bool bNewWantsToLadderSlide);
	void ServerTeleportPlayer(const struct FVector& TeleportLocation, float ClientTimeStamp, uint32_t PlayerTeleportID, class UOakPlayerTeleportData* PlayerTeleportData);
	void ServerStopSliding();
	void ServerStartSliding();
	void ServerAttemptGroundSlam(int Grade);
	void OnSlidingImpactParticleSystemFinished(class UParticleSystemComponent* PSC);
	void OnRep_CurrentJumpType();
	void OnRep_bRepInDelayedFall();
	void OnRep_bIsSprinting();
	void OakCharacterMovementEvent__DelegateSignature();
	void NotifyMantleStarted();
	void NotifyMantleFinished();
	bool IsSlidingDownLadder();
	bool IsPerformingUpwardLadderJump();
	void ClientAckPlayerTeleport(float ClientTimeStamp, uint32_t PlayerTeleportID);
	void CharacterSlideEndedEvent__DelegateSignature(const struct FSlideEndedDetails& Details);
	void CharacterGroundSlamEndedEvent__DelegateSignature(const struct FGroundSlamEndedDetails& Details);
};


// Class OakGame.OakCharacterSoundData
// 0x00E0 (0x0180 - 0x00A0)
class UOakCharacterSoundData : public UCharacterSoundData
{
public:
	struct FInheritableSoundMap                        TiredSoundOverrides;                                      // 0x00A0(0x0050) (Edit)
	bool                                               bOverrideFirePainLoop;                                    // 0x00F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F1(0x0007) MISSED OFFSET
	class UWwiseEvent*                                 FirePainLoop;                                             // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 FirePainLoopStop;                                         // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideCorrosivePainLoop;                               // 0x0108(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0109(0x0007) MISSED OFFSET
	class UWwiseEvent*                                 CorrosivePainLoop;                                        // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 CorrosivePainLoopStop;                                    // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideShockPainLoop;                                   // 0x0120(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0121(0x0007) MISSED OFFSET
	class UWwiseEvent*                                 ShockPainLoop;                                            // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 ShockPainLoopStop;                                        // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideSlagPainLoop;                                    // 0x0138(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0139(0x0007) MISSED OFFSET
	class UWwiseEvent*                                 SlagPainLoop;                                             // 0x0140(0x0008) (ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 SlagPainLoopStop;                                         // 0x0148(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideCryoPainLoop;                                    // 0x0150(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0151(0x0007) MISSED OFFSET
	class UWwiseEvent*                                 CryoPainLoop;                                             // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 CryoPainLoopStop;                                         // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideRadiationPainLoop;                               // 0x0168(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0169(0x0007) MISSED OFFSET
	class UWwiseEvent*                                 RadiationPainLoop;                                        // 0x0170(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 RadiationPainLoopStop;                                    // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCharacterSoundData");
		return ptr;
	}

};


// Class OakGame.OakCharacterSoundLogicComponent
// 0x0060 (0x0398 - 0x0338)
class UOakCharacterSoundLogicComponent : public UCharacterSoundLogicComponent
{
public:
	TMap<class UDialogNameTag*, class UCharacterSoundData*> CharacterSoundData;                                       // 0x0338(0x0050) (Edit, ZeroConstructor)
	TArray<class UGbxDialogComponent*>                 CachedDialogComponents;                                   // 0x0388(0x0010) (ExportObject, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCharacterSoundLogicComponent");
		return ptr;
	}

};


// Class OakGame.OakPlayerController
// 0x12E8 (0x1C68 - 0x0980)
class AOakPlayerController : public AGbxPlayerController
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0980(0x0010) MISSED OFFSET
	class AOakCharacter*                               OakCharacter;                                             // 0x0990(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakFirstPersonComponent*                    OakFirstPersonComponent;                                  // 0x0998(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UOakSaveGame*                                CurrentSavegame;                                          // 0x09A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakSaveGameChannel*                         SaveGameChannel;                                          // 0x09A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bClientWaitingForFullSaveGameInitialization;              // 0x09B0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x09B1(0x0007) MISSED OFFSET
	struct FClientExpectedSaveGameValues               ExpectedSaveGameValues;                                   // 0x09B8(0x0080) (Transient)
	int                                                ExperiencePointsLoadedFromSaveGame;                       // 0x0A38(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	uint32_t                                           TimePlayedSecondsLoadedFromSaveGame;                      // 0x0A3C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	uint32_t                                           TimePlayedSeconds;                                        // 0x0A40(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x14];                                      // 0x0A44(0x0014) MISSED OFFSET
	class UPlayerClassIdentifier*                      CurrentPlayerClass;                                       // 0x0A58(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0A60(0x0010) MISSED OFFSET
	class UGFxSkillScreenTree*                         SkillTreeSubMenuClassPtr;                                 // 0x0A70(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      PreferredCharacterName;                                   // 0x0A78(0x0010) (ZeroConstructor, Transient)
	class AOakHUD*                                     OakHUD;                                                   // 0x0A88(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxMenuStack*                               MenuStack;                                                // 0x0A90(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x11];                                      // 0x0A98(0x0011) MISSED OFFSET
	EPlayerDifficultySetting                           DifficultySetting;                                        // 0x0AA9(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bHasActivityFeedRequestInFlight;                          // 0x0AAA(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1];                                       // 0x0AAB(0x0001) MISSED OFFSET
	float                                              NextAllowedActivityFeedPostTime;                          // 0x0AAC(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FOutstandingActivityFeedData>        OutstandingActivityFeedQueue;                             // 0x0AB0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0AC0(0x0008) MISSED OFFSET
	class ANewGameFlow*                                NewGameFlow;                                              // 0x0AC8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxItemTradingMenu*                         TradingMenu;                                              // 0x0AD0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x10];                                      // 0x0AD8(0x0010) MISSED OFFSET
	class AOakPlayerState*                             CurrentRaidSpectatorTarget;                               // 0x0AE8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x8];                                       // 0x0AF0(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    CurrentUsableChanged;                                     // 0x0AF8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    CurrentUsabilityChanged;                                  // 0x0B08(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLookedAt;                                               // 0x0B18(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLookedAwayFrom;                                         // 0x0B28(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPawnChanged;                                            // 0x0B38(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSaveGameStarted;                                        // 0x0B48(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSaveGameComplete;                                       // 0x0B58(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerStateAdded;                                       // 0x0B68(0x0010) (ZeroConstructor, Transient, InstancedReference)
	struct FScriptMulticastDelegate                    OnPlayerStateRemoved;                                     // 0x0B78(0x0010) (ZeroConstructor, Transient, InstancedReference)
	unsigned char                                      UnknownData09[0x20];                                      // 0x0B88(0x0020) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCinematicModeChanged;                                   // 0x0BA8(0x0010) (ZeroConstructor, Transient, InstancedReference)
	struct FScriptMulticastDelegate                    OnLagStatusChanged;                                       // 0x0BB8(0x0010) (ZeroConstructor, Transient, InstancedReference)
	struct FScriptMulticastDelegate                    OnFirstNearbyGrenadeAdded;                                // 0x0BC8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLastNearbyGrenadeRemoved;                               // 0x0BD8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData10[0x60];                                      // 0x0BE8(0x0060) MISSED OFFSET
	class UEchoLogData*                                CachedEchoLogData;                                        // 0x0C48(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakUseComponent*                            UseComponent;                                             // 0x0C50(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGameStatsComponent*                         GameStatsComponent;                                       // 0x0C58(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOakPlayerMissionComponent*                  PlayerMissionComponent;                                   // 0x0C60(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UDiscoveryComponent*                         DiscoveryComponent;                                       // 0x0C68(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UVehicleSpawnerComponent*                    VehicleSpawnerComponent;                                  // 0x0C70(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPlayerGuardianRankComponent*                PlayerGuardianRankComponent;                              // 0x0C78(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UFogOfDiscoveryComponent*                    FoDComponent;                                             // 0x0C80(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class URecoilControlComponent*                     RecoilControlComponent;                                   // 0x0C88(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPlayerShopManagerComponent*                 ShopManagerComponent;                                     // 0x0C90(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOakChallengesComponent*                     ChallengesComponent;                                      // 0x0C98(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData11[0x8];                                       // 0x0CA0(0x0008) MISSED OFFSET
	class UWwiseListenerEffectComponent*               WwiseListenerEffectComponent;                             // 0x0CA8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UGbxMenuInput>                MenuInput;                                                // 0x0CB0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bBoundaryWarningActive;                                   // 0x0CB8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0x7];                                       // 0x0CB9(0x0007) MISSED OFFSET
	class UUsableComponent*                            CachedUsableTarget;                                       // 0x0CC0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FUsabilityInfo                              CachedUsabilityInfo;                                      // 0x0CC8(0x0040) (Transient)
	struct FVector                                     CachedUsableImpactPoint;                                  // 0x0D08(0x000C) (Transient, IsPlainOldData)
	float                                              CachedUsableDistanceAway;                                 // 0x0D14(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     CachedPlayerAlertLocation;                                // 0x0D18(0x000C) (Transient, IsPlainOldData)
	unsigned char                                      bAddDefaultBindings : 1;                                  // 0x0D24(0x0001)
	unsigned char                                      bJumpingUncrouchesThenJumps : 1;                          // 0x0D24(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0D25(0x0003) MISSED OFFSET
	float                                              MantleAnalogInputThreshold;                               // 0x0D28(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinPassiveMantleButtonHoldDuration;                       // 0x0D2C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AutoRespawnDelay;                                         // 0x0D30(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x0D34(0x0004) MISSED OFFSET
	struct FName                                       RaidSpectatorCameraMode;                                  // 0x0D38(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class AOakPlayerController>         RaidSpectatorTarget;                                      // 0x0D40(0x0008) (ZeroConstructor, IsPlainOldData)
	class UInputComponent*                             RaidSpectatorInputComponent;                              // 0x0D48(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AZoneMapViewer*                              SpawnedZoneMap;                                           // 0x0D50(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData15[0x98];                                      // 0x0D58(0x0098) MISSED OFFSET
	class UTextureRenderTarget2D*                      CurrentLevelFogOfDiscovery;                               // 0x0DF0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxMenuData*                                MissionDeliveryMenuData;                                  // 0x0DF8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x30];                                      // 0x0E00(0x0030) MISSED OFFSET
	TArray<class AOakProjectile*>                      NearbyGrenades;                                           // 0x0E30(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	unsigned char                                      UnknownData17[0x40];                                      // 0x0E40(0x0040) MISSED OFFSET
	class AActor*                                      GearSoldByFriendActor;                                    // 0x0E80(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData18[0x70];                                      // 0x0E88(0x0070) MISSED OFFSET
	TArray<class AActor*>                              GearSoldByMe;                                             // 0x0EF8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData19[0x210];                                     // 0x0F08(0x0210) MISSED OFFSET
	TArray<struct FOrphanedUIStandIn>                  OrphanedStandIns;                                         // 0x1118(0x0010) (ZeroConstructor, Transient)
	class UClass*                                      LateJoinStandIn_DigistructEffect;                         // 0x1128(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      LateJoinStandIn_DigistructOutEffect;                      // 0x1130(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      LateJoinStandIn_HoloEffect;                               // 0x1138(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class APlayerStandIn*                              LateJoinStandIn;                                          // 0x1140(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData20[0x8];                                       // 0x1148(0x0008) MISSED OFFSET
	TArray<struct FTriggerFeedbackState>               TriggerFeedbackStates;                                    // 0x1150(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData21[0x20];                                      // 0x1160(0x0020) MISSED OFFSET
	struct FAimControlParameters                       AimControlParameters;                                     // 0x1180(0x0078) (Edit, BlueprintVisible)
	class UOakAimAssistStrategy*                       OakAimAssistStrategy;                                     // 0x11F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakAimAssistParameters*                     AimAssistParameters;                                      // 0x1200(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakAimAssistParameters*                     DefaultAimAssistParameters;                               // 0x1208(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MoveAxialDeadZoneBegin;                                   // 0x1210(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MoveAxialDeadZoneRatio;                                   // 0x1214(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   SafeFrameScalingMinMax;                                   // 0x1218(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   HDRBrightnessMinMax;                                      // 0x1220(0x0008) (Edit, IsPlainOldData)
	struct FVector                                     HDRMenuBrightnessMinMaxTick;                              // 0x1228(0x000C) (Edit, IsPlainOldData)
	struct FVector2D                                   BrightnessMinMax;                                         // 0x1234(0x0008) (Edit, IsPlainOldData)
	struct FVector2D                                   BlackLevelMinMax;                                         // 0x123C(0x0008) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData22[0x4];                                       // 0x1244(0x0004) MISSED OFFSET
	class UOakProfile*                                 CurrentOakProfile;                                        // 0x1248(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData23[0x118];                                     // 0x1250(0x0118) MISSED OFFSET
	TArray<class UOakAimAssistParameters*>             WeaponSlotOverrideAimAssistParameters;                    // 0x1368(0x0010) (ZeroConstructor, Transient)
	bool                                               bFullyAimingAtTarget;                                     // 0x1378(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData24[0x7];                                       // 0x1379(0x0007) MISSED OFFSET
	bool                                               bAimingAtShootableObject;                                 // 0x1380(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData25[0x97];                                      // 0x1381(0x0097) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnReticleFeedback;                                        // 0x1418(0x0010) (ZeroConstructor, InstancedReference)
	class UUIManager*                                  UIManager;                                                // 0x1428(0x0008) (ZeroConstructor, IsPlainOldData)
	class AOakPlayerCameraManager*                     OakPlayerCameraManager;                                   // 0x1430(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData26[0x18];                                      // 0x1438(0x0018) MISSED OFFSET
	struct FVector2D                                   CrosshairScreenPosition;                                  // 0x1450(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	TArray<class UClass*>                              MenusToPreserveInDownState;                               // 0x1458(0x0010) (Edit, ZeroConstructor)
	bool                                               bAllowForegroundFocusEffect;                              // 0x1468(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData27[0x7];                                       // 0x1469(0x0007) MISSED OFFSET
	class APlayerTradeManager*                         TradeManager;                                             // 0x1470(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FMessageHandle                              PendingTradeMessage;                                      // 0x1478(0x0008) (Transient)
	struct FReplicatedCameraModeState                  ReplicatedCameraModeState;                                // 0x1480(0x0010) (Net, Transient)
	unsigned char                                      UnknownData28[0x30];                                      // 0x1490(0x0030) MISSED OFFSET
	class UFocusableComponent*                         CurrentFocusObject;                                       // 0x14C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData29[0x4];                                       // 0x14C8(0x0004) MISSED OFFSET
	float                                              GamepadViewScale;                                         // 0x14CC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              GamepadZoomScale;                                         // 0x14D0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MouseViewScale;                                           // 0x14D4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MouseZoomScale;                                           // 0x14D8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData30[0x24];                                      // 0x14DC(0x0024) MISSED OFFSET
	struct FOakPlayerPath                              PlayerPath;                                               // 0x1500(0x0018) (Edit)
	unsigned char                                      UnknownData31[0x210];                                     // 0x1518(0x0210) MISSED OFFSET
	bool                                               bInfiniteAmmo;                                            // 0x1728(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData32[0x9F];                                      // 0x1729(0x009F) MISSED OFFSET
	float                                              CombatEncounterEndedDelay;                                // 0x17C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData33[0x4];                                       // 0x17CC(0x0004) MISSED OFFSET
	class AGbxCharacter*                               CachedPrimaryCharacter;                                   // 0x17D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData34[0x24];                                      // 0x17D8(0x0024) MISSED OFFSET
	bool                                               bBeingTargeted;                                           // 0x17FC(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData35[0x3];                                       // 0x17FD(0x0003) MISSED OFFSET
	struct FPlayerCombatEncounterData                  ActiveCombatEncounterData;                                // 0x1800(0x0014) (Transient)
	bool                                               bOverrideCrosshairScreenPosition;                         // 0x1814(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData36[0x3];                                       // 0x1815(0x0003) MISSED OFFSET
	struct FVector2D                                   OverrideCrosshairScreenPosition;                          // 0x1818(0x0008) (Transient, IsPlainOldData)
	class UGbxGFxDialogBox*                            LoadingCharacterDialog;                                   // 0x1820(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData37[0x8];                                       // 0x1828(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCombatEncounterEnded;                                   // 0x1830(0x0010) (ZeroConstructor, Transient, InstancedReference)
	float                                              TimeSinceLastMovement;                                    // 0x1840(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData38[0x4];                                       // 0x1844(0x0004) MISSED OFFSET
	class UParticleSystemComponent*                    EchoNetParticleBackdrop;                                  // 0x1848(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AAdvancedInteractiveObject*                  CurrentAIO;                                               // 0x1850(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AAdvancedInteractiveObject*                  PendingFinalizeAIO;                                       // 0x1858(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FOakCustomizationInfo>               UnlockedCustomizationData;                                // 0x1860(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FOakInventoryCustomizationPartInfo>  UnlockedInventoryCustomizationParts;                      // 0x1870(0x0010) (ZeroConstructor, Transient)
	TArray<struct FCrewQuartersDecorationInfo>         UnlockedCrewQuartersDecorations;                          // 0x1880(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FCrewQuartersRoomInfo>               UnlockedCrewQuartersRooms;                                // 0x1890(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData39[0x8];                                       // 0x18A0(0x0008) MISSED OFFSET
	TMap<struct FName, class FString>                  NicknameMappings;                                         // 0x18A8(0x0050) (ZeroConstructor, Transient)
	class UParticleSystemComponent*                    WorldSpaceWeatherEffect;                                  // 0x18F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<struct FUnlockedPlayerEchoLogData>          UnlockedEchoLogs;                                         // 0x1900(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData40[0x98];                                      // 0x1910(0x0098) MISSED OFFSET
	struct FMessageHandle                              PendingSwapSeat;                                          // 0x19A8(0x0008) (Transient)
	unsigned char                                      UnknownData41[0x8];                                       // 0x19B0(0x0008) MISSED OFFSET
	class AActor*                                      CustomReplicatedActor;                                    // 0x19B8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                MoxxisEventTier;                                          // 0x19C0(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData42[0x14];                                      // 0x19C4(0x0014) MISSED OFFSET
	class UGameStatChannel*                            GameStatChannel;                                          // 0x19D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UParticleSystem*                             ScreenLiquidParticleTemplate;                             // 0x19E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScreenLiquidOpacityBlendInTime;                           // 0x19E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScreenLiquidOpacityBlendOutTime;                          // 0x19EC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScreenLiquidColorTransitionTime;                          // 0x19F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData43[0x2C];                                      // 0x19F4(0x002C) MISSED OFFSET
	class UInputComponent*                             PausedStateInputComponent;                                // 0x1A20(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              LateJoinFadeDuration;                                     // 0x1A28(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData44[0x3C];                                      // 0x1A2C(0x003C) MISSED OFFSET
	struct FPremiumCurrencyManager                     PremiumCurrencyManager;                                   // 0x1A68(0x0020) (Transient)
	class UGbxZoneMapFODSaveGameData*                  ZoneMapFODSavedData;                                      // 0x1A88(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UParticleSystem*                             ScreenFadeInParticleTemplate;                             // 0x1A90(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FActiveFastTravelData>               PlayerDiscoveredFastTravel;                               // 0x1A98(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData45[0x4];                                       // 0x1AA8(0x0004) MISSED OFFSET
	float                                              AutoCenteringAngle;                                       // 0x1AAC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AutoCenteringDelay;                                       // 0x1AB0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AutoCenteringInterpolationSpeed;                          // 0x1AB4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AutoCenteringMinMovementSpeed;                            // 0x1AB8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AutoCenteringCurrentDuration;                             // 0x1ABC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AutoCenteringEaseInDuration;                              // 0x1AC0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AutoCenteringEaseOutDuration;                             // 0x1AC4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTextureRenderTarget2D*                      MinimapRenderTarget;                                      // 0x1AC8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData46[0x20];                                      // 0x1AD0(0x0020) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCinematicModeUpdated;                                   // 0x1AF0(0x0010) (ZeroConstructor, Transient, InstancedReference)
	struct FVaultCardManager                           VaultCardManager;                                         // 0x1B00(0x0128) (Transient)
	unsigned char                                      UnknownData47[0x8];                                       // 0x1C28(0x0008) MISSED OFFSET
	class AActor*                                      ReRolledInventoryActorSource;                             // 0x1C30(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      ReRolledInventoryActor;                                   // 0x1C38(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnReRolledInventoryActorReady;                            // 0x1C40(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReRolledInventorySourceSet;                             // 0x1C50(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	uint32_t                                           PlayerSelectedLeague;                                     // 0x1C60(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData48[0x4];                                       // 0x1C64(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerController");
		return ptr;
	}


	void WriteProfile();
	void UnregisterSavegameDelegates();
	void UnlockEchoLog(class UEchoLogData* EchoLog);
	void UnlockAllVehiclesAndParts();
	void TryTradeWithRadialMenuTarget();
	void TryInitiateDuel();
	void TriggerDisplayMissionRewardsDelegate(class UClass* Mission, const struct FGFxMissionTrackerRewardDisplayData& Reward, const struct FGFxMissionTrackerRewardDisplayData& OptionalReward);
	void ToggleLookingForHelp();
	void TextChat(const class FString& Msg);
	void TempGrantActivityFeedChallengeReward(class UActivityFeedReward* Reward, int ChallengeLevelTargetValue, int ChallengeLevelCompleted);
	class AZoneMapViewer* SpawnZoneMap();
	void SpawnVehicleFromConfig(int GameStage, const struct FOakCARMenuVehicleConfig& VehicleConfig, class ACatchARide* CARConsole);
	void SpawnVehicle(int GameStage, class UOakCARVehicleData* Vehicle, TArray<class UOakCARVehiclePartData*> Parts, class UObject* CarMenuInterface, const struct FColor& Color1, const struct FColor& Color2, const struct FColor& Color3);
	void SpawnMissionVehicle(class ACatchARide* Console);
	void SpawnCustomReplicatedActor(class AOakPlayerController* PlayerOwner, class UClass* ClassToSpawn, const struct FTransform& ActorTransform);
	bool ShouldSpectateOnDeath();
	void SetupCameraForRaidSpectator();
	void SetReRollSourceInventory(class AActor* InventoryActor);
	void SetPushToTalkState(bool bPushing);
	void SetNonMovementInputLocked(bool bLocked, const struct FName& Reason);
	void SetMoxxiEventTier(int Tier);
	void SetLockedCanUseObjects(bool bLocked, const struct FName& Reason);
	void SetInputLocked(bool bLocked, const struct FName& Reason);
	void SetHasPlayedSpecialEchoLogInsertAnimationAlready(bool bNewValue);
	void SetFocusObject(class AActor* FocusActor);
	void SetFastTravelLocks(bool bLocked);
	void SetEchoMenuLocked(bool bLocked, const struct FName& Reason);
	void SetCustomViewportViewFlags(int ViewFlags, bool bEnabled);
	void ServerUpdatePremiumCurrency(class UGbxInventoryCategoryData* Category, int Quantity);
	void ServerSwitchPlayerClass(class UPlayerClassIdentifier* NewPlayerClass);
	void ServerSpawnLostLoot(const class FString& GearSerialNumber, const struct FSpawnPatternResult& SpawnResult);
	void ServerSetWaitingForSaveGameInitialization(bool bWaiting);
	void ServerSetTradeRequestReceptionType(ETradeRequestReceptionType NewTradeRequestReceptionType);
	void ServerSetRemoteViewportInfo(int ViewportWidth, int ViewportHeight);
	void ServerSetRemoteDefaultFOV(float DefaultFOV);
	void ServerSetRemoteCrosshairPosition(const struct FVector2D& ClientCrosshairPosition);
	void ServerSetRemoteCameraInfo(bool bIsFirstPerson);
	void ServerSetReadyForSaveGameChannel();
	void ServerSetReadyForGameStatChannel();
	void ServerSetMaxSpawnCost(int InMaxSpawnCost);
	void ServerSetLateJoinState(ELateJoinState InLateJoinState);
	void ServerSetFullyAimingAtTarget(bool bInClientFullyAimingAtTarget);
	void ServerSetDuelingEnabled(bool bNewDuelingEnabled);
	void ServerSetDifficultySetting(EPlayerDifficultySetting NewDifficulty);
	void ServerSetCrewQuartersRoomMood(class ACrewQuartersRoom* InRoom, class UDynamicRoomBaseData* RoomToLoad);
	void ServerSetBulletMagnetismSettings(bool bDoBulletMagnetism);
	void ServerSetActiveVaultCardID(uint32_t VaultCardID);
	void ServerSendTradeOfferToPlayer(class AOakPlayerState* PlayerReceivingTradeOffer);
	void ServerRotateRaidSpectatorTarget(bool bNextTarget);
	void ServerRequestSwitchSeats(class APawn* Occupant);
	void ServerRequestMayhemReload(int NewMayhemLevel, int NewRandomSeed);
	void ServerRequestActivateCustomPOI(class UObject* CustomPOIData);
	void ServerRemoveSecondaryStreamerBooster(int EffectIndex);
	void ServerRemovePrimaryStreamerBooster(int EffectIndex);
	void ServerRemoveCitizenScienceBooster(int EffectIndex);
	void ServerRedeemVaultCardGearReward(uint32_t VaultCardID, int GearIndex, bool bRepurchase);
	void ServerProcessVaultCardChestReward(uint32_t VaultCardID, const struct FSelectedInventoryInfo& SelectedInventory);
	void ServerPlayItemCallout(class AOakInventoryItemPickup* Pickup);
	void ServerPlayIdleDialogInMenu(class UGbxMenuData* MenuData);
	void ServerPlayIdleDialog();
	void ServerPlayerSelectedCharacter(const struct FUniqueNetIdRepl& TargetPlayerId);
	void ServerPlayerOpenedCharacterSelect();
	void ServerPlaceChosenObject(class ACrewQuartersRoom* InRoom, class UObject* InIO, class UObject* ChosenObject);
	void ServerOnUIMenuActivated();
	void ServerOnPlanetSelected(class AGalaxyMapStation* GalaxyMapStation, class UPlanetData* PlanetData);
	void ServerNotifyTrackedEchoLogPlaybackState(class UEchoLogData* SetPlayingTrackedEchoLog, bool bPlaying);
	void ServerNotifyLoadingMoviesShown_ForSonyRTMP();
	void ServerNotifyLoadingMoviesHidden_ForSonyRTMP();
	void ServerLostLootChanged();
	void ServerJoinedPresenceSession(const class FString& SessionId);
	void ServerInterruptTravelToStation(ETravelStatus CancelStatus);
	void ServerInitializeLostLootMachine(class AActor* Actor, int Current, int Max);
	void ServerIncrementSendMailStat(class UGameStatData* Stat);
	void ServerIncrementPhotoModeStylizeStat(class UGameStatData* Stat);
	void ServerIncrementGameStat(class UGameStatData* Stat, int Amount);
	void ServerHintPlayerForNextDialog();
	void ServerGearSoldByFriendDataSelected(const struct FGearSoldByFriendData& SeletedData);
	void ServerDumpPlayerDebugInfo();
	void ServerCreatePlayerAlert(const struct FUniqueNetIdRepl& InInstigator, class AActor* InTargetedActor, const struct FVector& InAlertLocation);
	void ServerCreatedPresenceSession(const class FString& SessionId);
	void ServerClearCurrentAIO(bool bImmediate);
	void ServerApplySecondaryStreamerBooster(int EffectIndex, float Duration);
	void ServerApplyPrimaryStreamerBooster(int EffectIndex, float Duration);
	void ServerApplyCitizenScienceBooster(int EffectIndex, float Duration);
	void ServerAddGearToInventoryFromSelectedInfo(const struct FSelectedInventoryInfo& SelectedInventoryInfo);
	void ServerAddGearToInventory(const class FString& GearSerialNumber, EInventoryListType InventoryListType);
	void ServerAddCurrency(int Amount, class UGbxInventoryCategoryData* CurrencyType);
	void ServerAcceptVehicleSeatSwapRequest(class AOakVehicle* VehicleFrom, int FromSeat, int ToSeat);
	void ServerAcceptPendingTradeOffer(class AOakPlayerState* PlayerOfferingTradeState);
	void RotateRaidSpectatorTarget(bool bNextTarget);
	void ResurrectedDuringCombat(bool bStarted);
	void RestoreCameraModeFocus(float BlendOutTime);
	void ResourceLockHideFirstPerson(bool bHide, const struct FName& Reason);
	void ReRollInventoryForNewPart(class AActor* InventoryActor, const struct FGameplayTagContainer& DesiredPartTags, bool bMustHaveAllTags);
	void RegisterSavegameDelegates();
	void ReceiveMissionRewards(class UClass* MissionClass, const struct FProcessedReward& Reward, const struct FProcessedReward& OptionalReward);
	void ReadProfile();
	void RaidSpectatorProcessMouseYawInput(float Val);
	void RaidSpectatorProcessMouseScrollInput(float Val);
	void RaidSpectatorProcessMousePitchInput(float Val);
	void RaidSpectatorProcessGamepadYawInput(float Val);
	void RaidSpectatorProcessGamepadRightTrigger(float Val);
	void RaidSpectatorProcessGamepadPitchInput(float Val);
	void RaidSpectatorProcessGamepadLeftTrigger(float Val);
	void QuickSave();
	void QuickLoad();
	void PlaySwappedSeatDialog();
	void PlayerStateRemovedEvent__DelegateSignature();
	void PlayerStateAddedEvent__DelegateSignature(class AOakPlayerState* EventPlayerState);
	void PlayEquippedEmote(int EmoteIndex);
	void PauseGame();
	void OverrideCameraModeFocus(float BlendInTime, const struct FPostProcessSettings& PPSettings);
	void OpenStatusMenu(const struct FName& SubMenuId, class UObject* SelectionObject);
	void OpenShiftFirstBoot();
	void OpenQuickMenu();
	void OpenPCTextChatMenu();
	void OpenMissionLogMenu();
	void OpenMapMenu();
	void OpenInventoryMenu();
	void OpenEchoNetMenu(const struct FName& SubmenuName);
	void OnUIMenuActivated(class UObject* MenuObject);
	void OnTravelCountdownUpdate__DelegateSignature(class UTravelStationData* DestinationTravelStation, int RemainingTime, ETravelStatus CurrentStatus);
	void OnTextChatLogChanged(class UGFxPCTextChatBuffer* TextChatBuffer);
	void OnSaveGameEvent__DelegateSignature(const class FString& SlotName, bool bSuccess);
	void OnRep_TradeManager();
	void OnRep_ReRolledInventoryActor();
	void OnRep_ReplicatedCameraModeState();
	void OnRep_GearSoldByFriendActor();
	void OnRep_CustomReplicatedActor();
	void OnPawnChanged__DelegateSignature(class APawn* NewPawn, class APawn* OldPawn);
	void OnMissionDataChanged();
	void OnLevelChanged(int OldLevel, int NewLevel);
	void OnJokeEULAClosedByPlayer();
	void OnExperienceAdded(int ExperienceAdded);
	void OnCurrentUsableUsabilityChanged__DelegateSignature(class UUsableComponent* CurrentUsable, const struct FUsabilityInfo& InUsabilityInfo);
	void OnCurrentUsableUsabilityChanged(class UUsableComponent* NewUseComponent, const struct FUsabilityInfo& InUsabilityInfo);
	void OnCurrentUsableImpactDataChanged(class UUsableComponent* NewUsableComponent, const struct FVector& NewUsableImpactPoint, float NewUsableDistanceAway);
	void OnCurrentUsableChanged__DelegateSignature(class UUsableComponent* CurrentUsable, const struct FUsabilityInfo& InUsabilityInfo, const struct FVector& UsableComponentImpactPoint, float UsableComponentDistanceAway);
	void OnCurrentUsableChanged(class UUsableComponent* NewUsableComponent, const struct FUsabilityInfo& InUsabilityInfo, const struct FVector& NewUsableComponentImpactPoint, float NewUsableComponentDistanceAway);
	void OnConfirmSeatSwap();
	void OnCinematicStopped_RetryFadeIn();
	void OnCharacterSpawnedInLevel(class UTravelStationComponentBase* SpawnedAtStation);
	void OnCharacterDied();
	void OnChallengeCompleted(class UChallengesComponent* Component, class UClass* ChallengeClass);
	void OnCameraStyleChanged(const struct FName& NewCameraStyle);
	void OakTextChatOptionChangedDelegate__DelegateSignature(bool bIsActive);
	void OakPCUsableLookedAwayFromSignature__DelegateSignature(class UUsableComponent* NewUsable);
	void OakPCUsableLookedAtSignature__DelegateSignature(class UUsableComponent* NewUsable);
	void NotifyUncappedExperienceAdded(int ExperienceAdded, EPlayerExperienceSource Source, EPlayerExperienceType Type);
	void NotifyPrimaryCharacterChanged(class AGbxCharacter* NewPrimaryCharacter);
	void NotifyNotIdle();
	void NotifyLevelUp(int OldExperienceLevel, int NewExperienceLevel);
	void NotifyExperienceAdded(int ExperienceAdded, EPlayerExperienceSource Source, EPlayerExperienceType Type);
	void MarkInventoryCustomizationPartAsViewed(class UOakInventoryCustomizationPartData* CustomizationToTest);
	void MarkCustomizationAsViewed(class UOakCustomizationData* CustomizationToTest);
	void MantleReleased();
	void MantlePressed();
	void LastNearbyGrenadeRemoved__DelegateSignature();
	void LagStatusChanged__DelegateSignature(bool bIsLagging);
	void JumpReleased();
	void JumpPressed();
	bool IsStreamerBuffActive();
	bool IsItemAnointed(class AActor* InventoryActor);
	bool IsInventoryCustomizationPartUnlocked(class UOakInventoryCustomizationPartData* CustomizationToTest);
	bool IsInventoryCustomizationPartNew(class UOakInventoryCustomizationPartData* CustomizationToTest);
	bool IsInteractingWithAIO();
	bool IsInMenu();
	bool IsIdle();
	bool IsCustomizationUnlocked(class UOakCustomizationData* CustomizationToTest);
	bool IsCustomizationNew(class UOakCustomizationData* CustomizationToTest);
	bool IsCrosshairOffCenter();
	bool IsCrewQuartersRoomUnlocked(class UCrewQuartersRoomItemData* RoomToTest);
	bool IsCrewQuartersDecorationUnlocked(class UCrewQuartersDecorationItemData* DecorationToTest);
	void InventoryCustomizationUnlockedDelegate__DelegateSignature(class UOakInventoryCustomizationPartData* CustomizationPart);
	bool HasPlayedSpecialEchoLogInsertAnimationAlready();
	bool HasAnySDUs();
	class AZoneMapViewer* GetZoneMapViewer();
	class UVehicleSpawnerComponent* GetVehicleSpawnerComponent();
	class AOakHUD* GetOakHUD();
	int GetNumberOfDiscoveredEridianWritings();
	class UGbxMenuStack* GetMenuStack();
	int GetMaxLostLootSize();
	class UFogOfDiscoveryComponent* GetFogOfDiscoveryComponent();
	class UDiscoveryComponent* GetDiscoveryComponent();
	class UPlayerClassIdentifier* GetCurrentPlayerClass();
	int GetCurrentLostLootCount();
	class AAdvancedInteractiveObject* GetCurrentAIO();
	int GetCostToReRollInventoryForNewPart(class AActor* InventoryActor);
	void FirstNearbyGrenadeAdded__DelegateSignature();
	void EnterPhotoMode();
	void EnsureValidSpectatorTarget();
	void DisplayRolloutNotification(const struct FText& Title, const struct FText& MESSAGE, float Duration);
	void DisplayHUDErrorNotification(const struct FText& MESSAGE);
	bool DebugLoadGame(const class FString& SlotName);
	void CreatePlayerAlert();
	void CombatEncounterEndedDelegate__DelegateSignature(const struct FPlayerCombatEncounterData& CombatEncounterData);
	void ClientVehicleUnlock(const struct FSoftObjectPath& Vehicle);
	void ClientVehicleSpawned(class UObject* CarMenuInterface, class ACatchARidePlatform* Platform, class AOakVehicle* Vehicle);
	void ClientVehiclePartUnlock(const struct FSoftObjectPath& Part);
	void ClientVaultCardChestNoReward(uint32_t VaultCardID);
	void ClientVaultCardChestInventoryReward(uint32_t VaultCardID, class AActor* InventoryActor, const struct FInventoryReplicationData& InventoryData);
	void ClientVaultCardChestCurrencyReward(uint32_t VaultCardID, class UInventoryCategoryData* CurrencyCategory, int Amount);
	void ClientUseClientSideCameraUpdates(bool bEnabled);
	void ClientUnlockInventoryCustomizationPart(class UOakInventoryCustomizationPartData* CustomizationToUnlock);
	void ClientUnlockEchoLog(class UEchoLogData* EchoLog);
	void ClientUnlockCustomization(class UOakCustomizationData* CustomizationToUnlock);
	void ClientUnlockCrewQuartersRoom(class UCrewQuartersRoomItemData* RoomToUnlock);
	void ClientUnlockCrewQuartersDecoration(class UCrewQuartersDecorationItemData* DecorationToUnlock);
	void ClientUnlockAllVehiclesAndParts();
	void ClientStopWeatherEffects();
	void ClientStartWeatherEffects(class UWeatherTemplate* Template);
	void ClientStartOnlineSessionInProgress();
	void ClientStartCameraFadeAuthoritative(float FromAlpha, float ToAlpha, float Duration, const struct FColor& Color, bool bShouldFadeAudio, bool bHoldWhenFinished);
	void ClientShowPlaceObjectsMenu(class UGbxMenuData* MenuData, class ACrewQuartersRoom* InRoom, class UObject* InIO);
	void ClientShowMayhemMenu();
	void ClientShowGamerCardUI(class APlayerState* RequesteePS);
	void ClientShowFastTravelMenu();
	void ClientShowCrewQuartersMoodMenu(class UGbxMenuData* MenuData, class ACrewQuartersRoom* InRoom);
	void ClientShowAllPlayersRequiredMessage(bool bIsAlreadyPresentInArea);
	void ClientSetSessionInviteFlags(bool bAllowInvites, bool bAllowJoinViaPresence, bool bAllowJoinViaPresenceFriendsOnly);
	void ClientSetMenuStackHidden(bool bInStackHidden);
	void ClientSetHasSeenFastTravelPrompt(bool HasSeen);
	void ClientSetCustomViewportViewFlags(int ViewFlags, bool bEnabled);
	void ClientSetCurrentAIO(class AAdvancedInteractiveObject* NewAIO, bool bInstant);
	void ClientSetBoundaryWarningState(bool bWarningActive);
	void ClientSelectGearSoldByFriendData();
	void ClientResetRegionStage(class URegionData* REGION);
	void ClientRequestVehicleSeatSwap(class AOakVehicle* VehicleFrom, int FromSeat, int ToSeat);
	void ClientRemoveTutorialMessage(class UTutorialMessageDataAsset* MessageData);
	void ClientPushHUDState(class UCinematicModeData* InCinematicMode);
	void ClientProcessLostLoot(class UOakLostLootComponent* LostLootComponent);
	void ClientPostChallengeUnlockActivityFeed(class UActivityFeedReward* FeedData, int ChallengeLevelTargetValue, int ChallengeLevelCompleted);
	void ClientPlayLocalCallout(class UDialogEvent* CalloutEvent);
	void ClientPlayerSelectedCharacter(const struct FUniqueNetIdRepl& TargetPlayerId);
	void ClientPlayerJoinedPresenceSession(const struct FUniqueNetIdRepl& JoinedPlayerId, const class FString& SessionId);
	void ClientPlayerDisplayDataChanged(class AOakPlayerState* InPlayerState);
	void ClientPlayAndTrackEchoLog(class UEchoLogData* EchoLog, class UGbxDialogComponent* PlayOnSpeaker);
	void ClientPartyKick(EKickReason Reason);
	void ClientOpenMenu(class UGbxMenuData* MenuData);
	void ClientOpenItemInspect(class AOakInventoryItemPickup* Item, class UInventoryData* InventoryData);
	void ClientOnHandleNewPlayer();
	void ClientNotifyVaultCardGearRewardRedeemed(uint32_t VaultCardID, int GearIndex);
	void ClientNotifyNewGameStarted();
	void ClientNotifyLoadPlayerClass(class UPlayerClassIdentifier* NewPlayerClass);
	void ClientNotifyKilledActor();
	void ClientNotifyClassSwitch(class UPlayerClassIdentifier* NewPlayerClass);
	void ClientMissionVehicleSpawned(class ACatchARidePlatform* Platform, class AOakVehicle* Vehicle);
	void ClientLostLootSpawned(const class FString& GearSerialNumber);
	void ClientJoinPresenceSession(const class FString& SessionId);
	void ClientInitializeLostLootMachine(class AActor* Actor);
	void ClientGotoPreviousState();
	void ClientGoToHUDState(class UGbxHUDStateData* State);
	void ClientDoLateJoinFadeIn();
	void ClientDisplayTravelFailureMessage(EPOIActivationResult TravelFailureMessage, class AOakPlayerState* BlockerPlayerState);
	void ClientDisplaySentTradeOffer(bool Success, class AOakPlayerState* PlayerReceivingTradeOffer);
	void ClientDisplayPendingTradeOffer(class AOakPlayerState* PlayerOfferingTradeState);
	void ClientDisplayHUDErrorNotification(const struct FText& MESSAGE);
	void ClientCreatePresenceSession(const class FString& SparkFriendPasscode);
	void ClientCreatePlayerAlert(const struct FUniqueNetIdRepl& InInstigator, class AActor* InTargetedActor, const struct FVector& InAlertLocation);
	void ClientCloseMenu(class UGbxMenuData* MenuData);
	void ClientCloseAllMenus();
	void ClientClearToDefaultHUDState();
	void ClientClearMenus();
	void ClientCleanCinematicState(class UCinematicModeData* InCinematicMode);
	void ClientCancelCameraFadeAuthoritative();
	void ClientBroadcastSlotMachineJackpotFriendEvent();
	void ClientBroadcastOpenedGoldenChestFriendEvent();
	void ClientBroadcastFriendGearPurchasedFriendEvent();
	void ClientApplyCachedSaveGame(float OptionalFadeOutDuration);
	void ClientAddTutorialMessage(class UTutorialMessageDataAsset* MessageData);
	void ClientAddPremiumCurrency(int Amount, class UGbxInventoryCategoryData* CurrencyType);
	void ClientAddModalTutorialMessage(class UGFxModalTutorialDataAsset* MessageData);
	void Client_NotifyCombatEncounterEnded(const struct FPlayerCombatEncounterData& CombatEncounterData);
	void ClearSavegame();
	void CinematicModeUpdated__DelegateSignature(class UCinematicModeData* InCinematicMode);
	void CinematicModeChanged__DelegateSignature(bool bInCinematicMode);
	void CheckDebugMenuIsOpen(bool bIsBeingDestroyed);
	void ChallengesRegistered();
	ECanReRollInventoryResult CanReRollInventoryForNewPart(class AActor* InventoryActor);
	bool CanOpenStatusMenu(struct FText* Reason);
	void CancelReRolledInventory();
	void BroadcastGearSoldByMe(bool bOverrideDelay);
	void AttemptSpottedEnemyCalloutForTargetPerceptionChange(class AActor* Actor, const struct FAIStimulus& Stimulus);
	void AddUnlockedInventoryCustomizationPart(class UOakInventoryCustomizationPartData* CustomizationToAdd);
	void AddUnlockedCustomization(class UOakCustomizationData* CustomizationToAdd);
	void AddUnlockedCrewQuartersRoom(class UCrewQuartersRoomItemData* RoomToAdd);
	void AddUnlockedCrewQuartersDecoration(class UCrewQuartersDecorationItemData* DecorationToAdd);
	void AddNPCMailItemFromTableRowHandle(const struct FDataTableRowHandle& RowHandle);
	void AddNPCMailItemFromTableRow(const struct FOakNPCMailDataEntry& NPCMailData);
	void AcceptReRolledInventory();
};


// Class OakGame.OakCheatManager
// 0x0210 (0x0298 - 0x0088)
class UOakCheatManager : public UGbxCheatManager
{
public:
	struct FSoftObjectPath                             BalanceMeItemPoolList;                                    // 0x0088(0x0018) (Edit, DisableEditOnInstance)
	class UTeam*                                       PlayerOpposingTeam;                                       // 0x00A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTeam*                                       PlayerTeam;                                               // 0x00A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<TSoftObjectPtr<class UClass>>               DefaultVehicleClass;                                      // 0x00B0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FSoftObjectPath                             VehicleSpawnPoolList;                                     // 0x00C0(0x0018) (Edit, DisableEditOnInstance)
	class USwfMovie*                                   SimplifiedChineseFontSWF;                                 // 0x00D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1B0];                                     // 0x00E0(0x01B0) MISSED OFFSET
	class UPIEBenchmarkManager*                        PIEBenchmarkManager;                                      // 0x0290(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCheatManager");
		return ptr;
	}


	void WipeRecentlyMetPlayers();
	void ValidateChallenges();
	void UpdateStatValue(const class FString& StatName, int StatValue);
	void UpdateAchievement(int AchievementId, int NewValue);
	void UnregisterModifier(const struct FName& ModifierName);
	void UnregisterAllModifiers();
	void UnlockVaultCardReward(int ColumnIndex, int RowIndex);
	void UnlockTVHM();
	void UnlockAllCustomizations();
	void UnlockAchievement(int AchievementId);
	void TriggerMissionFastForward();
	void TrackPreviousMission();
	void TrackNextMission();
	void ToggleWeapon();
	void ToggleVaultCardKeysRequired();
	void ToggleRenderingScaleform();
	void ToggleOnlineActivityFeedsTest();
	void ToggleDualWieldInputSwap();
	void TestZeppelinQos();
	void TestXboxStringFilter(int UserNum, class FString* NameToTest);
	void TestWriteKraken();
	void TestVoG();
	void TestUnlockWeaponTrinkets();
	void TestUnlockWeaponSkins();
	void TestTutorialWidgetRemove();
	void TestTutorialWidget();
	void TestTribe();
	void TestTravelNotificationMessage(const class FString& TitleString, const class FString& PlayerNameString, const class FString& DescriptionString);
	void TestSetDifficultySetting(EPlayerDifficultySetting NewDifficultySetting);
	void TestSession(const class FString& SessionTemplateName);
	void TestSaveGameInterface();
	void TestReadOdyssey();
	void TestReadKraken();
	void TestRaidNotification(unsigned char RaidNotificationId, int Priority, class FString* TestAssetPath);
	void TestPreStartDateVaultCard();
	void TestPresence(const class FString& PresenceKey);
	void TestPlayThrough(int PlayThroughOverride);
	void TestPlayerCount(int PlayerCountOverride);
	void TestParty();
	void TestOnlineTimedMessage(const class FString& TitleString, const class FString& PlayerNameString, const class FString& DescriptionString, float Duration);
	void TestOnlinePendingTradeMessage(const class FString& TitleString, const class FString& DescriptionString, int PlayerIndex);
	void TestOnlineBlockingMessage(const class FString& TitleString, const class FString& PlayerNameString, const class FString& DescriptionString);
	void TestOnlineAsyncMessage(const class FString& TitleString, const class FString& PlayerNameString, const class FString& DescriptionString);
	void TestNotification(int Priority, class FString* TestAssetPath, class FString* MessageText);
	void TestNetworkTransition(ENetworkType NetworkType, EInviteType InviteType, bool bPrompt);
	void TestModalTutorial();
	void TestMatchmakingWidget();
	void TestMatchmaking(const class FString& HopperName, bool bBackfill);
	void TestLootMode(EMultiplayerLootMode NewLootMode);
	void TestLoginUI();
	void TestLevelSyncMessage(const class FString& TitleString, const class FString& DescriptionString, float Duration, int Repeat);
	void TestLevelSyncBroadcast(int MessageTypeToTest);
	void TestLevelSync(int NewPlayerLevel);
	void TestLeaderboards();
	void TestInitiateDuel();
	void TestGuardianRankFriendEvent(int NewGuardianRank, int EnforcerPoints, int SurvivorPoints, int HunterPoints);
	void TestGbxRapidjson();
	void TestGameClip(bool bEnabled);
	void TestFriendStatus(const class FString& Command);
	void TestFriendsCache(uint32_t PlayerIndex);
	void TestFriends();
	void TestFriendEventMessage(const class FString& PlayerDisplayName, int Level, const class FString& ClassDisplayName, const class FString& DescriptionString, const class FString& ActionString);
	void TestFriendEvent(int Level);
	void TestFileCache();
	void TestFeed();
	void TestExternalUI(const class FString& ExternalUIName);
	void TestExpSyncLevel(int ExpSyncLevelOverride);
	void TestExpPointsForLevel(int StartingLevel, int EndingLevel);
	void TestEnableGuardianRankRewards(bool bEnable, int RewardIndex);
	void TestEnableGuardianRankPerks(bool bEnable, int PerkIndex);
	void TestDuelingWidget();
	void TestDialog();
	void TestDestroySessionQueue();
	void TestDeleteAllSaveGames();
	void TestDamageLevelSync(bool bShouldSyncDamage);
	void TestCredits();
	void TestContentInterface();
	void TestClearPresence();
	void TestChallengeProgress(bool bUseRealChallenge, int TargetValue, int MaxValue, bool bShowAsPercent);
	void TestAttachWeaponToLootable(const struct FName& SocketName, EPickupLootAttachmentMode AttachMode);
	void TestAchievements();
	void StopMatchmaking();
	void StopActiveActionSkills();
	void StartOnlineActivity(const class FString& ActivityId);
	void StartMatchmaking();
	void StartGuardianRankTracking();
	void StartDandelion();
	void SpawnWeaponsForCurrentLootRules(int NumWeapons);
	void SpawnVehicle(const class FString& VehicleClassName, float SpawnOffset);
	void SpawnActorDescription(const class FString& Description);
	void SpamTextChat(int NumMessages, const class FString& BaseMessage);
	void SkipDialog(float Radius);
	void SignUpGearboxAccount(const class FString& Email, const class FString& Password, const class FString& PasswordConfirm);
	void SignInGearboxAccountD(const class FString& Email, const class FString& Password, const class FString& DisplayName);
	void SignInGearboxAccount(const class FString& Email, const class FString& Password);
	void ShowNATHelp();
	void ShowCharacterAccuracyPattern(bool bEnabled, float PatternSizeOverride);
	void SetVaultHunterStatus(int Val);
	void SetUse3DVoG(bool bNewUse3DVoG);
	void SetSaveGamePlaythroughIndex(int PlayThroughIndex);
	void SetPlayerCustomColor(int ColorIndex, float ColorR, float ColorG, float ColorB, bool bUseDefault);
	void SetOnlineActivityPriority(const class FString& ActivityId, int Priority);
	void SetOnlineActivityAvailability(const class FString& ActivityId, bool bAvailable);
	void SetMinimapPrototypePitch(float NewPitch);
	void SetMenuTutorialsEnabled(bool bEnabled, bool bEnabledInNonGameModes);
	void SetLaggingMessageVisible(bool bVisible);
	void SetItemInspectView(bool bChromaKeyBackground, bool bHideUI, bool bHideHint);
	void SetHudScaleMultiplier(float aHudScaleMultiplier);
	void SetHasNewMail(bool bHasNewMail);
	void SetFriendsMeshEnabled(bool bEnabled);
	void SetChallengesInRoomCompleted();
	void SetActiveVaultCard(uint32_t VaultCardID);
	void ServerCheatSwitchPlayerClass(class UPlayerClassIdentifier* NewPlayerClass);
	void SendTwitchMetadataTestMessage(const class FString& TestMessage);
	void SendStatusToWhisper();
	void SendMail(const class FString& PlayerName, const class FString& GeraSerialNumber);
	void SavePlayerProfileToJsonFile(const class FString& Filename);
	void ResetVaultCardData();
	void ResetVaultCardChallengeCheat();
	void ResetUnlockedCustomizations();
	void ResetUITrackingInfo();
	void ResetStatValue(const class FString& InStatName);
	void ResetSkillScreen();
	void ResetPreviousVaultCardChallenges();
	void ResetMissionProgress();
	void ResetMenuTutorials();
	void ResetMatchmaking();
	void ResetGuardianRank();
	void ResetChallengeProgressByName(const class FString& PartialChallengeNameMatch);
	void ResetAllStatValues();
	void ResetActionSkillCooldowns();
	void RerollVaultCardChallenges();
	void RenameShiftUser(const class FString& DisplayName);
	void RemoveAllPlayerAlerts();
	void RegisterModifierSet(const struct FName& ModifierSetName);
	void RegisterModifier(const struct FName& ModifierName, const struct FName& TargetResolverName, const struct FName& StatusEffectName, float Value);
	void RedeemVaultCardReward(int ColumnIndex, int RowIndex, bool bUnlock);
	void RedeemVaultCardGearReward(int GearIndex);
	void ReadProfileImage();
	void ReadPermissions();
	void ReadDisplayData();
	void ProcessMail(const class FString& MailGuid, bool bAccept);
	void ProcessLostLoot();
	void PrintStatValue(const class FString& StatName);
	void PrintNPCMail();
	void PrintMicropatchSwitches();
	void PrintMail();
	void PrintLostLoot();
	void PrintGearSoldByMe();
	void PrintGearSoldByFriends();
	void PrintFriendStatusesJson();
	void PrintFriendStatusesInProfile();
	void PrintFriendStatuses();
	void PrintFriendEventsInProfile();
	void PrintFriendEvents();
	void PrintFriendChallengeInfo();
	void PrintAllStatValues();
	void PrintAllInProgressChallengeValues();
	void PrintAllIncompletedChallengeValues();
	void PrintAllInactiveChallengeValues();
	void PrintAllCompletedChallengeValues();
	void PrintAllChallengeValues();
	void PrintAllActiveChallengeValues();
	void PlayMenuTutorial(const struct FName& TutorialName);
	void PlayerDiscoveryUnlock();
	void PerformWorldReset();
	void OverrideVaultCardChestVaultCard(uint32_t ColumnIndex, uint32_t RowIndex);
	void OverrideVaultCardChestInventory();
	void OverrideVaultCardChestCurrency(int Amount, const class FString& CurrencyInventoryCategoryData);
	void OverrideMoxxiMaxDuration(float NewMaxDurationInSeconds);
	void OpenVaultCardChest();
	void OnDialogClicked(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnBalanceMe(class AOakCharacter* Character);
	void NoMaxInventory(bool bEnable);
	void LogMemSorted(bool bFullLog);
	void LogDetailedMemForObject(const class FString& ObjectName);
	void LoadPlayerProfileFromJsonFile(const class FString& Filename);
	void LoadChineseFont();
	void LoadAllMissions();
	void LikeFriendEvent(const class FString& PlayerName, const class FString& EventGuidStr);
	void LevelRequirementDebug();
	void LeaveSession(const class FString& SessionName);
	void KillVehicles();
	void JoinSessionByName(const class FString& PlayerId, const class FString& InFriendName);
	void JoinLanGame();
	void JoinFriendByName(const class FString& InFriendName);
	void InfiniteFFYL();
	void IncrementStatValue(const class FString& InStatName, int Amount);
	void IncrementRandomStats();
	void IncrementChallengesByName(const class FString& PartialChallengeNameMatch, int Amount);
	void IgnorePlayer(const class FString& PlayerName, bool bIgnorePlayer);
	void HideAllOnlineMessages();
	void GiveForCategory(int Amount, const class FString& Args);
	void GetWorstOffenderComponentClass(int NbToPrint);
	void GetWorstOffenderActors(int NbToPrint, bool bFullLog);
	void GetWorstOffenderActorClass(int NbToPrint);
	void GetTickInformationForClass(const class FString& ClassName, bool bCheckHeritance, bool bPartialName, bool bFullLog);
	void GetIgnoredPlayers();
	void GetFarTickingActors(float DistanceToCheck);
	void GetEffectivePlayerCount();
	void GenerateNewGuid();
	void FriendStatusDebug(int NumDebugFriends, bool bRandomize);
	void ForceTimeoutAllGameClients();
	void ForceCreateLocalPlayer();
	void FinishTestVoG();
	void FetchStatusesFromWhisper();
	void FetchMail();
	void FetchFriendEventsFromWhisper();
	void FastTravelUnlock(bool bBypassDependencies);
	void FastTravelLock();
	void FastTravelBypassDependencies(bool bBypassDependencies);
	void FakeStreamingEventPoolResult(const class FString& EventName, int ActionID, int ActionValue);
	void FakeStreamingEvent(const class FString& EventName);
	void FakeLateJoin();
	void ExportMatchmakingModifierData();
	void EnterPhotoMode();
	void EnterMfaCode(const class FString& str);
	void EndOnlineActivity(const class FString& ActivityId, TEnumAsByte<EOnlineActivityOutcome> Outcome);
	void EnableWatermarkForStreaming();
	void EnableVoice(bool bEnabled);
	void EnableGuardianRankSystem(bool bEnable);
	void EnableCameraMan();
	void DumpTravelStations();
	void DumpSaveToJson();
	void DumpPlayerMissionProgress(const class FString& MissionName);
	void DumpPlayerDebugInfo();
	void DumpMissionProgress(const class FString& MissionName);
	void DumpGuardianRankAttributes();
	void DumpAvailableCustomizations();
	void DumpAnimMemoryInfo(const class FString& OutputPath);
	void DisplayActiveBlackMarketMachine();
	void DiscoverEverything(bool bBypassDependencies);
	void DiscoverAllLocalLocations();
	void DisableEquipSlotsForWeapons(bool bEnable);
	void DeleteAllSaves();
	void DebugVoiceTestStop();
	void DebugVoiceTestStart(float OnOffTime, int inFakeLoadingScreenPartySize);
	void DebugTriggerFastTravelTutorial();
	void DebugStartStreamingInteraction();
	void DebugPlayerStandIn(int PlayerStandInActorIndex, const class FString& CharacterClass);
	void DebugOpenPlayerStorage();
	void DebugOpenModalTutorial(const class FString& AssetPath, bool bAllPlayers);
	void DebugMatchmaking(EDebugMatchmakingFailure Failure, bool bEnabled);
	void DebugInitStreamingServiceWithClientID(const class FString& DebugExtensionClientID);
	void DebugInitStreamingService();
	void DebugFriends();
	void DebugFakeIsLiveStreaming(bool bFakeIsLiveStreaming);
	void DebugCloseMenus();
	void DebugClearStreamerBoosters();
	void DeactivateAllModifiers();
	void CrosshairOffset(float NewValue);
	void CreateDebugSession(const class FString& SessionTemplateName);
	void CompleteTrackedMission();
	void CompleteChallengesByName(const class FString& PartialChallengeNameMatch);
	void CompleteChallengesByCategoryName(const class FString& PartialChallengeCategoryNameMatch);
	void ClearTextChatBuffer();
	void ClearSeenNewsItems();
	void ClearLostLoot();
	void ClearGearSoldByMe();
	void ClearGearSoldByFriends();
	void ClearFriendStatuses();
	void ClearFriendEvents();
	void ClearCameraFade();
	void CheatIncreaseToMaxInventory();
	void ChangeOnlineActivityLocation(const class FString& LocationName);
	void CancelMatchmaking();
	void BuildPlayerPath();
	void BroadcastGearSoldByMe();
	void BeaconDumpDebugInfo();
	void AutomaticStartPlotMission();
	void AskForHelp(bool bAskForHelp);
	void AnimGameplayDebugger_WatchBPVar(const class FString& Arguments);
	void AnimGameplayDebugger_ClearBPVar();
	void AllInvTypes();
	void AllInvPartTypes();
	void AdvanceVaultCardHour();
	void AdvanceVaultCardDay();
	void AdvanceTrackedMission();
	void AdvanceBlackMarketMachineWeek();
	void AddWeaponsToLostLootList(int NumWeapons);
	void AddVaultCardKeys(int Amount);
	void AddVaultCardChests(uint32_t Amount);
	void AddNPCMail();
	void AddHeldWeaponToLostLootList();
	void AddHeldWeaponToGearSoldByFriendsList();
	void ActivateTickOptimizations(bool bActivate);
	void ActivateRandomFastTravel(float DelayTime);
	void ActivateMission(const class FString& MissionName);
	void ActivateLotsOfMissions(int Count);
	void ActivateAutoTravelThrough(float DelayTime);
	void ActivateAllModifiers();
	void ActivateAllChallenges();
	void AbortActiveActionSkills();
};


// Class OakGame.OakCinematicBrain
// 0x0090 (0x04E8 - 0x0458)
class AOakCinematicBrain : public AInfo
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0458(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCinematicPlay;                                          // 0x0460(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCinematicStop;                                          // 0x0470(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UOakCinematicBrainData*                      CinematicData;                                            // 0x0480(0x0008) (Edit, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0488(0x0008) MISSED OFFSET
	class ULevelSequencePlayer*                        SequencePlayer;                                           // 0x0490(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FCinematicState                             CinematicState;                                           // 0x0498(0x0010) (Net, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x28];                                      // 0x04A8(0x0028) MISSED OFFSET
	class UMediaTexture*                               MovieTexture;                                             // 0x04D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UWwiseMediaAudioSinkProvider*                MovieAudioSinkProvider;                                   // 0x04D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMediaPlayer*                                MoviePlayer;                                              // 0x04E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCinematicBrain");
		return ptr;
	}


	void PlayCinematic(class UOakCinematicTag* CinematicTag);
	void OnSequenceStop();
	void OnRep_CinematicState();
	void OnMovieMediaOpenFailed(const class FString& DeviceUrl);
	void OnMovieMediaOpened(const class FString& DeviceUrl);
	void OnMovieMediaClosed();
	void OnMovieEndReached();
	void OnMovieEndDelayed();
	void OnMediaAssetLoaded(class UMediaSource* MovieSource);
	void OnIntroComplete();
};


// Class OakGame.OakCinematicBrainData
// 0x0010 (0x0040 - 0x0030)
class UOakCinematicBrainData : public UGbxDataAsset
{
public:
	TArray<struct FCinematicData>                      Cinematics;                                               // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCinematicBrainData");
		return ptr;
	}

};


// Class OakGame.OakCinematicModeData
// 0x0028 (0x0068 - 0x0040)
class UOakCinematicModeData : public UCinematicModeData
{
public:
	bool                                               bAffectsInputAbilities;                                   // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsStatusMenu;                                       // 0x0041(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsQuickMenu;                                        // 0x0042(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bClearMenus;                                              // 0x0043(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bRestrictWeapons;                                         // 0x0044(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bReapCorpses;                                             // 0x0045(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bHideDroppedPickups;                                      // 0x0046(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsWeaponActions;                                    // 0x0047(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                AffectsWeaponActions;                                     // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FName                                       CameraMode;                                               // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxHUDStateData*                            OverrideHUDState;                                         // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableVOIPIcons;                                         // 0x0060(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectsPlayerMovement;                                   // 0x0061(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0062(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCinematicModeData");
		return ptr;
	}

};


// Class OakGame.OakCinematicTag
// 0x0000 (0x0030 - 0x0030)
class UOakCinematicTag : public UGbxDataAsset
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCinematicTag");
		return ptr;
	}

};


// Class OakGame.OakClassModInventoryBalanceStateComponent
// 0x0038 (0x03C0 - 0x0388)
class UOakClassModInventoryBalanceStateComponent : public UOakInventoryBalanceStateComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0388(0x0008) MISSED OFFSET
	struct FName                                       GeneratedStatsSection;                                    // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GeneratedStatPriority;                                    // 0x0398(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x039C(0x0014) MISSED OFFSET
	TArray<class UUIStatData_Ability*>                 CachedUIAbilityStats;                                     // 0x03B0(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakClassModInventoryBalanceStateComponent");
		return ptr;
	}

};


// Class OakGame.OakClientFriendBeacon
// 0x0000 (0x0198 - 0x0198)
class UOakClientFriendBeacon : public UOnlineBeaconClient
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakClientFriendBeacon");
		return ptr;
	}

};


// Class OakGame.OakClientLobbyBeacon
// 0x0048 (0x01E0 - 0x0198)
class UOakClientLobbyBeacon : public UOnlineBeaconClient
{
public:
	unsigned char                                      UnknownData00[0x48];                                      // 0x0198(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakClientLobbyBeacon");
		return ptr;
	}

};


// Class OakGame.OakClientMatchmakingBeacon
// 0x0030 (0x01C8 - 0x0198)
class UOakClientMatchmakingBeacon : public UOnlineBeaconClient
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0198(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakClientMatchmakingBeacon");
		return ptr;
	}

};


// Class OakGame.OakCondition_Grenade_Element
// 0x0008 (0x0090 - 0x0088)
class UOakCondition_Grenade_Element : public UGbxCondition
{
public:
	class UClass*                                      DamageType;                                               // 0x0088(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCondition_Grenade_Element");
		return ptr;
	}

};


// Class OakGame.OakCondition_IronBearOwner_TestModsSlotted
// 0x0038 (0x00C0 - 0x0088)
class UOakCondition_IronBearOwner_TestModsSlotted : public UGbxCondition
{
public:
	class UClass*                                      OakActionAbility;                                         // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UOakActionAbilityAugmentSlotData*            AugmentSlot;                                              // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UOakActionAbilityAugmentSlotData*            HardpointSlot;                                            // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UOakActionAbilityAugmentData*                HardpointToTest;                                          // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UOakActionAbilityAugmentData*>        AugmentData;                                              // 0x00A8(0x0010) (Edit, ZeroConstructor)
	bool                                               bTestNoModsSlotted;                                       // 0x00B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCondition_IronBearOwner_TestModsSlotted");
		return ptr;
	}

};


// Class OakGame.OakCondition_IsCharacterFrozen
// 0x0000 (0x0088 - 0x0088)
class UOakCondition_IsCharacterFrozen : public UGbxCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCondition_IsCharacterFrozen");
		return ptr;
	}

};


// Class OakGame.OakCondition_IsInHostileVehicle
// 0x0000 (0x0088 - 0x0088)
class UOakCondition_IsInHostileVehicle : public UGbxCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCondition_IsInHostileVehicle");
		return ptr;
	}

};


// Class OakGame.OakCondition_MayhemMode
// 0x0040 (0x00C8 - 0x0088)
class UOakCondition_MayhemMode : public UGbxCondition
{
public:
	EOakMayhemModeConditionType                        Type;                                                     // 0x0088(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EConditionComparisonOperatorType                   Operator;                                                 // 0x0089(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x008A(0x0006) MISSED OFFSET
	struct FAttributeInitializationData                OtherOperand;                                             // 0x0090(0x0038) (Edit, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCondition_MayhemMode");
		return ptr;
	}

};


// Class OakGame.OakCondition_TeamworkDreamwork
// 0x0000 (0x0088 - 0x0088)
class UOakCondition_TeamworkDreamwork : public UGbxCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCondition_TeamworkDreamwork");
		return ptr;
	}

};


// Class OakGame.OakCondition_VehicleIsDrivenByAI
// 0x0000 (0x0088 - 0x0088)
class UOakCondition_VehicleIsDrivenByAI : public UGbxCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCondition_VehicleIsDrivenByAI");
		return ptr;
	}

};


// Class OakGame.OakControlledMove
// 0x0008 (0x08A8 - 0x08A0)
class UOakControlledMove : public UControlledMove
{
public:
	unsigned char                                      bSpeedAffectedByCryo : 1;                                 // 0x08A0(0x0001) (Edit)
	unsigned char                                      bTriggerOakTriggersAlongTeleport : 1;                     // 0x08A0(0x0001) (Edit)
	unsigned char                                      bBlockECHOMenu : 1;                                       // 0x08A0(0x0001) (Edit)
	unsigned char                                      bBlockGroundSlam : 1;                                     // 0x08A0(0x0001) (Edit)
	unsigned char                                      bBlockActionAbility : 1;                                  // 0x08A0(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x08A1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakControlledMove");
		return ptr;
	}

};


// Class OakGame.OakControlledMove_ActionAbility
// 0x0008 (0x08B0 - 0x08A8)
class UOakControlledMove_ActionAbility : public UOakControlledMove
{
public:
	class UOakAction_Anim_ActionAbility*               ActionOwner;                                              // 0x08A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakControlledMove_ActionAbility");
		return ptr;
	}


	void OnReceivedActionOwner();
};


// Class OakGame.OakControlledMove_PhaseLock
// 0x01C0 (0x0A68 - 0x08A8)
class UOakControlledMove_PhaseLock : public UOakControlledMove
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x08A8(0x0008) MISSED OFFSET
	struct FAttributeInitializationData                HeightFromGround;                                         // 0x08B0(0x0038) (Edit, DisableEditOnInstance)
	struct FRuntimeFloatCurve                          LiftLocationCurve;                                        // 0x08E8(0x0078) (Edit, DisableEditOnInstance)
	struct FRuntimeFloatCurve                          PhaseLockTargetBoundsToParticleScaleCurve;                // 0x0960(0x0078) (Edit, DisableEditOnInstance)
	struct FGameplayTag                                PhaseLockLiftImmunityTag;                                 // 0x09D8(0x0008) (Edit, DisableEditOnInstance)
	float                                              BobStartDelay;                                            // 0x09E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LiftBobFrequency;                                         // 0x09E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LiftBobAmplitude;                                         // 0x09E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LiftLocationCollisionEnableTolerance;                     // 0x09EC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       FXSocketName;                                             // 0x09F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRegisterWithActionAbility;                               // 0x09F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x09F9(0x0007) MISSED OFFSET
	class UClass*                                      OwnerActionAbilityClass;                                  // 0x0A00(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBlocksActionAbilityShutdown;                             // 0x0A08(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0A09(0x0007) MISSED OFFSET
	class UOakActionAbility*                           OwnerActionAbility;                                       // 0x0A10(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              TargetParticleScale;                                      // 0x0A18(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     LiftStartLocation;                                        // 0x0A1C(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FVector                                     LiftEndLocation;                                          // 0x0A28(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FVector                                     LiftEndFXSocketLocation;                                  // 0x0A34(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FBoxSphereBounds                            TargetFXBounds;                                           // 0x0A40(0x001C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC];                                       // 0x0A5C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakControlledMove_PhaseLock");
		return ptr;
	}


	struct FVector GetSuperSkunkworksReplicationData();
};


// Class OakGame.OakControlledMove_Player
// 0x0018 (0x08C0 - 0x08A8)
class UOakControlledMove_Player : public UOakControlledMove
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x08A8(0x0008) MISSED OFFSET
	bool                                               bRegisterAsSirenArmController;                            // 0x08B0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x08B1(0x0007) MISSED OFFSET
	class UMaterialInstance*                           GhostArmMaterial;                                         // 0x08B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakControlledMove_Player");
		return ptr;
	}

};


// Class OakGame.OakCustomizationComponent
// 0x0000 (0x03A0 - 0x03A0)
class UOakCustomizationComponent : public UGbxCustomizationComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCustomizationComponent");
		return ptr;
	}


	void GetAvailableCustomizationData(TArray<class UOakCustomizationData*>* UnlockedCustomizations, TArray<class UOakCustomizationData*>* LockedCustomizations);
};


// Class OakGame.OakCustomizationData
// 0x0038 (0x0168 - 0x0130)
class UOakCustomizationData : public UGbxCustomizationData
{
public:
	class UPlayerClassIdentifier*                      PlayerClass;                                              // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCustomizationInventoryAssetSetup*           InventorySetup;                                           // 0x0138(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UInventoryAspectData*>                InventoryAspectList;                                      // 0x0140(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance)
	class UInventoryRarityData*                        RarityData;                                               // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCustomizationInventoryBalanceData*          BalanceData;                                              // 0x0158(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, DuplicateTransient, IsPlainOldData)
	class UCustomizationInventoryData*                 InventoryData;                                            // 0x0160(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, DuplicateTransient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCustomizationData");
		return ptr;
	}

};


// Class OakGame.ECHOThemeCustomizationData
// 0x0050 (0x01B8 - 0x0168)
class UECHOThemeCustomizationData : public UOakCustomizationData
{
public:
	struct FText                                       InitializationText;                                       // 0x0168(0x0028) (Edit)
	class UWwiseEvent*                                 EquipSound;                                               // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 UnequipSound;                                             // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 DPadPressSound;                                           // 0x0190(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 DPadReleaseSound;                                         // 0x0198(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 DPadSynthSound;                                           // 0x01A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 ConfirmSound;                                             // 0x01A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 ErrorSound;                                               // 0x01B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ECHOThemeCustomizationData");
		return ptr;
	}

};


// Class OakGame.OakCustomizationManager
// 0x0000 (0x0470 - 0x0470)
class AOakCustomizationManager : public AGbxCustomizationManager
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCustomizationManager");
		return ptr;
	}

};


// Class OakGame.OakDamageBasedChallenge
// 0x0028 (0x0288 - 0x0260)
class UOakDamageBasedChallenge : public UOakChallenge
{
public:
	class UWeaponTypeData*                             RequiredWeaponType;                                       // 0x0260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UManufacturerData*                           RequiredManufacturer;                                     // 0x0268(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              RequiredDamageTypes;                                      // 0x0270(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               bRequireCrit;                                             // 0x0280(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequireHostile;                                          // 0x0281(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIncrementBasedOnDamageDealt;                             // 0x0282(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bTreatMultipleHitsAsSingleHit;                            // 0x0283(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0284(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDamageBasedChallenge");
		return ptr;
	}

};


// Class OakGame.OakDamageCauserComponent
// 0x00F8 (0x03E8 - 0x02F0)
class UOakDamageCauserComponent : public UDamageCauserComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x02F0(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnModifiedWeaponShot;                                     // 0x0308(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FGbxAttributeFloat                          FirstShotInClipDamageMultiplier;                          // 0x0318(0x000C) (Transient)
	struct FGbxAttributeFloat                          LastShotInClipDamageMultiplier;                           // 0x0324(0x000C) (Transient)
	bool                                               bUsePlayerAsBalanceSourceForLevelSync;                    // 0x0330(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0331(0x0003) MISSED OFFSET
	float                                              MaxPassOverkillDamageToNextShotMultiplier;                // 0x0334(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FRegisteredWeaponShotModifier>       WeaponShotModifiers;                                      // 0x0338(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0xA0];                                      // 0x0348(0x00A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDamageCauserComponent");
		return ptr;
	}


	void UnregisterWeaponShotModifier(class UWeaponShotModifier* Modifier, class UObject* ModifierOwner);
	void SetShouldPassOverkillDamageToNextShot(bool bNewValue, const struct FName& Reason);
	void RegisterWeaponShotModifier(class UWeaponShotModifier* Modifier, class UObject* ContextOverride, class UObject* ModifierOwner);
	void ModifiedWeaponShotEvent__DelegateSignature(class AWeapon* Weapon, const struct FWeaponShotModifierData& Data);
};


// Class OakGame.OakDamageComponent
// 0x0148 (0x09C0 - 0x0878)
class UOakDamageComponent : public UDamageComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0878(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTakeSecondaryHealthDamage;                              // 0x0888(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHealthTypeNormal;                                       // 0x0898(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHealthTypeLow;                                          // 0x08A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHealthTypeVeryLow;                                      // 0x08B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHealthTypeAdded;                                        // 0x08C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHealthTypeDepleted;                                     // 0x08D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FGbxAttributeFloat                          ShieldAbsorptionChance;                                   // 0x08E8(0x000C) (Edit)
	unsigned char                                      UnknownData01[0x4];                                       // 0x08F4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnShieldAbsorbedDamage;                                   // 0x08F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTakeAnyHealthDamage;                                    // 0x0908(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bDamageBlockEnabled;                                      // 0x0918(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0919(0x0007) MISSED OFFSET
	class UDamageBlockData*                            DamageBlockData;                                          // 0x0920(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnDamageBlock;                                            // 0x0928(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDefaultElementalDeath;                                  // 0x0938(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UHitReactionTag*                             RagdollDeathTag;                                          // 0x0948(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0950(0x0018) MISSED OFFSET
	bool                                               bReplenishOnWorldReset;                                   // 0x0968(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0969(0x0003) MISSED OFFSET
	TWeakObjectPtr<class UWeaponShieldComponent>       WeaponShield;                                             // 0x096C(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	EOakElementalType                                  ElementalDeathType;                                       // 0x0974(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bDisableElementalDeaths;                                  // 0x0975(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0976(0x0002) MISSED OFFSET
	float                                              GoreRegionTriggerThreshold;                               // 0x0978(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GoreRegionLimbScale;                                      // 0x097C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                GoreSourceMaterialIndex;                                  // 0x0980(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0984(0x0004) MISSED OFFSET
	class UGoreAoEDamageData*                          AoEGoreData;                                              // 0x0988(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FGoreRegionState>                    GoreRegions;                                              // 0x0990(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UHitReactionTag*                             GoreDeathOverride;                                        // 0x09A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x18];                                      // 0x09A8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDamageComponent");
		return ptr;
	}


	void TriggerGoreRegions(class UGoreAoEDamageData* GoreData, const struct FVector& Origin, float Radius);
	void TriggerGoreRegion(const struct FName& BoneName, const struct FVector& HitDirection, bool bIgnoreRestrictions);
	void TriggerDefaultElementalDeath();
	void TriggerClientGoreRegion(const struct FGoreRegionEventSummary& EventSummary);
	void SetIgnoreShield(bool IgnoreShield);
	void SetDamageBlockEnabled(bool bNewDamageBlockEnabled);
	bool IsElementalDeath();
	bool HasGoredRegionType(EGoreRegionType REGION);
	bool HasGoredAnyRegionType(int RegionTypes);
	void GetValidGoreRegionEventFunctionNames(TArray<struct FName>* Array);
	void AddSectionPercentagesAtIndex(int Index, TArray<float> SectionPercentages);
};


// Class OakGame.OakDamageFilter
// 0x0008 (0x00A0 - 0x0098)
class UOakDamageFilter : public UDamageFilter
{
public:
	bool                                               bFilterElementalType;                                     // 0x0098(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EOakElementalType                                  ElementalTypeFilter;                                      // 0x0099(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x009A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDamageFilter");
		return ptr;
	}

};


// Class OakGame.OakDamageGlobalsData
// 0x0660 (0x08A8 - 0x0248)
class UOakDamageGlobalsData : public UDamageGlobalsData
{
public:
	class UClass*                                      CrushDamageSource;                                        // 0x0248(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0250(0x0008) MISSED OFFSET
	class UGbxAttributeData*                           SkillDamageSourceInstigatorMultiplier;                    // 0x0258(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FAttributeInitializationData                LevelSyncPlayerReceivedDamageCalc;                        // 0x0260(0x0038) (Edit)
	struct FAttributeInitializationData                LevelSyncPlayerInstigatedDamageCalc;                      // 0x0298(0x0038) (Edit)
	struct FAttributeInitializationData                LevelSyncPlayerVersusPlayerDamageCalc;                    // 0x02D0(0x0038) (Edit)
	TArray<struct FNumPlayersDamageBalanceInfo>        NumPlayersBalanceInfo;                                    // 0x0308(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	struct FPlayerDifficultyBalanceInfo                DifficultyBalanceInfos[0x2];                              // 0x0318(0x0004) (Edit)
	TArray<struct FStatusEffectApplicationDamageDefaultSettings> StatusEffectApplicationDefaults;                          // 0x0320(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      ImpactElementalDamageTypes[0x6];                          // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RadiationDamageScalePercent;                              // 0x0360(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0364(0x0004) MISSED OFFSET
	class UWwiseEvent*                                 DamageReceivedSound;                                      // 0x0368(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 DamageReceivedShieldSound;                                // 0x0370(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 DamageReceivedCriticalSound;                              // 0x0378(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 DamageDealtSound;                                         // 0x0380(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 DamageDealtCriticalSound;                                 // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 DamageDealtImmuneSound;                                   // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 DamageDealtShieldSound;                                   // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 HeartbeatWwiseEvent;                                      // 0x03A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  HeartbeatIntervalInSecondsRtpc;                           // 0x03A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  HeartbeatDelayInSecondsRtpc;                              // 0x03B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  HeartbeatVolumeRtpc;                                      // 0x03B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LowHealthHeartBPM;                                        // 0x03C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VeryLowHealthBPM;                                         // 0x03C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VeryLowHealthTransitionValue;                             // 0x03C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x03CC(0x0004) MISSED OFFSET
	class UWwiseRtpc*                                  HealthPercentRtpc;                                        // 0x03D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HealthPercentRtpcTransitionDuration;                      // 0x03D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x03DC(0x0004) MISSED OFFSET
	struct FDamageDisplayInfo                          DamageDisplayInfo;                                        // 0x03E0(0x0038) (Edit)
	struct FIncomingDamageDisplayInfo                  IncomingDamageDisplayInfo;                                // 0x0418(0x0270) (Edit)
	float                                              ResistDamageReductionFeedbackThreshold;                   // 0x0688(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinTimeBetweenResistFeedbacks;                            // 0x068C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageDealtFlashDuration;                                 // 0x0690(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                DamageDealtHealthFlash;                                   // 0x0694(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                DamageDealtCriticalFlash;                                 // 0x06A4(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                DamageDealtShieldFlash;                                   // 0x06B4(0x0010) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x06C4(0x0004) MISSED OFFSET
	struct FName                                       DamageDealtFlashParamName;                                // 0x06C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       DamageDealtFlashColorParamName;                           // 0x06D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LowHealthEffectBlendSpeed;                                // 0x06D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x06DC(0x0004) MISSED OFFSET
	class UCurveFloat*                                 LowHealthEffectCurve;                                     // 0x06E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             LowHealthParticle;                                        // 0x06E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 RevivePercentToLowHealthEffectCurve;                      // 0x06F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 RevivePercentToCreepingDeathEffectCurve;                  // 0x06F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CreepingDeathSecondWindBlendSpeed;                        // 0x0700(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0704(0x0004) MISSED OFFSET
	class UCurveFloat*                                 CreepingDeathSecondWindBlendCurve;                        // 0x0708(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CreepingDeathRevivingBlendSpeed;                          // 0x0710(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0714(0x0004) MISSED OFFSET
	class UCurveFloat*                                 CreepingDeathRevivingBlendCurve;                          // 0x0718(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             CreepingDeathParticle;                                    // 0x0720(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ShieldHitDuration;                                        // 0x0728(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinTimeBetweenShieldHits;                                 // 0x072C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 ShieldHitCurve;                                           // 0x0730(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ShieldBreakDuration;                                      // 0x0738(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x073C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 ShieldBreakAmountCurve;                                   // 0x0740(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 ShieldBreakIntensityCurve;                                // 0x0748(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ElementalInteractionDamageSource;                         // 0x0750(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAttributeInitializationData                SplatDamage;                                              // 0x0758(0x0038) (Edit)
	float                                              RecentGoreDamageTime;                                     // 0x0790(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IncomingDamagePresentationQueueDuration;                  // 0x0794(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FIncomingDamagePresentationSource>   IncomingDamagePresentations;                              // 0x0798(0x0010) (Edit, ZeroConstructor)
	struct FIncomingDamagePresentationGlobalInfo       IncomingPresentationGlobalInfo;                           // 0x07A8(0x0080) (Edit)
	uint32_t                                           NumProjectilesForQuickPop;                                // 0x0828(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x082C(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UHealthTypeData>              ArmorHealthType;                                          // 0x0830(0x0028) (Edit)
	TSoftObjectPtr<class UHealthTypeData>              ShieldHealthType;                                         // 0x0858(0x0028) (Edit)
	TSoftObjectPtr<class UHealthTypeData>              FleshHealthType;                                          // 0x0880(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDamageGlobalsData");
		return ptr;
	}

};


// Class OakGame.OakDamageModifierComponent
// 0x0040 (0x01F8 - 0x01B8)
class UOakDamageModifierComponent : public UDamageModifierComponent
{
public:
	struct FGbxAttributeFloat                          BaseStatusEffectChanceOverride;                           // 0x01B8(0x000C) (Edit)
	struct FGbxAttributeFloat                          BaseStatusEffectDamageOverride;                           // 0x01C4(0x000C) (Edit)
	bool                                               bStatusEffectDamageIsPercent;                             // 0x01D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01D1(0x0003) MISSED OFFSET
	struct FGbxAttributeFloat                          BaseStatusEffectDurationOverride;                         // 0x01D4(0x000C) (Edit)
	struct FGbxAttributeFloat                          GoreModifier;                                             // 0x01E0(0x000C) (Edit)
	struct FGbxAttributeFloat                          GibModifier;                                              // 0x01EC(0x000C) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDamageModifierComponent");
		return ptr;
	}

};


// Class OakGame.OakDamageOverTimeManager
// 0x0010 (0x0058 - 0x0048)
class UOakDamageOverTimeManager : public UDamageOverTimeManager
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0048(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDamageOverTimeManager");
		return ptr;
	}

};


// Class OakGame.OakDamageSource
// 0x0010 (0x0098 - 0x0088)
class UOakDamageSource : public UDamageSource
{
public:
	unsigned char                                      bEligibleForShieldAbsorption : 1;                         // 0x0088(0x0001) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bPlayHitNotifySounds : 1;                                 // 0x0088(0x0001) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bCanCauseLargeLiquidBodyExplosionSplash : 1;              // 0x0088(0x0001) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0089(0x0007) MISSED OFFSET
	class UGameStatData*                               KillStat;                                                 // 0x0090(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDamageSource");
		return ptr;
	}

};


// Class OakGame.OakDamageStatics
// 0x0000 (0x0028 - 0x0028)
class UOakDamageStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDamageStatics");
		return ptr;
	}


	class AWeapon* STATIC_ResolveDamagingWeapon(class AActor* DamageCauser);
	struct FOakPipelineDamageInput STATIC_MakeOakPipelineDamageInput(class AActor* DamageCauser, class AActor* DamageReceiver, class UClass* DamageType, class UClass* DamageSource, const struct FHitResult& HitInfo, const struct FVector& HitLocation, const struct FVector& HitDirection, const struct FVector& HitForceDirection, const struct FForceSelection& HitForceMagnitude, float BaseStatusEffectChance, float BaseStatusEffectDamage, float BaseStatusEffectDuration, float GoreModifier, float GibModifier);
	bool STATIC_IsElementalType(class UDamageType* DamageType, EOakElementalType ElementalType);
	bool STATIC_IsClassElementalType(class UClass* DamageTypeClass, EOakElementalType ElementalType);
	bool STATIC_IsAffectedByElementalType(class AActor* Actor, EOakElementalType Type, float Threshold);
	EOakElementalType STATIC_GetElementalType(class UDamageType* DamageType);
	EOakElementalType STATIC_GetClassElementalType(class UClass* DamageTypeClass);
	void STATIC_CauseDamage(class AActor* DamageCauser, class UClass* DamageData, class AActor* DamageTarget, float DamageOverride, const struct FHitResult& TargetedHitInfo, const struct FVector& TargetedHitDirection, class UClass* DamageTypeOverride, class UClass* DamageSourceOverride, class APawn* AdditionalEventListener, class AActor* SourceActorOverride, const struct FName& SourceSocketOverride, const struct FVector& SourceLocationOverride, const struct FVector& HitLocationOverride, const struct FRotator& HitStartRotationOffsetOverride, const struct FRotator& HitRotationOffsetOverride, float DamageAreaRadiusOverride, const struct FVector& DamageAreaBoxExtentOverride, const struct FForceSelection& ImpactForceOverride, class UExplosionData* ExplosionDataOverride, class UImpactData* ImpactDataOverride, const struct FCauseDamageStatusEffectOverrides& StatusEffectOverrides, const struct FCriticalHitDamageOverrides& CriticalHitOverrides, const struct FDamageGoreModifiers& GoreModifiers, class UParticleSystem* ScreenParticleOverride, bool bRunRadiusDamageOnClient);
	void STATIC_ApplyDamageInRadius(class UObject* WorldContextObject, float BaseDamage, const struct FVector& Origin, float Radius, class UClass* DamageType, class UClass* DamageSource, TArray<class AActor*> IgnoreActors, class AActor* DamageCauser, class AController* EventInstigator, const struct FForceSelection& BaseImpactForce, TEnumAsByte<ECollisionChannel> DamagePreventionChannel, float BaseStatusEffectChance, float BaseStatusEffectDamage, float BaseStatusEffectDuration, bool bDamageFalloff, class UDamageModifierComponent* DamageModifierComponent, class UFeedbackData* InstigatorFeedback, bool bUseInstigatorRadiusScale, float GoreModifier, float GibModifier, class UGameStatData* KillStat);
	void STATIC_ApplyDamageEx(const struct FOakPipelineDamageInput& PipelineInput, float BaseDamage);
	class AActor* STATIC_AmputateLimb(class AActor* Actor, const struct FAmputateLimbData& Data, const struct FVector& HitDirection, float HitForce);
};


// Class OakGame.OakDamageType
// 0x0028 (0x0150 - 0x0128)
class UOakDamageType : public UGbxDamageType
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0128(0x0008) MISSED OFFSET
	bool                                               bAffectedByRadiationMultiplier;                           // 0x0130(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EOakElementalType                                  ElementalType;                                            // 0x0131(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0132(0x0006) MISSED OFFSET
	class UDialogEnumValue*                            DialogSystemEnumValue;                                    // 0x0138(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGameStatData*                               KillStat;                                                 // 0x0140(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bForceDamageToHealthType;                                 // 0x0148(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0149(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDamageType");
		return ptr;
	}

};


// Class OakGame.DayNightCycleComponent
// 0x0030 (0x01A8 - 0x0178)
class UDayNightCycleComponent : public UActorComponent
{
public:
	float                                              DayBeginTime;                                             // 0x0178(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DayEndTime;                                               // 0x017C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    NotifyDayBegin;                                           // 0x0180(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    NotifyDayEnd;                                             // 0x0190(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x01A0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.DayNightCycleComponent");
		return ptr;
	}


	float GetTimeOfDay();
};


// Class OakGame.OakDebugWeaponBuilderButton
// 0x0018 (0x0300 - 0x02E8)
class UOakDebugWeaponBuilderButton : public UGbxListItem
{
public:
	class UCheckBox*                                   CheckBoxButton;                                           // 0x02E8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  DescriptionText;                                          // 0x02F0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBorder*                                     HighlightBackground;                                      // 0x02F8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDebugWeaponBuilderButton");
		return ptr;
	}

};


// Class OakGame.OakDebugWeaponBuilderMenu
// 0x00C0 (0x03B8 - 0x02F8)
class UOakDebugWeaponBuilderMenu : public UGbxDebugMenuSubmenu
{
public:
	class UBUTTON*                                     BuildButton;                                              // 0x02F8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USpinBox*                                    PlayerLevelGradeSpinner;                                  // 0x0300(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  ErrorText;                                                // 0x0308(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGbxScrollBoxList*                           ManufacturerList;                                         // 0x0310(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGbxScrollBoxList*                           AmmoTypesList;                                            // 0x0318(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGbxScrollBoxList*                           InventoryBalancesList;                                    // 0x0320(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGbxScrollBoxList*                           PartPickerListLeft;                                       // 0x0328(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGbxScrollBoxList*                           PartPickerListRight;                                      // 0x0330(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UClass*                                      OptionButtonClass;                                        // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FAvailableManufacturer>              AvailableManufacturers;                                   // 0x0340(0x0010) (ZeroConstructor)
	TArray<struct FAvailableAmmoType>                  AvailableAmmoTypes;                                       // 0x0350(0x0010) (ZeroConstructor)
	TArray<struct FAvailableInventoryBalanceData>      AvailableInventoryBalances;                               // 0x0360(0x0010) (ZeroConstructor)
	TArray<struct FAvailablePartData>                  AvailableParts;                                           // 0x0370(0x0010) (ZeroConstructor)
	uint64_t                                           PreviouslySeletedManufacturerIndexes;                     // 0x0380(0x0008) (ZeroConstructor, Config, IsPlainOldData)
	uint64_t                                           PreviouslySeletedAmmoTypes;                               // 0x0388(0x0008) (ZeroConstructor, Config, IsPlainOldData)
	uint64_t                                           PreviouslySeletedBalanceDefinitions;                      // 0x0390(0x0008) (ZeroConstructor, Config, IsPlainOldData)
	uint64_t                                           PreviouslySeletedPartListLeft;                            // 0x0398(0x0008) (ZeroConstructor, Config, IsPlainOldData)
	uint64_t                                           PreviouslySeletedPartListRight;                           // 0x03A0(0x0008) (ZeroConstructor, Config, IsPlainOldData)
	class UOakDebugWeaponBuilderButton*                CurrentFocusedOptionButton;                               // 0x03A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x03B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDebugWeaponBuilderMenu");
		return ptr;
	}


	void OnPlayerLevelChange(float InValue, TEnumAsByte<ETextCommit> CommitMethod);
	void OnPartSelectedChanged(class UGbxUserWidget* Widget, const struct FGbxMenuInputEvent& InputInfo);
	void OnOptionListItemFocused(class UGbxUserWidget* Widget, const struct FGbxMenuInputEvent& InputInfo);
	void OnManufacturerSelectedChanged(class UGbxUserWidget* Widget, const struct FGbxMenuInputEvent& InputInfo);
	void OnBuildButtonClicked();
	void OnBalanceDefSelectedChanged(class UGbxUserWidget* Widget, const struct FGbxMenuInputEvent& InputInfo);
	void OnAmmoTypeSelectedChanged(class UGbxUserWidget* Widget, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.OakDeveloperPerks
// 0x0028 (0x01A0 - 0x0178)
class UOakDeveloperPerks : public UActorComponent
{
public:
	TArray<struct FDeveloperPerk>                      Perks;                                                    // 0x0178(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class UEnum*                                       PerkTypeEnum;                                             // 0x0188(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0190(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDeveloperPerks");
		return ptr;
	}


	void UnlockWeaponTrinkets();
	void UnlockWeaponSkins();
	void UnlockVehicleParts();
	void UnlockCustomizations();
	void SpawnItems(TArray<class UItemPoolData*> ItemPools, int NumItems);
	void ServerUnlockVehicleParts();
	void ServerSpawnItems(TArray<class UItemPoolData*> ItemPools, int NumItems);
	void ServerLoaded();
	void ServerKillAllEnemies();
	void ServerGrantLevels(unsigned char NumLevels);
	void ServerGiveCurrency(class UGbxInventoryCategoryData* CurrencyType, int Amount);
	class UEnum* PerkTypeEnumFunc();
	void OnDeveloperPerkActivated(unsigned char Perk);
	void Loaded();
	void KillAllEnemies();
	void GrantLevels(unsigned char NumLevels);
	void GiveCurrency(class UGbxInventoryCategoryData* CurrencyType, int Amount);
	class AOakPlayerController* GetOwnerOakPlayerController();
};


// Class OakGame.OakDialogBlackboard
// 0x0070 (0x2A68 - 0x29F8)
class UOakDialogBlackboard : public UDialogBlackboard
{
public:
	TArray<class UEchoLogData*>                        TrackingEchoLogs;                                         // 0x29F8(0x0010) (ZeroConstructor, Transient)
	TMap<class UEchoLogData*, struct FEchoLogTrackingInfo> OnTrackedEchoLogFinishedEvents;                           // 0x2A08(0x0050) (ZeroConstructor, Transient)
	TArray<struct FDialogScriptPinnedRef>              PinnedScripts;                                            // 0x2A58(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDialogBlackboard");
		return ptr;
	}


	void BindEchoLogInitialPlayFinished(class UEchoLogData* EchoLogData, const struct FScriptDelegate& Event);
};


// Class OakGame.OakDialogComponent
// 0x0068 (0x0330 - 0x02C8)
class UOakDialogComponent : public UGbxDialogComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x02C8(0x0008) MISSED OFFSET
	struct FMissionObjectiveReference                  AutoActivateOnMissionObjective;                           // 0x02D0(0x0030) (Edit)
	struct FMissionObjectiveReference                  AutoDeactivateOnMissionObjective;                         // 0x0300(0x0030) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDialogComponent");
		return ptr;
	}

};


// Class OakGame.OakDialogSettings
// 0x0180 (0x0280 - 0x0100)
class UOakDialogSettings : public UGbxDialogSettings
{
public:
	class UDialogParameter*                            TargetParam;                                              // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogParameter*                            InstigatorParam;                                          // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxItemCalloutDistance;                                   // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0114(0x0004) MISSED OFFSET
	TArray<class UDialogScriptData*>                   AlwaysActiveDialogScripts;                                // 0x0118(0x0010) (Edit, ZeroConstructor)
	class UDialogStyle*                                EchoLogStyle;                                             // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogEvent*                                DryFireCalloutEvent;                                      // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PlayerIdleTime;                                           // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
	class UDialogEvent*                                PlayerIdleCallout;                                        // 0x0140(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FNumericRange                               SpotEnemyDistanceRange;                                   // 0x0148(0x0008) (Edit)
	struct FGameplayTag                                SpottedEnemyGameplayTag;                                  // 0x0150(0x0008) (Edit)
	class UDialogEvent*                                SpottedEnemyCallout;                                      // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogEvent*                                PlayerAlertEvent;                                         // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogParameter*                            PlayerAlertType;                                          // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogEvent*                                VehicleSpawnedEvent;                                      // 0x0170(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogEvent*                                VehicleSwappedSeatEvent;                                  // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FDialogScriptToLoadEntry>            DialogScriptsToLoadWithLevel;                             // 0x0180(0x0010) (Edit, ZeroConstructor)
	TMap<EUIDialogCallout, class UDialogEvent*>        UICallouts;                                               // 0x0190(0x0050) (Edit, ZeroConstructor)
	TMap<class UDialogEnumValue*, struct FGameplayTag> GameplayTagMappings;                                      // 0x01E0(0x0050) (Edit, ZeroConstructor)
	TMap<class UWeaponTypeData*, class UDialogEnumValue*> WeaponTypeEnumValues;                                     // 0x0230(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDialogSettings");
		return ptr;
	}

};


// Class OakGame.OakDialogSystemCustomization
// 0x0008 (0x0030 - 0x0028)
class UOakDialogSystemCustomization : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDialogSystemCustomization");
		return ptr;
	}

};


// Class OakGame.OakDiscordManager
// 0x0040 (0x0068 - 0x0028)
class UOakDiscordManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0028(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDiscordManager");
		return ptr;
	}

};


// Class OakGame.OakDownloadableContentGlobalsData
// 0x0028 (0x0058 - 0x0030)
class UOakDownloadableContentGlobalsData : public UDataAsset
{
public:
	TArray<struct FOakDownloadableEntitlementCurrencyType> Currencies;                                               // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UDownloadableEntitlementSourceData*          SparkEntitlementSourceData;                               // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDownloadableEntitlementSourceData*          DLCEntitlementSourceData;                                 // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDownloadableEntitlementSourceData*          DebugEntitlementSourceData;                               // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDownloadableContentGlobalsData");
		return ptr;
	}

};


// Class OakGame.OakDownloadableContentLicenseData
// 0x0018 (0x0078 - 0x0060)
class UOakDownloadableContentLicenseData : public UDownloadableContentLicenseData
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0060(0x0008) MISSED OFFSET
	struct FGuid                                       AssetGuid;                                                // 0x0068(0x0010) (Edit, EditConst, DuplicateTransient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDownloadableContentLicenseData");
		return ptr;
	}

};


// Class OakGame.OakDownloadableEntitlementSetData
// 0x0018 (0x0090 - 0x0078)
class UOakDownloadableEntitlementSetData : public UDownloadableContentData
{
public:
	class UDownloadableEntitlementSourceData*          EntitlementSourceData;                                    // 0x0078(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FDownloadableEntitlementSetItem>     Entitlements;                                             // 0x0080(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDownloadableEntitlementSetData");
		return ptr;
	}

};


// Class OakGame.OakDownloadableInventorySetData
// 0x0000 (0x0078 - 0x0078)
class UOakDownloadableInventorySetData : public UDownloadableInventorySetData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDownloadableInventorySetData");
		return ptr;
	}

};


// Class OakGame.OakDroneProjectile
// 0x0050 (0x0730 - 0x06E0)
class AOakDroneProjectile : public AOakAIBalancedProjectile
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x06E0(0x0018) MISSED OFFSET
	class USphereComponent*                            Sphere;                                                   // 0x06F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOakDroneProjectileMovementComponent*        DroneMovement;                                            // 0x0700(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOakDamageComponent*                         OakDamage;                                                // 0x0708(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTargetableComponent*                        Targetable;                                               // 0x0710(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTargetingComponent*                         Targeting;                                                // 0x0718(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UAIPerceptionStimuliSourceComponent*         AIPerceptionStimuliSource;                                // 0x0720(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               bUseTargetOfMovementTarget;                               // 0x0728(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EPlayerAlertType                                   PlayerAlertType;                                          // 0x0729(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x072A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDroneProjectile");
		return ptr;
	}


	void SetMovementTarget(class AActor* MovementTarget);
	class AActor* GetMovementTarget();
};


// Class OakGame.OakDroneProjectileMovementComponent
// 0x0138 (0x0400 - 0x02C8)
class UOakDroneProjectileMovementComponent : public UGbxProjectileMovementComponent
{
public:
	class AOakDroneProjectile*                         Drone;                                                    // 0x02C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EOakDroneMovementMode                              MovementMode;                                             // 0x02D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	EOakDroneFacingMode                                FacingMode;                                               // 0x02D1(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x02D2(0x0002) MISSED OFFSET
	float                                              RotationInterpSpeed;                                      // 0x02D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDeactiveWhenMovementTargetDies;                          // 0x02D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDeactivateWhenInstigatorDies;                            // 0x02D9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x02DA(0x0006) MISSED OFFSET
	class AActor*                                      MovementTarget;                                           // 0x02E0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      FacingTarget;                                             // 0x02E8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    FacingTargetChanged;                                      // 0x02F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              DroneSpeed;                                               // 0x0300(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              HoverSpeed;                                               // 0x0304(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              DroneAccelerationTime;                                    // 0x0308(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              HoverAltitude;                                            // 0x030C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              HoverAltitudeThreshold;                                   // 0x0310(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              HoverRadius;                                              // 0x0314(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              HoverRadiusMin;                                           // 0x0318(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x031C(0x0004) MISSED OFFSET
	struct FNumericRange                               HoverAngle;                                               // 0x0320(0x0008) (Edit, BlueprintVisible, Net)
	bool                                               bUseHoverAngle;                                           // 0x0328(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0329(0x0003) MISSED OFFSET
	float                                              StopHomingDistance;                                       // 0x032C(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	struct FEnvQueryParams                             HoverQuery;                                               // 0x0330(0x00B8) (Edit)
	unsigned char                                      UnknownData04[0x4];                                       // 0x03E8(0x0004) MISSED OFFSET
	bool                                               bUseHoverQuery;                                           // 0x03EC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x03ED(0x0003) MISSED OFFSET
	struct FVector                                     HoverQueryLocation;                                       // 0x03F0(0x000C) (Net, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x03FC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDroneProjectileMovementComponent");
		return ptr;
	}


	void SetMovementTarget(class AActor* NewMovementTarget);
	void SetMovementMode(EOakDroneMovementMode NewMovementMode, class AActor* NewMovementTarget);
	void OnRep_MovementMode();
};


// Class OakGame.OakDroneProjectileMovementComponent_GRMLN
// 0x0078 (0x0478 - 0x0400)
class UOakDroneProjectileMovementComponent_GRMLN : public UOakDroneProjectileMovementComponent
{
public:
	struct FScriptMulticastDelegate                    OnBoostStateChanged;                                      // 0x0400(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FGRMLNHoverProfile>                  HoverProfiles;                                            // 0x0410(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              BoostVelocitySquared;                                     // 0x0420(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HardpointActivationRadius;                                // 0x0424(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HardpointDeactivationRadius;                              // 0x0428(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x042C(0x0004) MISSED OFFSET
	struct FAttributeInitializationData                DroneDeliveryCooldownData;                                // 0x0430(0x0038) (Edit, DisableEditOnInstance)
	class AOakDroneProjectile_GRMLN*                   GRMLNOwner;                                               // 0x0468(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0470(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDroneProjectileMovementComponent_GRMLN");
		return ptr;
	}

};


// Class OakGame.GbxCondition_IsGRMLNBeamTarget
// 0x0000 (0x0088 - 0x0088)
class UGbxCondition_IsGRMLNBeamTarget : public UGbxCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_IsGRMLNBeamTarget");
		return ptr;
	}

};


// Class OakGame.OakDroneProjectile_GRMLN
// 0x05A0 (0x0CD0 - 0x0730)
class AOakDroneProjectile_GRMLN : public AOakDroneProjectile
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0730(0x0008) MISSED OFFSET
	class UGbxCustomizationComponent*                  CustomizationComponent;                                   // 0x0738(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPrimitiveComponent*                         DroneCollisionComponent;                                  // 0x0740(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMeshComponent*                              PrimaryMeshComponent;                                     // 0x0748(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    StaticFieldComponent;                                     // 0x0750(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FAttributeInitializationData                AOERadius;                                                // 0x0758(0x0038) (Edit, DisableEditOnInstance)
	class UClass*                                      StaticFieldDamageSource;                                  // 0x0790(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      CalledShotDamageSource;                                   // 0x0798(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FGRMLNBeamConfiguration                     StaticFieldBeamConfigurationData;                         // 0x07A0(0x0128) (Edit, DisableEditOnInstance)
	struct FAttributeInitializationData                BadDoseBeamCount;                                         // 0x08C8(0x0038) (Edit, DisableEditOnInstance)
	struct FGRMLNBeamConfiguration                     BadDoseBeamConfigurationData;                             // 0x0900(0x0128) (Edit, DisableEditOnInstance)
	class UInWorldIconData*                            HUDIconData;                                              // 0x0A28(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       HUDIconSocketName;                                        // 0x0A30(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FGRMLNHardpointData>                 Hardpoints;                                               // 0x0A38(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UOakActionAbility_GRMLN*                     OwnerActionAbility;                                       // 0x0A48(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class AOakCharacter_Player*                        OwnerPlayer;                                              // 0x0A50(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       DroneTarget;                                              // 0x0A58(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FOakActionAbilityEnumMaskHelper             RuntimeMods;                                              // 0x0A60(0x0004) (Net, Transient)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0A64(0x0004) MISSED OFFSET
	struct FHUDInWorldIconTargetInfo                   HUDIconInfo;                                              // 0x0A68(0x0058) (Transient)
	bool                                               bIsBoostEnabled;                                          // 0x0AC0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsStaticFieldSearching;                                  // 0x0AC1(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0xE];                                       // 0x0AC2(0x000E) MISSED OFFSET
	struct FGRMLNStaticFieldData                       StaticFieldData;                                          // 0x0AD0(0x0120) (Transient)
	TArray<struct FGRMLNBadDoseData>                   BadDoseBeams;                                             // 0x0BF0(0x0010) (ZeroConstructor, Transient)
	TMap<struct FName, class UParticleSystemComponent*> SocketToParticleSystemComponent;                          // 0x0C00(0x0050) (ExportObject, ZeroConstructor, Transient)
	TMap<class AActor*, int>                           DroneOverlappingActors;                                   // 0x0C50(0x0050) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x30];                                      // 0x0CA0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakDroneProjectile_GRMLN");
		return ptr;
	}


	void UpdateActiveTarget();
	void SetupMods();
	void SetManualTarget(class AActor* NewDroneTarget);
	void SetDronePhasing(bool bPhasing);
	void SetActiveTargetingEnabled(bool bEnabled);
	void ServerActivateCalledShot(const struct FVector& Location);
	void RegisterParticleSystemComponent(const struct FName& SocketName, class UParticleSystemComponent* InComponent);
	void OnTargetDied();
	void OnTargetDestroyed(class AActor* DestroyedActor);
	void OnTargetChanged();
	void OnShutdownGracefully();
	void OnRep_RuntimeMods();
	void OnRep_DroneTarget();
	void OnRep_bIsStaticFieldSearching();
	void OnDroneBoostStateChanged();
	void OnCinematicModeChanged(class UCinematicModeData* CinematicMode);
	void OnCalledShotKill(class AActor* KilledActor);
	void OnCalledShotActivated(const struct FVector& Location);
	void NotifyActorComponentEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void NotifyActorComponentBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	bool IsInMovementMode(EOakDroneMovementMode Mode);
	bool HasValidDroneTarget();
	bool HasGRMLNMod(EGRMLNModType ModType);
	class AActor* FindNewTargetAutonomous();
	void DoDroneDelivery();
	void CreateStaticFieldBeamToTarget(class AActor* TargetActor, const struct FName& BeamName);
	void CreateBadDoseBeamToTarget(class AActor* TargetActor, const struct FName& BeamName);
	void ClientNotifyLightProjectileFire(class ULightProjectile* Source);
	void ApplyShieldDamageRefund(class AActor* CurrentTarget, const struct FVector& LastDamageLocation, float TotalRefund);
	void ApplyCollisionDamageToTarget(class AActor* Target);
	void ActivateCalledShot(const struct FVector& Location);
};


// Class OakGame.EnvQueryContext_Drone_MovementTarget
// 0x0000 (0x0038 - 0x0038)
class UEnvQueryContext_Drone_MovementTarget : public UEnvQueryContext_EnvQueryParam
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EnvQueryContext_Drone_MovementTarget");
		return ptr;
	}

};


// Class OakGame.EnvQueryContext_Drone_HoverTargetPos
// 0x0000 (0x0038 - 0x0038)
class UEnvQueryContext_Drone_HoverTargetPos : public UEnvQueryContext_EnvQueryParam
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.EnvQueryContext_Drone_HoverTargetPos");
		return ptr;
	}

};


// Class OakGame.OakPresentableStatusEffectData
// 0x0018 (0x00A0 - 0x0088)
class UOakPresentableStatusEffectData : public UStatusEffectData
{
public:
	class UOakStatusEffectPresentationData*            FXData;                                                   // 0x0088(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	class UOakStatusEffectPresentationData*            PresentationData;                                         // 0x0090(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	EPresentableStatusEffectValueStrategy              ValueStrategy;                                            // 0x0098(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0098(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData01[0x4];                                       // 0x009C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPresentableStatusEffectData");
		return ptr;
	}

};


// Class OakGame.OakElementalEffectData
// 0x0000 (0x00A0 - 0x00A0)
class UOakElementalEffectData : public UOakPresentableStatusEffectData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakElementalEffectData");
		return ptr;
	}

};


// Class OakGame.OakElementalEffectBucketProviderInterface
// 0x0000 (0x0028 - 0x0028)
class UOakElementalEffectBucketProviderInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakElementalEffectBucketProviderInterface");
		return ptr;
	}

};


// Class OakGame.OakFirstPersonComponent
// 0x0050 (0x05B0 - 0x0560)
class UOakFirstPersonComponent : public UFirstPersonComponent
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0560(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakFirstPersonComponent");
		return ptr;
	}

};


// Class OakGame.OakFreezeData
// 0x0110 (0x0140 - 0x0030)
class UOakFreezeData : public UGbxDataAsset
{
public:
	class UClass*                                      DestructibleComponent;                                    // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      FreezeCE;                                                 // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ThawCE;                                                   // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FreezeTime;                                               // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ThawTime;                                                 // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ThawScaleDelay;                                           // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	class UPhysicalMaterial*                           ImpactPhysicalMaterial;                                   // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDestructibleMesh*                           DestructibleSupportMesh;                                  // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 StaticSupportMesh;                                        // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FTransform                                  SupportMeshTransform;                                     // 0x0070(0x0030) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              GroundSupportMaxOffset;                                   // 0x00A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	class UMaterialInterface*                          GroundDecalMaterial;                                      // 0x00A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     GroundDecalSize;                                          // 0x00B0(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              GroundDecalDuration;                                      // 0x00BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GroundDecalFadeDuration;                                  // 0x00C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET
	class UClass*                                      FreezeFallingDamageType;                                  // 0x00C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      FreezeFallingDamageSource;                                // 0x00D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FAttributeInitializationData                FreezeFallingDamageScale;                                 // 0x00D8(0x0038) (Edit, DisableEditOnInstance)
	struct FForceSelection                             FreezeFallingForce;                                       // 0x0110(0x0020) (Edit, DisableEditOnInstance)
	class UImpactData*                                 FreezeFallingImpactData;                                  // 0x0130(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBlockVehicle;                                            // 0x0138(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0139(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakFreezeData");
		return ptr;
	}

};


// Class OakGame.OakGameActivityAdapter
// 0x0068 (0x0090 - 0x0028)
class UOakGameActivityAdapter : public UObject
{
public:
	unsigned char                                      UnknownData00[0x68];                                      // 0x0028(0x0068) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakGameActivityAdapter");
		return ptr;
	}

};


// Class OakGame.OakGameEngine
// 0x0418 (0x1638 - 0x1220)
class UOakGameEngine : public UGameEngine
{
public:
	unsigned char                                      UnknownData00[0x418];                                     // 0x1220(0x0418) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakGameEngine");
		return ptr;
	}

};


// Class OakGame.OakGameInstance
// 0x1280 (0x1470 - 0x01F0)
class UOakGameInstance : public UGbxGameInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01F0(0x0008) MISSED OFFSET
	class UOakSingletons*                              OakSingletons;                                            // 0x01F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3A8];                                     // 0x0200(0x03A8) MISSED OFFSET
	class UGbxMenuInput*                               GbxMenuInput;                                             // 0x05A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakUIControllerDisconnectManager*           UIControllerDisconnectManager;                            // 0x05B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxPCTextChatBuffer*                        PCTextChatBuffer;                                         // 0x05B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGbxGFxMenu*>                         AlwaysLoadedMenuInstances;                                // 0x05C0(0x0010) (ZeroConstructor)
	TArray<struct FDevMapToMapId>                      DevMapToMapIds;                                           // 0x05D0(0x0010) (ZeroConstructor, Config)
	TArray<struct FPlayerClassToClassId>               PlayerClassToClassIds;                                    // 0x05E0(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData02[0x384];                                     // 0x05F0(0x0384) MISSED OFFSET
	float                                              LoadingScreenFadeTime;                                    // 0x0974(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x140];                                     // 0x0978(0x0140) MISSED OFFSET
	TArray<class UPlayerClassIdentifier*>              AllPlayerClasses;                                         // 0x0AB8(0x0010) (ZeroConstructor, Transient)
	TArray<struct FConditionalSavegameExpression>      DefaultSaveGameEvaluator;                                 // 0x0AC8(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData04[0x18];                                      // 0x0AD8(0x0018) MISSED OFFSET
	class FString                                      LobbyBeaconTemplateName;                                  // 0x0AF0(0x0010) (ZeroConstructor, Config)
	class FString                                      MatchmakingBeaconTemplateName;                            // 0x0B00(0x0010) (ZeroConstructor, Config)
	struct FName                                       FallbackLaunchSaveGameMapName;                            // 0x0B10(0x0008) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHideShiftUsersWhenCrossplayIsToggledOff;                 // 0x0B18(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bRestrictShiftSessionInvitesWhenCrossplayIsToggledOff;    // 0x0B19(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bRestrictCrossPlatformJoinsWhenCrossplayIsToggledOff;     // 0x0B1A(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05[0x5];                                       // 0x0B1B(0x0005) MISSED OFFSET
	class UOakManagedActorManager*                     ManagedActorManager;                                      // 0x0B20(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x60];                                      // 0x0B28(0x0060) MISSED OFFSET
	TArray<TScriptInterface<class UNameplateInfoProviderInterface>> PlayerTargetables;                                        // 0x0B88(0x0010) (ZeroConstructor, Transient)
	bool                                               bIsPlayerVersusPlayerCollisionEnabled;                    // 0x0B98(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0B99(0x0007) MISSED OFFSET
	class UOakDialogSystemCustomization*               OakDialogSystemCustomization;                             // 0x0BA0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bHasSelectedInitialPlayer;                                // 0x0BA8(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x107];                                     // 0x0BA9(0x0107) MISSED OFFSET
	class UMatchmakingTest*                            MatchmakingTest;                                          // 0x0CB0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3F8];                                     // 0x0CB8(0x03F8) MISSED OFFSET
	class UClass*                                      OnlineStatsHelper;                                        // 0x10B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UOakOnlineStatsHelper*                       StatsHelperInst;                                          // 0x10B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UOakModifierManager*>                 ModifierManagers;                                         // 0x10C0(0x0010) (ZeroConstructor)
	class UOakDiscordManager*                          DiscordManager;                                           // 0x10D0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0xD0];                                      // 0x10D8(0x00D0) MISSED OFFSET
	float                                              PresenceUpdateTimerSeconds;                               // 0x11A8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bRefreshPresenceOnSessionUpdates;                         // 0x11AC(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData11[0x1AB];                                     // 0x11AD(0x01AB) MISSED OFFSET
	TArray<struct FLootAudioStinger>                   LootAudioStingers;                                        // 0x1358(0x0010) (ZeroConstructor, Transient)
	float                                              CooldownBeforeNextLootAudioStinger;                       // 0x1368(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x136C(0x0004) MISSED OFFSET
	TArray<class UGbxMenuData*>                        TempMenuDataReferences;                                   // 0x1370(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData13[0xF0];                                      // 0x1380(0x00F0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakGameInstance");
		return ptr;
	}


	void UpdateMainMenuPlayerStandIns();
	void StopMatchmakingTest();
	void StartMatchmakingTest(class UClass* InMatchmakingTest);
	bool STATIC_ShouldStartNewGameFlow(class UObject* WorldContextObject);
	void SetSplitscreenViewportEnabled(bool bEnabled);
	void ServerPartyListenToECHOData(class UEchoLogData* EchoLogData, class UGbxDialogComponent* PlayOnSpeaker);
	void STATIC_SendPlayerAreaObjectStartedEvent(class UObject* WorldContextObject);
	void ResetRegionStage(class URegionData* REGION);
	void RemovePlayerAlert(class AActor* TargetedActor);
	void RemoveManagedActor(class AActor* TheActor, bool bDestroyActor);
	void OnTrialErrorMessageClicked(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnSplitscreenDialogDismissed(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnShiftReportReasonSelected(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnRemoveShiftFriendConfirmed(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnRemoveFriendConfirmed(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnProfileErrorMessageClicked(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnNATHelpChoiceMade(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnModalDialogChoiceMade(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnHandleUnpairedMenuInput(const struct FGbxMenuInputEvent& InputEvent);
	void OnControllerDisconnectClicked(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnConfirmSplitscreenLeave(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnConfirmSignIntoAccount(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnConfirmMatchClicked(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnConfirmKickPlayer(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnConfirmKickNetworkedPlayersForJoin(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnConfirmDisconnect(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnConfirmApplyMicropatches(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void OnBlockUserConfirmed(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	bool IsMenuLevel();
	int GetManagedActorCount(class UOakManagedActorDefinition* Type, class AActor* TheOwner);
	void DebugSplitscreenLeave(uint32_t ControllerId);
	void DebugSplitscreenJoin(uint32_t ControllerId);
	void AddPickupAudioStinger(class AOakInventoryItemPickup* Pickup, class UWwiseEvent* Sound);
	void AddPickupAudioCue(class AActor* SoundActor, class UWwiseEvent* Sound);
	void AddManagedActor(class AActor* TheActor, class UOakManagedActorDefinition* Type, class AActor* TheOwner);
};


// Class OakGame.OakGameSession
// 0x0000 (0x0470 - 0x0470)
class AOakGameSession : public AGameSession
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakGameSession");
		return ptr;
	}

};


// Class OakGame.OakGameUserSettings
// 0x00B0 (0x0228 - 0x0178)
class UOakGameUserSettings : public UGameUserSettings
{
public:
	EResolutionScale                                   ResolutionScale;                                          // 0x0178(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EFrameRateLimit                                    FrameRateLimitMode;                                       // 0x0179(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x017A(0x0002) MISSED OFFSET
	int                                                CustomFrameRateLimit;                                     // 0x017C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableCameraMotionBlur;                                  // 0x0180(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnablePerObjectMotionBlur;                               // 0x0181(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bEnableCAS;                                               // 0x0182(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EGraphicsQuality                                   GraphicsQualityMode;                                      // 0x0183(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EGraphicsQuality                                   RecommendedGraphicsQualityMode;                           // 0x0184(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ETextureStreamingQuality                           TextureStreamingQuality;                                  // 0x0185(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EMaterialQuality                                   MaterialQuality;                                          // 0x0186(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0187(0x0001) MISSED OFFSET
	int                                                AntiAliasingModeIndex;                                    // 0x0188(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	EAnisotropicFilteringType                          AnisotropicFilteringMode;                                 // 0x018C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EShadowQuality                                     ShadowQualityMode;                                        // 0x018D(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x018E(0x0002) MISSED OFFSET
	int                                                PerformanceStatsLevel;                                    // 0x0190(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	EEnvironmentTextureDetail                          EnvironmentTextureDetailMode;                             // 0x0194(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EDrawDistance                                      DrawDistanceMode;                                         // 0x0195(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EEnvironmentDetail                                 EnvironmentDetailMode;                                    // 0x0196(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ETerrainType                                       TerrainMode;                                              // 0x0197(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EFoliageDensity                                    FoliageMode;                                              // 0x0198(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EVolumetricFogType                                 VolumetricFogMode;                                        // 0x0199(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EScreenSpaceReflections                            ScreenSpaceReflectionsMode;                               // 0x019A(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ECharacterTextureDetail                            CharacterTextureDetailMode;                               // 0x019B(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	ECharacterDetail                                   CharacterDetailMode;                                      // 0x019C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	EAmbientOcclusionQuality                           AmbientOcclusionQualityMode;                              // 0x019D(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x019E(0x0002) MISSED OFFSET
	float                                              EdgeDetectionTexelOffset;                                 // 0x01A0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	EBenchmarkDataOutputMode                           BenchmarkDataOutputMode;                                  // 0x01A4(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x01A5(0x0003) MISSED OFFSET
	float                                              UISafeFrameScaling;                                       // 0x01A8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              HDRBrightness;                                            // 0x01AC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              Brightness;                                               // 0x01B0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              BlackLevel;                                               // 0x01B4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              HdrUIBrightness;                                          // 0x01B8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	TEnumAsByte<ETwoPlayerSplitScreenType>             TwoPlayerSplitscreenLayout;                               // 0x01BC(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x01BD(0x0003) MISSED OFFSET
	class FString                                      LastBenchmarkDateTime;                                    // 0x01C0(0x0010) (ZeroConstructor, Config)
	class FString                                      LastBenchmarkDataOutputPath;                              // 0x01D0(0x0010) (ZeroConstructor, Config)
	float                                              LastBenchmarkAvgFPS;                                      // 0x01E0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              LastBenchmarkAvgFrameTime;                                // 0x01E4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              LastBenchmarkAvgCPU;                                      // 0x01E8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              LastBenchmarkAvgGPU;                                      // 0x01EC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              LastBenchmarkLoadTimeSeconds;                             // 0x01F0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x01F4(0x0004) MISSED OFFSET
	class FString                                      AnalyticsTag;                                             // 0x01F8(0x0010) (ZeroConstructor, Config)
	EGraphicsQuality                                   OverrideGraphicsQualityMode;                              // 0x0208(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0209(0x0003) MISSED OFFSET
	float                                              TextureStreamingViewBoostScale;                           // 0x020C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              TextureStreamingViewBoostScaleOverride;                   // 0x0210(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              TextureStreamingAdaptiveBoostScale;                       // 0x0214(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              TextureStreamingAdaptiveBoostScaleOverride;               // 0x0218(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                TextureStreamingPoolSizeMB;                               // 0x021C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                TextureStreamingPoolSizeMBOverride;                       // 0x0220(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHasPerformedDirectXBetaUpgrade;                          // 0x0224(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0225(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakGameUserSettings");
		return ptr;
	}


	void SetVolumetricFogMode(EVolumetricFogType NewMode);
	void SetTextureStreamingQuality(ETextureStreamingQuality NewMode);
	void SetTerrainDetailMode(ETerrainType NewMode);
	void SetShadowQualityMode(EShadowQuality NewMode);
	void SetScreenSpaceReflectionsMode(EScreenSpaceReflections NewMode);
	void SetResolutionScalePercentage(EResolutionScale NewMode);
	void SetMaterialQuality(EMaterialQuality NewMode);
	void SetGraphicsQualityMode(EGraphicsQuality NewMode, bool bForce);
	void SetFrameRateLimitMode(EFrameRateLimit NewMode);
	void SetFoliageMode(EFoliageDensity NewMode);
	void SetEnvironmentDetailMode(EEnvironmentDetail NewMode);
	void SetEnablePerObjectMotionBlur(bool NewMode);
	void SetEnableCAS(bool bNewValue);
	void SetEnableCameraMotionBlur(bool bNewValue);
	void SetEdgeDetectionTexelOffset(float NewOffset);
	void SetDrawDistanceMode(EDrawDistance NewMode);
	void SetDisplayPerformanceStatsMode(int NewMode);
	void SetCustomFrameRateLimit(int NewLimit);
	void SetCharacterDetailMode(ECharacterDetail NewMode);
	void SetBenchmarkDataOutputMode(EBenchmarkDataOutputMode NewMode);
	void SetAntiAliasingMode(int bNewValue);
	void SetAnisotropicFilteringMode(EAnisotropicFilteringType NewMode);
	void SetAmbientOcclusionQualityMode(EAmbientOcclusionQuality NewMode);
	EVolumetricFogType GetVolumetricFogMode();
	ETextureStreamingQuality GetTextureStreamingQuality();
	ETerrainType GetTerrainDetailMode();
	EShadowQuality GetShadowQualityMode();
	EScreenSpaceReflections GetScreenSpaceReflectionsMode();
	EResolutionScale GetResolutionScalePercentage();
	EGraphicsQuality GetRecommendedGraphicsQualityMode();
	EGraphicsQuality GetOverrideGraphicsQualityMode();
	int GetNumAntiAliasingModes();
	EMaterialQuality GetMaterialQuality();
	EGraphicsQuality GetGraphicsQualityMode();
	EFrameRateLimit GetFrameRateLimitMode();
	EFoliageDensity GetFoliageMode();
	EEnvironmentDetail GetEnvironmentDetailMode();
	bool GetEnablePerObjectMotionBlur();
	bool GetEnableCAS();
	bool GetEnableCameraMotionBlur();
	float GetEdgeDetectionTexelOffset();
	EDrawDistance GetDrawDistanceMode();
	int GetDisplayPerformanceStatsMode();
	EVolumetricFogType GetDefaultVolumetricFogMode();
	ETextureStreamingQuality GetDefaultTextureStreamingQuality();
	ETerrainType GetDefaultTerrainDetailLevel();
	EShadowQuality GetDefaultShadowQualityMode();
	EScreenSpaceReflections GetDefaultScreenSpaceReflectionsMode();
	EResolutionScale STATIC_GetDefaultResolutionScalePercentage();
	bool GetDefaultPerObjectMotionBlurEnabled();
	EMaterialQuality GetDefaultMaterialQuality();
	EGraphicsQuality GetDefaultGraphicsQualityMode();
	EFrameRateLimit STATIC_GetDefaultFrameRateLimitMode();
	EFoliageDensity GetDefaultFoliageMode();
	EEnvironmentDetail GetDefaultEnvironmentDetailMode();
	float STATIC_GetDefaultEdgeDetectionTexelOffset();
	EDrawDistance GetDefaultDrawDistanceMode();
	int STATIC_GetDefaultDisplayPerformanceStatsMode();
	int STATIC_GetDefaultCustomFrameRateLimit();
	ECharacterDetail GetDefaultCharacterDetailMode();
	bool GetDefaultCAS();
	bool GetDefaultCameraMotionBlurEnabled();
	EBenchmarkDataOutputMode STATIC_GetDefaultBenchmarkDataOutputMode();
	int GetDefaultAntiAliasingMode();
	EAnisotropicFilteringType GetDefaultAnisotropicFilteringMode();
	EAmbientOcclusionQuality GetDefaultAmbientOcclusionQualityMode();
	int GetCustomFrameRateLimit();
	ECharacterDetail GetCharacterDetailMode();
	EBenchmarkDataOutputMode GetBenchmarkDataOutputMode();
	struct FText GetAntiAliasingModeName(int Mode);
	int GetAntiAliasingMode();
	EAnisotropicFilteringType GetAnisotropicFilteringMode();
	EAmbientOcclusionQuality GetAmbientOcclusionQualityMode();
};


// Class OakGame.OakGameViewportClient
// 0x0028 (0x0340 - 0x0318)
class UOakGameViewportClient : public UGameViewportClient
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0318(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakGameViewportClient");
		return ptr;
	}


	void SetTwoPlayerSplitScreenType(const class FString& SplitScreenType);
};


// Class OakGame.OakGFxHUDContainer
// 0x0000 (0x05C0 - 0x05C0)
class UOakGFxHUDContainer : public UGbxGFxHUDContainer
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakGFxHUDContainer");
		return ptr;
	}

};


// Class OakGame.OakGlobalAIData
// 0x00F0 (0x0210 - 0x0120)
class UOakGlobalAIData : public UGlobalAIData
{
public:
	float                                              DownerDistance;                                           // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0124(0x0004) MISSED OFFSET
	struct FGameplayTag                                DownerDisabledTag;                                        // 0x0128(0x0008) (Edit)
	struct FAttributeInitializationData                AIAccuracyMaxScalePT1;                                    // 0x0130(0x0038) (Edit)
	struct FAttributeInitializationData                AIAccuracyMinScalePT1;                                    // 0x0168(0x0038) (Edit)
	struct FAttributeInitializationData                AIAccuracyMinScalePT2;                                    // 0x01A0(0x0038) (Edit)
	struct FAttributeInitializationData                AIAccuracyMaxScalePT2;                                    // 0x01D8(0x0038) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakGlobalAIData");
		return ptr;
	}

};


// Class OakGame.OakGlobalMissionGraph
// 0x0000 (0x0078 - 0x0078)
class UOakGlobalMissionGraph : public UGlobalMissionGraph
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakGlobalMissionGraph");
		return ptr;
	}

};


// Class OakGame.OakGlobalsData
// 0x00A0 (0x0130 - 0x0090)
class UOakGlobalsData : public UGbxGlobalsData
{
public:
	class UGbxUIGlobals*                               UIGlobals;                                                // 0x0090(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFriendGlobals*                              FriendGlobals;                                            // 0x0098(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TSoftObjectPtr<class UInventoryGlobals>            InventoryGlobals;                                         // 0x00A0(0x0028) (Edit, DisableEditOnInstance)
	class UExperienceGlobals*                          ExperienceGlobals;                                        // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStandInGlobals*                             StandInGlobals;                                           // 0x00D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UOakDialogSettings*                          DialogSettings;                                           // 0x00D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UOakStreamingInteractionGlobals*             StreamingInteractionGlobals;                              // 0x00E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UOakLoadingScreenGlobals*                    LoadingScreenGlobals;                                     // 0x00E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UPlayerClassIdentifier*>              AllPlayerClasses;                                         // 0x00F0(0x0010) (Edit, ZeroConstructor)
	class UDataTable*                                  MicroPatchSwitchesTable;                                  // 0x0100(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UOakDownloadableContentGlobalsData*          DLCGlobalsData;                                           // 0x0108(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      DeveloperPerks;                                           // 0x0110(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UOakCustomizationData*>               DeveloperSkins;                                           // 0x0118(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UOakWeaponGlobalsData*                       WeaponsGlobals;                                           // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakGlobalsData");
		return ptr;
	}

};


// Class OakGame.OakGlobalTravelGraph
// 0x0000 (0x00A0 - 0x00A0)
class UOakGlobalTravelGraph : public UGlobalTravelGraph
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakGlobalTravelGraph");
		return ptr;
	}

};


// Class OakGame.OakHitRegionComponent
// 0x0000 (0x01B0 - 0x01B0)
class UOakHitRegionComponent : public UHitRegionComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakHitRegionComponent");
		return ptr;
	}


	void TriggerAoEGore(class UGoreAoEDamageData* GoreData, const struct FVector& Origin, float Radius);
};


// Class OakGame.OakHitRegionData
// 0x0050 (0x02B0 - 0x0260)
class UOakHitRegionData : public UHitRegionData
{
public:
	bool                                               bUseStatusEffectChanceScale;                              // 0x0260(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0261(0x0007) MISSED OFFSET
	struct FAttributeInitializationData                StatusEffectChanceScale;                                  // 0x0268(0x0038) (Edit)
	TArray<struct FOakHitRegionModifierData>           DamageModifiers;                                          // 0x02A0(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakHitRegionData");
		return ptr;
	}

};


// Class OakGame.OakHostFriendBeacon
// 0x0000 (0x0170 - 0x0170)
class UOakHostFriendBeacon : public UOnlineBeaconHost
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakHostFriendBeacon");
		return ptr;
	}

};


// Class OakGame.OakHostLobbyBeacon
// 0x0038 (0x01A8 - 0x0170)
class UOakHostLobbyBeacon : public UOnlineBeaconHost
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0170(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakHostLobbyBeacon");
		return ptr;
	}

};


// Class OakGame.OakHostMatchmakingBeacon
// 0x0020 (0x0190 - 0x0170)
class UOakHostMatchmakingBeacon : public UOnlineBeaconHost
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0170(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakHostMatchmakingBeacon");
		return ptr;
	}

};


// Class OakGame.OakHUD
// 0x0300 (0x0928 - 0x0628)
class AOakHUD : public AGbxHUD
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0628(0x0008) MISSED OFFSET
	class AOakPlayerController*                        OakPlayerOwner;                                           // 0x0630(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              DeathFadeToBlackTime;                                     // 0x0638(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              TimeSinceDeath;                                           // 0x063C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UGFxActionSkillWidget*>               AvailableActionSkillWidgets;                              // 0x0640(0x0010) (ZeroConstructor, Transient)
	class UGFxChallengeProgressWidget*                 ChallengeProgressWidget;                                  // 0x0650(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGFxTutorialMessageWidget*                   TutorialMessageWidget;                                    // 0x0658(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGFxHUDInitializationMovie>   HUDInitializationMovie;                                   // 0x0660(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TMap<struct FGuid, ETrackedIconOwner>              TrackedIconAndOwningWidgetMapping;                        // 0x0668(0x0050) (ZeroConstructor, Transient)
	TArray<class UClass*>                              ContextSensitivePromptOrder;                              // 0x06B8(0x0010) (Edit, ZeroConstructor)
	TArray<class UGbxGFxHUDWidget*>                    AvailableContextSensitivePromptWidgets;                   // 0x06C8(0x0010) (ZeroConstructor, Transient)
	TSoftObjectPtr<class UHUDNotificationAsset>        VaultCardLevelUpNotificationAsset;                        // 0x06D8(0x0028) (Transient)
	class UFont*                                       CutsceneSkipFont;                                         // 0x0700(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0708(0x0008) MISSED OFFSET
	class UGFxBossBar*                                 GFxBossBar;                                               // 0x0710(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGFxHealthBar>                CachedHealthBar;                                          // 0x0718(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGFxExperienceBar>            CachedExperienceBar;                                      // 0x0720(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGFxMinimapWidget>            CachedMinimap;                                            // 0x0728(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGFxInWorldIconContainer>     CachedInWorldIconWidget;                                  // 0x0730(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGFxAmmoBar>                  CachedAmmoBar;                                            // 0x0738(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGFxShieldBar>                CachedShieldBar;                                          // 0x0740(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGFxMissionTrackerHUDWidget>  CachedMissionTrackerWidget;                               // 0x0748(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UGFxGrenadeWidget>            CachedGrenadeWidget;                                      // 0x0750(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnHUDNotification;                                        // 0x0758(0x0010) (ZeroConstructor, Transient, InstancedReference)
	struct FScriptMulticastDelegate                    OnHUDNotificationWithId;                                  // 0x0768(0x0010) (ZeroConstructor, Transient, InstancedReference)
	struct FScriptMulticastDelegate                    OnHUDErrorNotification;                                   // 0x0778(0x0010) (ZeroConstructor, Transient, InstancedReference)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0788(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnActivateCheckpoint;                                     // 0x0798(0x0010) (ZeroConstructor, Transient, InstancedReference)
	unsigned char                                      UnknownData03[0x18];                                      // 0x07A8(0x0018) MISSED OFFSET
	bool                                               bSuppressAllNotifications;                                // 0x07C0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3F];                                      // 0x07C1(0x003F) MISSED OFFSET
	bool                                               bListenForDisplayedNotificationMenu;                      // 0x0800(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1F];                                      // 0x0801(0x001F) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnHUDPawnChanged;                                         // 0x0820(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData06[0xE0];                                      // 0x0830(0x00E0) MISSED OFFSET
	TArray<EHUDInitializationAnimationSet>             AnimWidgetTargetQueue;                                    // 0x0910(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData07[0x8];                                       // 0x0920(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakHUD");
		return ptr;
	}


	void TriggerContextualPrompt();
	void StateChanged(class UGbxHUDStateData* OldState, class UGbxHUDStateData* NewState);
	void SetWeaponAsDebugTarget(int Slot);
	void STATIC_SetHUDVisible(class AOakPlayerController* OakPlayerController, bool bVisible);
	void RegisterGFxBossBar(class UGFxBossBar* NewBossBar);
	void STATIC_PopCurrentHUDStateForAllPlayers(class UGameInstance* GameInstance);
	void OnWeaponChanged(class AWeapon* Weapon, class AWeapon* LastWeapon);
	void OnVaultRewardReceived(EVaultRewardType VaultRewardType);
	void OnPlayerAbilitySlotChanged(class UOakPlayerAbilitySlotData* SlotData);
	void OnHUDPawnChanged__DelegateSignature(class APawn* NewPawn, class APawn* OldPawn);
	void OnFFYLStopped();
	void OnAreaEntered(const struct FText& DisplayText, class UWwiseEvent* DiscoverySound);
	void OnAreaDiscovered(const struct FText& DisplayText, class UWwiseEvent* DiscoverySound);
	void OnAbilityRemoved(class UGbxAbility* Ability);
	void OnAbilityAdded(class UGbxAbility* Ability);
	void LoadDisplayedNotificationMenu();
	bool IsContextSensitivePromptActive();
	void STATIC_GotoHUDStateForAllPlayers(class UGameInstance* GameInstance, class UGbxHUDStateData* State, bool bSetForLateJoin);
	void DisplayRolloutNotification(const struct FText& Title, const struct FText& MESSAGE, float Duration);
	void DisplayNotificationWithId(class UHUDNotificationAsset* Asset, unsigned char RaidNotificationId, const struct FText& MessageText, int NotificationPriority, class UClass* TrackedNotificationTarget, bool bMakeActiveImmediately, bool bAbortIfNotImmediatelyActive);
	void DisplayNotification(class UHUDNotificationAsset* Asset, const struct FText& MessageText, int NotificationPriority, class UClass* TracketNotificationTarget, bool bMakeActiveImmediately);
	void DisplayErrorNotification(const struct FText& MessageText);
	void DisplayCurrencyWidget(class UGbxInventoryCategoryData* CurrencyType);
	void DebugShowNotification(const class FString& NotificationType, const class FString& Text);
	void ClearNotifications();
	void BeginContextSensitivePromptHeld();
	void ActivateCheckpoint();
	void AbortContextSensitivePromptHeld();
};


// Class OakGame.OakHUDSkillIconWidget
// 0x0000 (0x0208 - 0x0208)
class UOakHUDSkillIconWidget : public UUserWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakHUDSkillIconWidget");
		return ptr;
	}


	void StartTriggeredAbilityTimer(class UOakPlayerAbilitySlotData* InSlotData, float Duration);
};


// Class OakGame.OakInputAbility_Player_Common
// 0x0010 (0x0140 - 0x0130)
class UOakInputAbility_Player_Common : public UOakCharacterInputAbility
{
public:
	class UGbxInputActionData_Continuous_Vector*       LookActionData;                                           // 0x0130(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxInputActionData_Continuous_Vector*       MoveActionData;                                           // 0x0138(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInputAbility_Player_Common");
		return ptr;
	}


	void PlayerMove(class UGbxInputActionData_Continuous_Vector* ActionData, const struct FVector& Val);
	void PlayerLook(class UGbxInputActionData_Continuous_Vector* ActionData, const struct FVector& Val);
};


// Class OakGame.OakInputAbilityListData
// 0x0010 (0x0040 - 0x0030)
class UOakInputAbilityListData : public UGbxDataAsset
{
public:
	TArray<class UClass*>                              InputAbilityClasses;                                      // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInputAbilityListData");
		return ptr;
	}

};


// Class OakGame.OakInputActionEventInterpreter
// 0x0000 (0x0050 - 0x0050)
class UOakInputActionEventInterpreter : public UGbxInputActionEventInterpreter
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInputActionEventInterpreter");
		return ptr;
	}

};


// Class OakGame.OakInputEventHelpers
// 0x0000 (0x0028 - 0x0028)
class UOakInputEventHelpers : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInputEventHelpers");
		return ptr;
	}


	void SigFunc_OakMoveLookAxis(const struct FVector& Val, bool bGamePad);
};


// Class OakGame.OakInputRebindContext
// 0x0000 (0x0080 - 0x0080)
class UOakInputRebindContext : public UGbxInputRebindContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInputRebindContext");
		return ptr;
	}

};


// Class OakGame.OakInventoryConsumableItem
// 0x0008 (0x04A8 - 0x04A0)
class AOakInventoryConsumableItem : public AOakInventoryItem
{
public:
	class UStaticMeshComponent*                        ItemMeshComponent;                                        // 0x04A0(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInventoryConsumableItem");
		return ptr;
	}

};


// Class OakGame.OakInventoryAmmoItem
// 0x0000 (0x04A8 - 0x04A8)
class AOakInventoryAmmoItem : public AOakInventoryConsumableItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInventoryAmmoItem");
		return ptr;
	}

};


// Class OakGame.OakInventoryBalanceData
// 0x0008 (0x0130 - 0x0128)
class UOakInventoryBalanceData : public UInventoryBalanceData
{
public:
	TEnumAsByte<EOakLeague>                            SourceLeague;                                             // 0x0128(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0129(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInventoryBalanceData");
		return ptr;
	}

};


// Class OakGame.OakInventoryCurrencyItem
// 0x0048 (0x04F0 - 0x04A8)
class AOakInventoryCurrencyItem : public AOakInventoryConsumableItem
{
public:
	class UInventoryCategoryData*                      CurrencyCategory;                                         // 0x04A8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FAttributeInitializationData                CurrencyValueScale;                                       // 0x04B0(0x0038) (Edit, BlueprintReadOnly)
	class UGameStatData*                               CurrencyStat;                                             // 0x04E8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInventoryCurrencyItem");
		return ptr;
	}

};


// Class OakGame.OakInventoryCustomizationPartData
// 0x0048 (0x0198 - 0x0150)
class UOakInventoryCustomizationPartData : public UInventoryCustomizationPartData
{
public:
	class UManufacturerData*                           ManufacturerData;                                         // 0x0150(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryCategoryData*                      InventoryCategory;                                        // 0x0158(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      InventoryActorClass;                                      // 0x0160(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEnforceRarityRestriction;                                // 0x0168(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0169(0x0007) MISSED OFFSET
	TArray<class UInventoryAspectData*>                InventoryAspectList;                                      // 0x0170(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate)
	class UInventoryRarityData*                        RarityData;                                               // 0x0180(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class UCustomizationInventoryBalanceData*          BalanceData;                                              // 0x0188(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, DuplicateTransient, IsPlainOldData)
	class UCustomizationInventoryData*                 InventoryData;                                            // 0x0190(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, DuplicateTransient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInventoryCustomizationPartData");
		return ptr;
	}

};


// Class OakGame.OakInventoryCustomizationPartItem
// 0x0008 (0x04A8 - 0x04A0)
class AOakInventoryCustomizationPartItem : public AOakInventoryItem
{
public:
	class UStaticMeshComponent*                        ItemMeshComponent;                                        // 0x04A0(0x0008) (ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInventoryCustomizationPartItem");
		return ptr;
	}

};


// Class OakGame.OakInventoryData
// 0x0010 (0x0310 - 0x0300)
class UOakInventoryData : public UInventoryData
{
public:
	class UPlayerClassIdentifier*                      RequiredPlayerClass;                                      // 0x0300(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0308(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInventoryData");
		return ptr;
	}

};


// Class OakGame.OakInventoryDisplayItem
// 0x0008 (0x0730 - 0x0728)
class AOakInventoryDisplayItem : public AOakInventoryItemPickup
{
public:
	float                                              ItemCardDisplayLifetime;                                  // 0x0728(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x072C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInventoryDisplayItem");
		return ptr;
	}

};


// Class OakGame.OakInventoryGenericPartData
// 0x0008 (0x0280 - 0x0278)
class UOakInventoryGenericPartData : public UInventoryGenericPartData
{
public:
	TEnumAsByte<EOakLeague>                            SourceLeague;                                             // 0x0278(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0279(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInventoryGenericPartData");
		return ptr;
	}

};


// Class OakGame.OakInventoryHealthItem
// 0x0008 (0x04B0 - 0x04A8)
class AOakInventoryHealthItem : public AOakInventoryConsumableItem
{
public:
	class UGameStatData*                               HealthStat;                                               // 0x04A8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInventoryHealthItem");
		return ptr;
	}

};


// Class OakGame.OakInventoryNamingStrategyData
// 0x0070 (0x00A0 - 0x0030)
class UOakInventoryNamingStrategyData : public UInventoryNamingStrategyData
{
public:
	class UOakInventoryNamingStrategyData*             NamingStrategyToExpand;                                   // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxContributingParts;                                     // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<struct FOakInventoryNameData>               TripleNames;                                              // 0x0040(0x0010) (Edit, ZeroConstructor)
	TArray<struct FExtractedOakInventoryCombinationNameData> ExtractedCombinationNames;                                // 0x0050(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FOakInventoryNameData>               SingleNames;                                              // 0x0060(0x0010) (Edit, ZeroConstructor)
	TArray<unsigned char>                              RelevantPartTypes;                                        // 0x0070(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0080(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInventoryNamingStrategyData");
		return ptr;
	}


	void ForceExtractCombinationNamingData();
	void EnumerateInventoryParts(TArray<class UInventoryPartData*>* OutInventoryParts);
};


// Class OakGame.OakInventoryRarityData
// 0x0018 (0x0160 - 0x0148)
class UOakInventoryRarityData : public UInventoryRarityData
{
public:
	struct FDataTableRowHandle                         WeaponDataTableRow;                                       // 0x0148(0x0010) (Edit)
	class UZoneMapPOITypeData*                         ZoneMapPOIType;                                           // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInventoryRarityData");
		return ptr;
	}

};


// Class OakGame.OakInventoryRarityDataTableAttributeValueResolver
// 0x0008 (0x00E0 - 0x00D8)
class UOakInventoryRarityDataTableAttributeValueResolver : public UDataTableFunctionAttributeValueResolver
{
public:
	EOakInventoryRarityBalanceTableType                DataTableFromRarity;                                      // 0x00D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakInventoryRarityDataTableAttributeValueResolver");
		return ptr;
	}

};


// Class OakGame.OakIronBearHardpointSelectMenu
// 0x0028 (0x0318 - 0x02F0)
class UOakIronBearHardpointSelectMenu : public UGbxUmgMenu
{
public:
	int                                                CurrentLeftHardpointIndex;                                // 0x02F0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                CurrentRightHardpointIndex;                               // 0x02F4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                CurrentCoreIndex;                                         // 0x02F8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02FC(0x0004) MISSED OFFSET
	class UComboBoxString*                             LeftHardpointComboBox;                                    // 0x0300(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UComboBoxString*                             RightHardpointComboBox;                                   // 0x0308(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UComboBoxString*                             CoreComboBox;                                             // 0x0310(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakIronBearHardpointSelectMenu");
		return ptr;
	}


	void RightHardpointSelectionChanged(const class FString& SelectedItem, TEnumAsByte<ESelectInfo> SelectionType);
	void LeftHardpointSelectionChanged(const class FString& SelectedItem, TEnumAsByte<ESelectInfo> SelectionType);
	void CoreSelectionChanged(const class FString& SelectedItem, TEnumAsByte<ESelectInfo> SelectionType);
};


// Class OakGame.OakLightProjectile
// 0x0020 (0x0490 - 0x0470)
class UOakLightProjectile : public ULightProjectile
{
public:
	float                                              BaseStatusEffectChance;                                   // 0x0470(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              BaseStatusEffectDamage;                                   // 0x0474(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              BaseStatusEffectDuration;                                 // 0x0478(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              StatusEffectChanceScalar;                                 // 0x047C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              StatusEffectDamageScalar;                                 // 0x0480(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              StatusEffectDurationScalar;                               // 0x0484(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class UOakLightProjectileData*                     OakData;                                                  // 0x0488(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLightProjectile");
		return ptr;
	}


	void InitOakChildData(struct FOakLightProjectileInitializationData* InitData);
};


// Class OakGame.OakJAKLightProjectile
// 0x0008 (0x0498 - 0x0490)
class UOakJAKLightProjectile : public UOakLightProjectile
{
public:
	class UOakJAKLightProjectileData*                  JAKData;                                                  // 0x0490(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakJAKLightProjectile");
		return ptr;
	}


	void PlayFeedback(const struct FOakJAKFeedbackData& FeedbackData, const struct FVector& EffectLocation);
};


// Class OakGame.OakLightProjectileData
// 0x0010 (0x0340 - 0x0330)
class UOakLightProjectileData : public ULightProjectileData
{
public:
	unsigned char                                      bSuppressAmpedTracerFX : 1;                               // 0x0330(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      bDamageElementalInteractionsOnBounce : 1;                 // 0x0330(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0331(0x0007) MISSED OFFSET
	class UGameStatData*                               KillStat;                                                 // 0x0338(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLightProjectileData");
		return ptr;
	}

};


// Class OakGame.OakJAKLightProjectileData
// 0x0150 (0x0490 - 0x0340)
class UOakJAKLightProjectileData : public UOakLightProjectileData
{
public:
	float                                              ModCooldownTime;                                          // 0x0340(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0344(0x0004) MISSED OFFSET
	TArray<struct FOakJAKFeedbackData>                 StackLevelFeedback;                                       // 0x0348(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FOakJAKFeedbackData                         RefundAmmoFeedback;                                       // 0x0358(0x0010) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FEnvQueryParams                             RicochetQueryParams;                                      // 0x0368(0x00B8) (Edit, BlueprintReadOnly)
	bool                                               bRandomizeRicochetQueryResults;                           // 0x0420(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0421(0x0007) MISSED OFFSET
	struct FRelativeDirectionData                      NoTargetRicochetDirection;                                // 0x0428(0x0050) (Edit, BlueprintReadOnly)
	struct FOakJAKFeedbackData                         RicochetFeedback;                                         // 0x0478(0x0010) (Edit, BlueprintReadOnly, IsPlainOldData)
	class UClass*                                      RicochetProjectileData;                                   // 0x0488(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakJAKLightProjectileData");
		return ptr;
	}

};


// Class OakGame.OakKillBasedChallenge
// 0x0038 (0x0298 - 0x0260)
class UOakKillBasedChallenge : public UOakChallenge
{
public:
	class UWeaponTypeData*                             RequiredWeaponType;                                       // 0x0260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UManufacturerData*                           RequiredManufacturer;                                     // 0x0268(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequireHostile;                                          // 0x0270(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequireCrit;                                             // 0x0271(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequireZoom;                                             // 0x0272(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequireNoZoom;                                           // 0x0273(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequireCloseRange;                                       // 0x0274(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0275(0x0003) MISSED OFFSET
	float                                              CloseRangeMaxDistance;                                    // 0x0278(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequireLongRange;                                        // 0x027C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x027D(0x0003) MISSED OFFSET
	float                                              LongRangeMinDistance;                                     // 0x0280(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequireCrouch;                                           // 0x0284(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequireUnaware;                                          // 0x0285(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequireMovingFullSpeed;                                  // 0x0286(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequireSliding;                                          // 0x0287(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequireDirectHit;                                        // 0x0288(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequireIndirectHit;                                      // 0x0289(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequireOneShotHealth;                                    // 0x028A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequireOneShotShield;                                    // 0x028B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequireWeaponKill;                                       // 0x028C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bRequireGrenadeKill;                                      // 0x028D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x028E(0x0002) MISSED OFFSET
	class UClass*                                      RequiredGrenadePayloadType;                               // 0x0290(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakKillBasedChallenge");
		return ptr;
	}

};


// Class OakGame.OakLadderInteractData
// 0x0018 (0x0258 - 0x0240)
class UOakLadderInteractData : public ULadderInteractData
{
public:
	struct FCharacterJumpGoalSetting                   UpwardJumpGoal;                                           // 0x0240(0x000C) (Edit)
	float                                              UpwardJumpFinishVelocityThreshold;                        // 0x024C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InputDirectionalVerticalityThreshold;                     // 0x0250(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0254(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLadderInteractData");
		return ptr;
	}

};


// Class OakGame.OakCondition_League
// 0x0008 (0x0090 - 0x0088)
class UOakCondition_League : public UGbxCondition
{
public:
	TEnumAsByte<EOakLeague>                            League;                                                   // 0x0088(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0089(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakCondition_League");
		return ptr;
	}

};


// Class OakGame.OakLeagueLootChanceScaleAttributeValueResolver
// 0x0008 (0x0030 - 0x0028)
class UOakLeagueLootChanceScaleAttributeValueResolver : public UAttributeValueResolver
{
public:
	TEnumAsByte<EOakLeague>                            League;                                                   // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLeagueLootChanceScaleAttributeValueResolver");
		return ptr;
	}

};


// Class OakGame.OakLeagueTravelStation
// 0x0008 (0x05D8 - 0x05D0)
class AOakLeagueTravelStation : public ATravelStationObject
{
public:
	class ULevelTravelStationData*                     LeagueEnterTravelStationData;                             // 0x05D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLeagueTravelStation");
		return ptr;
	}

};


// Class OakGame.OakLeagueTravelStationExit
// 0x0008 (0x05D8 - 0x05D0)
class AOakLeagueTravelStationExit : public ATravelStationObject
{
public:
	class ULevelTravelStationData*                     LeagueExitTravelStationData;                              // 0x05D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLeagueTravelStationExit");
		return ptr;
	}

};


// Class OakGame.OakLevelMinimapDataAsset
// 0x0010 (0x0040 - 0x0030)
class UOakLevelMinimapDataAsset : public UDataAsset
{
public:
	class UTexture2D*                                  MinimapImage;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AppearanceScale;                                          // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLevelMinimapDataAsset");
		return ptr;
	}

};


// Class OakGame.OakLevelScriptActor
// 0x0018 (0x0478 - 0x0460)
class AOakLevelScriptActor : public ALevelScriptActor
{
public:
	class UMissionObserverComponent*                   LevelMissionObserver;                                     // 0x0460(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnPlayerDied;                                             // 0x0468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLevelScriptActor");
		return ptr;
	}

};


// Class OakGame.OakLevelStreaming
// 0x0020 (0x0160 - 0x0140)
class UOakLevelStreaming : public UGbxLevelStreamingBase
{
public:
	unsigned char                                      MapNameEnumIdx;                                           // 0x0140(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ZoneNameEnumIdx;                                          // 0x0141(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0142(0x0006) MISSED OFFSET
	TArray<unsigned char>                              MapIndexesForCurrentZone;                                 // 0x0148(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0158(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLevelStreaming");
		return ptr;
	}


	void OnLevelLoadedChanged();
};


// Class OakGame.OakMessage
// 0x0000 (0x0028 - 0x0028)
class UOakMessage : public ULocalMessage
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMessage");
		return ptr;
	}

};


// Class OakGame.OakLevelSyncMessage
// 0x0000 (0x0028 - 0x0028)
class UOakLevelSyncMessage : public UOakMessage
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLevelSyncMessage");
		return ptr;
	}

};


// Class OakGame.OakLightBeam
// 0x0058 (0x0668 - 0x0610)
class UOakLightBeam : public ULightBeam
{
public:
	float                                              BaseStatusEffectChance;                                   // 0x0610(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              BaseStatusEffectDamage;                                   // 0x0614(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              BaseStatusEffectDuration;                                 // 0x0618(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x061C(0x0004) MISSED OFFSET
	class UParticleSystemComponent*                    ModifierComponent;                                        // 0x0620(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x40];                                      // 0x0628(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLightBeam");
		return ptr;
	}


	void OnModifierParticleSystemFinished(class UParticleSystemComponent* PSC);
	void InitOakChildData(struct FOakLightBeamInitializationData* InitData);
};


// Class OakGame.OakLightBeamData
// 0x0000 (0x01C8 - 0x01C8)
class UOakLightBeamData : public ULightBeamData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLightBeamData");
		return ptr;
	}

};


// Class OakGame.OakLightBeamStatics
// 0x0000 (0x0028 - 0x0028)
class UOakLightBeamStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLightBeamStatics");
		return ptr;
	}


	void STATIC_CreateOakLightBeamFromData(const struct FOakLightBeamInitializationData& InitData);
};


// Class OakGame.OakLightProjectileStatics
// 0x0000 (0x0028 - 0x0028)
class UOakLightProjectileStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLightProjectileStatics");
		return ptr;
	}


	void STATIC_ThrowLightProjectileFromData(class AActor* Thrower, const struct FOakLightProjectileInitializationData& Data, const struct FName& SourceSocket, float MaxPredication, float Speed, float AnglePercent, const struct FRotator& DirectionOffset, class AActor* TargetOverride, const struct FVector& LocalTargetOffset, const struct FName& TargetSocket, bool bSpawnAsync);
	void STATIC_ThrowLightProjectile(class AActor* Thrower, class UClass* Data, int Flags, const struct FName& SourceSocket, float MaxPredication, float Speed, float AnglePercent, const struct FRotator& DirectionOffset, class AActor* TargetOverride, const struct FVector& LocalTargetOffset, const struct FName& TargetSocket, bool bSpawnAsync);
	void STATIC_CreateOakLightProjectileFromDataAsync(const struct FOakLightProjectileInitializationData& InitData, float ForceSpawnTimer);
	void STATIC_CreateOakLightProjectileFromData(const struct FOakLightProjectileInitializationData& InitData);
};


// Class OakGame.OakLoadingSceneCaptureActor
// 0x0008 (0x0460 - 0x0458)
class AOakLoadingSceneCaptureActor : public AActor
{
public:
	class USceneCaptureComponent2D*                    CaptureComponent;                                         // 0x0458(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLoadingSceneCaptureActor");
		return ptr;
	}

};


// Class OakGame.OakLoadingSceneMeshActor
// 0x0008 (0x0460 - 0x0458)
class AOakLoadingSceneMeshActor : public AActor
{
public:
	class UStaticMeshComponent*                        StaticMeshComponent;                                      // 0x0458(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLoadingSceneMeshActor");
		return ptr;
	}

};


// Class OakGame.OakLoadingScreenExpansionData
// 0x00B0 (0x00E0 - 0x0030)
class UOakLoadingScreenExpansionData : public UGbxDataAsset
{
public:
	TMap<struct FName, TSoftObjectPtr<class UMaterialInterface>> PerMapBackgrounds;                                        // 0x0030(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	TMap<struct FName, TSoftObjectPtr<class UMaterialInterface>> PerMapBackgrounds_4K;                                     // 0x0080(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FWeightedLoadingTooltip>             LoadingTooltips;                                          // 0x00D0(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLoadingScreenExpansionData");
		return ptr;
	}

};


// Class OakGame.OakLoadingScreenGlobals
// 0x0338 (0x0368 - 0x0030)
class UOakLoadingScreenGlobals : public UGbxDataAsset
{
public:
	TSoftObjectPtr<class UStaticMesh>                  VaultLogoMesh;                                            // 0x0030(0x0028) (Edit, DisableEditOnInstance)
	struct FVector2D                                   MeshOffset;                                               // 0x0058(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   MeshScale;                                                // 0x0060(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    MeshRotation;                                             // 0x0068(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    MeshRotationRate;                                         // 0x0074(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              CameraDistance;                                           // 0x0080(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FOVAngle;                                                 // 0x0084(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TSoftObjectPtr<class UStaticMesh>                  BackgroundMesh;                                           // 0x0088(0x0028) (Edit, DisableEditOnInstance)
	TMap<struct FName, TSoftObjectPtr<class UMaterialInterface>> PerMapBackgrounds;                                        // 0x00B0(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	TMap<struct FName, TSoftObjectPtr<class UMaterialInterface>> PerMapBackgrounds_4K;                                     // 0x0100(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	TSoftObjectPtr<class UMaterialInterface>           FallbackBackground;                                       // 0x0150(0x0028) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UMaterialInterface>           FallbackBackground_4K;                                    // 0x0178(0x0028) (Edit, DisableEditOnInstance)
	float                                              BackgroundDistance;                                       // 0x01A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01A4(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UFont>                        LoadingScreenFont;                                        // 0x01A8(0x0028) (Edit, DisableEditOnInstance)
	TMap<class FString, TSoftObjectPtr<class UFont>>   LocaleToLoadingScreenFont;                                // 0x01D0(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	int                                                TooltipSize;                                              // 0x0220(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TooltipDistanceFromEdge;                                  // 0x0224(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TooltipDuration;                                          // 0x0228(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x022C(0x0004) MISSED OFFSET
	struct FText                                       LoadingText;                                              // 0x0230(0x0028) (Edit)
	TArray<struct FText>                               LoadingTooltips;                                          // 0x0248(0x0010) (Edit, ZeroConstructor)
	bool                                               bAppendGearUpModeTooltipsInsteadOfReplacing;              // 0x0258(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0259(0x0003) MISSED OFFSET
	float                                              GearUpModeTooltipWeight;                                  // 0x025C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FText>                               GearUpLoadingTooltips;                                    // 0x0260(0x0010) (Edit, ZeroConstructor)
	TSoftObjectPtr<class UTexture2D>                   VoiceIcon;                                                // 0x0270(0x0028) (Edit, DisableEditOnInstance)
	TMap<class FString, TSoftObjectPtr<class UTexture2D>> VoicePlatformIcons;                                       // 0x0298(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FLinearColor                                VoiceTextColor;                                           // 0x02E8(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	int                                                VoiceTextSize;                                            // 0x02F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VoiceWidthMarginPercentage;                               // 0x02FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VoiceHeightPositionPercentage;                            // 0x0300(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0304(0x0004) MISSED OFFSET
	TMap<struct FName, TSoftObjectPtr<class ULocalizedOverlays>> MovieSubtitlesMap;                                        // 0x0308(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	int                                                SubtitlesSize;                                            // 0x0358(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SubtitlesDistanceFromEdge;                                // 0x035C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HideLoadingScreenDelay;                                   // 0x0360(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0364(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLoadingScreenGlobals");
		return ptr;
	}

};


// Class OakGame.OakLocalPlayer
// 0x0040 (0x0208 - 0x01C8)
class UOakLocalPlayer : public ULocalPlayer
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x01C8(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLocalPlayer");
		return ptr;
	}


	void OnConfirmSignIntoAccount(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.OakLootableComponent
// 0x0050 (0x0268 - 0x0218)
class UOakLootableComponent : public ULootableComponent
{
public:
	bool                                               bForceNoInstancedLoot;                                    // 0x0218(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bNoLootBeam;                                              // 0x0219(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x021A(0x0006) MISSED OFFSET
	TArray<struct FAttributeEffectData>                SpawnLootAttributeEffects;                                // 0x0220(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FName                                       DropLootSocketName;                                       // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class ULootSpawnPatternData*                       DropLootPattern;                                          // 0x0238(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeToSpawnLootOver;                                      // 0x0240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bSpawnAttachedLootHidden;                                 // 0x0244(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0245(0x0003) MISSED OFFSET
	float                                              LootEnabledDelay;                                         // 0x0248(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LootAutoPickupPlayerTriggerRadius;                        // 0x024C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideAutoLootDelay;                                   // 0x0250(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0251(0x0003) MISSED OFFSET
	float                                              AutoLootDelayOverride;                                    // 0x0254(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxDeferredSpawnDelay;                                    // 0x0258(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC];                                       // 0x025C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLootableComponent");
		return ptr;
	}


	void HandlePickupSpawned(class ADroppedInventoryItemPickup* Pickup);
	void DetachAttachedLoot(class ADroppedInventoryItemPickup* Pickup, class ULootSpawnPatternData* DropPattern);
	void DetachAllAttachedLoot(class ULootSpawnPatternData* DropPattern);
};


// Class OakGame.OakLostLootComponent
// 0x0050 (0x01C8 - 0x0178)
class UOakLostLootComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0178(0x0018) MISSED OFFSET
	class UPrimitiveComponent*                         SpawnDirectionComponent;                                  // 0x0190(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              InitialDropLootMassScale;                                 // 0x0198(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x019C(0x0004) MISSED OFFSET
	TArray<class UClass*>                              LootSpawnActions;                                         // 0x01A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class ULootSpawnPatternData*                       DropLootPattern;                                          // 0x01B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       SpawnDirectionComponentName;                              // 0x01B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DelayBetweenSpawningItem;                                 // 0x01C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x01C4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakLostLootComponent");
		return ptr;
	}


	void SpawnAndDropLoot(class AOakPlayerController* OwnerController);
};


// Class OakGame.OakMapData
// 0x0090 (0x00B8 - 0x0028)
class UOakMapData : public UMapData
{
public:
	float                                              NorthDegreeOffset;                                        // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bForceNormalDifficultySetting;                            // 0x002C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MapNameEnumIdx;                                           // 0x002D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      ZoneNameEnumIdx;                                          // 0x002E(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x002F(0x0001) MISSED OFFSET
	class UEnum*                                       MapNameEnum;                                              // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	class UEnum*                                       ZoneNameEnum;                                             // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FMapCharacterPhysicsSettings                CharacterPhysicsSettings;                                 // 0x0040(0x0004) (Edit)
	bool                                               bDisableCombatExperienceGains;                            // 0x0044(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	class UDataTable*                                  EchoDeviceScreenDataTable;                                // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UZoneMapMeshData*                            LocalZoneMapMeshData;                                     // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UImpactExpansionData*>                ImpactExpansions;                                         // 0x0058(0x0010) (Edit, ZeroConstructor)
	TMap<class UPhysicalMaterial*, class UParticleSystem*> PlayerWakeParticleSystemExpansions;                       // 0x0068(0x0050) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMapData");
		return ptr;
	}


	class UEnum* ZoneNameEnumFunc();
	class UEnum* MapNameEnumFunc();
};


// Class OakGame.OakMainMenuMapData
// 0x0020 (0x00D8 - 0x00B8)
class UOakMainMenuMapData : public UOakMapData
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B8(0x0010) MISSED OFFSET
	class APlayerStandIn*                              CharacterSelectStandIn;                                   // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class APostProcessVolume*                          PostProcessVolume;                                        // 0x00D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMainMenuMapData");
		return ptr;
	}

};


// Class OakGame.OakManagedActorDefinition
// 0x0078 (0x00A8 - 0x0030)
class UOakManagedActorDefinition : public UGbxDataAsset
{
public:
	struct FAttributeInitializationData                MaxCount;                                                 // 0x0030(0x0038) (Edit)
	bool                                               bDestroyOnOwnerDath;                                      // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDisplayInUI;                                             // 0x0069(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EReapOrder                                         DeathReapOrder;                                           // 0x006A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x006B(0x0005) MISSED OFFSET
	struct FAttributeInitializationData                DeathReapPercent;                                         // 0x0070(0x0038) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakManagedActorDefinition");
		return ptr;
	}

};


// Class OakGame.OakManagedActorManager
// 0x0010 (0x0038 - 0x0028)
class UOakManagedActorManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakManagedActorManager");
		return ptr;
	}


	void NotifyActorDestroyed(class AActor* TheActor);
};


// Class OakGame.OakManufacturerData
// 0x0028 (0x0138 - 0x0110)
class UOakManufacturerData : public UManufacturerData
{
public:
	struct FDataTableRowHandle                         WeaponDataTableRow;                                       // 0x0110(0x0010) (Edit)
	TArray<TSoftObjectPtr<class UClass>>               AssociatedChallenges;                                     // 0x0120(0x0010) (Edit, ZeroConstructor)
	class UGameStatData*                               KillStat;                                                 // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakManufacturerData");
		return ptr;
	}

};


// Class OakGame.OakManufacturerDataTableAttributeValueResolver
// 0x0008 (0x00E0 - 0x00D8)
class UOakManufacturerDataTableAttributeValueResolver : public UDataTableFunctionAttributeValueResolver
{
public:
	EOakManufacturerBalanceTableType                   DataTableFromManufactuer;                                 // 0x00D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakManufacturerDataTableAttributeValueResolver");
		return ptr;
	}

};


// Class OakGame.MapDataFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UMapDataFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MapDataFunctionLibrary");
		return ptr;
	}


	unsigned char STATIC_GetZoneNameEnumValue(class UObject* WorldContextObject);
	struct FName STATIC_GetZoneName(class UObject* WorldContextObject);
	unsigned char STATIC_GetMapNameEnumValue(class UObject* WorldContextObject);
	struct FName STATIC_GetMapName(class UObject* WorldContextObject);
};


// Class OakGame.OakMayhemModifiersDataAsset
// 0x0028 (0x0058 - 0x0030)
class UOakMayhemModifiersDataAsset : public UGbxDataAsset
{
public:
	TArray<struct FMayhemModifierDifficultyLevel>      ModifierDifficultyLevels;                                 // 0x0030(0x0010) (ZeroConstructor, Deprecated)
	int                                                DifficultyLevelBaseIndex;                                 // 0x0040(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	TArray<struct FName>                               MapsToExclude;                                            // 0x0048(0x0010) (ZeroConstructor, Deprecated)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMayhemModifiersDataAsset");
		return ptr;
	}

};


// Class OakGame.OakMayhemUIDataAsset
// 0x0010 (0x0040 - 0x0030)
class UOakMayhemUIDataAsset : public UGbxDataAsset
{
public:
	TArray<struct FMayhemUILevelData>                  LevelUIData;                                              // 0x0030(0x0010) (ZeroConstructor, Deprecated)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMayhemUIDataAsset");
		return ptr;
	}

};


// Class OakGame.OakMenuGameMode
// 0x0018 (0x0560 - 0x0548)
class AOakMenuGameMode : public AGameMode
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0548(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMenuGameMode");
		return ptr;
	}

};


// Class OakGame.OakPlayerState
// 0x0158 (0x0680 - 0x0528)
class AOakPlayerState : public APlayerState
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0528(0x0008) MISSED OFFSET
	struct FUniqueNetIdRepl                            ShiftUniqueId;                                            // 0x0530(0x0028) (Net)
	TArray<struct FHealthType>                         HealthInformation;                                        // 0x0558(0x0010) (Net, ZeroConstructor)
	int                                                Level;                                                    // 0x0568(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x056C(0x0004) MISSED OFFSET
	class UPlayerClassIdentifier*                      PlayerClass;                                              // 0x0570(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x21];                                      // 0x0578(0x0021) MISSED OFFSET
	bool                                               bIsRaidSpectating;                                        // 0x0599(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	EHealthState                                       HealthState;                                              // 0x059A(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bHasShieldEquipped;                                       // 0x059B(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x34];                                      // 0x059C(0x0034) MISSED OFFSET
	float                                              MusicThreatLevel;                                         // 0x05D0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bDuelingEnabled;                                          // 0x05D4(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	ETradeRequestReceptionType                         TradeRequestReceptionType;                                // 0x05D5(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bHasPossessionOfPawn;                                     // 0x05D6(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bHasFullControlOfPawn_ForSonyRTMP;                        // 0x05D7(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	class UClass*                                      LevelSyncMessageClass;                                    // 0x05D8(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bPhotoModeActive;                                         // 0x05E0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x05E1(0x0003) MISSED OFFSET
	struct FGuid                                       PlayerCharacterGuid;                                      // 0x05E4(0x0010) (Net, IsPlainOldData)
	bool                                               bIsHeadsetPresent;                                        // 0x05F4(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x57];                                      // 0x05F5(0x0057) MISSED OFFSET
	struct FVector                                     PlayerLocation;                                           // 0x064C(0x000C) (Net, IsPlainOldData)
	struct FRotator                                    PlayerRotation;                                           // 0x0658(0x000C) (Net, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1C];                                      // 0x0664(0x001C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerState");
		return ptr;
	}


	void ServerSetShiftUniqueId(const struct FUniqueNetIdRepl& InShiftUniqueId);
	void ServerSetPlayerClass(class UPlayerClassIdentifier* InPlayerClass);
	void ServerSetIsHeadsetPresent(bool InHeadsetPresent);
	void ServerReportClientMatchmakingError(EMatchmakingError Error);
	void ServerPlayerDisplayDataChanged();
	void OnRep_ShiftUniqueId();
	void OnRep_PlayerLocation();
	void OnRep_PlayerLevel();
	void OnRep_PlayerHeadsetPresent();
	void OnRep_PlayerDownStateExitReason();
	void OnRep_PlayerClass();
	void OnRep_IsRaidSpectating();
	struct FRotator GetTargetActorRotation();
	struct FVector GetTargetActorLocation();
	void ClientMatchmakingConfirmPendingReservation(const struct FName& NewBeaconName, const class FString& NewBeaconURL, const class FString& ActivityGuid, bool bBackfillOnly);
};


// Class OakGame.OakMenuPlayerState
// 0x0000 (0x0680 - 0x0680)
class AOakMenuPlayerState : public AOakPlayerState
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMenuPlayerState");
		return ptr;
	}

};


// Class OakGame.OakMenuSwitcherTest
// 0x0010 (0x06B0 - 0x06A0)
class UOakMenuSwitcherTest : public UGbxGFxMenuSwitcher
{
public:
	class UGbxGFxObject*                               TabWidget;                                                // 0x06A0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x06A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMenuSwitcherTest");
		return ptr;
	}

};


// Class OakGame.OakMenuSwitcherTestSubmenu
// 0x0000 (0x0690 - 0x0690)
class UOakMenuSwitcherTestSubmenu : public UGbxGFxMenuSwitcherSubmenu
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMenuSwitcherTestSubmenu");
		return ptr;
	}

};


// Class OakGame.OakMinimapElement
// 0x0030 (0x02E8 - 0x02B8)
class UOakMinimapElement : public UGbxUserWidget
{
public:
	float                                              InRangeAlpha;                                             // 0x02B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              OutOfRangeAlpha;                                          // 0x02BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bClampRadarEdge;                                          // 0x02C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02C1(0x0003) MISSED OFFSET
	float                                              MaxClampDistance;                                         // 0x02C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldDisplay;                                           // 0x02C8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x02C9(0x0003) MISSED OFFSET
	uint32_t                                           WaypointRadius;                                           // 0x02CC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      TargetActor;                                              // 0x02D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UImage*                                      ElementImage;                                             // 0x02D8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UScaleBox*                                   ElementScale;                                             // 0x02E0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMinimapElement");
		return ptr;
	}

};


// Class OakGame.OakMinimapIconComponent
// 0x0128 (0x02A0 - 0x0178)
class UOakMinimapIconComponent : public UActorComponent
{
public:
	EOakMinimapIconComponentType                       MinimapComponentType;                                     // 0x0178(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0179(0x0007) MISSED OFFSET
	struct FGFxMinimapWidgetIcon                       MinimapIconProperties;                                    // 0x0180(0x00D0) (Edit)
	bool                                               bBeginTrackinOnPlay;                                      // 0x0250(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0251(0x0007) MISSED OFFSET
	struct FInstancedPlayerOwnerInfo                   InstancedPlayerOwnerInfo;                                 // 0x0258(0x0018) (Net, Transient)
	bool                                               bIsTracking;                                              // 0x0270(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsTrackingInternal;                                      // 0x0271(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsInControl;                                             // 0x0272(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0273(0x0001) MISSED OFFSET
	TWeakObjectPtr<class AOakCharacter>                OakCharacterOwner;                                        // 0x0274(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x24];                                      // 0x027C(0x0024) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMinimapIconComponent");
		return ptr;
	}


	void UpdateTracking();
	void SetupTargetting();
	void SetTracking(bool bInTracking);
	void OnRep_IsTracking();
	void OnRep_InstancedPlayerOwnerInfo();
	void OnCharacterDied();
	void DelayedUpdateIsTracking();
};


// Class OakGame.OakMinimapIconTracker
// 0x0040 (0x0068 - 0x0028)
class UOakMinimapIconTracker : public UObject
{
public:
	struct FScriptMulticastDelegate                    BeginTrackingDelegate;                                    // 0x0028(0x0010) (ZeroConstructor, Transient, InstancedReference)
	struct FScriptMulticastDelegate                    UpdateTrackingDelegate;                                   // 0x0038(0x0010) (ZeroConstructor, Transient, InstancedReference)
	struct FScriptMulticastDelegate                    EndTrackingDelgate;                                       // 0x0048(0x0010) (ZeroConstructor, Transient, InstancedReference)
	TArray<TWeakObjectPtr<class UOakMinimapIconComponent>> TrackedComponents;                                        // 0x0058(0x0010) (ExportObject, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMinimapIconTracker");
		return ptr;
	}

};


// Class OakGame.OakMission
// 0x00F0 (0x04F8 - 0x0408)
class UOakMission : public UMission
{
public:
	TSoftObjectPtr<class UClass>                       VehicleClass;                                             // 0x0408(0x0028) (Edit)
	TSoftObjectPtr<class UVehiclePartData>             VehiclePart;                                              // 0x0430(0x0028) (Edit)
	TSoftObjectPtr<class AOakSpawner>                  VehicleSpawner;                                           // 0x0458(0x0028) (Edit)
	TSoftObjectPtr<class UInventoryBalanceData>        MissionWeaponBalanceData;                                 // 0x0480(0x0028) (Edit)
	TEnumAsByte<EOakLeague>                            MissionLeague;                                            // 0x04A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoActivateLeagueMission;                               // 0x04A9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      MapTravelID;                                              // 0x04AA(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x04AB(0x0005) MISSED OFFSET
	TArray<struct FMissionStarterGear>                 StarterGear;                                              // 0x04B0(0x0010) (Edit, ZeroConstructor)
	EOakMissionType                                    MissionType;                                              // 0x04C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x04C1(0x0007) MISSED OFFSET
	class UMissionObjective*                           GiveWeaponObjective;                                      // 0x04C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UMissionObjective*>                   MissionWeaponObjectives;                                  // 0x04D0(0x0010) (Edit, ZeroConstructor)
	bool                                               bRequireMissionSpawnerActor;                              // 0x04E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bBroadcastMissionCompletionFriendEvent;                   // 0x04E1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x04E2(0x0006) MISSED OFFSET
	class UDialogEnumValue*                            MissionDialogEnumValue;                                   // 0x04E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSuppressDiscoveryAfterFailure;                           // 0x04F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x04F1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMission");
		return ptr;
	}


	int GetNumberOfCompletedMissionChallenges();
	class AOakGameMode* GetCurrentGameMode();
};


// Class OakGame.OakMissionActorComponent
// 0x0018 (0x0190 - 0x0178)
class UOakMissionActorComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0178(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionActorComponent");
		return ptr;
	}

};


// Class OakGame.OakAutoplayComponent
// 0x00A0 (0x0370 - 0x02D0)
class UOakAutoplayComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x02D0(0x0008) MISSED OFFSET
	struct FGbxNavPathingData                          PathingData;                                              // 0x02D8(0x0010) (Transient)
	unsigned char                                      UnknownData01[0x28];                                      // 0x02E8(0x0028) MISSED OFFSET
	struct FAutoplayMissionState                       MissionState;                                             // 0x0310(0x0030)
	struct FAutoplayCombatState                        CombatState;                                              // 0x0340(0x0030)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakAutoplayComponent");
		return ptr;
	}

};


// Class OakGame.OakMissionCircleOfSlaughter
// 0x0018 (0x0510 - 0x04F8)
class UOakMissionCircleOfSlaughter : public UOakMission
{
public:
	struct FText                                       ActivityDisplayName;                                      // 0x04F8(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionCircleOfSlaughter");
		return ptr;
	}

};


// Class OakGame.OakMissionDirectorComponent
// 0x0010 (0x03C0 - 0x03B0)
class UOakMissionDirectorComponent : public UMissionDirectorComponent
{
public:
	class UInWorldIconData*                            IconData;                                                 // 0x03B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x03B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionDirectorComponent");
		return ptr;
	}


	void TriggerMissionDeliveryPlacard(class AOakPlayerController* InitiatingPlayer, bool* bMissionAvailable);
};


// Class OakGame.OakMissionIconComponent
// 0x0010 (0x07C0 - 0x07B0)
class UOakMissionIconComponent : public UMissionIconComponent
{
public:
	float                                              VisibleDistanceOverride;                                  // 0x07B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HiddenDistanceOverride;                                   // 0x07B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawIconVisibilityDistance;                              // 0x07B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDoNotOverrideCondition;                                  // 0x07B9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x07BA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionIconComponent");
		return ptr;
	}

};


// Class OakGame.OakMissionInventoryBalanceStateComponent
// 0x0000 (0x0388 - 0x0388)
class UOakMissionInventoryBalanceStateComponent : public UOakInventoryBalanceStateComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionInventoryBalanceStateComponent");
		return ptr;
	}

};


// Class OakGame.OakMissionItem
// 0x0158 (0x05B0 - 0x0458)
class AOakMissionItem : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0458(0x0008) MISSED OFFSET
	struct FMissionObjectiveReferenceWeak              ObjectiveRef;                                             // 0x0460(0x0050) (Edit)
	struct FText                                       DisplayName;                                              // 0x04B0(0x0028) (Deprecated)
	TArray<struct FUIStatPriorityData>                 UIStats;                                                  // 0x04C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UUIStatData*                                 MissionNameUIStatData;                                    // 0x04D8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	struct FGbxUIFormattedText                         FormattedDisplayName;                                     // 0x04E0(0x0068) (Edit)
	bool                                               bHideUntilActivated;                                      // 0x0548(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUniquePickup;                                            // 0x0549(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCreateWaypoint;                                          // 0x054A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x054B(0x0005) MISSED OFFSET
	class UInventoryBalanceData*                       LikenessInventoryBalanceData;                             // 0x0550(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                LikenessInventoryGameStage;                               // 0x0558(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x055C(0x0004) MISSED OFFSET
	TArray<class UEchoLogData*>                        EchoLogData;                                              // 0x0560(0x0010) (Edit, ZeroConstructor)
	struct FRotator                                    RotationInContainer;                                      // 0x0570(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x057C(0x0004) MISSED OFFSET
	class UOakMissionInventoryBalanceStateComponent*   BalanceStateComponent;                                    // 0x0580(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UInventoryBalanceData*                       InventoryBalanceData;                                     // 0x0588(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UInventoryData*                              InventoryData;                                            // 0x0590(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AOakInventoryItemPickup*                     Pickup;                                                   // 0x0598(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x05A0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionItem");
		return ptr;
	}


	void OnRep_BalanceStateComponent();
};


// Class OakGame.OakMissionItem_Vehicle
// 0x0000 (0x05B0 - 0x05B0)
class AOakMissionItem_Vehicle : public AOakMissionItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionItem_Vehicle");
		return ptr;
	}

};


// Class OakGame.OakMissionItemPoolData
// 0x0008 (0x00D0 - 0x00C8)
class UOakMissionItemPoolData : public UItemPoolData
{
public:
	class UClass*                                      PickupClass;                                              // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionItemPoolData");
		return ptr;
	}

};


// Class OakGame.OakMissionPickup
// 0x0000 (0x0728 - 0x0728)
class AOakMissionPickup : public AOakInventoryItemPickup
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionPickup");
		return ptr;
	}

};


// Class OakGame.OakMissionProvingGrounds
// 0x0018 (0x0510 - 0x04F8)
class UOakMissionProvingGrounds : public UOakMission
{
public:
	struct FText                                       ActivityDisplayName;                                      // 0x04F8(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionProvingGrounds");
		return ptr;
	}

};


// Class OakGame.OakMissionRaid
// 0x0018 (0x0510 - 0x04F8)
class UOakMissionRaid : public UOakMission
{
public:
	struct FText                                       ActivityDisplayName;                                      // 0x04F8(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionRaid");
		return ptr;
	}

};


// Class OakGame.OakMissionRareSpawn
// 0x0020 (0x0518 - 0x04F8)
class UOakMissionRareSpawn : public UOakMission
{
public:
	class UGameStatData*                               StatData;                                                 // 0x04F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FText                                       EnemyDisplayName;                                         // 0x0500(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionRareSpawn");
		return ptr;
	}

};


// Class OakGame.OakSpawner
// 0x0028 (0x0658 - 0x0630)
class AOakSpawner : public AGbxSpawner
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0630(0x0008) MISSED OFFSET
	class URegionBalanceStateComponent*                RegionComponent;                                          // 0x0638(0x0008) (ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData)
	class AActor*                                      TerritoryOverrideActor;                                   // 0x0640(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class UTerritoryComponent*                         TerritoryComponent;                                       // 0x0648(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTerritoryComponent*                         CurrentTerritory;                                         // 0x0650(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakSpawner");
		return ptr;
	}


	void SetTerritoryActor(class AActor* TerritoryActor);
	void SetTerritory(class UTerritoryComponent* Territory);
	void ResetTerritoryToDefault();
	class UTerritoryComponent* GetTerritory();
};


// Class OakGame.OakMissionSpawner
// 0x01A8 (0x0800 - 0x0658)
class AOakMissionSpawner : public AOakSpawner
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0658(0x0008) MISSED OFFSET
	class UGbxCondition*                               EnabledCondition;                                         // 0x0660(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FMissionObjectiveReference                  ObjectiveActiveEnabledCondition;                          // 0x0668(0x0030) (Edit)
	struct FMissionObjectiveReference                  ObjectiveToUpdateOnDeath;                                 // 0x0698(0x0030) (Edit)
	struct FMissionObjectiveReference                  ResetObjective;                                           // 0x06C8(0x0030)
	bool                                               bTriggerDeathWhenRemovedFromSpawnSystem;                  // 0x06F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x06F9(0x0007) MISSED OFFSET
	struct FMissionObjectiveReference                  DefendMissionObjective;                                   // 0x0700(0x0030) (Edit)
	bool                                               bOnlyAssignObjectiveBitForSelf;                           // 0x0730(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0731(0x0007) MISSED OFFSET
	struct FMissionEventReference                      MissionCustomEvent;                                       // 0x0738(0x0010) (Edit)
	class UObject*                                     MissionEventOptionalContext;                              // 0x0748(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UOakSpawnerIconComponent*                    SpawnerIconComponent;                                     // 0x0750(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               bSpawnerFailsafe;                                         // 0x0758(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bPickupFailsafe;                                          // 0x0759(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bFailsafeRequiresCompletedObjectives;                     // 0x075A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x075B(0x0005) MISSED OFFSET
	struct FMissionObjectiveReference                  NoLongerCriticalCondition;                                // 0x0760(0x0030) (Edit)
	bool                                               bPickupFailsafeChecked;                                   // 0x0790(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0791(0x0007) MISSED OFFSET
	TArray<struct FMissionSpawnerFailsafeData>         SpawnerFailsafeData;                                      // 0x0798(0x0010) (ZeroConstructor, Transient)
	class UOakSpawnPointComponent*                     TheOneEnabledSpawnPoint;                                  // 0x07A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData05[0x50];                                      // 0x07B0(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionSpawner");
		return ptr;
	}


	void SendOnAllDiedMissionEvent(class ASpawner* Spawner);
	void OnMissionFailsafeActorDeath(class ASpawner* Spawner, class AActor* Actor);
	void OnMissionActorSuspendData(class ASpawner* Spawner, const struct FSpawnerActorData& ActorData);
	void OnMissionActorSpawnedOrUnsuspend(class ASpawner* Spawner, class AActor* Actor);
	void OnMissionActorFakeDeath(class ASpawner* Spawner, class AActor* Actor);
};


// Class OakGame.OakMissionRareSpawner
// 0x0058 (0x0858 - 0x0800)
class AOakMissionRareSpawner : public AOakMissionSpawner
{
public:
	class UGameStatData*                               StatData;                                                 // 0x0800(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAttributeInitializationData                PercentChanceToSpawn;                                     // 0x0808(0x0038) (Edit)
	struct FScriptMulticastDelegate                    OnEnabled;                                                // 0x0840(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0850(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionRareSpawner");
		return ptr;
	}


	void DoRareSpawnSocialLogic(class ASpawner* Spawner);
};


// Class OakGame.OakMissionRareSpawner_WantedPoster
// 0x0020 (0x0820 - 0x0800)
class AOakMissionRareSpawner_WantedPoster : public AOakMissionSpawner
{
public:
	class UClass*                                      MissionClass;                                             // 0x0800(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGameStatData*                               StatData;                                                 // 0x0808(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              PrerequisiteMissions;                                     // 0x0810(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionRareSpawner_WantedPoster");
		return ptr;
	}


	void OnStatChanged(class AActor* StatContext, class UGameStatData* InStatData, int Amount);
};


// Class OakGame.OakMissionRewardData
// 0x0058 (0x0150 - 0x00F8)
class UOakMissionRewardData : public UOakBaseMissionRewardData
{
public:
	TSoftObjectPtr<class URegionData>                  REGION;                                                   // 0x00F8(0x0028) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UInventorySlotData>           EquipSlotToUnlock;                                        // 0x0120(0x0028) (Edit, DisableEditOnInstance)
	int                                                AssociatedCompletionAchievementId;                        // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x014C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionRewardData");
		return ptr;
	}

};


// Class OakGame.OakMissionSpawnerFailsafeComponent
// 0x0010 (0x02E0 - 0x02D0)
class UOakMissionSpawnerFailsafeComponent : public USceneComponent
{
public:
	class UArrowComponent*                             ArrowComponent;                                           // 0x02D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBillboardComponent*                         SpriteComponent;                                          // 0x02D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionSpawnerFailsafeComponent");
		return ptr;
	}

};


// Class OakGame.OakMissionTracker
// 0x0088 (0x0730 - 0x06A8)
class AOakMissionTracker : public AMissionTracker
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x06A8(0x0018) MISSED OFFSET
	TArray<struct FLevelSyncCompletedMission>          CompletedMissionLevelSyncs;                               // 0x06C0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x10];                                      // 0x06D0(0x0010) MISSED OFFSET
	class UMissionGraph*                               ActiveLeagueMissionGraph;                                 // 0x06E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x06E8(0x0010) MISSED OFFSET
	struct FGameplayTag                                MissionNPCTag;                                            // 0x06F8(0x0008) (Config)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0700(0x0008) MISSED OFFSET
	TArray<class UOutOfMapWaypointComponent*>          CurrentOutOfMapWaypoints;                                 // 0x0708(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData04[0x18];                                      // 0x0718(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionTracker");
		return ptr;
	}


	void OnTravelIDsChanged();
	class AOakCharacter* STATIC_GetMissionCharacterSoft(class UObject* WorldContextObject, const struct FSoftClassPath& CharacterClass);
	class AOakCharacter* STATIC_GetMissionCharacter(class UObject* WorldContextObject, class UClass* CharacterClass);
	void EnumerateNPCCharactersSoft(TArray<struct FSoftClassPath>* CharacterClasses);
	void EnumerateNPCCharacters(TArray<class UClass*>* CharacterClasses);
	void BroadcastFriendEventForCompletion(class UClass* MissionClass);
};


// Class OakGame.OakMissionVehicleSpawner
// 0x0020 (0x0820 - 0x0800)
class AOakMissionVehicleSpawner : public AOakMissionSpawner
{
public:
	TArray<TSoftObjectPtr<class ACatchARide>>          ConsoleAllowToRespawn;                                    // 0x0800(0x0010) (Edit, ZeroConstructor)
	struct FScriptMulticastDelegate                    OnMissionVehicleSpawned;                                  // 0x0810(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionVehicleSpawner");
		return ptr;
	}


	void OnActorDiedEvent(class ASpawner* Spawner, const struct FSpawnerActorData& ActorData);
};


// Class OakGame.OakTriggerSphere
// 0x0028 (0x0488 - 0x0460)
class AOakTriggerSphere : public ATriggerSphere
{
public:
	class UOakTriggerComponent*                        TriggerComponent;                                         // 0x0460(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    TouchedTrigger;                                           // 0x0468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    UnTouchedTrigger;                                         // 0x0478(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakTriggerSphere");
		return ptr;
	}


	void NotifyTriggerUntouched(class AActor* OtherActor, bool bIsPlayer);
	void NotifyTriggerTouched(class AActor* OtherActor, bool bIsPlayer);
};


// Class OakGame.OakMissionWaypoint
// 0x0038 (0x04C0 - 0x0488)
class AOakMissionWaypoint : public AOakTriggerSphere
{
public:
	class UOakMissionIconComponent*                    MissionIconComponent;                                     // 0x0488(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FMissionEventReference                      MissionEventReference;                                    // 0x0490(0x0010)
	TArray<struct FMissionEventReference>              MissionEventReferences;                                   // 0x04A0(0x0010) (Edit, ZeroConstructor)
	bool                                               bUsePlayerAsContext;                                      // 0x04B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x04B1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionWaypoint");
		return ptr;
	}


	void WaypointTriggerTouched(class AActor* OtherActor, bool bIsPlayer, class UActorComponent* ComponentTouched);
};


// Class OakGame.OakTriggerBox
// 0x0028 (0x0488 - 0x0460)
class AOakTriggerBox : public ATriggerBox
{
public:
	class UOakTriggerComponent*                        TriggerComponent;                                         // 0x0460(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    TouchedTrigger;                                           // 0x0468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    UnTouchedTrigger;                                         // 0x0478(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakTriggerBox");
		return ptr;
	}


	void NotifyTriggerUntouched(class AActor* OtherActor, bool bIsPlayer);
	void NotifyTriggerTouched(class AActor* OtherActor, bool bIsPlayer);
};


// Class OakGame.OakMissionWaypointBox
// 0x0038 (0x04C0 - 0x0488)
class AOakMissionWaypointBox : public AOakTriggerBox
{
public:
	class UOakMissionIconComponent*                    MissionIconComponent;                                     // 0x0488(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FMissionEventReference                      MissionEventReference;                                    // 0x0490(0x0010)
	TArray<struct FMissionEventReference>              MissionEventReferences;                                   // 0x04A0(0x0010) (Edit, ZeroConstructor)
	bool                                               bUsePlayerAsContext;                                      // 0x04B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x04B1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionWaypointBox");
		return ptr;
	}


	void WaypointTriggerTouched(class AActor* OtherActor, bool bIsPlayer, class UActorComponent* ComponentTouched);
};


// Class OakGame.OakMissionWeaponComponent
// 0x0018 (0x0190 - 0x0178)
class UOakMissionWeaponComponent : public UActorComponent
{
public:
	class UClass*                                      MissionClass;                                             // 0x0178(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UMissionObjective*>                   Objectives;                                               // 0x0180(0x0010) (Net, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMissionWeaponComponent");
		return ptr;
	}

};


// Class OakGame.OakModifierAbility
// 0x0008 (0x0100 - 0x00F8)
class UOakModifierAbility : public UOakAbility
{
public:
	bool                                               bPauseModifiers;                                          // 0x00F8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakModifierAbility");
		return ptr;
	}

};


// Class OakGame.OakModifierAbility_Matchmaking
// 0x0000 (0x0100 - 0x0100)
class UOakModifierAbility_Matchmaking : public UOakModifierAbility
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakModifierAbility_Matchmaking");
		return ptr;
	}

};


// Class OakGame.OakModifierAbility_Mayhem
// 0x0000 (0x0100 - 0x0100)
class UOakModifierAbility_Mayhem : public UOakModifierAbility
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakModifierAbility_Mayhem");
		return ptr;
	}

};


// Class OakGame.OakModifierLists
// 0x0010 (0x0038 - 0x0028)
class UOakModifierLists : public UObject
{
public:
	TArray<struct FSoftObjectPath>                     MayhemModeDataPaths;                                      // 0x0028(0x0010) (Edit, ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakModifierLists");
		return ptr;
	}

};


// Class OakGame.OakModifierManager
// 0x0058 (0x0080 - 0x0028)
class UOakModifierManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x58];                                      // 0x0028(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakModifierManager");
		return ptr;
	}

};


// Class OakGame.OakModifierManager_Matchmaking
// 0x0008 (0x0088 - 0x0080)
class UOakModifierManager_Matchmaking : public UOakModifierManager
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0080(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakModifierManager_Matchmaking");
		return ptr;
	}

};


// Class OakGame.OakModifierManager_Mayhem
// 0x0010 (0x0090 - 0x0080)
class UOakModifierManager_Mayhem : public UOakModifierManager
{
public:
	TArray<struct FMayhemModifierSet>                  ActiveModifierSets;                                       // 0x0080(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakModifierManager_Mayhem");
		return ptr;
	}

};


// Class OakGame.OakModifierManagerActor
// 0x00B0 (0x0508 - 0x0458)
class AOakModifierManagerActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0458(0x0010) MISSED OFFSET
	struct FGbxAttributeFloat                          EnemyHealthScalar;                                        // 0x0468(0x000C) (Transient)
	struct FGbxAttributeFloat                          EnemyShieldScalar;                                        // 0x0474(0x000C) (Transient)
	struct FGbxAttributeFloat                          EnemyArmorScalar;                                         // 0x0480(0x000C) (Transient)
	struct FGbxAttributeFloat                          MayhemLootMultiplier;                                     // 0x048C(0x000C) (Transient)
	struct FGbxAttributeFloat                          MayhemEridiumMultiplier;                                  // 0x0498(0x000C) (Transient)
	struct FGbxAttributeFloat                          MayhemSkillScalar;                                        // 0x04A4(0x000C) (Transient)
	struct FGbxAttributeFloat                          MayhemEnvironmentScalar;                                  // 0x04B0(0x000C) (Transient)
	struct FGbxAttributeFloat                          GlobalRarityWeightLevelBias;                              // 0x04BC(0x000C) (Transient)
	struct FGbxAttributeFloat                          GlobalCommonRarityWeightModifier;                         // 0x04C8(0x000C) (Transient)
	struct FGbxAttributeFloat                          GlobalUncommonRarityWeightModifier;                       // 0x04D4(0x000C) (Transient)
	struct FGbxAttributeFloat                          GlobalRareRarityWeightModifier;                           // 0x04E0(0x000C) (Transient)
	struct FGbxAttributeFloat                          GlobalVeryRareRarityWeightModifier;                       // 0x04EC(0x000C) (Transient)
	struct FGbxAttributeFloat                          GlobalLegendaryRarityWeightModifier;                      // 0x04F8(0x000C) (Transient)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0504(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakModifierManagerActor");
		return ptr;
	}

};


// Class OakGame.OakModifierManagerAttributeContextResolver
// 0x0000 (0x0050 - 0x0050)
class UOakModifierManagerAttributeContextResolver : public UAttributeContextResolver
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakModifierManagerAttributeContextResolver");
		return ptr;
	}

};


// Class OakGame.OakModifierSetListDataAsset
// 0x0010 (0x0040 - 0x0030)
class UOakModifierSetListDataAsset : public UGbxDataAsset
{
public:
	TArray<struct FOakModifierSet>                     ModifierSets;                                             // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakModifierSetListDataAsset");
		return ptr;
	}

};


// Class OakGame.OakMusicSystemConfiguration
// 0x0208 (0x0238 - 0x0030)
class UOakMusicSystemConfiguration : public UGbxDataAsset
{
public:
	TMap<EOakMusicSection, class UWwiseState*>         MusicSectionWwiseStates;                                  // 0x0030(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	TMap<EOakMusicPart, class UWwiseState*>            MusicPartWwiseStates;                                     // 0x0080(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	class UWwiseRtpc*                                  ThreatLevelRtpc;                                          // 0x00D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseRtpc*                                  InterestLevelRtpc;                                        // 0x00D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TMap<EOakMusicLayer, struct FMusicLayerInfo>       MusicLayerInfo;                                           // 0x00E0(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              ParamSmoothingAttackCoeff;                                // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ParamSmoothingDecayCoeff;                                 // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ThreatSummingDistance;                                    // 0x0138(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
	struct FRuntimeFloatCurve                          ThreatScaleByLevelDifference;                             // 0x0140(0x0078) (Edit)
	float                                              StaleThreatDuration;                                      // 0x01B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxInactiveDuration;                                      // 0x01BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InterestLevelLFODurationInSeconds;                        // 0x01C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InterestLevelLFOAmplitude;                                // 0x01C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<class UInventoryRarityData*, struct FMusicInterestASR> LootInterestModifierByRarity;                             // 0x01C8(0x0050) (Edit, ZeroConstructor)
	struct FMusicInterestASR                           InterestBumpOnCombatIntensify;                            // 0x0218(0x0010) (Edit, IsPlainOldData)
	struct FMusicInterestASR                           InterestBumpOnNewMapArea;                                 // 0x0228(0x0010) (Edit, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMusicSystemConfiguration");
		return ptr;
	}

};


// Class OakGame.OakMusicAmbientPerformer
// 0x0008 (0x0030 - 0x0028)
class UOakMusicAmbientPerformer : public UObject
{
public:
	float                                              ThreatLevel;                                              // 0x0028(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              InterestLevel;                                            // 0x002C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMusicAmbientPerformer");
		return ptr;
	}


	void Tick(float AudioTimeSeconds);
	void StopAmbientMusic();
	void BeginAmbientMusic(class AOakMusicProvider* MusicProvider, float AudioTimeSeconds);
};


// Class OakGame.OakMusicData
// 0x0078 (0x00A8 - 0x0030)
class UOakMusicData : public UGbxDataAsset
{
public:
	class UOakMusicSystemConfiguration*                SystemConfiguration;                                      // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 StartMusicEvent;                                          // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 StopMusicEvent;                                           // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                LayerUpdateFrequencyInBars;                               // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NumPickupBeats;                                           // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TMap<EOakMusicSection, struct FMusicSection>       AssociatedMusicSections;                                  // 0x0050(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	class UClass*                                      AmbientMusicPerformerClass;                               // 0x00A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMusicData");
		return ptr;
	}

};


// Class OakGame.OakMusicProvider
// 0x00A8 (0x0500 - 0x0458)
class AOakMusicProvider : public AActor
{
public:
	class UWwiseAudioComponent*                        MusicAudioComponent;                                      // 0x0458(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              CurrentThreatLevel;                                       // 0x0460(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              CurrentInterestLevel;                                     // 0x0464(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakMusicData*                               AssociatedMusicData;                                      // 0x0468(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakMusicAmbientPerformer*                   AmbientMusicPerformer;                                    // 0x0470(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bManualMode;                                              // 0x0478(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bForceLegacyCompatibility;                                // 0x0479(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x047A(0x0002) MISSED OFFSET
	float                                              ArtificialMinimumThreat;                                  // 0x047C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x80];                                      // 0x0480(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakMusicProvider");
		return ptr;
	}


	void StopMusic();
	void SetInterestLevel(float NewInterestLevel);
	void SetCombatLevel(float NewCombatLevel);
	void PlayMusic(class UOakMusicData* MusicData);
	void OnMusicBeat(struct FWwiseMusicTiming* MusicTiming);
	void NotifyMapAreaDiscovered();
	void NotifyItemSpotted(class AOakInventoryItemPickup* InventoryItemPickup);
	void NotifyCombatIntensifies();
	class FString GetSectionName();
	class FString GetPartName();
	class AOakMusicProvider* STATIC_GetOakMusicProvider(class UObject* WorldContextObject);
	class FString GetLayerList();
	float GetInterestLevel();
	float GetCurrentBeatDurationInSeconds();
	float GetCombatLevel();
	float GetAudioTimeOfNextBeat();
	float GetAudioTimeOfNextBar();
	void ApplyInterestModifier(float ModifierAmount, float ModifierDuration);
};


// Class OakGame.OakNavComponent
// 0x01C0 (0x0CB0 - 0x0AF0)
class UOakNavComponent : public UGbxNavComponent
{
public:
	class UVehicleDrivingDataAsset*                    DrivingData;                                              // 0x0AF0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x38];                                      // 0x0AF8(0x0038) MISSED OFFSET
	class AOakVehicle*                                 MyVehicle;                                                // 0x0B30(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAIVehicleFlightComponent*                   MyVehicleFlight;                                          // 0x0B38(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class ASeatPawn*                                   MyTurret;                                                 // 0x0B40(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AOakAIController*                            MyOakAIController;                                        // 0x0B48(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FOakNavReverseState                         ReverseState;                                             // 0x0B50(0x0018) (Edit)
	struct FOakVehicleNavCorrecter                     OakVehicleNavCorrecter;                                   // 0x0B68(0x00B8) (Transient)
	unsigned char                                      UnknownData01[0x90];                                      // 0x0C20(0x0090) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakNavComponent");
		return ptr;
	}


	bool TeleportVehicleToGoal();
	void ShowDebugVehicleNav(bool bEnable);
	void STATIC_SetStuckTeleport(class AActor* Actor, const struct FStuckTeleport& StuckTeleport);
	void SetScriptedMoveTo(const struct FVector& Location, const struct FVector& EntryLocation, float ReachRadius, float WantedSpeed, bool bMaxSpeed, bool bUseBoost, float Duration, float DotDestination, bool bGoBackward);
	float GetDesiredSpeed();
	void ClearSpeedOverride(ESpeedModifierOverridePriority Priority);
	void ClearScriptedMoveTo();
	void ClearDrivingOverride(EDrivingOverridePriority Priority);
	void AddSpeedRubberbandOverride(const struct FRubberbandSpeedData& InRubberbandSpeedData, ESpeedModifierOverridePriority Priority, float WantedSpeed, bool bUseBoost, bool bForceReverse, bool bForceHandbrake, float SteeringValue, float Duration, float SpeedHack, bool bGoBackward);
	void AddSpeedOverride(ESpeedModifierOverridePriority Priority, float WantedSpeed, bool bMaxSpeed, bool bUseBoost, bool bForceReverse, bool bForceHandbrake, float SteeringValue, float Duration, float SpeedHack, bool bGoBackward);
	void AddDrivingOverride(EDrivingOverridePriority Priority, bool bDisableTurnHandBrake);
};


// Class OakGame.OakNavWorld
// 0x0000 (0x0B80 - 0x0B80)
class AOakNavWorld : public AGbxNavWorld
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakNavWorld");
		return ptr;
	}

};


// Class OakGame.OakNogDroneContainerComponent
// 0x05F0 (0x1A00 - 0x1410)
class UOakNogDroneContainerComponent : public UGbxSkeletalMeshComponent
{
public:
	float                                              DroneDigistructTime;                                      // 0x1410(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DroneHealthPercentOfNog;                                  // 0x1414(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDronesDieOnHealthDepleted;                               // 0x1418(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x1419(0x0003) MISSED OFFSET
	int                                                DroneReplenishThreshold;                                  // 0x141C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DroneReplenishMin;                                        // 0x1420(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x1424(0x0004) MISSED OFFSET
	struct FGbxBlackboardKeySelector                   ShouldReplenishDronesKey;                                 // 0x1428(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGbxBlackboardKeySelector                   DroneShieldEnabledKey;                                    // 0x1438(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UParticleSystem*                             DroneDeathFX;                                             // 0x1448(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DroneScatterCount;                                        // 0x1450(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x1454(0x0004) MISSED OFFSET
	class UClass*                                      ScatterDroneClass;                                        // 0x1458(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      HealDroneClass;                                           // 0x1460(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DefendDroneClass;                                         // 0x1468(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      AttackDroneClass;                                         // 0x1470(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x56C];                                     // 0x1478(0x056C) MISSED OFFSET
	int                                                DroneAliveCount;                                          // 0x19E4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AGbxCharacter*                               Nog;                                                      // 0x19E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x19F0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakNogDroneContainerComponent");
		return ptr;
	}


	void ToggleDroneBone(int DroneIndex, bool bToggleOn, bool bInstant);
	void ToggleDrone(int DroneIndex, bool bToggleOn, bool bInstant);
	void ToggleAllDrones(bool bToggleOn, bool bInstant);
	void StopReplenishingDrones();
	void ReplenishDrones(int TotalNeeded, float DelayBetweenSpawn, bool bInstant, const class FString& DroneListOverrideCSV);
	void KillDrone(int DroneIndex);
	void KillAllDrones(bool bScatterDrones);
	bool IsDroneEnabled(int DroneIndex);
	struct FTransform GetDroneTransform(int DroneIndex);
	struct FName GetDroneName(int DroneIndex);
	int FindDroneIndexByBoneName(const struct FName& BoneName);
	void DroneInitialization();
	void DeployRandomDrones(int DroneCount, class UClass* DroneClass, class AActor* Target);
	void DeployRandomDrone(class UClass* DroneClass, class AActor* Target);
	void DeployDrone(int DroneIndex, class UClass* DroneClass, class AActor* Target);
	void ApplyDamageToDrones(float Damage, const struct FVector& HitLocation);
	void ApplyDamageToDrone(int DroneIndex, float Damage);
};


// Class OakGame.TrooperAnimInstance
// 0x0000 (0x0AF0 - 0x0AF0)
class UTrooperAnimInstance : public UOakCharacterAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TrooperAnimInstance");
		return ptr;
	}

};


// Class OakGame.OakNPCAnimInstance
// 0x0020 (0x0B10 - 0x0AF0)
class UOakNPCAnimInstance : public UTrooperAnimInstance
{
public:
	float                                              NPCEmoteWeightModifier;                                   // 0x0AF0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AddPoseSlotWeight;                                        // 0x0AF4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FullEmoteWeight;                                          // 0x0AF8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FullEmoteWeightWithSlot;                                  // 0x0AFC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FullBodySlotWeight;                                       // 0x0B00(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0B04(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakNPCAnimInstance");
		return ptr;
	}

};


// Class OakGame.OakNpcGreetingComponent
// 0x04D8 (0x0650 - 0x0178)
class UOakNpcGreetingComponent : public UActorComponent
{
public:
	struct FGbxParam                                   GreetingDistance;                                         // 0x0178(0x0080) (Edit)
	struct FGbxParam                                   HelloCooldown;                                            // 0x01F8(0x0080) (Edit)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0278(0x0008) MISSED OFFSET
	struct FGbxParam                                   GoodbyeCooldown;                                          // 0x0280(0x0080) (Edit)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0300(0x0008) MISSED OFFSET
	struct FGbxParam                                   IdleCooldown;                                             // 0x0308(0x0080) (Edit)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0388(0x0008) MISSED OFFSET
	struct FGbxParam                                   InUseCooldown;                                            // 0x0390(0x0080) (Edit)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0410(0x0008) MISSED OFFSET
	struct FGbxParam                                   ForgetActorTime;                                          // 0x0418(0x0080) (Edit)
	unsigned char                                      UnknownData04[0x190];                                     // 0x0498(0x0190) MISSED OFFSET
	class UAIPerceptionComponent*                      PerceptionComponent;                                      // 0x0628(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGbxDialogComponent*                         DialogComponent;                                          // 0x0630(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMissionObserverComponent*                   MissionObserverComponent;                                 // 0x0638(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOakMissionDirectorComponent*                MissionDirectorComponent;                                 // 0x0640(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0648(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakNpcGreetingComponent");
		return ptr;
	}


	void OnPerceptionUpdated(TArray<class AActor*> UpdatedActors);
	void OnDialogStarted();
};


// Class OakGame.OakNPCMailData
// 0x0050 (0x0080 - 0x0030)
class UOakNPCMailData : public UGbxDataAsset
{
public:
	struct FText                                       SenderDisplayName;                                        // 0x0030(0x0028) (Edit)
	struct FText                                       Subject;                                                  // 0x0048(0x0028) (Edit)
	struct FText                                       Body;                                                     // 0x0060(0x0028) (Edit)
	class UItemPoolData*                               ItemPoolReward;                                           // 0x0078(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakNPCMailData");
		return ptr;
	}

};


// Class OakGame.OakOnlineNetworkOptionsMenu
// 0x0018 (0x0308 - 0x02F0)
class UOakOnlineNetworkOptionsMenu : public UGbxUmgMenu
{
public:
	class UGbxGridListWidget*                          NetworkOptionList;                                        // 0x02F0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<struct FOnlineNetworkOptionData>            OptionItemData;                                           // 0x02F8(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakOnlineNetworkOptionsMenu");
		return ptr;
	}


	void OnOptionSelected(class UGbxListItem* SelectedItem);
	void OnOptionClicked(class UGbxListItem* ClickedItem);
	void HandleOptionSelected(class UGbxListItem* SelectedItem, const struct FOnlineNetworkOptionData& Data);
};


// Class OakGame.OakOnlineNetworkOptionsItemWidget
// 0x0000 (0x02E8 - 0x02E8)
class UOakOnlineNetworkOptionsItemWidget : public UGbxListItem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakOnlineNetworkOptionsItemWidget");
		return ptr;
	}


	void HandleDataChanged(const struct FOnlineNetworkOptionData& Data);
};


// Class OakGame.OakOnlinePlayerDetailsMenu
// 0x00A8 (0x0398 - 0x02F0)
class UOakOnlinePlayerDetailsMenu : public UGbxUmgMenu
{
public:
	class UGbxScrollBoxList*                           ChoiceList;                                               // 0x02F0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  HintText;                                                 // 0x02F8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<struct FName>                               ChoiceIds;                                                // 0x0300(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x88];                                      // 0x0310(0x0088) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakOnlinePlayerDetailsMenu");
		return ptr;
	}


	void SetupDetailsWidget(const struct FOakOnlineLobbyPlayerInfo& PlayerInfo);
	void OnChoiceClicked(class UGbxListItem* ListItem);
};


// Class OakGame.OakOnlineSessionClient
// 0x0040 (0x01D8 - 0x0198)
class UOakOnlineSessionClient : public UOnlineSessionClient
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x0198(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakOnlineSessionClient");
		return ptr;
	}

};


// Class OakGame.OakOnlineStatsHelper
// 0x00B0 (0x00D8 - 0x0028)
class UOakOnlineStatsHelper : public UObject
{
public:
	TArray<class UGameStatData*>                       ManufacturerStats;                                        // 0x0028(0x0010) (Edit, ExportObject, ZeroConstructor)
	TArray<class UGameStatData*>                       GunTypeStats;                                             // 0x0038(0x0010) (Edit, ExportObject, ZeroConstructor)
	class UGameStatData*                               PlaytimeStat;                                             // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGameStatData*                               SlotMachineWinsStat;                                      // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGameStatData*                               GuardianRankStat;                                         // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGameStatData*                               BadassesKilledStat;                                       // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x70];                                      // 0x0068(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakOnlineStatsHelper");
		return ptr;
	}


	void OnStatIncrement(class AActor* StatContext, class UGameStatData* StatId, int Amount);
};


// Class OakGame.OakOptionalObjectiveRewardData
// 0x0000 (0x00F8 - 0x00F8)
class UOakOptionalObjectiveRewardData : public UOakBaseMissionRewardData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakOptionalObjectiveRewardData");
		return ptr;
	}

};


// Class OakGame.OakPassiveAbility
// 0x0090 (0x01B0 - 0x0120)
class UOakPassiveAbility : public UOakPlayerAbility
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0120(0x0008) MISSED OFFSET
	int                                                Grade;                                                    // 0x0128(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	struct FTriggeredPassiveAbilityEffect              TriggeredEffect;                                          // 0x0130(0x0048) (Edit, DisableEditOnInstance)
	bool                                               bRegisterAsHUDPassiveAbility;                             // 0x0178(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0179(0x0007) MISSED OFFSET
	class UTexture*                                    Icon;                                                     // 0x0180(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FOakPassiveAbilityHUDIconData               HUDIconData;                                              // 0x0188(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x01A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPassiveAbility");
		return ptr;
	}


	void TriggerPassiveAbilityEffect();
	void OnTriggeredEffectEnded();
	void OnGradeChanged();
	bool IsTriggeredEffectActive();
	void GetManualHUDIconValues(int* outStackCount, float* outDuration, float* outTimeRemaining);
};


// Class OakGame.OakPassiveAbility_Siren
// 0x0038 (0x01E8 - 0x01B0)
class UOakPassiveAbility_Siren : public UOakPassiveAbility
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01B0(0x0008) MISSED OFFSET
	bool                                               bIsElementallyAttunedPassive;                             // 0x01B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x01B9(0x0007) MISSED OFFSET
	class UOakActionAbilityAugmentData_PhaseTrance_Element* AttunedElementData;                                       // 0x01C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x01C8(0x0008) MISSED OFFSET
	struct FOakPassiveAbilitySirenGhostArmControllerSpec CurrentGhostArmControllerSpec;                            // 0x01D0(0x0018) (Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPassiveAbility_Siren");
		return ptr;
	}


	void OnAttunedElementChanged();
	EPhaseTranceElementalType GetAttunedType();
	void ActivateSirenGhostArms(const struct FOakPassiveAbilitySirenGhostArmControllerSpec& InSpec);
};


// Class OakGame.OakPassiveAbilityAttributeEffectMutatorData
// 0x0050 (0x0080 - 0x0030)
class UOakPassiveAbilityAttributeEffectMutatorData : public UAttributeEffectMutatorData
{
public:
	int                                                GradeToStartApplyingEffect;                               // 0x0030(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                PerGradeUpgradeInterval;                                  // 0x0034(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FAttributeInitializationData                PerGradeUpgrade;                                          // 0x0038(0x0038) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	TArray<struct FBonusAttributeModifierUpgrade>      BonusUpgrades;                                            // 0x0070(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPassiveAbilityAttributeEffectMutatorData");
		return ptr;
	}

};


// Class OakGame.OakPassiveAbilityBuffAspectData
// 0x0010 (0x0048 - 0x0038)
class UOakPassiveAbilityBuffAspectData : public UInventoryAspectData
{
public:
	TArray<struct FPassiveAbilityBuffData>             Buffs;                                                    // 0x0038(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPassiveAbilityBuffAspectData");
		return ptr;
	}

};


// Class OakGame.OakPassiveAbilityBuffProviderInterface
// 0x0000 (0x0028 - 0x0028)
class UOakPassiveAbilityBuffProviderInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPassiveAbilityBuffProviderInterface");
		return ptr;
	}

};


// Class OakGame.OakPatchHelperBlueprintFunctionLibrary
// 0x0000 (0x0028 - 0x0028)
class UOakPatchHelperBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPatchHelperBlueprintFunctionLibrary");
		return ptr;
	}


	void BlueprintFix_OAKLIVE_4120(class UObject* WorldContextObject, const class FString& ToLayer, float TransitionDuration);
	void BlueprintFix_OAKLIVE_1579(class AActor* Target, class AActor* LookAtActor, bool bAimAtActor, bool bFireWeaponAtActor, class UStanceDataProvider* OptionalStance);
	void BlueprintFix_OAK_216536_OnScriptedMoveComplete2();
	void BlueprintFix_OAK_216536_OnScriptedMoveComplete1();
	void BlueprintFix_OAK_216536_MRE_MoxxiTokenDone();
	void BlueprintFix_OAK_216536_MRE_GivePiecesComplete();
	void BlueprintFix_OAK_210096_TriggerUntouched(class AActor* LeavingActor, bool bIsPlayer);
	void BlueprintFix_OAK_210096_TriggerTouched(class AActor* TouchingActor, bool bIsPlayer, class UActorComponent* ComponentTouched);
	void BlueprintFix_OAK_210016();
};


// Class OakGame.OakPawnAttachSlotComponent
// 0x00A8 (0x06C8 - 0x0620)
class UOakPawnAttachSlotComponent : public UPawnAttachSlotComponent
{
public:
	unsigned char                                      bLockInputDuringAttach : 1;                               // 0x0620(0x0001) (Edit)
	unsigned char                                      bLockInputDuringDetach : 1;                               // 0x0620(0x0001) (Edit)
	unsigned char                                      bTransferInventory : 1;                                   // 0x0620(0x0001) (Edit)
	unsigned char                                      bCanUseWhileNotPossessingPrimaryCharacter : 1;            // 0x0620(0x0001) (Edit)
	unsigned char                                      bModifyHUD : 1;                                           // 0x0620(0x0001) (Edit)
	unsigned char                                      bHideHUDWhileAttaching : 1;                               // 0x0620(0x0001) (Edit)
	unsigned char                                      bHideHUDWhileDetaching : 1;                               // 0x0620(0x0001) (Edit)
	unsigned char                                      bClearSelfElementalEffectsOnAttach : 1;                   // 0x0620(0x0001) (Edit)
	unsigned char                                      bClearPawnElementalEffectsOnAttach : 1;                   // 0x0621(0x0001) (Edit)
	unsigned char                                      bBlockPawnElementalEffectsWhileAttached : 1;              // 0x0621(0x0001) (Edit)
	unsigned char                                      bAllowPetsWhileAttached : 1;                              // 0x0621(0x0001) (Edit)
	unsigned char                                      bAllowEchoDeviceEquipping : 1;                            // 0x0621(0x0001) (Edit)
	unsigned char                                      bHidePrimaryWeaponWhileAttached : 1;                      // 0x0621(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bHideHolsteredWeaponWhileAttached : 1;                    // 0x0621(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bMustMatchDuelTeamOfInstigator : 1;                       // 0x0621(0x0001) (Edit)
	unsigned char                                      bUseStatusMenuCameraMode : 1;                             // 0x0621(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0622(0x0006) MISSED OFFSET
	struct FPawnAttachCameraModeOptions                CameraModeOptions;                                        // 0x0628(0x0028) (Edit)
	class UCameraModeSetData*                          CameraModesSet;                                           // 0x0650(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideCrosshairScreenPosition;                         // 0x0658(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0659(0x0003) MISSED OFFSET
	struct FVector2D                                   CrosshairScreenPosition;                                  // 0x065C(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               bPlayOccupiedIdleAudioOnLocalPlayerOnly;                  // 0x0664(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0665(0x0003) MISSED OFFSET
	class UWwiseEvent*                                 OccupiedIdleAudioEvent;                                   // 0x0668(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 OccupiedIdleStopAudioEvent;                               // 0x0670(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x30];                                      // 0x0678(0x0030) MISSED OFFSET
	bool                                               bTransitionIsHijacked;                                    // 0x06A8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x06A9(0x0007) MISSED OFFSET
	class AController*                                 HijackerController;                                       // 0x06B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsAllowedToDetachWhenHiJack;                             // 0x06B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsLeapOnTarget;                                          // 0x06B9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSeatSwap;                                              // 0x06BA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x5];                                       // 0x06BB(0x0005) MISSED OFFSET
	class UOakPawnAttachSlotComponent*                 HijackAttachSlot;                                         // 0x06C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPawnAttachSlotComponent");
		return ptr;
	}


	struct FRotator GetWeaponRotation(bool bWorldSpace);
	class APawn* GetHijackedOccupant();
};


// Class OakGame.OwnedActionAbilityActor
// 0x0030 (0x0488 - 0x0458)
class AOwnedActionAbilityActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0458(0x0008) MISSED OFFSET
	bool                                               bBlocksActionAbilityShutdown;                             // 0x0460(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0461(0x0007) MISSED OFFSET
	class UOakActionAbility*                           OwnerActionAbility;                                       // 0x0468(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class AOakCharacter_Player*                        OwnerPlayer;                                              // 0x0470(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsShuttingDown;                                          // 0x0478(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0xF];                                       // 0x0479(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OwnedActionAbilityActor");
		return ptr;
	}


	void ReleaseFromActionAbility();
	void OnShutdownRequested(bool bForced);
	void OnRep_IsShuttingDown();
	float GetMaxTime();
};


// Class OakGame.OakPhaseWebSphere
// 0x0188 (0x0610 - 0x0488)
class AOakPhaseWebSphere : public AOwnedActionAbilityActor
{
public:
	struct FPhaseTranceActivationComboData             ActivationComboData;                                      // 0x0488(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	TArray<class UClass*>                              IgnoredLinkDamageSourceClasses;                           // 0x04A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              SapDamageReturnRate;                                      // 0x04B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SphereOutOfBoundsBuffer;                                  // 0x04B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UOakActionAbility_PhaseTrance*               CachedOwnerActionAbilityPhaseTrance;                      // 0x04B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UTeamComponent*                              OwnerTeam;                                                // 0x04C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FOakPhaseWebSphereLinkedTargetList          LinkedTargetList;                                         // 0x04C8(0x00C8) (Net, Transient)
	struct FOakPhaseWebSphereListLock                  ListLock;                                                 // 0x0590(0x0020) (Transient)
	unsigned char                                      UnknownData00[0x60];                                      // 0x05B0(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPhaseWebSphere");
		return ptr;
	}


	void RemoveAllWebTargets();
	void OnWebTargetRemoved(class AOakCharacter* Target);
	void OnWebTargetAdded(class AOakCharacter* Target);
	void OnEndActorOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnBeginActorOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	TArray<struct FOakPhaseWebSphereLinkedTargetItem> GetWebTargets();
	bool GetSharedDamageData(class AOakCharacter* LinkedTarget, float Damage, class UClass* DamageSourceClass, struct FOakPhaseWebSphere_SharedDamageData* SharedDamageData);
	class UOakActionAbility_PhaseTrance* GetOwnerActionAbilityPhaseTrance();
	void GetBeamDataForLinkedTarget(class AOakCharacter* LinkedTarget, struct FOakPhaseWebSphereBeamData* outBeamData);
	void ApplySapRefund(float RawAccumulateDamage);
};


// Class OakGame.OakPlayerAbilityData
// 0x0018 (0x0048 - 0x0030)
class UOakPlayerAbilityData : public UGbxDataAsset
{
public:
	class UOakPlayerAbilityTreeData*                   AbilityTreeData;                                          // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UOakPlayerAbilitySlotData*>           PlayerAbilitySlots;                                       // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityData");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilityEventHub
// 0x0010 (0x0038 - 0x0028)
class UOakPlayerAbilityEventHub : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnWeaponEquipped;                                         // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityEventHub");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilityEventHub_Beastmaster
// 0x0038 (0x0070 - 0x0038)
class UOakPlayerAbilityEventHub_Beastmaster : public UOakPlayerAbilityEventHub
{
public:
	struct FScriptMulticastDelegate                    OnBeastmasterPetSpawned;                                  // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBeastmasterPetReleased;                                 // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0058(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityEventHub_Beastmaster");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilityEventHub_Gunner
// 0x0030 (0x0068 - 0x0038)
class UOakPlayerAbilityEventHub_Gunner : public UOakPlayerAbilityEventHub
{
public:
	struct FScriptMulticastDelegate                    IronBearEnteredAndPlayerReady;                            // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    IronBearExitedAndPlayerReady;                             // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class FString                                      IronCubIconFrameName;                                     // 0x0058(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityEventHub_Gunner");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilityEventHub_Operative
// 0x0068 (0x00A0 - 0x0038)
class UOakPlayerAbilityEventHub_Operative : public UOakPlayerAbilityEventHub
{
public:
	struct FScriptMulticastDelegate                    OperativeSpawned;                                         // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDigicloneDestroyed;                                     // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0058(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBarrierSpawned;                                         // 0x0070(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCalledShotActivated;                                    // 0x0080(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class FString                                      DigicloneIconFrameName;                                   // 0x0090(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityEventHub_Operative");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilityEventHub_Siren
// 0x0060 (0x0098 - 0x0038)
class UOakPlayerAbilityEventHub_Siren : public UOakPlayerAbilityEventHub
{
public:
	struct FScriptMulticastDelegate                    PhaseTranceComboActivated;                                // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    PhaseTranceComboChanged;                                  // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    PhaseTranceGraspedTarget;                                 // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    PhaseTranceGraspMissed;                                   // 0x0068(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    PhaseTranceGraspTargetKilled;                             // 0x0078(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    PhaseTranceActivated;                                     // 0x0088(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityEventHub_Siren");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilityEventHubStatics
// 0x0000 (0x0028 - 0x0028)
class UOakPlayerAbilityEventHubStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityEventHubStatics");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilityEventHubStatics_Gunner
// 0x0000 (0x0028 - 0x0028)
class UOakPlayerAbilityEventHubStatics_Gunner : public UOakPlayerAbilityEventHubStatics
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityEventHubStatics_Gunner");
		return ptr;
	}


	void STATIC_FireIronBearExitedAndPlayerReady(class AOakCharacter_Player* Player, class AOakCharacter_IronBear* IronBear);
	void STATIC_FireIronBearEnteredAndPlayerReady(class AOakCharacter_Player* Player, class AOakCharacter_IronBear* IronBear);
};


// Class OakGame.OakPlayerAbilityEventHubStatics_Operative
// 0x0000 (0x0028 - 0x0028)
class UOakPlayerAbilityEventHubStatics_Operative : public UOakPlayerAbilityEventHubStatics
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityEventHubStatics_Operative");
		return ptr;
	}


	void STATIC_FireOperativeGotKill(class AOakCharacter_Player* Player);
	void STATIC_FireOperativeDigicloneDestroyed(class AOakCharacter_Player* Player, class AOakCharacter* Digiclone);
	void STATIC_FireOperativeCalledShotActivated(class AOakCharacter_Player* Player);
	void STATIC_FireNewOperativeDigicloneSpawned(class AOakCharacter_Player* Player, class AOakCharacter* Digiclone);
};


// Class OakGame.OakPlayerAbilityEventHubStatics_Beastmaster
// 0x0000 (0x0028 - 0x0028)
class UOakPlayerAbilityEventHubStatics_Beastmaster : public UOakPlayerAbilityEventHubStatics
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityEventHubStatics_Beastmaster");
		return ptr;
	}


	void STATIC_FireBeastmasterPetSummonStarted(class AOakCharacter_Player* Player);
	void STATIC_FireBeastmasterPetSpawned(class AOakCharacter_Player* Player, class AOakCharacter* NewPet);
	void STATIC_FireBeastmasterPetReleased(class AOakCharacter_Player* Player, class AOakCharacter* NewPet);
};


// Class OakGame.OakPlayerAbilityEventHubStatics_Siren
// 0x0000 (0x0028 - 0x0028)
class UOakPlayerAbilityEventHubStatics_Siren : public UOakPlayerAbilityEventHubStatics
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityEventHubStatics_Siren");
		return ptr;
	}


	void STATIC_FirePhaseTranceGraspMissed(class AOakCharacter_Player* Player);
	void STATIC_FirePhaseTranceGraspedTarget(class AOakCharacter_Player* Player, class AGbxCharacter* GraspTarget);
	void STATIC_FirePhaseTranceActivated(class AOakCharacter_Player* Player);
	void STATIC_FirePhaseGraspTargetKilled(class AOakCharacter_Player* Player, class AActor* Killer, class AGbxCharacter* GraspTarget);
};


// Class OakGame.OakPlayerAbilityHUDItemData
// 0x0018 (0x0048 - 0x0030)
class UOakPlayerAbilityHUDItemData : public UDataAsset
{
public:
	class UTexture*                                    Icon;                                                     // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 StartAudioEvent;                                          // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 StopAudioEvent;                                           // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityHUDItemData");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilityHUDItemValueProviderInterface
// 0x0000 (0x0028 - 0x0028)
class UOakPlayerAbilityHUDItemValueProviderInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityHUDItemValueProviderInterface");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilityManagerComponent
// 0x0450 (0x06A8 - 0x0258)
class UOakPlayerAbilityManagerComponent : public UOakCharacterAbilityManagerComponent
{
public:
	struct FScriptMulticastDelegate                    OnActionSkillReady;                                       // 0x0258(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActionSkillCoolingDown;                                 // 0x0268(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActionSkillActivated;                                   // 0x0278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActionSkillActivating;                                  // 0x0288(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActionAbilityAugmentChanged;                            // 0x0298(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerAbilitySlotChanged;                               // 0x02A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActionSkillChargeCountChanged;                          // 0x02B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActionSkillActivationFailed;                            // 0x02C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0xC0];                                      // 0x02D8(0x00C0) MISSED OFFSET
	class UOakPlayerAbilityData*                       BaseOakPlayerAbilities;                                   // 0x0398(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      PlayerAbilityEventHubClass;                               // 0x03A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                FirstAbilityPointLevel;                                   // 0x03A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03AC(0x0004) MISSED OFFSET
	class UOakPlayerAbilityTree*                       PlayerAbilityTree;                                        // 0x03B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOakPlayerAbilityEventHub*                   PlayerAbilityEventHub;                                    // 0x03B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FOakPlayerAbilitySlotList                   AbilitySlotList;                                          // 0x03C0(0x00C8) (Net, Transient)
	struct FOakActionAbilityAugmentSlotList            AugmentSlotList;                                          // 0x0488(0x00C8) (Net, Transient)
	TArray<class UOakActionAbility*>                   ActionAbilities;                                          // 0x0550(0x0010) (ZeroConstructor, Transient)
	struct FOakPlayerAbilityHUDItemList                PlayerAbilityHUDItemList;                                 // 0x0560(0x00C8) (Net, Transient)
	struct FOakActionAbilityAugmentSlotConfigurationList SlotConfigurationList;                                    // 0x0628(0x0018) (Transient)
	TArray<class UOakPlayerAbilityTreeBranchData*>     LockedSkillBranches;                                      // 0x0640(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0650(0x0001) MISSED OFFSET
	bool                                               bAbilityDataForSaveGameSet;                               // 0x0651(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x0652(0x0006) MISSED OFFSET
	struct FOakPlayerAbilitySaveGameData               AbilityDataForSaveGame;                                   // 0x0658(0x0048) (Transient)
	int                                                OriginalSavedGrade;                                       // 0x06A0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                OriginalSavedAbilityPoints;                               // 0x06A4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityManagerComponent");
		return ptr;
	}


	void SetSlotAugment(class UClass* AbilityClass, class UOakActionAbilityAugmentSlotData* AugmentSlot, class UOakActionAbilityAugmentData* Augment);
	void SetSlotAbilityClass(class UOakPlayerAbilitySlotData* AbilitySlot, class UClass* AbilityClass);
	void PurchaseAbilityRespec();
	void OnRep_AbilityDataForSaveGameSet();
	void OnPlayerLevelUp(int OldExperienceLevel, int NewExperienceLevel);
	void OnPlayerAbilityTreeReset();
	void OnPlayerAbilityTreePointsChanged(int NewPoints);
	void OnPlayerAbilityTreeGradeChanged(int NewGrade);
	bool IsAbilitySlotted(class UClass* AbilityClass);
	bool IsAbilityAugmentSlotted(class UClass* AbilityClass, class UOakActionAbilityAugmentData* Augment);
	bool IsAbilityAugmentInSlot(class UClass* AbilityClass, class UOakActionAbilityAugmentData* Augment, class UOakActionAbilityAugmentSlotData* AugmentSlot);
	bool HasPurchasedPlayerAbility(class UClass* AbilityClass);
	class UClass* GetSlotAbilityClass(class UOakPlayerAbilitySlotData* AbilitySlot);
	class UOakPlayerAbility* GetSlotAbility(class UOakPlayerAbilitySlotData* AbilitySlot);
	class UOakPlayerAbilitySlotData* GetAbilitySlot(class UClass* AbilityClass);
	class UOakActionAbilityAugmentData* GetAbilityAugmentInSlot(class UClass* AbilityClass, class UOakActionAbilityAugmentSlotData* AugmentSlot);
	class UOakActionAbility* FindActionAbility(class UClass* ActionAbilityClass);
	void ClientUpgradeAbilityTreeItem(class UOakPlayerAbilityTreeItemData* ItemData);
	void ClientResetAbilities();
	void ClientRecordModSlotChange(class UClass* AbilityClass, class UOakActionAbilityAugmentSlotData* ModSlotData, class UOakActionAbilityAugmentData* ModAugmentData, class UOakActionAbilityAugmentData* AugmentData);
	bool CanAugmentBeUsed(class UOakActionAbilityAugmentData* InAugmentData);
};


// Class OakGame.OakPlayerAbilitySlotData
// 0x0050 (0x0080 - 0x0030)
class UOakPlayerAbilitySlotData : public UGbxDataAsset
{
public:
	struct FText                                       DisplayName;                                              // 0x0030(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       Description;                                              // 0x0048(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	int                                                LevelUnlock;                                              // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	TArray<class UClass*>                              SupportedAbilityClasses;                                  // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                UISlotNumber;                                             // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ESkillWidgetSlot                                   UISlot;                                                   // 0x007C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x007D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilitySlotData");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilitySlotsData
// 0x0020 (0x0050 - 0x0030)
class UOakPlayerAbilitySlotsData : public UGbxDataAsset
{
public:
	TArray<struct FOakActionAbilitySlot>               ActionAbilitySlots;                                       // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FOakAbilitySlot>                     PassiveAbilitySlots;                                      // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilitySlotsData");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilityStatics
// 0x0000 (0x0028 - 0x0028)
class UOakPlayerAbilityStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityStatics");
		return ptr;
	}


	struct FOakPlayerAbilityAllyQueryResult STATIC_QueryAllies(class AOakCharacter_Player* SourcePlayer, const struct FOakPlayerAbilityAllyQuerySpec& Spec);
};


// Class OakGame.OakPlayerAbilityTree
// 0x0160 (0x0188 - 0x0028)
class UOakPlayerAbilityTree : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnPlayerAbilityTreeTierChanged;                           // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerAbilityTreeItemChanged;                           // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerAbilityPointsChanged;                             // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTreeGradePointsChanged;                                 // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerAbilityTreeReset;                                 // 0x0068(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UOakPlayerAbilityManagerComponent*           Owner;                                                    // 0x0078(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UClass*                                      TreeActionAbilityClass;                                   // 0x0080(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakPlayerAbilityTreeData*                   TreeData;                                                 // 0x0088(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FAbilityTreeBranch>                  Branches;                                                 // 0x0090(0x0010) (ZeroConstructor, Transient)
	TArray<struct FAbilityTreeTier>                    Tiers;                                                    // 0x00A0(0x0010) (ZeroConstructor, Transient)
	TArray<struct FAbilityTreeItem>                    Items;                                                    // 0x00B0(0x0010) (ZeroConstructor, Transient)
	TMap<class UClass*, class UOakPlayerAbilityTreeItemData_Ability*> AbilityClassToTreeItemData;                               // 0x00C0(0x0050) (ZeroConstructor, Transient)
	TMap<class UGbxDataAsset*, class UOakPlayerAbilityTreeItemData_GbxDataAsset*> DataAssetToTreeItemData;                                  // 0x0110(0x0050) (ZeroConstructor, Transient)
	int                                                AbilityPoints;                                            // 0x0160(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0164(0x0004) MISSED OFFSET
	TScriptInterface<class UOakPassiveAbilityBuffProviderInterface> BuffProvider;                                             // 0x0168(0x0010) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0178(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityTree");
		return ptr;
	}


	void OnRep_AbilityPoints();
	void GiveAbilityPoints(int Points);
	void DEBUG_AddPointToAbilityTreeItem(class UOakPlayerAbilityTreeItemData* ItemData);
	void ClientSetTreeGrade(int NewTreeGrade);
	void ClientAddItemPoint(class UOakPlayerAbilityTreeItemData* ItemData);
	void AddPointToAbilityTreeItem(class UOakPlayerAbilityTreeItemData* ItemData);
};


// Class OakGame.OakPlayerAbilityTreeBranchData
// 0x0088 (0x00B8 - 0x0030)
class UOakPlayerAbilityTreeBranchData : public UGbxDataAsset
{
public:
	struct FText                                       BranchName;                                               // 0x0030(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FBranchColorInfo                            BranchColorInfo;                                          // 0x0048(0x0060) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<class UOakPlayerAbilityTreeTierData*>       Tiers;                                                    // 0x00A8(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityTreeBranchData");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilityTreeData
// 0x0028 (0x0058 - 0x0030)
class UOakPlayerAbilityTreeData : public UGbxDataAsset
{
public:
	int                                                GradePointsToUnlockFirstTier;                             // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<class UOakPlayerAbilityTreeBranchData*>     Branches;                                                 // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	bool                                               bUsesTreeActionAbility;                                   // 0x0048(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	class UClass*                                      TreeActionAbilityClass;                                   // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityTreeData");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilityTreeTierData
// 0x0028 (0x0058 - 0x0030)
class UOakPlayerAbilityTreeTierData : public UGbxDataAsset
{
public:
	int                                                BranchPointsToUnlock;                                     // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<class UOakPlayerAbilityTreeItemData*>       Items;                                                    // 0x0038(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance)
	TArray<class UOakPlayerAbilityTreeItemData*>       WingItems;                                                // 0x0048(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityTreeTierData");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilityTreeItemData
// 0x0058 (0x0088 - 0x0030)
class UOakPlayerAbilityTreeItemData : public UGbxDataAsset
{
public:
	int                                                MaxPoints;                                                // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ESkillItemLayoutInfo                               LayoutInfo;                                               // 0x0034(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	class FString                                      ItemFrameName;                                            // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	ESkillItemDisplayType                              ItemDisplayType;                                          // 0x0048(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	struct FText                                       ParentSkillName;                                          // 0x0050(0x0028) (Edit, DisableEditOnInstance)
	struct FText                                       FlavorText;                                               // 0x0068(0x0028) (Edit, DisableEditOnInstance)
	struct FName                                       EquipVO;                                                  // 0x0080(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityTreeItemData");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilityTreeItemData_Ability
// 0x0008 (0x0090 - 0x0088)
class UOakPlayerAbilityTreeItemData_Ability : public UOakPlayerAbilityTreeItemData
{
public:
	class UClass*                                      AbilityClass;                                             // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityTreeItemData_Ability");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilityTreeItemData_GbxDataAsset
// 0x0000 (0x0088 - 0x0088)
class UOakPlayerAbilityTreeItemData_GbxDataAsset : public UOakPlayerAbilityTreeItemData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityTreeItemData_GbxDataAsset");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilityTreeItemData_ActionAbilityAugment
// 0x0008 (0x0090 - 0x0088)
class UOakPlayerAbilityTreeItemData_ActionAbilityAugment : public UOakPlayerAbilityTreeItemData_GbxDataAsset
{
public:
	class UOakActionAbilityAugmentData*                AugmentData;                                              // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityTreeItemData_ActionAbilityAugment");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilityTreeItemData_ActionAbilityAugmentSlot
// 0x0008 (0x0090 - 0x0088)
class UOakPlayerAbilityTreeItemData_ActionAbilityAugmentSlot : public UOakPlayerAbilityTreeItemData_GbxDataAsset
{
public:
	class UOakActionAbilityAugmentSlotData*            AugmentSlotData;                                          // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityTreeItemData_ActionAbilityAugmentSlot");
		return ptr;
	}

};


// Class OakGame.OakPlayerAbilityTreeItemData_PlayerCharacterAugment
// 0x0008 (0x0090 - 0x0088)
class UOakPlayerAbilityTreeItemData_PlayerCharacterAugment : public UOakPlayerAbilityTreeItemData_GbxDataAsset
{
public:
	class UPlayerCharacterComponentAugmentData*        AugmentData;                                              // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerAbilityTreeItemData_PlayerCharacterAugment");
		return ptr;
	}

};


// Class OakGame.OakFirstPersonData
// 0x0080 (0x00A8 - 0x0028)
class UOakFirstPersonData : public UObject
{
public:
	TArray<struct FViewLeadingInfo>                    LeadingInfo;                                              // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              MinSpeed2DWhenTryingToMove;                               // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WeaponAngleAlphaExp;                                      // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RAddAlphaInterpSpeed;                                     // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PistolStockAddAlphaInterpSpeed;                           // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MantleReachInterpInSpeed;                                 // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MantleReachInterpOutSpeed;                                // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MantleReachOutMaximumUpwardVelocity;                      // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MantleReachOutMinimumHeightOffGround;                     // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     ReloadVariationTranslationMin;                            // 0x0058(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     ReloadVariationTranslationMax;                            // 0x0064(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    ReloadVariationRotationMin;                               // 0x0070(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    ReloadVariationRotationMax;                               // 0x007C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              BringHandsDownReturnRate;                                 // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     BringHandsDownLocationOffset;                             // 0x008C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    BringHandsDownRotationOffset;                             // 0x0098(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              BringHandsDownCurveExponent;                              // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakFirstPersonData");
		return ptr;
	}

};


// Class OakGame.OakPlayerCameraManager
// 0x0030 (0x2CF0 - 0x2CC0)
class AOakPlayerCameraManager : public APlayerCameraModesManager
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x2CC0(0x0020) MISSED OFFSET
	TArray<class AOakUIActorContainer*>                CustomActorContainerStack;                                // 0x2CE0(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerCameraManager");
		return ptr;
	}

};


// Class OakGame.OakPlayerInput
// 0x0000 (0x0428 - 0x0428)
class UOakPlayerInput : public UGbxPlayerInput
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerInput");
		return ptr;
	}

};


// Class OakGame.OakPlayerMissionComponent
// 0x0068 (0x0208 - 0x01A0)
class UOakPlayerMissionComponent : public UPlayerMissionComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01A0(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnApplyMissionRewards;                                    // 0x01A8(0x0010) (ZeroConstructor, Transient, InstancedReference)
	struct FScriptMulticastDelegate                    OnAllPlotMissionsCompleted;                               // 0x01B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FMissionDeliveryData                        CurrentMissionDelivery;                                   // 0x01C8(0x0018) (Transient)
	int                                                CachedPlaythroughIndex;                                   // 0x01E0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                PlaythroughsCompleted;                                    // 0x01E4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bShowNewPlaythroughNotification;                          // 0x01E8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1F];                                      // 0x01E9(0x001F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerMissionComponent");
		return ptr;
	}


	void ServerRequestMissionData();
	void ServerNotifyMissionDeliveryChoice(bool bMissionAccepted, class UClass* Mission, class AActor* MissionGiver);
	void ServerGrantStarterGear(class UMissionObjective* MissionObjective, class UClass* MissionClass);
	void ServerGrantMissionWeapon(class UClass* MissionClass);
	void ServerApplyMissionRewards(class UClass* MissionClass);
	void OnWeaponChanged(class AWeapon* Weapon, class AWeapon* LastWeapon);
	void OnPawnChanged(class APawn* Pawn, class APawn* OldPawn);
	void OnMissionFastForwardPossible();
	void OnMissionDeliveryChoice(bool bMissionAccepted, bool bEmergencyExit, int MissionIndex, class AActor* MissionGiver);
	void OnFastForwardDialogClicked(class UGbxGFxDialogBox* SourceDialog, const struct FName& ChoiceNameId, const struct FGbxMenuInputEvent& InputInfo);
	void ClientUnlockAssociatedAchievement(class AOakPlayerController* OakPC, int AchievementId);
	void ClientReceiveMissionData(const struct FReplicatedMissionData& MissionData);
	void ClientMissionKickoffPlayed(class UClass* MissionClass);
	void ClientInitiateMissionDelivery(const struct FMissionDeliveryData& DeliveryData);
};


// Class OakGame.OakPlayerTeleportData
// 0x0138 (0x0168 - 0x0030)
class UOakPlayerTeleportData : public UDataAsset
{
public:
	struct FAttributeInitializationData                TransitionDurationData;                                   // 0x0030(0x0038) (Edit, DisableEditOnInstance)
	bool                                               bTriggerOakTriggersAlongTeleport;                         // 0x0068(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	struct FRuntimeFloatCurve                          HorizontalCurve;                                          // 0x0070(0x0078) (Edit, DisableEditOnInstance)
	struct FRuntimeFloatCurve                          VerticalCurve;                                            // 0x00E8(0x0078) (Edit, DisableEditOnInstance)
	class UClass*                                      AnimationClass;                                           // 0x0160(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPlayerTeleportData");
		return ptr;
	}

};


// Class OakGame.OakProfile
// 0x0498 (0x0548 - 0x00B0)
class UOakProfile : public UGbxProfile
{
public:
	int                                                GamepadHipSensitivityLevel;                               // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                GamepadZoomedSensitivityLevel;                            // 0x00B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                GamepadVehicleSensitivityLevel;                           // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadMovementDeadZoneX;                                 // 0x00BC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GamepadMovementDeadZoneY;                                 // 0x00C0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GamepadLookDeadZoneInnerX;                                // 0x00C4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GamepadLookDeadZoneOuterX;                                // 0x00C8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GamepadLookDeadZoneInnerY;                                // 0x00CC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GamepadLookDeadZoneOuterY;                                // 0x00D0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GamepadVehicleMovementDeadZoneX;                          // 0x00D4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GamepadVehicleMovementDeadZoneY;                          // 0x00D8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GamepadVehicleLookDeadZoneInnerX;                         // 0x00DC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GamepadVehicleLookDeadZoneOuterX;                         // 0x00E0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GamepadVehicleLookDeadZoneInnerY;                         // 0x00E4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GamepadVehicleLookDeadZoneOuterY;                         // 0x00E8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GamepadLeftDeadZoneInner;                                 // 0x00EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData)
	float                                              GamepadLeftDeadZoneOuter;                                 // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData)
	float                                              GamepadRightDeadZoneInner;                                // 0x00F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData)
	float                                              GamepadRightDeadZoneOuter;                                // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, GlobalConfig, IsPlainOldData)
	bool                                               bDefaultDeadZoneInnerUpdated;                             // 0x00FC(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00FD(0x0003) MISSED OFFSET
	float                                              GamepadLookAxialDeadZoneScale;                            // 0x0100(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadMoveAxialDeadZoneScale;                            // 0x0104(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bGamepadUseAdvancedHipAimSettings;                        // 0x0108(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bGamepadUseAdvancedZoomedAimSettings;                     // 0x0109(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bGamepadUseAdvancedVehicleAimSettings;                    // 0x010A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x010B(0x0001) MISSED OFFSET
	float                                              GamepadHipYawRate;                                        // 0x010C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadHipPitchRate;                                      // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadHipExtraYaw;                                       // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadHipExtraPitch;                                     // 0x0118(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadHipRampUpTime;                                     // 0x011C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadHipRampUpDelay;                                    // 0x0120(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadZoomedYawRate;                                     // 0x0124(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadZoomedPitchRate;                                   // 0x0128(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadZoomedExtraYaw;                                    // 0x012C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadZoomedExtraPitch;                                  // 0x0130(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadZoomedRampUpTime;                                  // 0x0134(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadZoomedRampUpDelay;                                 // 0x0138(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadVehicleYawRate;                                    // 0x013C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadVehiclePitchRate;                                  // 0x0140(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadVehicleExtraYaw;                                   // 0x0144(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadVehicleExtraPitch;                                 // 0x0148(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadVehicleRampUpTime;                                 // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GamepadVehicleRampUpDelay;                                // 0x0150(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIronsightAimAssist;                                      // 0x0154(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0155(0x0003) MISSED OFFSET
	EWalkingButtonScheme                               WalkingButtonScheme;                                      // 0x0158(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0155(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	EJoystickScheme                                    WalkingJoystickScheme;                                    // 0x015C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x015C(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	EDrivingButtonScheme                               DrivingButtonScheme;                                      // 0x0160(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0160(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	EJoystickScheme                                    DrivingJoystickScheme;                                    // 0x0164(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0164(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	float                                              MouseADSScale;                                            // 0x0168(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MouseVehicleScale;                                        // 0x016C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMouseIronsightAimAssist;                                 // 0x0170(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0171(0x0003) MISSED OFFSET
	EVehicleInputMode                                  VehicleInputMode;                                         // 0x0174(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0171(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	bool                                               bWeaponAimToggle;                                         // 0x0178(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMantleRequiresButton;                                    // 0x0179(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bFixedMinimapRotation;                                    // 0x017A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bFixedInitialZoneMapRotation;                             // 0x017B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCombatNumberLongFormat;                                  // 0x017C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShowMinimapLegendaries;                                  // 0x017D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMapInvertPitch;                                          // 0x017E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMapInvertYaw;                                            // 0x017F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EPlayerDifficultySetting                           Difficulty;                                               // 0x0180(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSwapDualWieldControls;                                   // 0x0181(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUsePlayerCallouts;                                       // 0x0182(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x5];                                       // 0x0183(0x0005) MISSED OFFSET
	struct FName                                       LastStatusMenuPage;                                       // 0x0188(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FOakProfileLastInventoryFilterInfo>  InventoryScreenLastFilter;                                // 0x0190(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FOakProfileMenuTutorialInfo                 TutorialInfo;                                             // 0x01A0(0x0018)
	bool                                               bHasSeenFirstBoot;                                        // 0x01B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x01B9(0x0003) MISSED OFFSET
	float                                              SubsAndCCSize;                                            // 0x01BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CCAndSubsBackgroundOpacity;                               // 0x01C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x01C4(0x0004) MISSED OFFSET
	TArray<class FString>                              SeenNewsItems;                                            // 0x01C8(0x0010) (ZeroConstructor)
	ENetworkType                                       DefaultNetworkType;                                       // 0x01D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EInviteType                                        DefaultInviteType;                                        // 0x01D9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ECrossplayState                                    DesiredCrossplayState;                                    // 0x01DA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EFriendSyncState                                   DesiredFriendSyncState;                                   // 0x01DB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x01DC(0x0004) MISSED OFFSET
	class FString                                      MatchmakingRegion;                                        // 0x01E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	EStreamingService                                  StreamingService;                                         // 0x01F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShiftFirstBoot;                                          // 0x01F1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShiftFirstBootPrimary;                                   // 0x01F2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIncreasedChanceForSubscribers;                           // 0x01F3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRareChestEventEnabled;                                   // 0x01F4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBadassEventEnabled;                                      // 0x01F5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData13[0x2];                                       // 0x01F6(0x0002) MISSED OFFSET
	int                                                MinTimeBetweenBadassEvents;                               // 0x01F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPinataEventEnabled;                                      // 0x01FC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMoxxisDrinkEventEnabled;                                 // 0x01FD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData14[0x2];                                       // 0x01FE(0x0002) MISSED OFFSET
	int                                                MoxxisDrinkEventBitsProductId;                            // 0x0200(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExtractionEventEnabled;                                  // 0x0204(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData15[0x3];                                       // 0x0205(0x0003) MISSED OFFSET
	TArray<int>                                        CitizenScienceLevelProgression;                           // 0x0208(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                CitizenScienceActiveBoosterIndex;                         // 0x0218(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CitizenScienceActiveBoosterRemainingTime;                 // 0x021C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CitizenScienceActiveBoosterTotalTime;                     // 0x0220(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CitizenScienceCSBucksAmount;                              // 0x0224(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCitizenScienceHasSeenIntroVideo;                         // 0x0228(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCitizenScienceTutorialDone;                              // 0x0229(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData16[0x2];                                       // 0x022A(0x0002) MISSED OFFSET
	int                                                StreamerPrimaryActiveBoosterIndex;                        // 0x022C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StreamerPrimaryActiveBoosterRemainingTime;                // 0x0230(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StreamerPrimaryActiveBoosterTotalTime;                    // 0x0234(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                StreamerSecondaryActiveBoosterIndex;                      // 0x0238(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StreamerSecondaryActiveBoosterRemainingTime;              // 0x023C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StreamerSecondaryActiveBoosterTotalTime;                  // 0x0240(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                StreamerBoosterTier;                                      // 0x0244(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EFriendEventNotificationLifetime                   FriendEventNotificationLifetime;                          // 0x0248(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EFriendEventNotificationFrequency                  FriendEventNotificationFrequency;                         // 0x0249(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ETradeRequestReceptionType                         TradeRequestReceptionType;                                // 0x024A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData17[0x1];                                       // 0x024B(0x0001) MISSED OFFSET
	int                                                MaxCachedFriendEvents;                                    // 0x024C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxCachedFriendStatuses;                                  // 0x0250(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData18[0x4];                                       // 0x0254(0x0004) MISSED OFFSET
	TArray<class FString>                              FriendEvents;                                             // 0x0258(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<class FString>                              FriendStatuses;                                           // 0x0268(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData19[0x58];                                      // 0x0278(0x0058) MISSED OFFSET
	struct FDateTime                                   LastWhisperFetchEventsTime;                               // 0x02D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FDateTime                                   LastWhisperFetchStatusesTime;                             // 0x02D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bHasSeenNonStadiaControllerDisclaimer;                    // 0x02E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEnableSubtitles;                                         // 0x02E1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEnableClosedCaptions;                                    // 0x02E2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEnableAutoCentering;                                     // 0x02E3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ECrosshairColorsEnum                               CrosshairNeutralColorFrame;                               // 0x02E4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ECrosshairColorsEnum                               CrosshairEnemyColorFrame;                                 // 0x02E5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ECrosshairColorsEnum                               CrosshairAllyColorFrame;                                  // 0x02E6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData20[0x1];                                       // 0x02E7(0x0001) MISSED OFFSET
	float                                              HeadBobScale;                                             // 0x02E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData21[0x4];                                       // 0x02EC(0x0004) MISSED OFFSET
	TArray<struct FRecentlyMetPlayer>                  RecentlyMetPlayers;                                       // 0x02F0(0x0010) (ZeroConstructor)
	TMap<struct FUniqueNetIdRepl, struct FOakFriendEncounterData> FriendEncounters;                                         // 0x0300(0x0050) (ZeroConstructor)
	int                                                MaxFriendEncounterSize;                                   // 0x0350(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData22[0x4];                                       // 0x0354(0x0004) MISSED OFFSET
	TArray<struct FGameStatSaveGameData>               ProfileStatsData;                                         // 0x0358(0x0010) (ZeroConstructor)
	TArray<struct FInventoryCategorySaveData>          BankInventoryCategoryList;                                // 0x0368(0x0010) (ZeroConstructor)
	TArray<struct FInventorySaveGameData>              BankInventoryList;                                        // 0x0378(0x0010) (ZeroConstructor)
	TArray<struct FInventorySaveGameData>              LostLootInventoryList;                                    // 0x0388(0x0010) (ZeroConstructor)
	TArray<struct FOakMailItem>                        NPCMailItems;                                             // 0x0398(0x0010) (ZeroConstructor)
	TArray<class FString>                              MailGuids;                                                // 0x03A8(0x0010) (ZeroConstructor)
	TArray<class FString>                              UnreadMailGuids;                                          // 0x03B8(0x0010) (ZeroConstructor)
	TArray<struct FGearSoldByFriendData>               GearSoldByFriends;                                        // 0x03C8(0x0010) (ZeroConstructor)
	TArray<struct FOakSDUSaveGameData>                 ProfileSDUList;                                           // 0x03D8(0x0010) (ZeroConstructor)
	TArray<struct FOakCustomizationSaveGameData>       UnlockedCustomizations;                                   // 0x03E8(0x0010) (ZeroConstructor)
	TArray<struct FOakInventoryCustomizationPartInfo>  UnlockedInventoryCustomizationParts;                      // 0x03F8(0x0010) (ZeroConstructor)
	struct FGuardianRankProfileData                    GuardianRank;                                             // 0x0408(0x0030)
	TArray<struct FCrewQuartersDecorationItemSaveGameData> UnlockedCrewQuartersDecorations;                          // 0x0438(0x0010) (ZeroConstructor)
	TArray<struct FCrewQuartersRoomItemSaveGameData>   UnlockedCrewQuartersRooms;                                // 0x0448(0x0010) (ZeroConstructor)
	uint32_t                                           LastActiveVaultCardID;                                    // 0x0458(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                CurrentVaultCardDaySeed;                                  // 0x045C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                CurrentVaultCardWeekSeed;                                 // 0x0460(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData23[0x4];                                       // 0x0464(0x0004) MISSED OFFSET
	TArray<struct FVaultCardRewardList>                VaultCardRewards;                                         // 0x0468(0x0010) (ZeroConstructor)
	TArray<struct FOakVaultCardPreviousChallengeData>  VaultCardPreviousChallenges;                              // 0x0478(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData24[0x70];                                      // 0x0488(0x0070) MISSED OFFSET
	int                                                TotalPlaytimeSeconds;                                     // 0x04F8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData25[0x4];                                       // 0x04FC(0x0004) MISSED OFFSET
	TArray<struct FOakChallengeSaveGameData>           OakProfileChallengeData;                                  // 0x0500(0x0010) (Edit, ZeroConstructor, EditConst)
	uint32_t                                           PlayerSelectedLeague;                                     // 0x0510(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData26[0x24];                                      // 0x0514(0x0024) MISSED OFFSET
	TArray<struct FGameStat>                           ProfileStats;                                             // 0x0538(0x0010) (ZeroConstructor, Deprecated)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakProfile");
		return ptr;
	}

};


// Class OakGame.OakProjectile_FalconStrikeRocket
// 0x0000 (0x06E0 - 0x06E0)
class AOakProjectile_FalconStrikeRocket : public AOakProjectile
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakProjectile_FalconStrikeRocket");
		return ptr;
	}

};


// Class OakGame.OakProjectile_PhaseTrance
// 0x0030 (0x0738 - 0x0708)
class AOakProjectile_PhaseTrance : public AOakProjectile_ActionAbility
{
public:
	bool                                               bWantsOverlappedEvents;                                   // 0x0708(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bWantsOverlappedEnemyEvents;                              // 0x0709(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bWantsOverlappedFriendlyEvents;                           // 0x070A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bWantsOverlappedNeutralEvents;                            // 0x070B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x070C(0x0004) MISSED OFFSET
	struct FPhaseTranceActivationComboData             ActivationComboData;                                      // 0x0710(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0728(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakProjectile_PhaseTrance");
		return ptr;
	}


	void OnOverlappedNeutral(const struct FHitResult& HitResult);
	void OnOverlappedFriendly(const struct FHitResult& HitResult);
	void OnOverlappedEnemy(const struct FHitResult& HitResult);
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& HitResult);
	class UPrimitiveComponent* GetOverlapComponent();
};


// Class OakGame.OakProjectileBalanceStateComponent
// 0x0000 (0x01D8 - 0x01D8)
class UOakProjectileBalanceStateComponent : public UBalanceStateComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakProjectileBalanceStateComponent");
		return ptr;
	}

};


// Class OakGame.OakPublicAPIUpdater
// 0x0028 (0x0050 - 0x0028)
class UOakPublicAPIUpdater : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET
	TArray<class UClass*>                              ModifiedChallengeClasses;                                 // 0x0038(0x0010) (ZeroConstructor, Transient)
	class UOakGameInstance*                            GameInstanceRef;                                          // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakPublicAPIUpdater");
		return ptr;
	}


	void OnChallengeUpdated(class UChallengesComponent* Component, class UClass* ChallengeClass, int NewValue, bool bDisplayNotification, bool bCompleted);
	void OnChallengeCompleted(class UChallengesComponent* Component, class UClass* ChallengeClass);
	void OnChallengeActivated(class UChallengesComponent* Component, class UClass* ChallengeClass);
};


// Class OakGame.OakRadiateDamageActor
// 0x0308 (0x0760 - 0x0458)
class AOakRadiateDamageActor : public AActor
{
public:
	struct FEnvQueryParams                             QueryParams;                                              // 0x0458(0x00B8) (Edit)
	class UClass*                                      DamageData;                                               // 0x0510(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAttributeInitializationData                Duration;                                                 // 0x0518(0x0038) (Edit)
	struct FAttributeInitializationData                Rate;                                                     // 0x0550(0x0038) (Edit)
	ERadiateMethod                                     RadiateMethod;                                            // 0x0588(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0589(0x0007) MISSED OFFSET
	struct FAttributeInitializationData                Velocity;                                                 // 0x0590(0x0038) (Edit)
	struct FAttributeInitializationData                MinDistance;                                              // 0x05C8(0x0038) (Edit)
	struct FAttributeInitializationData                MaxDistance;                                              // 0x0600(0x0038) (Edit)
	ERadiateMovementType                               RadiateMovementType;                                      // 0x0638(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0639(0x0007) MISSED OFFSET
	struct FAttributeInitializationData                MaxStepUpHeight;                                          // 0x0640(0x0038) (Edit)
	struct FAttributeInitializationData                MaxStepDownHeight;                                        // 0x0678(0x0038) (Edit)
	struct FAttributeInitializationData                InitialStepDownHeight;                                    // 0x06B0(0x0038) (Edit)
	float                                              TraceZOffset;                                             // 0x06E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionChannel>                     TraceChannel;                                             // 0x06EC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOnlyTraceStaticMobility;                                 // 0x06ED(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x06EE(0x0002) MISSED OFFSET
	TArray<TEnumAsByte<ECollisionChannel>>             ExtraIgnoreTraceChannels;                                 // 0x06F0(0x0010) (Edit, ZeroConstructor)
	bool                                               bUseContextRotation;                                      // 0x0700(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0701(0x0003) MISSED OFFSET
	struct FVector                                     EffectTraceExtent;                                        // 0x0704(0x000C) (Edit, IsPlainOldData)
	float                                              EffectZOffset;                                            // 0x0710(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0714(0x0004) MISSED OFFSET
	class UElementalPuddleSimpleSpawnData*             ElementalPuddleSpawnData;                                 // 0x0718(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USplatData*                                  SplatData;                                                // 0x0720(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x38];                                      // 0x0728(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakRadiateDamageActor");
		return ptr;
	}


	void OnSnapToGroundFailed(bool bIsInitialStepDown);
	void OnPerformRadiateDamageTasks();
	bool STATIC_InitialSnapToGroundWouldFail(class UObject* ContextObj, class UClass* Template, class AActor* TransformActor, TEnumAsByte<ECollisionChannel> TraceChannel);
};


// Class OakGame.OakRadiateDamageActor_ActionAbility
// 0x0040 (0x07A0 - 0x0760)
class AOakRadiateDamageActor_ActionAbility : public AOakRadiateDamageActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0760(0x0010) MISSED OFFSET
	class UPrimitiveComponent*                         CollisionPrimitive;                                       // 0x0770(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               bBlocksActionAbilityShutdown;                             // 0x0778(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsShuttingDown;                                          // 0x0779(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x077A(0x0006) MISSED OFFSET
	class UTeam*                                       OwnerTeam;                                                // 0x0780(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0788(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakRadiateDamageActor_ActionAbility");
		return ptr;
	}


	void OnHitEnemy(class AActor* EnemyActor);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	class UOakActionAbility* K2_GetOwnedActionAbility();
};


// Class OakGame.OakRadiateDamageMovementComponent
// 0x0010 (0x01D0 - 0x01C0)
class UOakRadiateDamageMovementComponent : public UMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x01C0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakRadiateDamageMovementComponent");
		return ptr;
	}

};


// Class OakGame.OakRadiusDamageReplicationManager
// 0x0000 (0x0470 - 0x0470)
class AOakRadiusDamageReplicationManager : public ARadiusDamageReplicationManager
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakRadiusDamageReplicationManager");
		return ptr;
	}

};


// Class OakGame.OakRecentDamageTrackingComponent
// 0x01F0 (0x0548 - 0x0358)
class UOakRecentDamageTrackingComponent : public URecentDamageTrackingComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0358(0x0018) MISSED OFFSET
	class UOakDamageGlobalsData*                       Globals;                                                  // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UParticleSystemComponent*                    DamageNumberParticleComponent;                            // 0x0378(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UScreenParticleManagerComponent*             ScreenParticleManagerComponent;                           // 0x0380(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    IncomingDamageParticleComponent_Health;                   // 0x0388(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    IncomingDamageParticleComponent_Shield;                   // 0x0390(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    IncomingDamageParticleComponent_Armor;                    // 0x0398(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x03A0(0x0010) MISSED OFFSET
	struct FRecentlyResistedAttackData                 RecentlyResistedAttacks[0x10];                            // 0x03B0(0x0010) (Transient)
	unsigned char                                      UnknownData02[0x8];                                       // 0x04B0(0x0008) MISSED OFFSET
	TArray<struct FRecentIncomingDamageData>           ServerRecentIncomingDamageData;                           // 0x04B8(0x0010) (Net, ZeroConstructor, Transient)
	TArray<struct FRecentIncomingDamageData>           ClientRecentIncomingDamageData;                           // 0x04C8(0x0010) (ZeroConstructor, Transient)
	TArray<class UStaticMeshComponent*>                RecentIncomingHealthDamageComponents;                     // 0x04D8(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UStaticMeshComponent*>                RecentIncomingShieldDamageComponents;                     // 0x04E8(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UStaticMeshComponent*>                RecentIncomingArmorDamageComponents;                      // 0x04F8(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x40];                                      // 0x0508(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakRecentDamageTrackingComponent");
		return ptr;
	}


	void OnRep_RecentIncomingDamageData();
	void ClientPlayDamagePresentation(const struct FTriggeredDamagePresentation& Presentation);
};


// Class OakGame.OakReplicationGraph
// 0x00C0 (0x02B8 - 0x01F8)
class UOakReplicationGraph : public UReplicationGraph
{
public:
	class UReplicationGraphNode_GridSpatialization2D*  GridNode;                                                 // 0x01F8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UOakReplicationGraphNode_AlwaysRelevant*     AlwaysRelevantNode;                                       // 0x0200(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class AActor*>                              ActorsPendingAddToGraph;                                  // 0x0208(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0xA0];                                      // 0x0218(0x00A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakReplicationGraph");
		return ptr;
	}

};


// Class OakGame.OakReplicationGraphNode_AlwaysRelevant_ForConnection
// 0x0020 (0x0170 - 0x0150)
class UOakReplicationGraphNode_AlwaysRelevant_ForConnection : public UReplicationGraphNode_ActorList
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0150(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakReplicationGraphNode_AlwaysRelevant_ForConnection");
		return ptr;
	}

};


// Class OakGame.OakReplicationGraphNode_AlwaysRelevant
// 0x0000 (0x0150 - 0x0150)
class UOakReplicationGraphNode_AlwaysRelevant : public UReplicationGraphNode_ActorList
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakReplicationGraphNode_AlwaysRelevant");
		return ptr;
	}

};


// Class OakGame.OakNetReplicationGraphConnection
// 0x0020 (0x01D8 - 0x01B8)
class UOakNetReplicationGraphConnection : public UNetReplicationGraphConnection
{
public:
	class UReplicationGraphNode_GridSpatialization2D*  GridNode;                                                 // 0x01B8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UOakReplicationGraphNode_AlwaysRelevant_ForConnection* AlwaysRelevantNode;                                       // 0x01C0(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class AActor*>                              OnlyRelevantToConnectionActors;                           // 0x01C8(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakNetReplicationGraphConnection");
		return ptr;
	}

};


// Class OakGame.OakReticleFeedbackWidget
// 0x0050 (0x01C0 - 0x0170)
class UOakReticleFeedbackWidget : public UGbxGFxObject
{
public:
	float                                              MaxDamageCausedDuration;                                  // 0x0170(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxDeathCausedDuration;                                   // 0x0174(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0178(0x0008) MISSED OFFSET
	EOakReticleFeedbackGameEvent                       CurrentGameEvent;                                         // 0x0180(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0181(0x0003) MISSED OFFSET
	float                                              CurrentGameEventDuration;                                 // 0x0184(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x28];                                      // 0x0188(0x0028) MISSED OFFSET
	class AOakPlayerController*                        OakPCOwner;                                               // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x01B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakReticleFeedbackWidget");
		return ptr;
	}


	void OnGameEventComplete(EOakReticleFeedbackGameEvent GameEvent);
	void OnGameEventCallback(EOakReticleFeedbackGameEvent GameEvent);
	void OnGameEvent(EOakReticleFeedbackGameEvent GameEvent);
};


// Class OakGame.OakSaveGame
// 0x0458 (0x0480 - 0x0028)
class UOakSaveGame : public UGbxSaveGame
{
public:
	uint32_t                                           SaveGameId;                                               // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bLevelledSaveNeedsFixup;                                  // 0x002C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	int64_t                                            LastSaveTimestamp;                                        // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           TimePlayedSeconds;                                        // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           AccumulatedLevelPersistenceResetTimerSeconds;             // 0x003C(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FLevelPersistence_Level_SaveGameData> LevelPersistenceData;                                     // 0x0040(0x0010) (ZeroConstructor)
	struct FPlayerClassSaveGameData                    PlayerClassData;                                          // 0x0050(0x0030) (Edit)
	TArray<struct FResourcePoolSavegameData>           ResourcePools;                                            // 0x0080(0x0010) (Edit, ZeroConstructor)
	TArray<struct FRegionSaveGameData>                 SavedRegions;                                             // 0x0090(0x0010) (Edit, ZeroConstructor, EditConst)
	int                                                ExperiencePoints;                                         // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	TArray<struct FGameStatSaveGameData>               GameStatsData;                                            // 0x00A8(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FInventoryCategorySaveData>          InventoryCategoryList;                                    // 0x00B8(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FOakInventoryItemSaveGameData>       InventoryItems;                                           // 0x00C8(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FEquippedInventorySaveGameData>      EquippedInventoryList;                                    // 0x00D8(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<int>                                        ActiveWeaponList;                                         // 0x00E8(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FOakPlayerAbilitySaveGameData               AbilityData;                                              // 0x00F8(0x0048) (Edit, EditConst)
	int                                                LastPlayThroughIndex;                                     // 0x0140(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                PlaythroughsCompleted;                                    // 0x0144(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bShowNewPlaythroughNotification;                          // 0x0148(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0149(0x0007) MISSED OFFSET
	TArray<struct FMissionPlaythroughSaveGameData>     MissionPlaythroughsData;                                  // 0x0150(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FPlaythroughActiveFastTravelSaveData> ActiveTravelStationsForPlaythrough;                       // 0x0160(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FDiscoverySaveData                          DiscoveryData;                                            // 0x0170(0x0010) (Edit, EditConst)
	TArray<class FString>                              LastActiveTravelStationForPlaythrough;                    // 0x0180(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FVehicleUnlockedSaveGameData>        VehiclesUnlockedData;                                     // 0x0190(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<class FString>                              VehiclePartsUnlocked;                                     // 0x01A0(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FOakCARMenuVehicleConfigSaveData>    VehicleLoadouts;                                          // 0x01B0(0x0010) (Edit, ZeroConstructor, EditConst)
	int                                                VehicleLastLoadoutIndex;                                  // 0x01C0(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x01C4(0x0004) MISSED OFFSET
	TArray<struct FOakChallengeSaveGameData>           OakChallengeData;                                         // 0x01C8(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FOakSDUSaveGameData>                 SDUList;                                                  // 0x01D8(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<class FString>                              SelectedCustomizations;                                   // 0x01E8(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<int>                                        EquippedEmoteCustomizations;                              // 0x01F8(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FCustomPlayerColorSaveGameData>      SelectedColorCustomizations;                              // 0x0208(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FCrewQuartersSaveData                       CrewQuartersRoom;                                         // 0x0218(0x0028) (Edit, EditConst)
	struct FCrewQuartersGunRackSaveData                CrewQuartersGunRack;                                      // 0x0240(0x0010) (Edit, EditConst)
	TArray<struct FEchoLogSaveGameData>                UnlockedEchoLogs;                                         // 0x0250(0x0010) (Edit, ZeroConstructor, EditConst)
	bool                                               bHasPlayedSpecialEchoLogInsertAlready;                    // 0x0260(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0261(0x0007) MISSED OFFSET
	TMap<struct FName, class FString>                  NicknameMappings;                                         // 0x0268(0x0050) (Edit, ZeroConstructor, EditConst)
	TArray<struct FGameStateSaveData>                  GameStateSaveDataForPlaythrough;                          // 0x02B8(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FChallengeCategoryProgressSaveData          ChallengeCategoryCompletionPcts;                          // 0x02C8(0x0010) (Edit, EditConst)
	struct FOakPlayerCharacterSlotSaveGameData         CharacterSlotSaveGameData;                                // 0x02D8(0x0010) (Edit, EditConst)
	struct FUITrackingSaveGameData                     UITrackingSaveGameData;                                   // 0x02E8(0x0028) (Edit, EditConst)
	EOakGameStateUIGroupMode                           PreferredGroupMode;                                       // 0x0310(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0311(0x0007) MISSED OFFSET
	struct FTimeOfDaySaveGameData                      TimeOfDayData;                                            // 0x0318(0x0018) (Edit, EditConst)
	class UGbxZoneMapFODSaveGameData*                  ZoneMapFODSavedData;                                      // 0x0330(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsNetReplicating;                                        // 0x0338(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x17];                                      // 0x0339(0x0017) MISSED OFFSET
	struct FGuardianRankCharacterSaveGameData          CharacterGuardianRank;                                    // 0x0350(0x0040) (Edit, EditConst)
	TArray<struct FOakChallengeSaveGameData>           ProfileChallengeDataForSerialization;                     // 0x0390(0x0010) (ZeroConstructor, Transient)
	bool                                               bOptionalObjectiveRewardFixupApplied;                     // 0x03A0(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bVehiclePartRewardsFixupApplied;                          // 0x03A1(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bLevelledSaveVehiclePartRewardsFixupApplied;              // 0x03A2(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData07[0x1];                                       // 0x03A3(0x0001) MISSED OFFSET
	uint32_t                                           LastActiveLeague;                                         // 0x03A4(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	uint32_t                                           LastActiveLeagueInstance;                                 // 0x03A8(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x03AC(0x0004) MISSED OFFSET
	TMap<uint32_t, unsigned char>                      ActiveLeagueInstanceForEvent;                             // 0x03B0(0x0050) (Edit, ZeroConstructor, EditConst)
	int                                                CurrentVaultCardDaySeed;                                  // 0x0400(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                CurrentVaultCardWeekSeed;                                 // 0x0404(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	class FString                                      PreferredCharacterName;                                   // 0x0408(0x0010) (Edit, ZeroConstructor)
	int                                                NameCharacterLimit;                                       // 0x0418(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x20];                                      // 0x041C(0x0020) MISSED OFFSET
	struct FGuardianRankSaveGameData                   GuardianRank;                                             // 0x043C(0x000C) (Deprecated)
	class FString                                      LastActiveTravelStation;                                  // 0x0448(0x0010) (ZeroConstructor, Deprecated)
	struct FGameStateSaveData                          GameStateSaveData;                                        // 0x0458(0x000C) (Deprecated)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0464(0x0004) MISSED OFFSET
	TArray<struct FActiveFastTravelSaveData>           ActiveTravelStations;                                     // 0x0468(0x0010) (ZeroConstructor, Deprecated)
	unsigned char                                      UnknownData11[0x8];                                       // 0x0478(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakSaveGame");
		return ptr;
	}

};


// Class OakGame.OakSaveGameChannel
// 0x0000 (0x0098 - 0x0098)
class UOakSaveGameChannel : public USaveGameChannel
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakSaveGameChannel");
		return ptr;
	}

};


// Class OakGame.OakScreenLiquidArea
// 0x0010 (0x0468 - 0x0458)
class AOakScreenLiquidArea : public AActor
{
public:
	struct FLinearColor                                LiquidColorAndIntensity;                                  // 0x0458(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakScreenLiquidArea");
		return ptr;
	}

};


// Class OakGame.OakSDUData
// 0x0038 (0x0068 - 0x0030)
class UOakSDUData : public UGbxDataAsset
{
public:
	class UDataTable*                                  SDUBonusTable;                                            // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FText                                       SDUDisplayName;                                           // 0x0038(0x0028) (Edit)
	bool                                               bProfileSDU;                                              // 0x0050(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bClientSDU;                                               // 0x0051(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bGrenadeSDU;                                              // 0x0052(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0053(0x0005) MISSED OFFSET
	class UDataAsset*                                  UIVendorContextData;                                      // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UManufacturerData*                           ManufacturerData;                                         // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakSDUData");
		return ptr;
	}


	bool GetSDULevelInfo(int SDULevel, int* OutSDUPrice, class UInventoryCategoryData** OutPriceCurrenty, struct FAttributeEffectData* OutAttributeModifyInfo);
};


// Class OakGame.OakSignificanceManager
// 0x0000 (0x01C8 - 0x01C8)
class UOakSignificanceManager : public UGbxSignificanceManager
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakSignificanceManager");
		return ptr;
	}

};


// Class OakGame.OakSingletons
// 0x0088 (0x00C0 - 0x0038)
class UOakSingletons : public UGbxSingletons
{
public:
	class UEchoManager*                                EchoManager;                                              // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakVehicleManager*                          OakVehicleManager;                                        // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCorpseManager*                              CorpseManager;                                            // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class URegionManager*                              RegionManager;                                            // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakMinimapIconTracker*                      MinimapIconTracker;                                       // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakSubtitleManager*                         SubtitleManager;                                          // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ARadiusDamageReplicationManager*             RadiusDamageReplicationManager;                           // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class USpawnLootManager*                           SpawnLootManager;                                         // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AClothManager*                               ClothManager;                                             // 0x0078(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UDamageAsyncManager*                         DamageAsyncManager;                                       // 0x0080(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UDamageOverTimeManager*                      DamageOverTimeManager;                                    // 0x0088(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UPerPlayerActorCullingManager*               ActorCullingManager;                                      // 0x0090(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ULevelActorPersistenceManager*               LevelActorPersistenceManager;                             // 0x0098(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x00A0(0x0010) MISSED OFFSET
	class UOakGameActivityAdapter*                     ActivityAdapter;                                          // 0x00B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x00B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakSingletons");
		return ptr;
	}

};


// Class OakGame.OakSpawnerComponent
// 0x0010 (0x09D0 - 0x09C0)
class UOakSpawnerComponent : public UGbxSpawnerComponent
{
public:
	bool                                               RandomItemDropped;                                        // 0x09C0(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bPlayableAreaAssist;                                      // 0x09C1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x09C2(0x0002) MISSED OFFSET
	float                                              CorpseRemovalOverrideTime;                                // 0x09C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CorpseRemovalOverrideAction;                              // 0x09C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakSpawnerComponent");
		return ptr;
	}


	void OnWaveWarmupCallback(class USpawnerComponent* SpawnerComponent, int WaveIndex);
};


// Class OakGame.OakSpawnerDefinition
// 0x0040 (0x0070 - 0x0030)
class UOakSpawnerDefinition : public UGbxDataAsset
{
public:
	class USpawnerStyle*                               SpawnerStyle;                                             // 0x0030(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FSpawnDetails                               SpawnDetails;                                             // 0x0038(0x0007) (Edit)
	unsigned char                                      UnknownData00[0x1];                                       // 0x003F(0x0001) MISSED OFFSET
	TArray<struct FSpawnLimitData>                     Limits;                                                   // 0x0040(0x0010) (Edit, ZeroConstructor)
	struct FGameplayTag                                SpawnActionTag;                                           // 0x0050(0x0008) (Edit)
	class UClass*                                      SpecialEffect;                                            // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FSpawnPointEffect>                   ConditionalSpecialEffects;                                // 0x0060(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakSpawnerDefinition");
		return ptr;
	}


	class AOakSpawner* STATIC_SpawnOakSpawnerFromDefinitionUsingTransforms(class UObject* WorldContextObject, class AActor* Owner, class USpawnerComponent* SourceSpawnerComponent, class UOakSpawnerDefinition* Definition, class USpawnOptionData* SpawnOption, const struct FTransform& Transform, TArray<struct FTransform> SpawnTransforms);
	class AOakSpawner* STATIC_SpawnOakSpawnerFromDefinition(class UObject* WorldContextObject, class AActor* Owner, class USpawnerComponent* SourceSpawnerComponent, class UOakSpawnerDefinition* Definition, class USpawnOptionData* SpawnOption, const struct FTransform& Transform, TArray<struct FVector> SpawnPoints);
};


// Class OakGame.OakSpawnerIconComponent
// 0x0010 (0x07D0 - 0x07C0)
class UOakSpawnerIconComponent : public UOakMissionIconComponent
{
public:
	bool                                               bAddMissionIconToSpawnedActors;                           // 0x07C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDisplayIconWhenActorsSuspended;                          // 0x07C1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAlwaysDisplayIcon;                                       // 0x07C2(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xD];                                       // 0x07C3(0x000D) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakSpawnerIconComponent");
		return ptr;
	}


	void OnVehicleActorSpawnedEvent(class ASpawner* Spawner, const struct FSpawnerActorData& ActorData);
	void OnSpawnedActorDiedOrSuspend(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void OnActorSpawnedOrUnsuspend(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	class USpawnerComponent* GetMySpawnerComponent();
	void AddMissionIconComponentToActor(class AActor* Actor);
};


// Class OakGame.OakSpawnerMissionDirectorComponent
// 0x0010 (0x03D0 - 0x03C0)
class UOakSpawnerMissionDirectorComponent : public UOakMissionDirectorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x03C0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakSpawnerMissionDirectorComponent");
		return ptr;
	}


	void OnSpawnerEnabled();
	void OnSpawnerDisabled();
	void OnSpawnedActorDiedOrSuspend(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void OnActorSpawnedOrUnsuspend(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
};


// Class OakGame.OakSpawnerStyle_PlayerInstanced
// 0x0008 (0x0038 - 0x0030)
class UOakSpawnerStyle_PlayerInstanced : public USpawnerStyle
{
public:
	class USpawnerStyle*                               SpawnerStyle;                                             // 0x0030(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakSpawnerStyle_PlayerInstanced");
		return ptr;
	}

};


// Class OakGame.OakSpawnPoint
// 0x0000 (0x04C8 - 0x04C8)
class AOakSpawnPoint : public AGbxSpawnPoint
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakSpawnPoint");
		return ptr;
	}

};


// Class OakGame.OakSpawnPointComponent
// 0x0070 (0x09F0 - 0x0980)
class UOakSpawnPointComponent : public USpawnPointComponent
{
public:
	class UGbxCondition*                               OnMissionLoadedEnabledCondition;                          // 0x0980(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TMap<class USpawnerComponent*, class UTerritoryComponent*> SpawnPointGroupTerritoryMap;                              // 0x0988(0x0050) (ExportObject, ZeroConstructor, Transient)
	class UClass*                                      SpecialEffect;                                            // 0x09D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FSpawnPointEffect>                   ConditionalSpecialEffects;                                // 0x09E0(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakSpawnPointComponent");
		return ptr;
	}


	class UClass* GetRequiredInterface();
};


// Class OakGame.OakStanceData
// 0x0000 (0x00B8 - 0x00B8)
class UOakStanceData : public UAIStanceData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakStanceData");
		return ptr;
	}

};


// Class OakGame.OakStanceSelector
// 0x00F8 (0x0140 - 0x0048)
class UOakStanceSelector : public UStanceDataSelector
{
public:
	class UStanceDataProvider*                         AICombatStanceProvider;                                   // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGbxBlackboardKeySelector                   AICombatStanceKey;                                        // 0x0050(0x0010) (Edit)
	class UStanceDataProvider*                         AIAlertStanceProvider;                                    // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGbxParam                                   UseAIAlertStance;                                         // 0x0068(0x0080) (Edit)
	class UStanceDataProvider*                         AIFriendlyTargetStanceProvider;                           // 0x00E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGbxBlackboardKeySelector                   AIFriendlyTargetStanceKey;                                // 0x00F0(0x0010) (Edit)
	class UStanceDataProvider*                         AIFlyingStanceProvider;                                   // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGbxBlackboardKeySelector                   AIFlyingStanceKey;                                        // 0x0108(0x0010) (Edit)
	class UStanceDataProvider*                         CrouchingStanceProvider;                                  // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStanceDataProvider*                         SprintingStanceProvider;                                  // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStanceDataProvider*                         InjuredStanceProvider;                                    // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStanceDataProvider*                         InjuredSprintStanceProvider;                              // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStanceDataProvider*                         AIAngryPatrolStanceProvider;                              // 0x0138(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakStanceSelector");
		return ptr;
	}

};


// Class OakGame.OakStatusEffectGlobalsData
// 0x0070 (0x00A0 - 0x0030)
class UOakStatusEffectGlobalsData : public UStatusEffectGlobalsData
{
public:
	TArray<struct FOakResourceEffectData>              OakResourceEffects;                                       // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              ElementalFXMaxHealthScalar;                               // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	class UOakElementalEffectData*                     FireElementalEffectData;                                  // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UOakElementalEffectData*                     ShockElementalEffectData;                                 // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UOakElementalEffectData*                     CorrosiveElementalEffectData;                             // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UOakElementalEffectData*                     RadiationElementalEffectData;                             // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ElementalDeathSelectionThreshold;                         // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	TArray<struct FOakElementalAuraEffectData>         ElementalAuraEffects;                                     // 0x0070(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UOakFreezeData*                              FreezeTypes[0x2];                                         // 0x0080(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FGameplayTag                                NonTransientStatusEffectTag;                              // 0x0090(0x0008) (Edit, DisableEditOnInstance)
	class UParticleSystem*                             StatusEffectParticleSystem;                               // 0x0098(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakStatusEffectGlobalsData");
		return ptr;
	}

};


// Class OakGame.OakStatusEffectManagerComponent
// 0x0528 (0x0758 - 0x0230)
class UOakStatusEffectManagerComponent : public UStatusEffectManagerComponent
{
public:
	bool                                               bResistCryoFreeze;                                        // 0x0230(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x9F];                                      // 0x0231(0x009F) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCryoFreezing;                                           // 0x02D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCryoFrozen;                                             // 0x02E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCryoThawing;                                            // 0x02F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCryoThawed;                                             // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0310(0x0030) MISSED OFFSET
	TArray<struct FCryoFreezeAssetData>                CryoFreezeAssets;                                         // 0x0340(0x0010) (Edit, ZeroConstructor)
	struct FAttributeInitializationData                FreezeFallingDamageScale;                                 // 0x0350(0x0038) (Edit)
	float                                              FreezeNoDamageImpactThreshold;                            // 0x0388(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FreezeFootDownThreshold;                                  // 0x038C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FreezeSupportMeshScale;                                   // 0x0390(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0394(0x0004) MISSED OFFSET
	TArray<struct FName>                               FreezeSupportBones;                                       // 0x0398(0x0010) (Edit, ZeroConstructor)
	uint32_t                                           DestructibleSyncID;                                       // 0x03A8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      RepFreezeData;                                            // 0x03AC(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bSupportCryoFreezeAssets : 1;                             // 0x03AD(0x0001) (Edit)
	unsigned char                                      bCanBuildFreezeSupportMesh : 1;                           // 0x03AD(0x0001) (Edit)
	unsigned char                                      bCanCreateFreezeGroundEffect : 1;                         // 0x03AD(0x0001) (Edit)
	unsigned char                                      bFallOnFrozenDeath : 1;                                   // 0x03AD(0x0001) (Edit)
	unsigned char                                      bFreezePauseAnims : 1;                                    // 0x03AD(0x0001) (Net, Transient)
	EFreezeState                                       FreezeState;                                              // 0x03AE(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EFreezeType                                        FreezeType;                                               // 0x03AF(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       FreezeInstigator;                                         // 0x03B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x98];                                      // 0x03B8(0x0098) MISSED OFFSET
	bool                                               bSupportShieldStatusEffects;                              // 0x0450(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0451(0x0007) MISSED OFFSET
	struct FShieldEffectStateData                      ShieldEffectState;                                        // 0x0458(0x0020) (Net, Transient)
	struct FCSBoosterStatus                            CSBoosterStatusState;                                     // 0x0478(0x0018) (Net, Transient)
	struct FStreamerBoosterStatus                      StreamerBoosterStatusState;                               // 0x0490(0x0018) (Net, Transient)
	bool                                               bShouldShowThirdPersonEffects;                            // 0x04A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bClearAllStatusEffectsOnOwnerDeath;                       // 0x04A9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x04AA(0x0006) MISSED OFFSET
	TArray<class UOakPresentableStatusEffectData*>     UpdatedEffects;                                           // 0x04B0(0x0010) (ZeroConstructor, Transient)
	TArray<struct FActiveOakResourceEffect>            ActiveResourceEffects;                                    // 0x04C0(0x0010) (Net, ZeroConstructor, Transient)
	TArray<struct FOakElementalAuraEffectInstance>     ElementalAuraEffects;                                     // 0x04D0(0x0010) (ZeroConstructor, Transient)
	struct FOakEffectPresentationManager               PresentationManager;                                      // 0x04E0(0x01B8) (Net, Transient)
	unsigned char                                      UnknownData06[0xC0];                                      // 0x0698(0x00C0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakStatusEffectManagerComponent");
		return ptr;
	}


	void UnlockFreezePauseState(const struct FName& Reason);
	void UnlockElementalEffects(const struct FName& Reason);
	void UnlockElementalEffectByType(EOakStatusEffectResourceEffectType Type, const struct FName& Reason);
	void UnlockElementalEffectByDamageType(class UClass* DamageTypeClass, const struct FName& Reason);
	void UnlockCryoFreezePauseState(const struct FName& Reason);
	void TryToFreezeOnActionEnd(EGbxActionEndState EndState);
	void Thawed();
	void Thaw();
	void Shatter(const struct FVector& Origin, float Force, bool bReplicate);
	void SetPrimaryFreezeMesh(class UDestructibleMesh* Mesh);
	void SetPrimaryCryoFreezeMesh(class UDestructibleMesh* Mesh);
	void OnShieldNowNotFull(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldNowNotDepleted(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldNowFull(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldNowDepleted(const struct FGameResourcePoolReference& ResourcePool);
	void OnResourceNowNotFilled(const struct FGameResourcePoolReference& ResourcePool);
	void OnResourceNowNotDepleted(const struct FGameResourcePoolReference& ResourcePool);
	void OnResourceNowFilled(const struct FGameResourcePoolReference& ResourcePool);
	void OnResourceNowDepleted(const struct FGameResourcePoolReference& ResourcePool);
	void OnRep_ShieldEffectState(const struct FShieldEffectStateData& OldState);
	void OnRep_FreezeData();
	void OnOwnerInjured();
	void OnOwnerHealthy();
	void OnOwnerDied();
	void LockFreezePauseState(const struct FName& Reason);
	void LockElementalEffects(const struct FName& Reason);
	void LockElementalEffectByType(EOakStatusEffectResourceEffectType Type, const struct FName& Reason);
	void LockElementalEffectByDamageType(class UClass* DamageTypeClass, const struct FName& Reason);
	void LockCryoFreezePauseState(const struct FName& Reason);
	bool IsFrozen(bool bIncludeTransition);
	bool IsCryoFrozen();
	bool IsAffectedByElementalType(EOakElementalType Type, float Threshold);
	void GetValidFreezePrimitiveComponentNames(TArray<struct FName>* Array);
	float GetThawPercent();
	float GetFreezePercent();
	float GetCryoThawPercent();
	float GetCryoFreezePercent();
	void FrozenDeath(const struct FVector& Momentum, const struct FVector& HitLocation, const struct FVector& HitDirection, float Force, float Radius, int BoneIndex);
	void Frozen();
	void Freeze(bool bInstant, EFreezeType Type);
	void CryoThaw();
	void CryoShatter(const struct FVector& Origin, float Force, bool bReplicate);
	void CryoFrozenDeath(const struct FVector& Momentum, const struct FVector& HitLocation, const struct FVector& HitDirection, float Force, float Radius, int BoneIndex);
	void CryoFreezeEvent__DelegateSignature();
	void CryoFreeze(bool bInstant);
	void ClientUpdateFreezePauseState();
	void ClearAllTransientEffects();
	void ClearAllElementalEffects();
	void BroadcastShatter(const struct FVector& Origin, float Force);
	void ApplyResourceEffectValue(class AController* Instigator, EOakStatusEffectResourceEffectType Type, float InValue);
	void ApplyFreezeFallDamage(const struct FHitResult& Hit);
};


// Class OakGame.OakStatusEffectPresentationData
// 0x00B0 (0x00E0 - 0x0030)
class UOakStatusEffectPresentationData : public UGbxDataAsset
{
public:
	bool                                               bUsesThirdPersonParticles;                                // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FOakStatusEffectPresentation_Particle       ParticlePresentation;                                     // 0x0038(0x0030) (Edit, DisableEditOnInstance)
	bool                                               bUsesScreenParticle;                                      // 0x0068(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	struct FOakStatusEffectPresentation_ScreenParticle ScreenParticlePresentation;                               // 0x0070(0x0020) (Edit, DisableEditOnInstance)
	bool                                               bUsesMaterialParameter;                                   // 0x0090(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0091(0x0007) MISSED OFFSET
	struct FOakStatusEffectPresentation_Material       MaterialPresentation;                                     // 0x0098(0x0028) (Edit, DisableEditOnInstance)
	bool                                               bUsesAudioEvents;                                         // 0x00C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x00C1(0x0007) MISSED OFFSET
	struct FOakStatusEffectPresentation_Audio          AudioPresentation;                                        // 0x00C8(0x0018) (Edit, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakStatusEffectPresentationData");
		return ptr;
	}

};


// Class OakGame.OakStatusEffectsStatics
// 0x0000 (0x0028 - 0x0028)
class UOakStatusEffectsStatics : public UStatusEffectsStatics
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakStatusEffectsStatics");
		return ptr;
	}


	struct FStatusEffectInstanceReference STATIC_TriggerElementalEffect(class AActor* Target, class UClass* DamageType, class AActor* DamageCauser, class AController* InstigatorController, float DamagePerSecond, float ResourceEffectValue, bool bInfiniteDuration);
	void STATIC_ClearAllTransientStatusEffects(class AActor* Target);
	void STATIC_ClearAllElementalEffects(class AActor* Target);
};


// Class OakGame.OakStreamerItemPickup
// 0x0050 (0x0778 - 0x0728)
class AOakStreamerItemPickup : public AOakInventoryItemPickup
{
public:
	class FString                                      FirstDonor;                                               // 0x0728(0x0010) (Net, ZeroConstructor, Transient)
	struct FDonorInfo                                  LargestDonor;                                             // 0x0738(0x0018) (Net, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0750(0x0008) MISSED OFFSET
	class UUIStatData*                                 FirstDonorStatData;                                       // 0x0758(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UUIStatData*                                 LargestDonorStatData;                                     // 0x0760(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class FString                                      DonorTextHTMLColor;                                       // 0x0768(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakStreamerItemPickup");
		return ptr;
	}

};


// Class OakGame.OakStreamingInteractionDirector
// 0x0068 (0x0090 - 0x0028)
class UOakStreamingInteractionDirector : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	class UOakStreamingInteractionManager*             StreamingManager;                                         // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UOakStreamingInteractionEvent*>       EventsPool;                                               // 0x0038(0x0010) (ZeroConstructor, Transient)
	TArray<class UOakStreamingInteractionEvent*>       EventsQueue;                                              // 0x0048(0x0010) (ZeroConstructor, Transient)
	TArray<class UOakStreamingInteractionEvent*>       EventsHistory;                                            // 0x0058(0x0010) (ZeroConstructor, Transient)
	TArray<class UOakStreamingInteractionEvent*>       DirectorTriggeredEventsPool;                              // 0x0068(0x0010) (ZeroConstructor, Transient)
	TArray<class UOakStreamingInteractionEvent*>       CurrentEvents;                                            // 0x0078(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0088(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakStreamingInteractionDirector");
		return ptr;
	}


	void STATIC_RegisterStreamingEvent(class UOakStreamingInteractionEvent* EventToRegister);
};


// Class OakGame.OakStreamingInteractionEvent
// 0x0160 (0x0190 - 0x0030)
class UOakStreamingInteractionEvent : public UGbxDataAsset
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	class FString                                      EVENTTYPE;                                                // 0x0038(0x0010) (Edit, ZeroConstructor)
	EEventTriggerType                                  EventTriggerType;                                         // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	float                                              EventCooldownTime;                                        // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FText                                       EventTitle;                                               // 0x0050(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       EventDescription;                                         // 0x0068(0x0028) (Edit)
	TSoftObjectPtr<class UDialogScriptData>            EventScript;                                              // 0x0080(0x0028) (Edit)
	struct FText                                       BeginEventMessage;                                        // 0x00A8(0x0028) (Edit)
	struct FDialogTimeSlotReference                    BeginEventDialog;                                         // 0x00C0(0x0040) (Edit)
	struct FText                                       EndEventMessage;                                          // 0x0100(0x0028) (Edit)
	struct FDialogTimeSlotReference                    EndEventDialog;                                           // 0x0118(0x0040) (Edit)
	float                                              FallbackTimerDuration;                                    // 0x0158(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FallbackTimer;                                            // 0x015C(0x0004) (ZeroConstructor, IsPlainOldData)
	int64_t                                            InitializeTimestamp;                                      // 0x0160(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int64_t                                            LastActivationTimestamp;                                  // 0x0168(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int64_t                                            EventStartedTimestampEBS;                                 // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bBackendAcknowledged;                                     // 0x0178(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0179(0x0003) MISSED OFFSET
	uint32_t                                           EventID;                                                  // 0x017C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	EEndEventReasons                                   EndEventReason;                                           // 0x0180(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0180(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData04[0x4];                                       // 0x0184(0x0004) MISSED OFFSET
	class UOakStreamingInteractionManager*             StreamingMgr;                                             // 0x0188(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakStreamingInteractionEvent");
		return ptr;
	}


	void EndEventFallback();
};


// Class OakGame.OakStreamingInteractionEvent_EnemySpawn
// 0x0330 (0x04C0 - 0x0190)
class UOakStreamingInteractionEvent_EnemySpawn : public UOakStreamingInteractionEvent
{
public:
	struct FGameplayTagContainer                       AllowedTags;                                              // 0x0190(0x0020) (Edit)
	struct FGameplayTagContainer                       DisallowedTags;                                           // 0x01B0(0x0020) (Edit)
	int                                                NbOfKillsBeforeActivation;                                // 0x01D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxEventDuration;                                         // 0x01D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JoinTimerDuration;                                        // 0x01D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EnemyInfoUpdateTimer;                                     // 0x01DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UInWorldIconData*                            EnemyWorldIconData;                                       // 0x01E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<TSoftObjectPtr<class UClass>>               BlacklistedEnemyClasses;                                  // 0x01E8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class UGbxUIName>>           BlacklistedUINames;                                       // 0x01F8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FPollActionInfo                             SpawnAction;                                              // 0x0208(0x0060) (Edit)
	struct FText                                       PlayerWonEndEvent;                                        // 0x0268(0x0028) (Edit)
	struct FDialogTimeSlotReference                    PlayerWonEndEventDialog;                                  // 0x0280(0x0040) (Edit)
	struct FText                                       NeutralEndEvent;                                          // 0x02C0(0x0028) (Edit)
	struct FDialogTimeSlotReference                    NeutralEndEventDialog;                                    // 0x02D8(0x0040) (Edit)
	struct FText                                       PlayerLostEndEvent;                                       // 0x0318(0x0028) (Edit)
	struct FDialogTimeSlotReference                    PlayerLostEventDialog;                                    // 0x0330(0x0040) (Edit)
	float                                              PollTimerDuration;                                        // 0x0370(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenPollsTimerDuration;                            // 0x0374(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxItemInPoll;                                            // 0x0378(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x037C(0x0004) MISSED OFFSET
	TArray<struct FPollActionInfo>                     PollAvailableActions;                                     // 0x0380(0x0010) (Edit, ZeroConstructor)
	struct FText                                       SpawnWait;                                                // 0x0390(0x0028) (Edit)
	struct FText                                       PollStarted;                                              // 0x03A8(0x0028) (Edit)
	struct FText                                       PollSelected;                                             // 0x03C0(0x0028) (Edit)
	struct FText                                       PollEnded;                                                // 0x03D8(0x0028) (Edit)
	struct FText                                       EventWin;                                                 // 0x03F0(0x0028) (Edit)
	struct FText                                       EventLose;                                                // 0x0408(0x0028) (Edit)
	struct FText                                       EventDraw;                                                // 0x0420(0x0028) (Edit)
	struct FText                                       EventMapExited;                                           // 0x0438(0x0028) (Edit)
	struct FText                                       EventTimeout;                                             // 0x0450(0x0028) (Edit)
	int                                                NbSpawner;                                                // 0x0468(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                LastActivationKillCount;                                  // 0x046C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	class AGbxCharacter*                               EventEnemy;                                               // 0x0470(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class FString                                      EnemyViewerName;                                          // 0x0478(0x0010) (ZeroConstructor, Transient)
	TArray<class AActor*>                              SpawnerRefArray;                                          // 0x0488(0x0010) (ZeroConstructor, Transient)
	TArray<class UOakMissionIconComponent*>            DebugSpawnerWaypoints;                                    // 0x0498(0x0010) (ExportObject, ZeroConstructor, Transient)
	int                                                PollID;                                                   // 0x04A8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x04AC(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakStreamingInteractionEvent_EnemySpawn");
		return ptr;
	}


	void SetEnemy(class AGbxCharacter* Enemy);
	void OnPlayerDead();
	void OnEnemySuspend(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void OnEnemySpawned(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void OnEnemyDied(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
};


// Class OakGame.OakStreamingInteractionEvent_Lootable
// 0x0108 (0x0298 - 0x0190)
class UOakStreamingInteractionEvent_Lootable : public UOakStreamingInteractionEvent
{
public:
	TArray<TSoftObjectPtr<class ULootableBalanceData>> LootableFilterBalanceData;                                // 0x0190(0x0010) (Edit, ZeroConstructor)
	TArray<TSoftObjectPtr<class UInventoryCategoryData>> AcceptedItemCategories;                                   // 0x01A0(0x0010) (Edit, ZeroConstructor)
	float                                              SweepstakesDuration;                                      // 0x01B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PrizeSelectionDuration;                                   // 0x01B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FallbackTimerAdditionalTime;                              // 0x01B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01BC(0x0004) MISSED OFFSET
	struct FText                                       PrizeSelectionWin;                                        // 0x01C0(0x0028) (Edit)
	struct FText                                       PrizeSelectionLose;                                       // 0x01D8(0x0028) (Edit)
	struct FText                                       PrizeSelectionTimeout;                                    // 0x01F0(0x0028) (Edit)
	struct FText                                       PrizeSelectionSent;                                       // 0x0208(0x0028) (Edit)
	struct FText                                       PrizeSelectionEnd;                                        // 0x0220(0x0028) (Edit)
	bool                                               bEnabledInGearUpGameMode;                                 // 0x0238(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0239(0x0007) MISSED OFFSET
	struct FOakThumbnailManagerConfig                  ThumbnailMgrConfig;                                       // 0x0240(0x0018) (Edit, DisableEditOnInstance)
	TArray<struct FLootableEventResultItem>            LootItems;                                                // 0x0258(0x0010) (ZeroConstructor, Transient)
	class UUIGlobals*                                  UIGlobals;                                                // 0x0268(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakThumbnailManager*                        ThumbnailMgr;                                             // 0x0270(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FMinimalInventoryInfo>               ThumbnailInfo;                                            // 0x0278(0x0010) (ZeroConstructor, Transient)
	int                                                ThumbnailGenerationIdx;                                   // 0x0288(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x028C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakStreamingInteractionEvent_Lootable");
		return ptr;
	}


	void OnThumbnailLoaded();
	void OnLootableSpawned(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void OnLootableObjectEventOpened(class ALootableObject* LootableObject);
	void OnLootableDied(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
};


// Class OakGame.OakStreamingInteractionEvent_Extraction
// 0x0008 (0x02A0 - 0x0298)
class UOakStreamingInteractionEvent_Extraction : public UOakStreamingInteractionEvent_Lootable
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0298(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakStreamingInteractionEvent_Extraction");
		return ptr;
	}


	void OnExtractorUnavailable(class AOakUIGearUpExtractionAIO* Extractor);
	void OnExtractionInitiated(class AOakUIGearUpExtractionAIO* Extractor, TArray<TWeakObjectPtr<class AActor>>* ItemsToExtract);
};


// Class OakGame.OakStreamingInteractionEvent_MoxxisDrink
// 0x03E8 (0x0578 - 0x0190)
class UOakStreamingInteractionEvent_MoxxisDrink : public UOakStreamingInteractionEvent
{
public:
	struct FText                                       MsgWhenReceivingDonation;                                 // 0x0190(0x0028) (Edit)
	struct FText                                       DrinkSelectInfo;                                          // 0x01A8(0x0028) (Edit)
	struct FDialogTimeSlotReference                    DonationDialog;                                           // 0x01C0(0x0040) (Edit)
	struct FDialogTimeSlotReference                    TopTierDonationDialog;                                    // 0x0200(0x0040) (Edit)
	struct FText                                       FirstDonator;                                             // 0x0240(0x0028) (Edit)
	struct FText                                       BiggestDonator;                                           // 0x0258(0x0028) (Edit)
	struct FText                                       LatestDonator;                                            // 0x0270(0x0028) (Edit)
	struct FText                                       GiveTip;                                                  // 0x0288(0x0028) (Edit)
	struct FText                                       TotalTip;                                                 // 0x02A0(0x0028) (Edit)
	struct FText                                       DisplayTip;                                               // 0x02B8(0x0028) (Edit)
	struct FText                                       TipJarTitle;                                              // 0x02D0(0x0028) (Edit)
	struct FText                                       EventInitiatorDesc;                                       // 0x02E8(0x0028) (Edit)
	struct FText                                       EventRunningDesc;                                         // 0x0300(0x0028) (Edit)
	struct FText                                       EventOverclockText;                                       // 0x0318(0x0028) (Edit)
	TSoftObjectPtr<class UClass>                       DrinkClass;                                               // 0x0330(0x0028) (Edit)
	struct FEnvQueryParams                             DrinkSpawnLocationParams;                                 // 0x0358(0x00B8) (Edit)
	int                                                MaxSpawnAttempt;                                          // 0x0410(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DigistructDuration;                                       // 0x0414(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  MoxxiEventDataTable;                                      // 0x0418(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxEventDuration;                                         // 0x0420(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenEventInfoUpdate;                               // 0x0424(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaximumTimeBetweenDonations;                              // 0x0428(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              DefaultTimeBetweenDonations;                              // 0x042C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EventHardCooldownDuration;                                // 0x0430(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0434(0x0004) MISSED OFFSET
	TArray<struct FDonationTier>                       EventTiers;                                               // 0x0438(0x0010) (Edit, ZeroConstructor)
	TArray<struct FBitProduct>                         BitProducts;                                              // 0x0448(0x0010) (Edit, ZeroConstructor)
	class UStreamerBoosterData*                        StreamerBoosterData;                                      // 0x0458(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PollTimerDuration;                                        // 0x0460(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxItemInPoll;                                            // 0x0464(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FPollActionInfo>                     PollAvailableActions;                                     // 0x0468(0x0010) (Edit, ZeroConstructor)
	struct FText                                       PollStarted;                                              // 0x0478(0x0028) (Edit)
	struct FText                                       PollSelected;                                             // 0x0490(0x0028) (Edit)
	struct FText                                       PollEnded;                                                // 0x04A8(0x0028) (Edit)
	class UClass*                                      DrinkClassRef;                                            // 0x04C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AStreamerLootableObject*                     MoxxisChestActor;                                         // 0x04C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                NumberOfDonations;                                        // 0x04D0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                DonationTotalBits;                                        // 0x04D4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              EndOfDonationTimer;                                       // 0x04D8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              TierDuration;                                             // 0x04DC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int64_t                                            TierStartedTimestampGame;                                 // 0x04E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              HardEventCooldownTimer;                                   // 0x04E8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bDonationDone;                                            // 0x04EC(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x04ED(0x0003) MISSED OFFSET
	struct FBitProduct                                 MinBitProductToStart;                                     // 0x04F0(0x0040) (Transient)
	TArray<float>                                      EventTiersBits;                                           // 0x0530(0x0010) (ZeroConstructor, Transient)
	TArray<struct FDonator>                            Donators;                                                 // 0x0540(0x0010) (ZeroConstructor, Transient)
	class FString                                      LatestDonatorName;                                        // 0x0550(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0560(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakStreamingInteractionEvent_MoxxisDrink");
		return ptr;
	}


	class FString GetSelectionTextByClass(TSoftObjectPtr<class UClass> PollActionClass, int Rank, int Tier, int Percent);
	void FakeSpawnMoxxisDrink();
	void FakeMoxxisDrinkAction(TSoftObjectPtr<class UClass> PollActionClass, float ActionValue);
};


// Class OakGame.OakStreamingInteractionEvent_Pinata
// 0x01C8 (0x0358 - 0x0190)
class UOakStreamingInteractionEvent_Pinata : public UOakStreamingInteractionEvent
{
public:
	TSoftObjectPtr<class UClass>                       PinataClass;                                              // 0x0190(0x0028) (Edit)
	struct FEnvQueryParams                             PinataSpawnLocationParams;                                // 0x01B8(0x00B8) (Edit)
	int                                                MaxSpawnAttempt;                                          // 0x0270(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxEventDuration;                                         // 0x0274(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PollTimerDuration;                                        // 0x0278(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxItemInPoll;                                            // 0x027C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FPollActionInfo>                     PollAvailableActions;                                     // 0x0280(0x0010) (Edit, ZeroConstructor)
	struct FPollActionInfo                             NoViewersAction;                                          // 0x0290(0x0060) (Edit)
	struct FText                                       PollStarted;                                              // 0x02F0(0x0028) (Edit)
	struct FText                                       PollSelected;                                             // 0x0308(0x0028) (Edit)
	struct FText                                       PollEnded;                                                // 0x0320(0x0028) (Edit)
	class UClass*                                      PinataClassRef;                                           // 0x0338(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      PinataActor;                                              // 0x0340(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0348(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakStreamingInteractionEvent_Pinata");
		return ptr;
	}


	void SetPinata(class AActor* NewPinataActor);
	void HandleLevelChanged(int OldLevel, int NewLevel);
};


// Class OakGame.OakStreamingInteractionGlobals
// 0x0120 (0x0150 - 0x0030)
class UOakStreamingInteractionGlobals : public UGbxDataAsset
{
public:
	TArray<class UOakStreamingInteractionEvent*>       GeneralEvents;                                            // 0x0030(0x0010) (Edit, ZeroConstructor)
	float                                              TimeBetweenCharacterProfileUpdateSteps;                   // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AddedTimeForUpdateStepsDuringEvents;                      // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxInventoryItemsPerUpdate;                               // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UDialogScriptData>            GeneralStreamingInteractionScript;                        // 0x0050(0x0028) (Edit)
	struct FDialogTimeSlotReference                    InteractionStartDialog;                                   // 0x0078(0x0040) (Edit)
	struct FText                                       StartInteractionTitle;                                    // 0x00B8(0x0028) (Edit)
	struct FText                                       StartInteractionDesc;                                     // 0x00D0(0x0028) (Edit)
	struct FText                                       PoolResultFormat;                                         // 0x00E8(0x0028) (Edit)
	struct FOakThumbnailManagerConfig                  ThumbnailMgrConfig;                                       // 0x0100(0x0018) (Edit)
	float                                              DirectorTriggeredEventsCheckTimer;                        // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MoxxiBuffDurationSeconds;                                 // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TSoftObjectPtr<class UStreamerBoosterData>         StreamerBoosterData;                                      // 0x0120(0x0028) (Edit, DisableEditOnInstance)
	bool                                               bForceMoxxiEventDisabled;                                 // 0x0148(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0149(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakStreamingInteractionGlobals");
		return ptr;
	}

};


// Class OakGame.OakStreamingInteractionManager
// 0x02D8 (0x0300 - 0x0028)
class UOakStreamingInteractionManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0028(0x0030) MISSED OFFSET
	bool                                               bMoxxiEventHardCooldown;                                  // 0x0058(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x97];                                      // 0x0059(0x0097) MISSED OFFSET
	class UOakGameInstance*                            GameInstance;                                             // 0x00F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakStreamingInteractionDirector*            StreamingInteractionDirector;                             // 0x00F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AStreamingEventDispatcher*                   StreamingEventDispatcher;                                 // 0x0100(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakThumbnailManager*                        ThumbnailMgr;                                             // 0x0108(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<int>                                        ThumbnailNeededArray;                                     // 0x0110(0x0010) (ZeroConstructor, Transient)
	int                                                ThumbnailGenerationIdx;                                   // 0x0120(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0124(0x0004) MISSED OFFSET
	TMap<class FString, class FString>                 ThumbnailsToSend;                                         // 0x0128(0x0050) (ZeroConstructor, Transient)
	class UUIGlobals*                                  UIGlobals;                                                // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakStreamingInteractionGlobals*             StreamingGlobals;                                         // 0x0180(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              TimeBetweenCharacterProfileUpdateSteps;                   // 0x0188(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              AddedTimeForUpdateStepsDuringEvents;                      // 0x018C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                MaxInventoryItemsPerUpdate;                               // 0x0190(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              CharacterProfileUpdateTimer;                              // 0x0194(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FMinimalCharacterInfo                       SharedCharacterInfo;                                      // 0x0198(0x0158) (Transient)
	bool                                               bIncreasedChanceForSubscribers;                           // 0x02F0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x02F1(0x0003) MISSED OFFSET
	int                                                UpdateID;                                                 // 0x02F4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                InventoryUpdateID;                                        // 0x02F8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                SkillTreeUpdateID;                                        // 0x02FC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakStreamingInteractionManager");
		return ptr;
	}


	void OnThumbnailLoaded();
	void OnStreamingSessionStatsUpdated(const struct FOakInteractiveSessionStats& UpdatedSessionStats);
	class UOakStreamingInteractionManager* STATIC_GetStreamingInteractionManager();
	void STATIC_DisplayTimedMessageBPCall(const struct FText& Title, const struct FText& Description, float Duration, class AOakPlayerController* OwnerPC);
	void STATIC_DebugStartStreamingInteraction();
	void STATIC_DebugInitStreamingService(const class FString& DebugExtensionClientID);
	void STATIC_DebugFakeStreamingEventPoolResult(const class FString& EventName, int ActionID, int ActionValue);
	void STATIC_DebugFakeStreamingEvent(const class FString& EventName);
	void STATIC_DebugFakeIsStreaming(bool bFakeIsStreaming);
};


// Class OakGame.OakSubtitleManager
// 0x0050 (0x0078 - 0x0028)
class UOakSubtitleManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0028(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakSubtitleManager");
		return ptr;
	}

};


// Class OakGame.OakThroughCollisionHandlerInterface
// 0x0000 (0x0028 - 0x0028)
class UOakThroughCollisionHandlerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakThroughCollisionHandlerInterface");
		return ptr;
	}

};


// Class OakGame.OakThumbnailManager
// 0x00D0 (0x00F8 - 0x0028)
class UOakThumbnailManager : public UObject
{
public:
	TArray<class UTextureRenderTarget2D*>              ReusableRenderTargets;                                    // 0x0028(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0038(0x0008) MISSED OFFSET
	struct FOakThumbnailManagerConfig                  Config;                                                   // 0x0040(0x0018) (Transient)
	unsigned char                                      UnknownData01[0x90];                                      // 0x0058(0x0090) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnThumbnailLoaded;                                        // 0x00E8(0x0010) (ZeroConstructor, Transient, InstancedReference)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakThumbnailManager");
		return ptr;
	}


	void OnStreamedTextureLoaded();
};


// Class OakGame.OakTravelStationTracker
// 0x0040 (0x0588 - 0x0548)
class AOakTravelStationTracker : public ATravelStationTracker
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0548(0x0020) MISSED OFFSET
	TArray<class UPlanetData*>                         HostDiscoveredPlanets;                                    // 0x0568(0x0010) (Net, ZeroConstructor, Transient)
	bool                                               bFastTravelAvailable;                                     // 0x0578(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0579(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakTravelStationTracker");
		return ptr;
	}


	void STATIC_UnlockFastTravelStation(class UObject* WorldContextObject, class AOakPlayerController* UnlockPlayer, class UFastTravelStationData* TravelStation, bool bBypassDependencies);
	void SetFastTravelAvailable(bool bAvailable);
	void OnRep_HostDiscoveredPlanets();
	void OnRep_FastTravelAvailable();
	void OnFastTravelLockoutTimer();
	void STATIC_LockOutFastTravelAvailable(class UObject* WorldContextObject, float LockOutTime);
};


// Class OakGame.OakTriggerCapsule
// 0x0028 (0x0488 - 0x0460)
class AOakTriggerCapsule : public ATriggerCapsule
{
public:
	class UOakTriggerComponent*                        TriggerComponent;                                         // 0x0460(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    TouchedTrigger;                                           // 0x0468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    UnTouchedTrigger;                                         // 0x0478(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakTriggerCapsule");
		return ptr;
	}


	void NotifyTriggerUntouched(class AActor* OtherActor, bool bIsPlayer);
	void NotifyTriggerTouched(class AActor* OtherActor, bool bIsPlayer);
};


// Class OakGame.OakTriggerComponent
// 0x0090 (0x0208 - 0x0178)
class UOakTriggerComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0178(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    TouchedTrigger;                                           // 0x0180(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    UnTouchedTrigger;                                         // 0x0190(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    AllPlayersTouchingTrigger;                                // 0x01A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	int                                                MaxTriggerEvents;                                         // 0x01B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01B4(0x0004) MISSED OFFSET
	float                                              TriggerDelay;                                             // 0x01B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x01BC(0x0004) MISSED OFFSET
	class UGbxCondition*                               EnabledCondition;                                         // 0x01C0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bPlayerInstigatedEventsOnly;                              // 0x01C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseSelfAsSecondContext;                                  // 0x01C9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x01CA(0x0006) MISSED OFFSET
	class UGbxCondition*                               ActorCanTriggerCondition;                                 // 0x01D0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bEnabled;                                                 // 0x01D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x01D9(0x0007) MISSED OFFSET
	TArray<struct FName>                               ValidComponentNames;                                      // 0x01E0(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData05[0x8];                                       // 0x01F0(0x0008) MISSED OFFSET
	TArray<class UPrimitiveComponent*>                 TrackedTouchPrimitives;                                   // 0x01F8(0x0010) (ExportObject, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakTriggerComponent");
		return ptr;
	}


	void ResetTrigger();
	void NotifyActorComponentEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void NotifyActorComponentBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void HandleTriggerEvents(class AActor* OtherActor, EOakTriggerComponentEventType EVENTTYPE, class UPrimitiveComponent* OptionalTouchedComponent);
	void GetValidComponentNames(TArray<struct FName>* ComponentNames);
	void EnableTrigger(bool bEnableTrigger);
};


// Class OakGame.OakTriggerKillIronBearComponent
// 0x0000 (0x0178 - 0x0178)
class UOakTriggerKillIronBearComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakTriggerKillIronBearComponent");
		return ptr;
	}


	void OwnerTriggerTouched(class AActor* TouchingActor, bool bIsPlayer, class UActorComponent* ComponentTouched);
};


// Class OakGame.OakTurretMovementComponent
// 0x0020 (0x0320 - 0x0300)
class UOakTurretMovementComponent : public UTurretMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0300(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakTurretMovementComponent");
		return ptr;
	}

};


// Class OakGame.OakUIActorContainer
// 0x0080 (0x04D8 - 0x0458)
class AOakUIActorContainer : public AActor
{
public:
	class USceneComponent*                             SceneComponent;                                           // 0x0458(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USocketComponent*                            PreviewActorSocket;                                       // 0x0460(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTextureCube*                                PreviewCubeMap;                                           // 0x0468(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DefaultAmbientCubeMapIntensity;                           // 0x0470(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bHideFirstPersonMesh;                                     // 0x0474(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawPreviewInForeground;                                 // 0x0475(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDrawForOwnerOnly;                                        // 0x0476(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bTickWhilePaused;                                         // 0x0477(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bForceLOD0;                                               // 0x0478(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bForceDisableURO;                                         // 0x0479(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bHideWhenMenuStackHidden;                                 // 0x047A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x047B(0x0001) MISSED OFFSET
	float                                              SelfBoundsScale;                                          // 0x047C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       PreviewActor;                                             // 0x0480(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TSoftObjectPtr<class UClass>                       PreviewLoadClass;                                         // 0x0488(0x0028) (Transient)
	unsigned char                                      UnknownData01[0x28];                                      // 0x04B0(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakUIActorContainer");
		return ptr;
	}

};


// Class OakGame.OakUIChallengeDataProvider
// 0x0078 (0x00A0 - 0x0028)
class UOakUIChallengeDataProvider : public UObject
{
public:
	class FString                                      CompletedChallengeColor;                                  // 0x0028(0x0010) (Edit, ZeroConstructor)
	class UChallengeCategoryData*                      FallbackDisplaySortCategory;                              // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UChallengeCategoryData*                      GalacticChallengesCategory;                               // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0048(0x0018) MISSED OFFSET
	TWeakObjectPtr<class AOakPlayerController>         OakPCOwner;                                               // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AChallengeManager>            ChallengeManager;                                         // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UChallengesComponent>         ChallengesComponent;                                      // 0x0070(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<struct FOakUIChallengeListData>             ChallengeListData;                                        // 0x0078(0x0010) (ZeroConstructor, Transient)
	TWeakObjectPtr<class UPlanetData>                  CurrentPlanetData;                                        // 0x0088(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UZoneMapData>                 CurrentZoneData;                                          // 0x0090(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bShowDiscoveredLocationsOnly;                             // 0x0098(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0099(0x0003) MISSED OFFSET
	EOakUIChallengeDataProviderPopulateType            CurrentPopulateType;                                      // 0x009C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0099(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakUIChallengeDataProvider");
		return ptr;
	}


	void OnChallengeUpdated(class UChallengesComponent* Component, class UClass* ChallengeClass, int NewValue, bool bDisplayNotification, bool bCompleted);
	void OnChallengeCompleted(class UChallengesComponent* Component, class UClass* ChallengeClass);
	void OnChallengeChildCompleted(class UChallengesComponent* Component, class UClass* ChallengeClass);
	void OnChallengeActivated(class UChallengesComponent* Component, class UClass* ChallengeClass);
};


// Class OakGame.GFxChallengeMenuCell
// 0x00E0 (0x03F0 - 0x0310)
class UGFxChallengeMenuCell : public UGbxGFxListCell
{
public:
	unsigned char                                      UnknownData00[0xB8];                                      // 0x0310(0x00B8) MISSED OFFSET
	class UGbxGFxObject*                               CompletedCheck;                                           // 0x03C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxProgressBar*                          ProgressBar;                                              // 0x03D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               ProgressText;                                             // 0x03D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UGbxTextField*                               RankText;                                                 // 0x03E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x03E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GFxChallengeMenuCell");
		return ptr;
	}

};


// Class OakGame.OakUIGearUpInterface
// 0x0000 (0x0028 - 0x0028)
class UOakUIGearUpInterface : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakUIGearUpInterface");
		return ptr;
	}

};


// Class OakGame.OakUIGearUpExtractionAIO
// 0x0038 (0x0698 - 0x0660)
class AOakUIGearUpExtractionAIO : public AAdvancedInteractiveObject
{
public:
	struct FScriptMulticastDelegate                    OnGearUpOfferingsUpdated;                                 // 0x0660(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	int                                                NumOfferingsLeft;                                         // 0x0670(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0674(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnExtractionInitiated;                                    // 0x0678(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnExtractorUnavailable;                                   // 0x0688(0x0010) (ZeroConstructor, InstancedReference)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakUIGearUpExtractionAIO");
		return ptr;
	}

};


// Class OakGame.OakUIGearUpExtractionAIOProxy
// 0x0000 (0x04E8 - 0x04E8)
class AOakUIGearUpExtractionAIOProxy : public AAdvancedInteractiveObjectProxy
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakUIGearUpExtractionAIOProxy");
		return ptr;
	}

};


// Class OakGame.OakUILibrary
// 0x0000 (0x0028 - 0x0028)
class UOakUILibrary : public UGbxUILibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakUILibrary");
		return ptr;
	}


	void STATIC_TriggerFastTravelTutorial(class UGameInstance* GameInstance);
	bool STATIC_SetGamePaused(class UObject* ContextObject, bool bPause);
	void STATIC_RemoveTutorialMessageForPlayer(class UGameInstance* GameInstance, class AOakPlayerController* TargetPlayer, class UTutorialMessageDataAsset* MessageData);
	void STATIC_RemoveTutorialMessageForAllPlayers(class UGameInstance* GameInstance, class UTutorialMessageDataAsset* MessageData);
	void STATIC_PushMenuForAllPlayers(class UGameInstance* GameInstance, class UGbxMenuData* MenuData);
	TScriptInterface<class UGbxMenu> STATIC_PushMenu(class AOakPlayerController* PlayerController, class UGbxMenuData* MenuData);
	void STATIC_PopulateInventoryListFromInventoryList(class UInventoryListComponent* InventoryList, class UInventoryCategoryData* InventoryFilter, TArray<struct FOakUIInventoryItemDisplayInfo>* ListToPopulate);
	void STATIC_PopulateInventoryListFromCharacter(class AOakCharacter* OakCharacter, class UInventoryCategoryData* InventoryFilter, TArray<struct FOakUIInventoryItemDisplayInfo>* ListToPopulate);
	bool STATIC_IsGamePaused(class UObject* ContextObject);
	struct FOakUIInventoryItemDisplayInfo STATIC_GetInventoryDisplayInfoForActor(class AActor* InActor, class UInventoryListComponent* Inventory);
	void STATIC_CloseMenuForAllPlayers(class UGameInstance* GameInstance, class UGbxMenuData* MenuData);
	void STATIC_CloseAllMenusForAllPlayers(class UGameInstance* GameInstance);
	void STATIC_AddTutorialMessageForPlayer(class UGameInstance* GameInstance, class AOakPlayerController* TargetPlayer, class UTutorialMessageDataAsset* MessageData);
	void STATIC_AddTutorialMessageForAllPlayers(class UGameInstance* GameInstance, class UTutorialMessageDataAsset* MessageData);
	void STATIC_AddModalTutorialMessageForPlayer(class UGameInstance* GameInstance, class AOakPlayerController* TargetPlayer, class UGFxModalTutorialDataAsset* MessageData);
	void STATIC_AddModalTutorialMessageForAllPlayers(class UGameInstance* GameInstance, class UGFxModalTutorialDataAsset* MessageData);
};


// Class OakGame.OakUISDUVendorInventoryType
// 0x0018 (0x0048 - 0x0030)
class UOakUISDUVendorInventoryType : public UGbxDataAsset
{
public:
	EInventoryListType                                 InventoryType;                                            // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class FString                                      ItemCardIconFrameName;                                    // 0x0038(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakUISDUVendorInventoryType");
		return ptr;
	}

};


// Class OakGame.OakUIVirtualBackpackCell
// 0x0000 (0x06D0 - 0x06D0)
class UOakUIVirtualBackpackCell : public UGFxInventoryItemWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakUIVirtualBackpackCell");
		return ptr;
	}

};


// Class OakGame.OakUsableComponent
// 0x0008 (0x03B8 - 0x03B0)
class UOakUsableComponent : public UUsableComponent
{
public:
	bool                                               bForDisplayOnly;                                          // 0x03B0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x03B1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakUsableComponent");
		return ptr;
	}

};


// Class OakGame.OakUseComponent
// 0x0050 (0x05F0 - 0x05A0)
class UOakUseComponent : public UUseComponent
{
public:
	float                                              PickupInteractionDistance;                                // 0x05A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TouchPickupInteractDistance;                              // 0x05A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VehicleTouchPickupInteractDistance;                       // 0x05A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x05AC(0x0004) MISSED OFFSET
	class AOakInventoryItemPickup*                     CurrentlySelectedPickup;                                  // 0x05B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FPickupEvaluationResult                     LastPickupResult;                                         // 0x05B8(0x0010) (Transient)
	struct FTouchPickupEvaluationResult                LastTouchPickupResult;                                    // 0x05C8(0x0010) (Transient)
	unsigned char                                      UnknownData01[0x18];                                      // 0x05D8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakUseComponent");
		return ptr;
	}


	bool CanRouteInputToCurrentUsable(EUsabilityType Type);
};


// Class OakGame.OakUseTrigger
// 0x0018 (0x0478 - 0x0460)
class AOakUseTrigger : public ATriggerSphere
{
public:
	class UUsableComponent*                            UsableComponent;                                          // 0x0460(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnUsedTrigger;                                            // 0x0468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakUseTrigger");
		return ptr;
	}


	void NotifyTriggerUsed(class AController* UsingActor);
};


// Class OakGame.OakVaultCardRewardData
// 0x0100 (0x0130 - 0x0030)
class UOakVaultCardRewardData : public UGbxDataAsset
{
public:
	struct FText                                       VaultCardDisplayName;                                     // 0x0030(0x0028) (Edit, DisableEditOnInstance)
	class FString                                      VaultCardNavBarFrameName;                                 // 0x0048(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FColor                                      ActiveCardTint;                                           // 0x0058(0x0004) (Edit, IsPlainOldData)
	struct FColor                                      InactiveCardTint;                                         // 0x005C(0x0004) (Edit, IsPlainOldData)
	class UItemPoolData*                               ChestItemPool;                                            // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInventoryCategoryData*                      VaultCardKey;                                             // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FVaultCardGearRewardData>            VaultCardGearRewards;                                     // 0x0070(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FVaultCardColumnData>                VaultCardRewardColumns;                                   // 0x0080(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UChallengeList*>                      VaultCardChallengeLists;                                  // 0x0090(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	uint32_t                                           VaultCardID;                                              // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	TSoftObjectPtr<class UTexture>                     VaultCardIconTexture;                                     // 0x00A8(0x0028) (Edit)
	TSoftObjectPtr<class UTexture>                     VaultCardBannerTexture;                                   // 0x00D0(0x0028) (Edit)
	TSoftObjectPtr<class UTexture>                     VaultCardKeyTexture;                                      // 0x00F8(0x0028) (Edit)
	uint32_t                                           AssociatedVaultCardID;                                    // 0x0120(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0124(0x0004) MISSED OFFSET
	class UDownloadableExpansionData*                  VaultCardExpansionData;                                   // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVaultCardRewardData");
		return ptr;
	}

};


// Class OakGame.OakVehicle
// 0x0E20 (0x1398 - 0x0578)
class AOakVehicle : public AVehicle
{
public:
	unsigned char                                      UnknownData00[0xC0];                                      // 0x0578(0x00C0) MISSED OFFSET
	class UTargetableComponent*                        TargetableComponent;                                      // 0x0638(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOakDamageComponent*                         DamageComponent;                                          // 0x0640(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOakDamageCauserComponent*                   DamageCauserComponent;                                    // 0x0648(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOakStatusEffectManagerComponent*            StatusEffectManagerComponent;                             // 0x0650(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOakMinimapIconComponent*                    MinimapIconComponent;                                     // 0x0658(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGameResourcePoolManagerComponent*           ResourcePoolComponent;                                    // 0x0660(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UVehicleSeatComponent*                       PrimarySeatComponent;                                     // 0x0668(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UClass*                                      InputComponentClass;                                      // 0x0670(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	class UClass*                                      ClassicModeInputComponentClass;                           // 0x0678(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	TArray<struct FVehicleInputParams>                 VehicleInputModes;                                        // 0x0680(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UVehicleEffectsComponent*                    VehicleEffectsComponent;                                  // 0x0690(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UWheeledVehicleMovementComponent*            WheeledMovementComponent;                                 // 0x0698(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWheeledVehicleMovementComponentNW*          WheeledMovementComponentNW;                               // 0x06A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UVehicleAirControlComponent*                 VehicleAirControlComponent;                               // 0x06A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UVehicleHoverComponent*                      VehicleHoverComponent;                                    // 0x06B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UVehicleBoostComponent*                      BoostComponent;                                           // 0x06B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UVehicleDigiThrustComponent*                 DigiThrustComponent;                                      // 0x06C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UVehiclePowerSlideComponent*                 PowerSlideComponent;                                      // 0x06C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UActiveWeaponsComponent*                     WeaponsComponent;                                         // 0x06D0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UBodyWeaponHoldManagerComponent*             BodyWeaponHoldManager;                                    // 0x06D8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UVehicleSeatComponent*>               SeatComponents;                                           // 0x06E0(0x0010) (ExportObject, Net, ZeroConstructor, Transient)
	TArray<struct FVehicleOccupantLoopingFeedback>     LoopingFeedback;                                          // 0x06F0(0x0010) (ZeroConstructor, Transient)
	float                                              SpeedometerMaxSpeedToDisplayMPH;                          // 0x0700(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SkelAndPSCompOptimDistance;                               // 0x0704(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDisableAIUseSlot;                                        // 0x0708(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDebugDrift;                                              // 0x0709(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x070A(0x0006) MISSED OFFSET
	struct FName                                       DriftSocketName;                                          // 0x0710(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinSpeedToDrift;                                          // 0x0718(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LeftDriftMinAngle;                                        // 0x071C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RightDriftMinAngle;                                       // 0x0720(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0724(0x0004) MISSED OFFSET
	class UGameStatData*                               KillStat;                                                 // 0x0728(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 RPMCurve;                                                 // 0x0730(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpeed;                                                 // 0x0738(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RPMCutoffIncreasePerSec;                                  // 0x073C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TimeDriftingToActivateRPMCutoff;                          // 0x0740(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bBypassAirborneBlendedRPM;                                // 0x0744(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0745(0x0003) MISSED OFFSET
	float                                              RPMInAirBlendTime;                                        // 0x0748(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RPMBlendTime;                                             // 0x074C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RPMTresholdStartBlend;                                    // 0x0750(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OnBoostEndRPMDecreasePercent;                             // 0x0754(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TimeDrifting;                                             // 0x0758(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              RPMCutoffAddedValue;                                      // 0x075C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<float>                                      GearShiftingRPMThreshold;                                 // 0x0760(0x0010) (Edit, ZeroConstructor)
	struct FScriptMulticastDelegate                    OnGearShift;                                              // 0x0770(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bIsInReverse;                                             // 0x0780(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsUpsideDown;                                            // 0x0781(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0782(0x0002) MISSED OFFSET
	float                                              Speed;                                                    // 0x0784(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              LateralSpeed;                                             // 0x0788(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              PlanarSpeed;                                              // 0x078C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     AngularVelocityRad;                                       // 0x0790(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	float                                              RPM;                                                      // 0x079C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              BlendedRPM;                                               // 0x07A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                CurrentGear;                                              // 0x07A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              Accel;                                                    // 0x07A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsDriftingLeft;                                          // 0x07AC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsDriftingRight;                                         // 0x07AD(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x07AE(0x0002) MISSED OFFSET
	float                                              LastFrameSpeed;                                           // 0x07B0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x07B4(0x0004) MISSED OFFSET
	struct FName                                       VehicleArchetype;                                         // 0x07B8(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	class UVehicleClassIdentifier*                     VehicleClassID;                                           // 0x07C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSoftObjectPath                             VehicleWheelInvData;                                      // 0x07C8(0x0018) (Edit, DisableEditOnInstance)
	struct FOakVehicleAdditiveData                     BaseAdditiveSettings;                                     // 0x07E0(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              SteeringAngleInterpSpeed;                                 // 0x0808(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SeatMeshOffset;                                           // 0x080C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAllow360Shooting;                                        // 0x0810(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0811(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    ShieldEquipped;                                           // 0x0818(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ShieldUnequipped;                                         // 0x0828(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData08[0x20];                                      // 0x0838(0x0020) MISSED OFFSET
	struct FGameResourcePoolReference                  Health;                                                   // 0x0858(0x0018) (Transient)
	EVehicleHealthState                                HealthState;                                              // 0x0870(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)
	EVehicleDeathType                                  DeathType;                                                // 0x0871(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData09[0x2];                                       // 0x0872(0x0002) MISSED OFFSET
	float                                              LowHealthPercent;                                         // 0x0874(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VeryLowHealthPercent;                                     // 0x0878(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x087C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnHealthy;                                                // 0x0880(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHealthLow;                                              // 0x0890(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHealthVeryLow;                                          // 0x08A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDead;                                                   // 0x08B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bResetCameraAutoLook;                                     // 0x08C0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x7];                                       // 0x08C1(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSpawnByCatchARideChanged;                               // 0x08C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AActor*                                      VehicleSpawnByCatchARideOwner;                            // 0x08D8(0x0008) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData)
	class ACatchARidePlatform*                         CatchARidePlatform;                                       // 0x08E0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class UObject*                                     CatchARideInterface;                                      // 0x08E8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0x8];                                       // 0x08F0(0x0008) MISSED OFFSET
	class UGbxHUDData*                                 HUDInfo;                                                  // 0x08F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnCausedElementalEffect;                                  // 0x0900(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ReceivedElementalEffect;                                  // 0x0910(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    EndedElementalEffect;                                     // 0x0920(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCausedMaxResourceEffect;                                // 0x0930(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ReceivedResourceEffect;                                   // 0x0940(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UClass*                                      DamageToApplyWhenVehicleIsDead;                           // 0x0950(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDigistructOnSpawn;                                       // 0x0958(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x1];                                       // 0x0959(0x0001) MISSED OFFSET
	bool                                               bIsVehicleScannable;                                      // 0x095A(0x0001) (Edit, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bIsMissionVehicle;                                        // 0x095B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x095C(0x0004) MISSED OFFSET
	class UClass*                                      DigistructInActionClass;                                  // 0x0960(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DigistructInCatchARideActionClass;                        // 0x0968(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x8];                                       // 0x0970(0x0008) MISSED OFFSET
	class UGbxUIName*                                  UINameOverride;                                           // 0x0978(0x0008) (Edit, Net, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DigistructOutActionClass;                                 // 0x0980(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DigistructTime;                                           // 0x0988(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x1C];                                      // 0x098C(0x001C) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPrimaryOccupantEnter;                                   // 0x09A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPrimaryOccupantExit;                                    // 0x09B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	ETeamCollisionChannel                              VehicleTeamCollisionChannel;                              // 0x09C8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bShouldClearInput;                                        // 0x09C9(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData17[0x2];                                       // 0x09CA(0x0002) MISSED OFFSET
	float                                              LastThrottleInput;                                        // 0x09CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              LastLookInputTime;                                        // 0x09D0(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MaxWeaponAimAdjustmentAngle;                              // 0x09D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnEBrakePressed;                                          // 0x09D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEBrakeReleased;                                         // 0x09E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UFeedbackData*                               EBrakeFeedback;                                           // 0x09F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRuntimeFloatCurve                          EBrakeFeedbackScaleCurve;                                 // 0x0A00(0x0078) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              EBrakeFeedbackUpdateFrequency;                            // 0x0A78(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlippedThreshold;                                         // 0x0A7C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bCanBeFlippedOver : 1;                                    // 0x0A80(0x0001) (Edit)
	unsigned char                                      bCanEnterWhenFlipped : 1;                                 // 0x0A80(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bEjectOccupantsWhenFlipped : 1;                           // 0x0A80(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData18[0x3];                                       // 0x0A81(0x0003) MISSED OFFSET
	float                                              FlippedEjectionTime;                                      // 0x0A84(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlipOverLiftStrength;                                     // 0x0A88(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlipOverTorqueStrength;                                   // 0x0A8C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlipOverAttemptFrequency;                                 // 0x0A90(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x4];                                       // 0x0A94(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFlipped;                                                // 0x0A98(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFlippedTimerExpired;                                    // 0x0AA8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUprighted;                                              // 0x0AB8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEnterVehicle;                                           // 0x0AC8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnExitVehicle;                                            // 0x0AD8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnExitVehicleStarted;                                     // 0x0AE8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerEntersVehicle;                                    // 0x0AF8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerHijacksVehicle;                                   // 0x0B08(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerExitsVehicle;                                     // 0x0B18(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnVehicleDestroyWithPlayerIn;                             // 0x0B28(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    BeforeVehicleDestroyed;                                   // 0x0B38(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData20[0x10];                                      // 0x0B48(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnHornStarted;                                            // 0x0B58(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHornStopped;                                            // 0x0B68(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UVehicleDrivingDataAsset*                    DrivingData;                                              // 0x0B78(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class ABoundaryTurret*>                     OverlappedBoundaryTurrets;                                // 0x0B80(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData21[0x28];                                      // 0x0B90(0x0028) MISSED OFFSET
	TArray<class UWeaponSlotData*>                     AdditionalSecondaryWeapons;                               // 0x0BB8(0x0010) (Edit, ZeroConstructor)
	TArray<class UWeaponSlotData*>                     AdditionalPrimaryWeapons;                                 // 0x0BC8(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData22[0x1];                                       // 0x0BD8(0x0001) MISSED OFFSET
	bool                                               bIsEBraking;                                              // 0x0BD9(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsFlipped;                                               // 0x0BDA(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData23[0xF5];                                      // 0x0BDB(0x00F5) MISSED OFFSET
	struct FGbxAttributeFloat                          ShockStunCooldownDuration;                                // 0x0CD0(0x000C) (Edit)
	unsigned char                                      UnknownData24[0x4];                                       // 0x0CDC(0x0004) MISSED OFFSET
	class UOakVehicleBalanceStateComponent*            BalanceStateComponent;                                    // 0x0CE0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData25[0x8];                                       // 0x0CE8(0x0008) MISSED OFFSET
	class UInventoryNamePartData*                      DefaultUIName;                                            // 0x0CF0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData26[0x78];                                      // 0x0CF8(0x0078) MISSED OFFSET
	class UAISenseConfig_Sight*                        SightSenseConfig;                                         // 0x0D70(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USpawnerComponent*                           SpawnerComponent;                                         // 0x0D78(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USpawnPointComponent*                        SpawnPointComponent;                                      // 0x0D80(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              AIPathRadius;                                             // 0x0D88(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AIPathHeight;                                             // 0x0D8C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AISearchHeight;                                           // 0x0D90(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AIMaxSpeed;                                               // 0x0D94(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AIMaxTurnAngle;                                           // 0x0D98(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData27[0xC];                                       // 0x0D9C(0x000C) MISSED OFFSET
	class UHavokPathFindingData*                       AIPathFindingData;                                        // 0x0DA8(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	class UHavokPathFindingData*                       PermissiveAIPathFindingData;                              // 0x0DB0(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	struct FGbxNavPathingData                          AIPathingData;                                            // 0x0DB8(0x0010) (Edit)
	struct FGbxNavPathingData                          PermissiveAIPathingData;                                  // 0x0DC8(0x0010) (Edit)
	struct FGbxNavPathingData                          OverrideAIPathingData;                                    // 0x0DD8(0x0010) (Transient)
	struct FGbxAvoidanceProperties                     AvoidanceProperties;                                      // 0x0DE8(0x0038) (Edit)
	unsigned char                                      UnknownData28[0x2];                                       // 0x0E20(0x0002) MISSED OFFSET
	ENavCorrectionSetting                              NavCorrectionSetting;                                     // 0x0E22(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData29[0x25];                                      // 0x0E23(0x0025) MISSED OFFSET
	class UGbxNavMeshPainterComponent*                 NavMeshPainterComponent;                                  // 0x0E48(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData30[0x11];                                      // 0x0E50(0x0011) MISSED OFFSET
	bool                                               bCanSiege;                                                // 0x0E61(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData31[0x6];                                       // 0x0E62(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnEnterSiegeMode;                                         // 0x0E68(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnExitSiegeMode;                                          // 0x0E78(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bAlwaysHover;                                             // 0x0E88(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData32[0x1];                                       // 0x0E89(0x0001) MISSED OFFSET
	bool                                               bCanDisableDrivingInput;                                  // 0x0E8A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData33[0x5];                                       // 0x0E8B(0x0005) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnEnterDisableDrivingInput;                               // 0x0E90(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnExitDisabledMode;                                       // 0x0EA0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              RevolverWheelRadius;                                      // 0x0EB0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RevolverChassisWidthOffset;                               // 0x0EB4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RevolverRaycastGroundOffset;                              // 0x0EB8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsDrivingInputDisabled;                                  // 0x0EBC(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bDespawnWhenNoOccupant;                                   // 0x0EBD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bKeepAssociatedToSpawner;                                 // 0x0EBE(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData34[0x1];                                       // 0x0EBF(0x0001) MISSED OFFSET
	TArray<class AActor*>                              VehicleOwners;                                            // 0x0EC0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData35[0x18];                                      // 0x0ED0(0x0018) MISSED OFFSET
	class UClass*                                      DefaultVehicleDriverAction;                               // 0x0EE8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DefaultVehicleTurretAction;                               // 0x0EF0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DefaultVehiclePassengerAction;                            // 0x0EF8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData36[0x18];                                      // 0x0F00(0x0018) MISSED OFFSET
	struct FSpawnCostSelection                         SpawnCostSelection;                                       // 0x0F18(0x0018) (Edit)
	bool                                               bCollisionPreventsActorsFromSpawning;                     // 0x0F30(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData37[0x3];                                       // 0x0F31(0x0003) MISSED OFFSET
	float                                              AdditionalGroundOffset;                                   // 0x0F34(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class AActor*>                              OwnedChildActors;                                         // 0x0F38(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData38[0x150];                                     // 0x0F48(0x0150) MISSED OFFSET
	TArray<struct FColor>                              CustomColor;                                              // 0x1098(0x0010) (Net, ZeroConstructor, Transient)
	unsigned char                                      UnknownData39[0x98];                                      // 0x10A8(0x0098) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDroneDoorClosing;                                       // 0x1140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDroneDoorOpen;                                          // 0x1150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData40[0x130];                                     // 0x1160(0x0130) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnHijackProtectionTriggered;                              // 0x1290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UClass*                                      HijackProtectionDamageToApply;                            // 0x12A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData41[0x8];                                       // 0x12A8(0x0008) MISSED OFFSET
	class UVehicleAudioProviderComponent*              VehicleAudioProvider;                                     // 0x12B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData42[0x18];                                      // 0x12B8(0x0018) MISSED OFFSET
	TArray<class ALargeLiquidBody*>                    OverlappingLLBs;                                          // 0x12D0(0x0010) (ZeroConstructor, Transient)
	class UStaticMesh*                                 ZoneMapPOIMesh;                                           // 0x12E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData43[0xA2];                                      // 0x12E8(0x00A2) MISSED OFFSET
	bool                                               DigistructingIn;                                          // 0x138A(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData44[0x5];                                       // 0x138B(0x0005) MISSED OFFSET
	class UGbxAbilityManagerComponent*                 AbilityManagerComponent;                                  // 0x1390(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicle");
		return ptr;
	}


	void VehicleCharacterEvent__DelegateSignature(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
	void UnlockWorldTravel(const struct FName& Reason);
	void TestTeleportFailSafeLocation();
	void TeleportVehicle(const struct FVector& Location, const struct FRotator& Rotation);
	void StopZooming(bool bForcedStop);
	void StopUsingWeapon(class UWeaponSlotData* Slot, unsigned char InputChannel);
	void StopUsingSecondaryWeapons();
	void StopUsingSecondarySeatWeapon();
	void StopUsingPrimaryWeapons(unsigned char InputChannel);
	void StopReload(class UWeaponSlotData* Slot);
	void StopHover();
	void StopHornSequence();
	void StopHorn();
	void StopFeedbackOnOccupants(class UFeedbackData* FeedbackData, bool bOnlyLocalPlayers);
	void StopEffects(EVehicleEffectEvent EffectType);
	void StopEBrakeFeedback();
	void StopEBrake(bool bTriggerPowerSlide);
	void StopBoost(bool bForce);
	void StartZooming();
	void StartUsingWeapon(class UWeaponSlotData* Slot, unsigned char InputChannel);
	void StartUsingSecondaryWeapons();
	bool StartUsingSecondarySeatWeapon();
	void StartUsingPrimaryWeapons(unsigned char InputChannel);
	void StartHover();
	void StartHornSequence(TArray<struct FHornSequenceEntry> HornSequenceIn);
	void StartHorn();
	void StartEBrake(bool bTriggerPowerSlide);
	void StartBoost();
	class AOakVehicle* STATIC_SpawnVehicleFromItemPool(class UObject* WorldContextObject, class UItemPoolData* ItemPoolData, const struct FVector& Position, const struct FRotator& Rotation);
	void SetVehicleSpawnByCatchARideOwner(class AActor* NewCAROwner);
	void SetVehicleDisable(bool bDisable, bool bEvictOccupant);
	void SetThrottleInput(float Throttle);
	void SetSteeringInput(float Steering);
	void SetNavPainterLayerEnabled(ENavPainterLayer Layer, bool bEnable);
	void SetLockSeatForPlayers(bool bIsSeatLock);
	void SetInSiegeMode(bool bWantedInSiegeMode);
	void SetHoverInput(const struct FVector& WantedInput);
	void SetHijackProtectionEnabled(bool bEnable);
	void SetHandbrake(bool bHandBrake);
	void SetDrivingInputDisabled(bool bDrivingInputDisabled);
	void SetDead(EVehicleDeathType InDeathType);
	void SetBoost(bool bBoosting);
	void SetAirControlInput(float PitchInput, float RollInput);
	void SetAIPathFindingData(class UHavokPathFindingData* PathFindingData);
	void ServerStopEBrake(bool bTriggerPowerSlide);
	void ServerStartEBrake(bool bTriggerPowerSlide);
	void ResetAIPathFindingData();
	void Reload(class UWeaponSlotData* Slot);
	void RegisterSeatComponent(class UVehicleSeatComponent* SeatComponent);
	void ReceiveOnVehicleDestroyWithPlayerIn(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
	void ReceiveOnPlayerHijacksVehicle(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
	void ReceiveOnPlayerExitsVehicle(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
	void ReceiveOnPlayerEntersVehicle(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
	void ReceiveOnExitVehicleStarted(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
	void ReceiveOnExitVehicle(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
	void ReceiveOnEnterVehicle(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
	void PlayEffects(EVehicleEffectEvent EffectType);
	void PerformFeedbackOnOccupants(class UFeedbackData* FeedbackData, float Scale, bool bLoop, bool bOnlyLocalPlayers);
	void OnScanningSuccess();
	void OnScanningStarted();
	void OnScanningCancelled();
	void OnRep_VehicleTeamCollisionChannel();
	void OnRep_SpawnByCatchARide();
	void OnRep_Seats();
	void OnRep_IsEBraking();
	void OnRep_HealthState();
	void OnRep_DrivingInputDisabled();
	void OnRep_Color();
	void OnReceivedElementalEffect(class AActor* Receiver, const struct FStatusEffectSpec& Spec, EOakElementalType ElementalType);
	void OnPrimaryOccupantLevelChange(int OldExperienceLevel, int NewExperienceLevel);
	void OnLanded(float TimeSpentInAir, float LandAngle, int NumWheelsOnGround, bool bAllWheelsLanded);
	void OnHijackProtectionTriggeredSignature__DelegateSignature(class AController* Hijacker, class UVehicleSeatComponent* HijackedSeat);
	void OnHealthResourceDepleted(class UDamageComponent* DamageReceiver, class UDamageCauserComponent* DamageCauser);
	void OnGearShifted(int Gear, bool bIsUpShifting);
	void OnDriverAttachStateChanged();
	void OnBoostEnd();
	void OnBecameAirborn();
	void OakVehicleHornEvent__DelegateSignature();
	void OakVehicleGearShiftEvent__DelegateSignature(int Gear, bool bIsShiftingUp);
	void OakVehicleEvent__DelegateSignature();
	void OakVehicleBoostComponentChangedEvent__DelegateSignature(class UOakVehicleBoostComponent* Current, class UOakVehicleBoostComponent* Previous);
	void LockWorldTravel(const struct FName& Reason);
	void LockAllSeat(bool bLock);
	void K2_OnEBrakeReleased();
	void K2_OnEBrakePressed();
	void K2_InitializeSeats();
	bool IsWorldTravelLocked();
	bool IsVehicleScannable();
	bool IsVehicleOwnedSolelyBy(class AActor* Actor);
	bool IsVehicleOwnedByPlayer();
	bool IsVehicleOwnedBy(class AActor* Actor);
	bool IsVehicleOwned();
	bool IsVehicleOccupant(class APawn* Occupant, bool bIncludeDetaching);
	bool IsPrimarySeatOccupied(bool bIncludeDetaching);
	bool IsPreviewModel();
	bool IsPhysicsDisabled();
	bool IsPartEquipped(TSoftObjectPtr<class UVehiclePartData> PartData);
	bool IsInSiegeMode();
	bool IsInPowerSlideBoost();
	bool IsHovering();
	bool IsEBraking();
	bool IsDrivingInputDisabled();
	bool IsDrifting();
	bool IsDigiThrusting();
	bool IsControllerInVehicle(class AController* ControllerToCheck);
	bool IsBraking();
	bool IsBoosting();
	void InterpolateToGround(float InterpolationSpeed);
	void IgnoreVehicleCollision(class AActor* TargetToIgnore, bool AllChilds);
	bool HasShieldEquipped();
	bool HasPlayerOccupants();
	bool HasOccupants(bool bIncludeDetaching);
	bool HasHealthOfType(class UHealthTypeData* HealthTypeToFind);
	bool HasFriendySeatReserved();
	bool HasAnyDuelingOccupants();
	class AWeapon* GetVehicleWeapon(class UWeaponSlotData* WantedSlot);
	float GetThrottleInput();
	TEnumAsByte<ETeamAttitude> GetTeamAttitudeTowardsActor(class AActor* Actor);
	struct FVector GetTargetActorLocation();
	float GetSteeringInput();
	float GetSpeedInMPH();
	float GetSpeedInKPH();
	class AVehicleSeatPawn* GetSecondaryWeaponSeatPawn(bool bMustBeUnoccupied);
	struct FRotator GetSeatWeaponRotation(int Slot, bool bWorldSpace);
	class APawn* GetSeatOccupant(int SeatSlot, bool bIncludeDetaching);
	int GetSeatCountUse();
	int GetSeatCount();
	class UVehicleSeatComponent* GetSeatComponent(int Slot);
	struct FRotator GetRotationDelta();
	class APawn* GetPrimaryOccupant(bool bIncludeDetaching);
	float GetPlanarSpeedInMPH();
	int GetOccupantSeatSlot(class APawn* Occupant, bool bIncludeDetaching);
	class UVehicleSeatComponent* GetOccupantSeat(class APawn* Occupant, bool bIncludeDetaching);
	class UOakDamageComponent* GetOakDamageComponent();
	class AOakAIController* GetOakAIController();
	float GetMass();
	int STATIC_GetLocalPlayer(TArray<class APlayerController*>* Controllers);
	struct FVector GetLastFrameVelocity();
	struct FVector GetGroundAjustement();
	int GetGearsCount();
	bool GetFirstHealthInformationByType(class UHealthTypeData* HealthTypeToFind, struct FHealthType* OutHealthType);
	TArray<class UVehicleSeatComponent*> GetAvailableSeatsForPlayers();
	TArray<class APawn*> GetAllOccupants(bool bIncludeDetaching);
	class AWeapon* GetActiveWeapon(unsigned char Slot);
	void FlipOver(class AActor* AwayFromActor);
	class UVehicleSeatComponent* FindNearestSeatComponent(class AActor* SearchActor, float MaxDistance, bool bIsHostile, bool bSearchNearestSeat);
	class AOakVehicle* STATIC_FindAssociatedOakVehicle(class UObject* Object);
	void EnableVehiclePhysics(const struct FName& Reason);
	void EnableTransitionControl(bool bEnable);
	void EnableDoorTeleportFailSafe(const struct FVector& Offset, float TestDelay);
	void EnableAIUseSlot(bool bEnable);
	void EjectOccupants(bool bKillOccupants, bool bForceResurrectKilledPlayers, bool bInstantKill, bool bFellOutOfWorld, bool bInstantDetach);
	void DisableVehiclePhysics(const struct FName& Reason);
	void DigistructOutTeleport();
	void DigistructOutEffectOnly();
	void DigistructIn();
	void DebugBraking();
	void DamageReaction_DetachBreakable(const struct FDamageReactionEventSummary& Summary);
	void STATIC_CopyVehicleInertiaTensor();
	void ClientVehicleSpawnedFromCatchARide();
	void ClearNavPainterLayer(ENavPainterLayer Layer);
	void ClearInputWithFilter(TEnumAsByte<EClearInputFilter> Filter);
	void ClearAllInput();
	bool CanVehicleBeControlled();
	bool CanHover();
	bool CanDrive();
	bool CanBeFlippedOver(bool bMustBeUnoccupied);
	void BroadcastHornStoppedEvent();
	void BroadcastHornStartedEvent();
	void BlendedRPMAttenuation();
	void BeforeVehicleDestroyedEvent(EVehicleDeathType VehicleDeathType);
	void AddVehicleForce(const struct FVector& ForceToAdd, const struct FName& ForceSource);
	void AddImpulseFromMelee(float ImpulseStrength, float UpRatio, class AController* InstigatedBy);
};


// Class OakGame.OakVehicleAspectData
// 0x0000 (0x0038 - 0x0038)
class UOakVehicleAspectData : public UInventoryAspectData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleAspectData");
		return ptr;
	}

};


// Class OakGame.OakVehicleAdditionalWwiseConfigurationEventsAspectData
// 0x0010 (0x0048 - 0x0038)
class UOakVehicleAdditionalWwiseConfigurationEventsAspectData : public UOakVehicleAspectData
{
public:
	TArray<class UWwiseEvent*>                         AdditionalWwiseConfigurationEvents;                       // 0x0038(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleAdditionalWwiseConfigurationEventsAspectData");
		return ptr;
	}

};


// Class OakGame.OakVehicleBalanceStateComponent
// 0x00C0 (0x0408 - 0x0348)
class UOakVehicleBalanceStateComponent : public UVehicleInventoryBalanceStateComponent
{
public:
	TArray<class UOakVehicleAspectData*>               VehicleAspectList;                                        // 0x0348(0x0010) (Edit, ZeroConstructor, Transient, EditConst)
	unsigned char                                      UnknownData00[0xB0];                                      // 0x0358(0x00B0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleBalanceStateComponent");
		return ptr;
	}


	void OnShieldsFilled(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldsDepleted(const struct FGameResourcePoolReference& ShieldPool);
	void OnShieldCurrentValueUpdate(float CurrentValue, struct FGameResourcePoolReference* ResourcePoolReference);
	void OnHealthTypeVeryLow(const struct FHealthType& HealthType, int Index);
	void OnHealthTypeNormal(const struct FHealthType& HealthType, int Index);
	void OnHealthTypeLow(const struct FHealthType& HealthType, int Index);
	void OnHealthTypeAdded(const struct FHealthType& HealthType, int Index);
	void OnBoostStarted();
	void OnBoostFinished();
};


// Class OakGame.OakVehicleBoostData
// 0x0038 (0x03D0 - 0x0398)
class UOakVehicleBoostData : public UVehicleBoostData
{
public:
	class UFeedbackData*                               StartBoostFeedback;                                       // 0x0398(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFeedbackData*                               BoostLoopFeedback;                                        // 0x03A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStatusEffectData*                           BoostStatusEffectData;                                    // 0x03A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      BoostDamageData;                                          // 0x03B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BoostDamageTickInterval;                                  // 0x03B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03BC(0x0004) MISSED OFFSET
	struct FName                                       DamagePrimCompTag;                                        // 0x03C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      BoostCollisionDamageData;                                 // 0x03C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleBoostData");
		return ptr;
	}

};


// Class OakGame.OakVehicleBoostComponent
// 0x0008 (0x0220 - 0x0218)
class UOakVehicleBoostComponent : public UVehicleBoostComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0218(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleBoostComponent");
		return ptr;
	}


	void OnDamageCompOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};


// Class OakGame.OakVehicleContextResolver
// 0x0008 (0x0058 - 0x0050)
class UOakVehicleContextResolver : public UAttributeContextResolver
{
public:
	struct FName                                       ComponentTag;                                             // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleContextResolver");
		return ptr;
	}

};


// Class OakGame.OakVehicleDamageComponent
// 0x0010 (0x09D0 - 0x09C0)
class UOakVehicleDamageComponent : public UOakDamageComponent
{
public:
	TArray<struct FVehicleOverrideData>                OverrideByParts;                                          // 0x09C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleDamageComponent");
		return ptr;
	}

};


// Class OakGame.OakVehicleEffectAspectData
// 0x0028 (0x0060 - 0x0038)
class UOakVehicleEffectAspectData : public UOakVehicleAspectData
{
public:
	TArray<struct FVehicleEffectData>                  Effects;                                                  // 0x0038(0x0010) (BlueprintReadOnly, ZeroConstructor, Deprecated)
	TArray<class UBaseVehicleEffectData*>              EffectsData;                                              // 0x0048(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	struct FName                                       ComparisonTag;                                            // 0x0058(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleEffectAspectData");
		return ptr;
	}

};


// Class OakGame.OakVehicleEffectAspectDataCollection
// 0x0010 (0x0048 - 0x0038)
class UOakVehicleEffectAspectDataCollection : public UOakVehicleAspectData
{
public:
	TArray<class UOakVehicleEffectAspectData*>         EffectAspectDataList;                                     // 0x0038(0x0010) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleEffectAspectDataCollection");
		return ptr;
	}

};


// Class OakGame.OakVehicleInputComponent
// 0x00C8 (0x03B8 - 0x02F0)
class UOakVehicleInputComponent : public UGbxInputComponent
{
public:
	class UGbxInputActionData_Continuous_Vector*       SteerActionData;                                          // 0x02F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxInputActionData_Continuous_Vector*       ThrottleActionData;                                       // 0x02F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxInputActionData_Continuous_Vector*       LookActionData;                                           // 0x0300(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxInputActionData_Continuous_Vector*       AirControlActionData;                                     // 0x0308(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class AOakVehicle*                                 OwningVehicle;                                            // 0x0310(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAirControlNeedsNeutralStick;                             // 0x0318(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseCameraRelativeSteeringMode;                           // 0x0319(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EVehicleCameraRelativeDrivingMode                  CameraRelativeDrivingMode;                                // 0x031A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x031B(0x0005) MISSED OFFSET
	struct FRuntimeFloatCurve                          CameraRelativeAngleToSteeringCurve;                       // 0x0320(0x0078) (Edit, DisableEditOnInstance)
	bool                                               bUseAutoEBrake;                                           // 0x0398(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0399(0x0003) MISSED OFFSET
	float                                              AutoEBrakeSpeedThresholdKPH;                              // 0x039C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AutoEBrakeSteeringThreshold;                              // 0x03A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AutoEBrakeWantedDirAngleThreshold;                        // 0x03A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseStickLengthAsThrottle;                                // 0x03A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x03A9(0x0003) MISSED OFFSET
	float                                              ForwardInputAngleThreshold;                               // 0x03AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x03B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleInputComponent");
		return ptr;
	}


	void OnVehicleAirborne();
};


// Class OakGame.OakVehicleManager
// 0x0018 (0x0040 - 0x0028)
class UOakVehicleManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleManager");
		return ptr;
	}

};


// Class OakGame.OakVehicleMaterialAspectData
// 0x0058 (0x0110 - 0x00B8)
class UOakVehicleMaterialAspectData : public UInventoryMaterialAspectData
{
public:
	struct FSkinParameterData                          SkinParameters;                                           // 0x00B8(0x0030) (Edit, BlueprintReadOnly)
	TSoftObjectPtr<class UMaterialInterface>           MaterialSoftRef;                                          // 0x00E8(0x0028) (Edit, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleMaterialAspectData");
		return ptr;
	}

};


// Class OakGame.OakVehicleMovementComponentContextResolver
// 0x0000 (0x0050 - 0x0050)
class UOakVehicleMovementComponentContextResolver : public UAttributeContextResolver
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleMovementComponentContextResolver");
		return ptr;
	}

};


// Class OakGame.OakVehiclePartData
// 0x0008 (0x0268 - 0x0260)
class UOakVehiclePartData : public UVehiclePartData
{
public:
	class UVehicleClassIdentifier*                     VehicleClassID;                                           // 0x0260(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehiclePartData");
		return ptr;
	}

};


// Class OakGame.OakProjectileVehicleData
// 0x0060 (0x0090 - 0x0030)
class UOakProjectileVehicleData : public UGbxDataAsset
{
public:
	class UStaticMesh*                                 Mesh;                                                     // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FDamageInfo                                 DamageInfo;                                               // 0x0038(0x0058) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakProjectileVehicleData");
		return ptr;
	}

};


// Class OakGame.OakVehicleProjectile
// 0x0050 (0x0730 - 0x06E0)
class AOakVehicleProjectile : public AOakProjectile
{
public:
	float                                              FuseTime;                                                 // 0x06E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InitOverlapTime;                                          // 0x06E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class AOakVehicle*                                 Vehicle;                                                  // 0x06E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UStaticMeshComponent*                        MeshProjectile;                                           // 0x06F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGbxProjectileMovementComponent*             ProjectileMovement;                                       // 0x06F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USphereComponent*                            ProximityDetector;                                        // 0x0700(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USphereComponent*                            MainCollision;                                            // 0x0708(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UOakProjectileVehicleData*                   ProjectileData;                                           // 0x0710(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0718(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleProjectile");
		return ptr;
	}


	void ProximityDetectorOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ProximityDetectorHit(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnHit(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
};


// Class OakGame.OakVehiclePropertyValueResolver
// 0x0008 (0x0030 - 0x0028)
class UOakVehiclePropertyValueResolver : public UAttributeValueResolver
{
public:
	EVehiclePropertyValueType                          ValueToResolve;                                           // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehiclePropertyValueResolver");
		return ptr;
	}

};


// Class OakGame.OakVehicleSettings
// 0x0118 (0x0150 - 0x0038)
class UOakVehicleSettings : public UDeveloperSettings
{
public:
	float                                              MaximumAoeDamageDistance;                                 // 0x0038(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	struct FSoftObjectPath                             DefaultVehicleManufacturer;                               // 0x0040(0x0018) (Edit, Config)
	struct FSoftObjectPath                             DefaultVehicleCategory;                                   // 0x0058(0x0018) (Edit, Config)
	struct FInventoryManufacturerBalanceData           DefaultVehicleManufacturerData;                           // 0x0070(0x0080) (Edit, Config)
	class UClass*                                      DefaultVehiclePartDataClass;                              // 0x00F0(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData)
	TArray<TSoftObjectPtr<class UInventoryPartData>>   AlwaysUnlockedParts;                                      // 0x00F8(0x0010) (Edit, ZeroConstructor, Config)
	TArray<class FString>                              AlwaysUnlockedDLCParts;                                   // 0x0108(0x0010) (ZeroConstructor, Config)
	TArray<TSoftObjectPtr<class UInventoryData>>       AlwaysUnlockedVehicles;                                   // 0x0118(0x0010) (Edit, ZeroConstructor, Config)
	TArray<class FString>                              AlwaysUnlockedDLCVehicles;                                // 0x0128(0x0010) (ZeroConstructor, Config)
	bool                                               bAlwaysDestroyOtherCARVehicle;                            // 0x0138(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bNeverDespawnCARVehicle;                                  // 0x0139(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x013A(0x0006) MISSED OFFSET
	TArray<class FString>                              EnumerationSources;                                       // 0x0140(0x0010) (ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleSettings");
		return ptr;
	}


	void STATIC_EnumerateValidPartAndWheel(TArray<class FString>* PartAndWheels);
	void STATIC_EnumeratePropertiesByType(class UObject* Data, TArray<class FString>* Properties);
	class FString STATIC_CleanVehiclePartName(const class FString& Name);
};


// Class OakGame.OakVehicleShieldAspectData
// 0x0088 (0x00C0 - 0x0038)
class UOakVehicleShieldAspectData : public UOakVehicleAspectData
{
public:
	struct FHealthType                                 ShieldHealth;                                             // 0x0038(0x0078) (Edit, BlueprintReadOnly)
	struct FName                                       ComparisonTag;                                            // 0x00B0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleShieldAspectData");
		return ptr;
	}

};


// Class OakGame.OakVehicleSpawner
// 0x0000 (0x0658 - 0x0658)
class AOakVehicleSpawner : public AOakSpawner
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleSpawner");
		return ptr;
	}

};


// Class OakGame.OakVehicleSpawnPoint
// 0x00A8 (0x0570 - 0x04C8)
class AOakVehicleSpawnPoint : public AOakSpawnPoint
{
public:
	struct FScriptMulticastDelegate                    OnVehicleSpawned;                                         // 0x04C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bDigistructOnSpawn;                                       // 0x04D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSpawnAttached;                                           // 0x04D9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowInterpolationToGround;                              // 0x04DA(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x04DB(0x0005) MISSED OFFSET
	class AActor*                                      IntroSpline;                                              // 0x04E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IntroSplineOffset;                                        // 0x04E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04EC(0x0004) MISSED OFFSET
	class UClass*                                      IntroSplineAIAction;                                      // 0x04F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AActor*                                      PatrolSpline;                                             // 0x04F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PatrolSplineOffset;                                       // 0x0500(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bPatrolSpline;                                            // 0x0504(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0505(0x0003) MISSED OFFSET
	class UClass*                                      PatrolSplineAIAction;                                     // 0x0508(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ReplaceDefaultAITree;                                     // 0x0510(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RubberbandWantedSpeed;                                    // 0x0518(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x051C(0x0004) MISSED OFFSET
	struct FRubberbandSpeedData                        RubberbandSpeedData;                                      // 0x0520(0x0040) (Edit)
	bool                                               bApplyRubberbandOnIntro;                                  // 0x0560(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xF];                                       // 0x0561(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleSpawnPoint");
		return ptr;
	}


	void TriggerOnVehicleSpawned(class USpawnPointComponent* SpawnerComponent, class AActor* Actor);
	void PostSpawnIntro(class AActor* Actor);
};


// Class OakGame.OakVehicleSpeedTriggerBox
// 0x0010 (0x0498 - 0x0488)
class AOakVehicleSpeedTriggerBox : public AOakTriggerBox
{
public:
	float                                              WantedSpeed;                                              // 0x0488(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WantedSteering;                                           // 0x048C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bMaxSpeed;                                                // 0x0490(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseBoost;                                                // 0x0491(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bForceReverse;                                            // 0x0492(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUseHandbrake;                                            // 0x0493(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // 0x0494(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleSpeedTriggerBox");
		return ptr;
	}


	void VehicleTouched(class AActor* OtherActor, bool bIsPlayer, class UPrimitiveComponent* OptionalTouchedComponent);
};


// Class OakGame.OakVehicleWeaponFireProjectileComponent
// 0x0060 (0x09B8 - 0x0958)
class UOakVehicleWeaponFireProjectileComponent : public UWeaponFireProjectileComponent
{
public:
	TArray<struct FDummyProjectileInfo>                DummyProjectiles;                                         // 0x0958(0x0010) (Edit, ZeroConstructor)
	float                                              DelayDummyProjectile;                                     // 0x0968(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x096C(0x0004) MISSED OFFSET
	class UGbxDataAsset*                               ProjectileData;                                           // 0x0970(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UClass*>                              ProjectileTypes;                                          // 0x0978(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0988(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCurrentProjectileIndexChanged;                          // 0x0998(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDummyProjectileSpawned;                                 // 0x09A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleWeaponFireProjectileComponent");
		return ptr;
	}


	void SpawnDummyProjectile(int Index);
	void SpawnAllDummyProjectiles();
	void SetCurrentFiredProjectileIndex(int NewIndex);
	void PlayDummyProjectileTransitOut(int Index, float PlayRate);
	void PlayDummyProjectileTransitIn(int Index, float PlayRate);
	void NotifyHiddenDummyProjectile(bool Hidden);
	void HideDummyProjectile();
	class AActor* GetDummyProjectile(int Index);
	int GetCurrentFiredProjectileIndex();
	int CycleCurrentFiredProjectileIndex(int Step);
};


// Class OakGame.OakVehicleWeaponMultiInputFireProjectileComponent
// 0x0018 (0x09D0 - 0x09B8)
class UOakVehicleWeaponMultiInputFireProjectileComponent : public UOakVehicleWeaponFireProjectileComponent
{
public:
	class UClass*                                      AltProjectileTemplate;                                    // 0x09B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      AltLightProjectileData;                                   // 0x09C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UFiringPattern*                              AltFiringPatternData;                                     // 0x09C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVehicleWeaponMultiInputFireProjectileComponent");
		return ptr;
	}

};


// Class OakGame.OakVoiceOfGodComponent
// 0x0090 (0x0840 - 0x07B0)
class UOakVoiceOfGodComponent : public UStaticMeshComponent
{
public:
	struct FName                                       VoGSpeakerParamName;                                      // 0x07B0(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	struct FName                                       VoGFadeName;                                              // 0x07B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       VoGMaterialName;                                          // 0x07C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxFadeTime;                                              // 0x07C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ParticleDepth;                                            // 0x07CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    MaxRotationLag;                                           // 0x07D0(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x07DC(0x0004) MISSED OFFSET
	class UMaterialInstance*                           LilithMaterial;                                           // 0x07E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstance*                           TannisMaterial;                                           // 0x07E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ScreenParticle;                                           // 0x07F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxMediaData*                               MediaData;                                                // 0x07F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMediaPlayer*                                MediaPlayer;                                              // 0x0800(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0808(0x0018) MISSED OFFSET
	class UScreenParticleManagerComponent*             ScreenParticleManagerComponent;                           // 0x0820(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    LilithMaterialInstanceDynamic;                            // 0x0828(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    TannisMaterialInstanceDynamic;                            // 0x0830(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0838(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakVoiceOfGodComponent");
		return ptr;
	}


	void OnEchoStarted(class UCharacterEchoData* CharacterData, class UPerformanceEchoData* PerformanceData, const class FString& MoodKeyframe, const class FString& VoGMoodKey, EVoiceOfGodSpeaker VoGSpeakerID, bool bIsNewEcho);
	void OnEchoFinished(class UCharacterEchoData* CharacterData, class UPerformanceEchoData* PerformanceData, bool bCompleted);
};


// Class OakGame.OakWeapon_IronBearHardPoint
// 0x00E0 (0x0A40 - 0x0960)
class AOakWeapon_IronBearHardPoint : public AOakWeapon
{
public:
	EIronBearUIHardpointType                           UIHardpointType;                                          // 0x0960(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x37];                                      // 0x0961(0x0037) MISSED OFFSET
	class UOakActionAbilityAugmentData_IronBear*       HardPointAugment;                                         // 0x0998(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UOakCustomizationComponent*                  CustomizationComponent;                                   // 0x09A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FAttributeInitializationData                CoreStrengthReductionCoefficientData;                     // 0x09A8(0x0038) (Edit, DisableEditOnInstance)
	class AOakCharacter_IronBear*                      IronBear;                                                 // 0x09E0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FIronBearHardPointData                      HardPointData;                                            // 0x09E8(0x0020) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	class UOakActionAbilityAugmentData_IronBear*       HardPointAugmentMod;                                      // 0x0A08(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class UGFxIronbearWeaponWidget*                    HUDWidget;                                                // 0x0A10(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0A18(0x0008) MISSED OFFSET
	struct FGameResourcePoolReference                  IronBearDurationPoolReference;                            // 0x0A20(0x0018) (Transient)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0A38(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakWeapon_IronBearHardPoint");
		return ptr;
	}


	void SetHUDWidget(class UGFxIronbearWeaponWidget* InHUDWidget);
	void OnWeaponUsed();
	void OnRep_IronBear();
	void OnRep_HardPointData();
	void OnRep_HardPointAugmentMod();
	void OnFirstPersonCreated();
	void NotifyPlayerLeaving();
	void NotifyBubbleShieldEnabledChanged(bool bEnabled);
	void K2_InitializeMod1P();
	void K2_InitializeMod();
	void K2_Initialize1P();
	void K2_Initialize();
	void InitializeAugments(class UOakActionAbilityAugmentData* InAugmentMod);
	bool HasMod(EIronBearModType ModType);
	struct FGameResourcePoolReference GetWeaponAmmoPool();
	EIronBearModType GetMod();
	void EndHardPointAction();
	void BeginHardPointAction();
};


// Class OakGame.OakWeaponVehicleData
// 0x0120 (0x0150 - 0x0030)
class UOakWeaponVehicleData : public UGbxDataAsset
{
public:
	TArray<class UInventoryAspectData*>                AspectList;                                               // 0x0030(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate)
	class USkeletalMesh*                               SkeletalMesh;                                             // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Scale;                                                    // 0x0048(0x000C) (Edit, IsPlainOldData)
	bool                                               bNeverDistanceCull;                                       // 0x0054(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bMeshUseAttachParentBound;                                // 0x0055(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseDualWeaponMesh;                                       // 0x0056(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bChildMeshUseAttachParentBound;                           // 0x0057(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       LeftParentSocket;                                         // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class FString                                      LeftMeshComponentName;                                    // 0x0060(0x0010) (Edit, ZeroConstructor)
	class USkeletalMesh*                               LeftSkeletalMesh;                                         // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LeftScale;                                                // 0x0078(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     LeftOffset;                                               // 0x0084(0x000C) (Edit, IsPlainOldData)
	struct FName                                       RightParentSocket;                                        // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class FString                                      RightMeshComponentName;                                   // 0x0098(0x0010) (Edit, ZeroConstructor)
	class USkeletalMesh*                               RightSkeletalMesh;                                        // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RightScale;                                               // 0x00B0(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     RightOffset;                                              // 0x00BC(0x000C) (Edit, IsPlainOldData)
	bool                                               bUsePhysicAsset;                                          // 0x00C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00C9(0x0007) MISSED OFFSET
	class UPhysicsAsset*                               PhysicAsset;                                              // 0x00D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      AnimClass;                                                // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           ShotAnimation;                                            // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ShotAnimationBlendInTime;                                 // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ShotAnimationBlendOutTime;                                // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ShotAnimationPlayRate;                                    // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	struct FName                                       SlotName;                                                 // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DualWeaponAnimClass;                                      // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           DualWeaponShotAnimation;                                  // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DualWeaponShotAnimationBlendInTime;                       // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DualWeaponShotAnimationBlendOutTime;                      // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DualWeaponShotAnimationPlayRate;                          // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x011C(0x0004) MISSED OFFSET
	struct FName                                       DualWeaponSlotName;                                       // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USwfMovie*                                   VehicleWeaponsSwf;                                        // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class FString                                      WeaponFrameName;                                          // 0x0130(0x0010) (Edit, ZeroConstructor)
	bool                                               bEnableSecondaryAction;                                   // 0x0140(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SecondaryActionUseMode;                                   // 0x0141(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseIdleVFX;                                              // 0x0142(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EWeaponEffectType>                     IdleVFXType;                                              // 0x0143(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseLinkedSlotDualWield;                                  // 0x0144(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0145(0x0003) MISSED OFFSET
	struct FName                                       LinkedSlotSocketName;                                     // 0x0148(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakWeaponVehicleData");
		return ptr;
	}

};


// Class OakGame.OakWeapon_Vehicle
// 0x0010 (0x0970 - 0x0960)
class AOakWeapon_Vehicle : public AOakWeapon
{
public:
	int                                                PreferredSlotId;                                          // 0x0960(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	EVehicleWeapons                                    VehicleWeapon;                                            // 0x0964(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0965(0x0003) MISSED OFFSET
	class UOakWeaponVehicleData*                       DataAsset;                                                // 0x0968(0x0008) (Edit, Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakWeapon_Vehicle");
		return ptr;
	}


	void OnPawnDetachedFromWeapon(class APawn* Pawn, class AController* Controller);
};


// Class OakGame.OakWeaponAnimInstance
// 0x0030 (0x0490 - 0x0460)
class UOakWeaponAnimInstance : public UWeaponAnimInstance
{
public:
	TArray<class UAnimSequence*>                       GripPoses;                                                // 0x0460(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class AOakWeapon*                                  OakWeapon;                                                // 0x0470(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               GripPose;                                                 // 0x0478(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class UAnimSequence*                               ForegripPose;                                             // 0x0480(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0488(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakWeaponAnimInstance");
		return ptr;
	}


	void UpdateGripPoses();
};


// Class OakGame.OakWeaponAttributeMultiContextResolver
// 0x0010 (0x0060 - 0x0050)
class UOakWeaponAttributeMultiContextResolver : public UAttributeContextResolver
{
public:
	TArray<class UWeaponSlotData*>                     Slots;                                                    // 0x0050(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakWeaponAttributeMultiContextResolver");
		return ptr;
	}

};


// Class OakGame.OakWeaponAudioProviderBase
// 0x01E8 (0x0360 - 0x0178)
class UOakWeaponAudioProviderBase : public UWeaponAudioProviderComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0178(0x0008) MISSED OFFSET
	class UWwiseEvent*                                 PrimaryConfigurationEvent;                                // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       WeaponFirePlaybackSocket;                                 // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     WeaponPlaybackOffset;                                     // 0x0190(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x019C(0x0004) MISSED OFFSET
	struct FName                                       DefaultAudioPlaybackSocket;                               // 0x01A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DefaultAudioRadius;                                       // 0x01A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x01AC(0x0004) MISSED OFFSET
	TArray<struct FWeaponAudioBodyLoop>                AdditionalBodyLoops;                                      // 0x01B0(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      BodyLoopPlaybackStates;                                   // 0x01C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET
	class UWwiseEvent*                                 PreFireEvent;                                             // 0x01C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PostFireEvent;                                            // 0x01D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 PostFireMechEvent;                                        // 0x01D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 ModeSwitchFailEvent;                                      // 0x01E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 DryFireEvent;                                             // 0x01E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 ChargeStartEvent;                                         // 0x01F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 ChargeStopEvent;                                          // 0x01F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FWeaponConfigurationEvent>           ConfigurationWwiseEvents;                                 // 0x0200(0x0010) (ZeroConstructor)
	TArray<struct FWeaponConfigurationRtpc>            ConfigurationRtpcs;                                       // 0x0210(0x0010) (ZeroConstructor)
	TArray<class UFoleyAccessoryComponent*>            AttachedFoleyAccessories;                                 // 0x0220(0x0010) (ExportObject, ZeroConstructor)
	class UOakAudioGlobalsData*                        CachedAudioGlobals;                                       // 0x0230(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UWwiseEvent*>                         AdditionalEventsToPrepare;                                // 0x0238(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData04[0xD8];                                      // 0x0248(0x00D8) MISSED OFFSET
	class UWwiseAudioComponent*                        CachedDefaultAudioComponent;                              // 0x0320(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AWeapon*                                     WeaponPrivate;                                            // 0x0328(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AOakCharacter*                               OwningOakCharacter;                                       // 0x0330(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0338(0x0008) MISSED OFFSET
	TArray<class UWwiseEvent*>                         PreparedEvents;                                           // 0x0340(0x0010) (ZeroConstructor, Transient)
	TArray<class UWwiseSwitch*>                        PreparedSwitches;                                         // 0x0350(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakWeaponAudioProviderBase");
		return ptr;
	}


	void OnDetachWeapon();
	void OnAttachWeapon();
	void NotifyReloadStarted();
	void NotifyReloadEnded();
	void NotifyPutDown();
	void NotifyHidden(bool bIsHidden);
	void NotifyEquipped();
	void ChargeStarted();
	void ChargedStopped();
};


// Class OakGame.OakWeaponAudioProviderComponent
// 0x0158 (0x04B8 - 0x0360)
class UOakWeaponAudioProviderComponent : public UOakWeaponAudioProviderBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0360(0x0008) MISSED OFFSET
	bool                                               bWantsShellCasingAudio;                                   // 0x0368(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0369(0x0007) MISSED OFFSET
	struct FWeaponShellCasingAudioParameters           ShellCasingParams;                                        // 0x0370(0x0010) (Edit, IsPlainOldData)
	class UWwiseEvent*                                 GunshotEvent;                                             // 0x0380(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 TargetLockedEvent;                                        // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 TargetUnlockedEvent;                                      // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x110];                                     // 0x0398(0x0110) MISSED OFFSET
	class UWeaponHeatComponent*                        CachedWeaponHeatComp;                                     // 0x04A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x04B0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakWeaponAudioProviderComponent");
		return ptr;
	}


	void OnTargetLockedStateChange(class AWeapon* EventWeapon, bool bLockedOn);
};


// Class OakGame.OakBeamWeaponAudioProviderComponent
// 0x0060 (0x03C0 - 0x0360)
class UOakBeamWeaponAudioProviderComponent : public UOakWeaponAudioProviderBase
{
public:
	class UWwiseEvent*                                 BeamStartEvent;                                           // 0x0360(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 BeamBreakEvent;                                           // 0x0368(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0370(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakBeamWeaponAudioProviderComponent");
		return ptr;
	}

};


// Class OakGame.GbxCondition_WeaponPartType
// 0x0008 (0x0090 - 0x0088)
class UGbxCondition_WeaponPartType : public UGbxCondition
{
public:
	EOakWeaponPartType                                 PartType;                                                 // 0x0088(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      PartValue;                                                // 0x0089(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x008A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_WeaponPartType");
		return ptr;
	}

};


// Class OakGame.OakWeaponGlobalsData
// 0x0030 (0x0060 - 0x0030)
class UOakWeaponGlobalsData : public UGbxDataAsset
{
public:
	TArray<struct FOakWeaponTriggerFeedbackDefinitionData> TriggerFeedback;                                          // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FOakWeaponTriggerFeedbackDefinitionData> ZoomFeedback;                                             // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FOakVehicleWeaponTriggerFeedbackDefinitionData> VehicleTriggerFeedback;                                   // 0x0050(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakWeaponGlobalsData");
		return ptr;
	}

};


// Class OakGame.OakWeaponMayhemGlobalsData
// 0x0180 (0x01B0 - 0x0030)
class UOakWeaponMayhemGlobalsData : public UGbxDataAsset
{
public:
	struct FText                                       LevelUIStatFormatText;                                    // 0x0030(0x0028) (Edit, DisableEditOnInstance)
	struct FRuntimeFloatCurve                          ExperienceLevelBoostCurve;                                // 0x0048(0x0078) (Edit, DisableEditOnInstance)
	struct FRuntimeFloatCurve                          PartMonetaryValueModifierCurve;                           // 0x00C0(0x0078) (Edit, DisableEditOnInstance)
	struct FRuntimeFloatCurve                          PartInventoryScoreModifierCurve;                          // 0x0138(0x0078) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakWeaponMayhemGlobalsData");
		return ptr;
	}

};


// Class OakGame.OakWeaponMayhemPartData
// 0x0010 (0x0288 - 0x0278)
class UOakWeaponMayhemPartData : public UInventoryGenericPartData
{
public:
	int                                                MayhemLevel;                                              // 0x0278(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x027C(0x0004) MISSED OFFSET
	class UUIStatData_Text*                            MayhemLevelStat;                                          // 0x0280(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakWeaponMayhemPartData");
		return ptr;
	}

};


// Class OakGame.OakWeaponMayhemExperienceLevelAttributeValueResolver
// 0x0000 (0x0028 - 0x0028)
class UOakWeaponMayhemExperienceLevelAttributeValueResolver : public UAttributeValueResolver
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakWeaponMayhemExperienceLevelAttributeValueResolver");
		return ptr;
	}

};


// Class OakGame.GrenadeModMayhemExperienceLevelAttributeValueResolver
// 0x0000 (0x0028 - 0x0028)
class UGrenadeModMayhemExperienceLevelAttributeValueResolver : public UAttributeValueResolver
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GrenadeModMayhemExperienceLevelAttributeValueResolver");
		return ptr;
	}

};


// Class OakGame.OakWeaponNamingStrategyData
// 0x0050 (0x0080 - 0x0030)
class UOakWeaponNamingStrategyData : public UInventoryNamingStrategyData
{
public:
	TArray<struct FOakWeaponAttributeNamingData>       NamingData;                                               // 0x0030(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FOakWeaponNamingAttributeThresholdData> NamingAttributeThresholds;                                // 0x0040(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<struct FOakWeaponNamingAttributePair>       SingleNames;                                              // 0x0050(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FOakWeaponNamingAttributePair>       DoubleNames;                                              // 0x0060(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FOakWeaponNamingAttributePair>       CombinationNames;                                         // 0x0070(0x0010) (Edit, ZeroConstructor, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakWeaponNamingStrategyData");
		return ptr;
	}

};


// Class OakGame.WeaponDataTelemetryCommandlet
// 0x0000 (0x0080 - 0x0080)
class UWeaponDataTelemetryCommandlet : public UCommandlet
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponDataTelemetryCommandlet");
		return ptr;
	}

};


// Class OakGame.OakWeaponVehicleByDataAsset
// 0x0050 (0x09C0 - 0x0970)
class AOakWeaponVehicleByDataAsset : public AOakWeapon_Vehicle
{
public:
	class USkeletalMeshComponent*                      WeaponMesh3P;                                             // 0x0970(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOakDamageComponent*                         OakDamage;                                                // 0x0978(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      LeftWeaponMesh3P;                                         // 0x0980(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      RightWeaponMesh3P;                                        // 0x0988(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnSecondaryActionIn;                                      // 0x0990(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSecondaryActionOut;                                     // 0x09A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AOakVehicle*                                 Vehicle;                                                  // 0x09B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bIsSecondaryInUse : 1;                                    // 0x09B8(0x0001) (Net, Transient)
	unsigned char                                      UnknownData00[0x7];                                       // 0x09B9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakWeaponVehicleByDataAsset");
		return ptr;
	}


	void StopIdleEffects();
	void StartIdleEffects();
	void OnRep_SecondaryUse();
	bool IsSecondaryInUse();
};


// Class OakGame.OakWindActor
// 0x0118 (0x0578 - 0x0460)
class AOakWindActor : public AGbxWindActor
{
public:
	float                                              MaxVariationAngleBetweenGusts;                            // 0x0460(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxVariationAngle;                                        // 0x0464(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FNumericRange                               DirectionChangeDuration;                                  // 0x0468(0x0008) (Edit)
	struct FNumericRange                               DelayBetweenGusts;                                        // 0x0470(0x0008) (Edit)
	struct FNumericRange                               GustBuildupDuration;                                      // 0x0478(0x0008) (Edit)
	float                                              GustFalloffDurationPercent;                               // 0x0480(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChanceToReGust;                                           // 0x0484(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinWindSpeed;                                             // 0x0488(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxWindSpeed;                                             // 0x048C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PreviewStrength;                                          // 0x0490(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BaseWindSpeed;                                            // 0x0494(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BaseMinGust;                                              // 0x0498(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BaseMaxGust;                                              // 0x049C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseYawJitter;                                            // 0x04A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04A1(0x0003) MISSED OFFSET
	float                                              RotationJitterAngle;                                      // 0x04A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RotationJitterFrequency;                                  // 0x04A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04AC(0x0004) MISSED OFFSET
	class UMaterialParameterCollection*                UniversalMaterialParameterCollection;                     // 0x04B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       WindStrength_MaterialParameterName;                       // 0x04B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       WindSpeed_MaterialParameterName;                          // 0x04C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       WindDirection_MaterialParameterName;                      // 0x04C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MinGustAmount_MaterialParameterName;                      // 0x04D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MaxGustAmount_MaterialParameterName;                      // 0x04D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    BaseRotation;                                             // 0x04E0(0x000C) (Transient, IsPlainOldData)
	struct FRepWindDirection                           RepDirection;                                             // 0x04EC(0x0008) (Net, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x14];                                      // 0x04F4(0x0014) MISSED OFFSET
	struct FRepWindGust                                RepGust;                                                  // 0x0508(0x0004) (Net, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1C];                                      // 0x050C(0x001C) MISSED OFFSET
	struct FRotator                                    CurrentWindRotation;                                      // 0x0528(0x000C) (Transient, IsPlainOldData)
	float                                              CurrentWindSpeed;                                         // 0x0534(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FWindVectorField                            VectorField;                                              // 0x0538(0x0040) (Edit, EditConst)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakWindActor");
		return ptr;
	}


	void OnRep_RepGust();
	void OnRep_RepDirection();
	struct FLinearColor STATIC_GetWindVectorFieldAtLocation(class UObject* WorldContextObject, const struct FVector& InLocation);
	struct FVector STATIC_GetWindDirectionAtLocation(class UObject* WorldContextObject, const struct FVector& InLocation, float* Speed);
};


// Class OakGame.OakWorldAudioProvider
// 0x00B0 (0x0508 - 0x0458)
class AOakWorldAudioProvider : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0458(0x0008) MISSED OFFSET
	class UWwiseAuxBus*                                GlobalEfx;                                                // 0x0460(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WetPercent;                                               // 0x0468(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WetPercentMin;                                            // 0x046C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ReverbScaleDistance;                                      // 0x0470(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ReverbTransitionTime;                                     // 0x0474(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class UWwiseAuxBus*>                        ChildAuxBusses;                                           // 0x0478(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class UCurveFloat*                                 OutdoornessOcclusionStrengthCurve;                        // 0x0488(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 OutdoornessDistanceReverbFactorCurve;                     // 0x0490(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 ReverbOverDistanceShapeCurve;                             // 0x0498(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ReverbOverDistanceMaxRange;                               // 0x04A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GlobalWetnessScaleDB;                                     // 0x04A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseAuxBus*                                InteriorShort;                                            // 0x04A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InteriorShortDuration;                                    // 0x04B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InteriorShortWetnessScaleDB;                              // 0x04B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseAuxBus*                                InteriorLong;                                             // 0x04B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InteriorLongDuration;                                     // 0x04C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InteriorLongWetnessScaleDB;                               // 0x04C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseAuxBus*                                OutdoorShort;                                             // 0x04C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OutdoorShortDuration;                                     // 0x04D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OutdoorShortWetnessScaleDB;                               // 0x04D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseAuxBus*                                OutdoorLong;                                              // 0x04D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OutdoorLongDuration;                                      // 0x04E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OutdoorLongWetnessScaleDB;                                // 0x04E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UOakAudioGlobalsData*                        CachedAudioGlobals;                                       // 0x04E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x04F0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakWorldAudioProvider");
		return ptr;
	}


	void PushEffect(class UWwiseAuxBus* Efx);
	void PopEffect(class UWwiseAuxBus* Efx);
};


// Class OakGame.OakWorldDiscoveryArea
// 0x0010 (0x0468 - 0x0458)
class AOakWorldDiscoveryArea : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0458(0x0008) MISSED OFFSET
	class UDiscoveryAreaComponent*                     DiscoveryComponent;                                       // 0x0460(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakWorldDiscoveryArea");
		return ptr;
	}

};


// Class OakGame.MapIconAnchor
// 0x0290 (0x0560 - 0x02D0)
class UMapIconAnchor : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x02D0(0x0010) MISSED OFFSET
	struct FZoneMapIconInfo                            IconInfo;                                                 // 0x02E0(0x0270) (Transient)
	class UOakZoneMapIcon*                             AssociatedMapIcon;                                        // 0x0550(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0558(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MapIconAnchor");
		return ptr;
	}

};


// Class OakGame.OakZoneMapIcon
// 0x0010 (0x02E0 - 0x02D0)
class UOakZoneMapIcon : public UGbxGFxButton
{
public:
	class UGbxGFxObject*                               OwningContainer;                                          // 0x02D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x02D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakZoneMapIcon");
		return ptr;
	}

};


// Class OakGame.OakZoneMapFriendIcon
// 0x0000 (0x02D0 - 0x02D0)
class UOakZoneMapFriendIcon : public UGbxGFxButton
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakZoneMapFriendIcon");
		return ptr;
	}

};


// Class OakGame.OakZoneMapMissionWaypointIcon
// 0x00F0 (0x03D0 - 0x02E0)
class UOakZoneMapMissionWaypointIcon : public UOakZoneMapIcon
{
public:
	struct FZoneMapMissionWaypointEntry                WaypointEntry;                                            // 0x02E0(0x00F0) (BlueprintVisible, BlueprintReadOnly, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakZoneMapMissionWaypointIcon");
		return ptr;
	}

};


// Class OakGame.OakZoneMapSettings
// 0x0038 (0x0070 - 0x0038)
class UOakZoneMapSettings : public UDeveloperSettings
{
public:
	TArray<struct FSoftObjectPath>                     ZoneMapLists;                                             // 0x0038(0x0010) (Edit, ZeroConstructor, Config)
	struct FSoftObjectPath                             ZoneMapGlobalData;                                        // 0x0048(0x0018) (Edit, Config)
	bool                                               bMiniMapFacePlayerDirection;                              // 0x0060(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bShowLegendariesOnMiniMap;                                // 0x0061(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0062(0x0002) MISSED OFFSET
	float                                              MiniMapPitchAngle;                                        // 0x0064(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bGenerateFogTexture;                                      // 0x0068(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0069(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakZoneMapSettings");
		return ptr;
	}

};


// Class OakGame.OnlineMessageAnimationWidget
// 0x0050 (0x0390 - 0x0340)
class UOnlineMessageAnimationWidget : public UManagedWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0340(0x0008) MISSED OFFSET
	class UGbxRichTextBlock*                           TitleField;                                               // 0x0348(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGbxRichTextBlock*                           PlayerNameField;                                          // 0x0350(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGbxRichTextBlock*                           DescriptionField;                                         // 0x0358(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      UserPic;                                                  // 0x0360(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      SpinnerWidget;                                            // 0x0368(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInputComponent*                             OnlineMessageInputComponent;                              // 0x0370(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       OnSpawnAudioEventName;                                    // 0x0378(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       OnDespawnAudioEventName;                                  // 0x0380(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWidgetAnimation*                            SpinnerAnimation;                                         // 0x0388(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OnlineMessageAnimationWidget");
		return ptr;
	}

};


// Class OakGame.OperativeBarrier
// 0x0458 (0x09A8 - 0x0550)
class AOperativeBarrier : public AInteractiveObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0550(0x0018) MISSED OFFSET
	struct FEnvQueryParams                             FindNewDeployLocationParams;                              // 0x0568(0x00B8) (Edit)
	class UStatusEffectData*                           BarrierMod1EffectData;                                    // 0x0620(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStatusEffectData*                           BarrierMod5EffectData;                                    // 0x0628(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FDataTableValueHandle                       BarrierMod5DecayDuration;                                 // 0x0630(0x0018) (Edit)
	struct FDataTableValueHandle                       TurboDuration;                                            // 0x0648(0x0018) (Edit)
	class UStatusEffectData*                           TurbochargeDefault;                                       // 0x0660(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAttributeInitializationData                DamageScalarFormula;                                      // 0x0668(0x0038) (Edit)
	struct FAttributeInitializationData                BeginAuraBuffDurationFormula;                             // 0x06A0(0x0038) (Edit)
	struct FAttributeInitializationData                EndAuraBuffDurationFormula;                               // 0x06D8(0x0038) (Edit)
	struct FAttributeInitializationData                OwningCharacterBuffMagnitudeScale;                        // 0x0710(0x0038) (Edit)
	class UOakDamageComponent*                         DamageComponent;                                          // 0x0748(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGbxCustomizationComponent*                  CustomizationComponent;                                   // 0x0750(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPrimitiveComponent*                         AuraOverlapPrimitive;                                     // 0x0758(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUsableComponent*                            UsableComponent;                                          // 0x0760(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPrimitiveComponent*                         BarrierTouchComponent;                                    // 0x0768(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<struct FShieldBarrierTrackedBuffTarget>     TrackedBuffTargets;                                       // 0x0770(0x0010) (ZeroConstructor, Transient)
	TArray<struct FAttributeEffectData>                PersistentAuraAttributeEffects_Owner;                     // 0x0780(0x0010) (ZeroConstructor, Transient)
	TArray<struct FAttributeEffectData>                PersistentAuraAttributeEffects_Default;                   // 0x0790(0x0010) (ZeroConstructor, Transient)
	struct FOperativeBarrierStatusEffectInfo           BeginAuraStatusEffect;                                    // 0x07A0(0x0018) (Transient, IsPlainOldData)
	struct FOperativeBarrierStatusEffectInfo           EndAuraStatusEffect;                                      // 0x07B8(0x0018) (Transient, IsPlainOldData)
	class AShield*                                     Shield;                                                   // 0x07D0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FGbxAttributeFloat                          DamageScalar;                                             // 0x07D8(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	unsigned char                                      UnknownData01[0x4];                                       // 0x07E4(0x0004) MISSED OFFSET
	TArray<class UPrimitiveComponent*>                 ProjectileOverlapComponents;                              // 0x07E8(0x0010) (ExportObject, ZeroConstructor, Transient)
	class UOakActionAbility_Barrier*                   OwnerActionAbility;                                       // 0x07F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FOakActionAbilityEnumMaskHelper             RuntimeMods;                                              // 0x0800(0x0004) (Net, Transient)
	bool                                               bIsTurbocharged;                                          // 0x0804(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0805(0x0003) MISSED OFFSET
	class UWeaponShotModifier*                         CarriedShotModifier;                                      // 0x0808(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x14];                                      // 0x0810(0x0014) MISSED OFFSET
	bool                                               bIsShuttingDown;                                          // 0x0824(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0825(0x0003) MISSED OFFSET
	struct FOperativeBarrierState                      BarrierState;                                             // 0x0828(0x0020) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	unsigned char                                      UnknownData05[0x110];                                     // 0x0848(0x0110) MISSED OFFSET
	TMap<class AActor*, int>                           ShieldOverlappingActors;                                  // 0x0958(0x0050) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OperativeBarrier");
		return ptr;
	}


	void UnregisterProjectileOverlapComponent(class UPrimitiveComponent* Component);
	bool ToggleBarrierState();
	void SetupBarrierMods();
	void SetIsTransitioningStates(bool InbIsTransitioningStates);
	void RegisterProjectileOverlapComponent(class UPrimitiveComponent* Component);
	void OnTurbochargedStateChanged(bool InbIsTurbocharged);
	void OnRep_RuntimeMods();
	void OnRep_bIsTurbocharged();
	void OnRep_BarrierState();
	void OnDamageScalarChanged(float OldValue, float NewValue);
	void OnBarrierAbsorbedDamage(class UDamageSource* DamageSource, class UGbxDamageType* InDamageType);
	void NotifyActorComponentEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void NotifyActorComponentBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Multicast_PlayEffectsOnAugment(class UClass* AugmentClass, const struct FName& AugmentName, class UObject* AdditionalContext);
	bool HasBarrierMod(EOperativeBarrierModType ModType);
	void HandleProjectileOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void HandleBarrierStateChange(EOperativeBarrierState OldState, EOperativeBarrierState NewState);
	void ApplyDeterrenceFieldToEnemy(class AActor* Enemy);
};


// Class OakGame.OperativeCannonAnimInstance
// 0x0020 (0x0560 - 0x0540)
class UOperativeCannonAnimInstance : public UGbxAnimInstance
{
public:
	float                                              Pitch;                                                    // 0x0540(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              Yaw;                                                      // 0x0544(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     AimFacingLocation;                                        // 0x0548(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0554(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OperativeCannonAnimInstance");
		return ptr;
	}

};


// Class OakGame.OperativeCharacterComponent
// 0x0098 (0x0310 - 0x0278)
class UOperativeCharacterComponent : public UPlayerCharacterComponent
{
public:
	unsigned char                                      UnknownData00[0x98];                                      // 0x0278(0x0098) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OperativeCharacterComponent");
		return ptr;
	}


	void SetOperativeDeviceVisible(bool bVisible);
};


// Class OakGame.OperativeStandInComponent
// 0x00B0 (0x0308 - 0x0258)
class UOperativeStandInComponent : public UStandInCharacterComponent
{
public:
	TArray<struct FOperativeStandInActionAbility>      ActionAbilities;                                          // 0x0258(0x0010) (Edit, ZeroConstructor)
	TSoftObjectPtr<class UOakPlayerAbilitySlotData>    ActionSkillSlot;                                          // 0x0268(0x0028) (Edit)
	TSoftObjectPtr<class UOakPlayerAbilitySlotData>    GrenadeSlot;                                              // 0x0290(0x0028) (Edit)
	class UMeshComponent*                              ActionSkillDeviceComponent;                               // 0x02B8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FCurrentOperativeStandInAbilitySlotInfo     CurrentActionSkillSlot;                                   // 0x02C0(0x0020) (Transient)
	struct FCurrentOperativeStandInAbilitySlotInfo     CurrentGrenadeSlot;                                       // 0x02E0(0x0020) (Transient)
	class UOakPlayerAbilitySlotData*                   LastAbilitySlotSlotted;                                   // 0x0300(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OperativeStandInComponent");
		return ptr;
	}


	void SetActionSkillDeviceVisible(bool bVisible);
};


// Class OakGame.OptionDescriptionData
// 0x0150 (0x0180 - 0x0030)
class UOptionDescriptionData : public UGbxDataAsset
{
public:
	TArray<class UOptionDescriptionItem*>              AudioOptionDescription;                                   // 0x0030(0x0010) (Edit, ExportObject, ZeroConstructor)
	TArray<class UOptionDescriptionItem*>              NetworkOptionDescription;                                 // 0x0040(0x0010) (Edit, ExportObject, ZeroConstructor)
	TArray<class UOptionDescriptionItem*>              ControlsOptionDescription;                                // 0x0050(0x0010) (Edit, ExportObject, ZeroConstructor)
	TArray<class UOptionDescriptionItem*>              AdvancedControlsOptionDescription;                        // 0x0060(0x0010) (Edit, ExportObject, ZeroConstructor)
	TArray<class UOptionDescriptionItem*>              GameplayOptionDescription;                                // 0x0070(0x0010) (Edit, ExportObject, ZeroConstructor)
	TArray<class UOptionDescriptionItem*>              GraphicsOptionDescription;                                // 0x0080(0x0010) (Edit, ExportObject, ZeroConstructor)
	TArray<class UOptionDescriptionItem*>              GraphicsAdvancedOptionDescription;                        // 0x0090(0x0010) (Edit, ExportObject, ZeroConstructor)
	TArray<class UOptionDescriptionItem*>              GraphicsBenchmarkOptionsDescription;                      // 0x00A0(0x0010) (Edit, ExportObject, ZeroConstructor)
	TArray<class UOptionDescriptionItem*>              AccessibilityOptionsDescription;                          // 0x00B0(0x0010) (Edit, ExportObject, ZeroConstructor)
	TArray<struct FRebindContextAndDescription>        KeyboardCommonControlSchemes;                             // 0x00C0(0x0010) (Edit, ZeroConstructor)
	TArray<struct FRebindContextAndDescription>        KeyboardWalkingControlSchemes;                            // 0x00D0(0x0010) (Edit, ZeroConstructor)
	TArray<struct FRebindContextAndDescription>        KeyboardVehicleControlSchemes;                            // 0x00E0(0x0010) (Edit, ZeroConstructor)
	struct FRebindContextAndDescription                GamepadCommonControlScheme;                               // 0x00F0(0x0050) (Edit)
	TArray<struct FGamepadStickTypeToSchemes>          GamepadWalkingStickTypeToSchemesMap;                      // 0x0140(0x0010) (Edit, ZeroConstructor)
	TArray<struct FGamepadStickTypeToSchemes>          GamepadDrivingStickTypeToSchemesMap;                      // 0x0150(0x0010) (Edit, ZeroConstructor)
	class UOptionDescriptionItem*                      WalkingThumbstickSchemeDescription;                       // 0x0160(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOptionDescriptionItem*                      WalkingButtonSchemeDescription;                           // 0x0168(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOptionDescriptionItem*                      DrivingThumbstickSchemeDescription;                       // 0x0170(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOptionDescriptionItem*                      DrivingButtonSchemeDescription;                           // 0x0178(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OptionDescriptionData");
		return ptr;
	}

};


// Class OakGame.OutOfMapWaypointComponent
// 0x0020 (0x07D0 - 0x07B0)
class UOutOfMapWaypointComponent : public UMissionIconComponent
{
public:
	float                                              VisibleDistanceOverride;                                  // 0x07B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HiddenDistanceOverride;                                   // 0x07B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      MissionClass;                                             // 0x07B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FGuid                                       IconGuid;                                                 // 0x07C0(0x0010) (Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OutOfMapWaypointComponent");
		return ptr;
	}

};


// Class OakGame.OutrunnerVehicleAnimInstance
// 0x0850 (0x1B40 - 0x12F0)
class UOutrunnerVehicleAnimInstance : public UOakVehicleAnimInstance
{
public:
	bool                                               bOverrideParentAnimInstance;                              // 0x12F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x12F1(0x0003) MISSED OFFSET
	float                                              BodyCycleFromEngineCycleRatio;                            // 0x12F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              IdleRPM;                                                  // 0x12F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EngineRunningAmplitude;                                   // 0x12FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EngineIdleAmplitude;                                      // 0x1300(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MufflerAmplitudeMutliplier;                               // 0x1304(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EngineRunningFrequency;                                   // 0x1308(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EngineIdleFrequency;                                      // 0x130C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MufflerFrequencyMutliplier;                               // 0x1310(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x1314(0x0004) MISSED OFFSET
	class UAnimSequence*                               AnimCharacterEnter;                                       // 0x1318(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               AnimCharacterExit;                                        // 0x1320(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               AnimHoodDown;                                             // 0x1328(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               AnimBrakeBounceA;                                         // 0x1330(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               AnimBrakeBounceB;                                         // 0x1338(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlendBodyAlpha;                                           // 0x1340(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BlendAccelAlpha;                                          // 0x1344(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7F8];                                     // 0x1348(0x07F8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OutrunnerVehicleAnimInstance");
		return ptr;
	}


	void OnPrimaryOccupantExit();
	void OnPrimaryOccupantEnter();
};


// Class OakGame.ParticleModuleLocationProceduralMeshSurface
// 0x0010 (0x0048 - 0x0038)
class UParticleModuleLocationProceduralMeshSurface : public UParticleModuleLocationBase
{
public:
	struct FName                                       ProceduralMeshActorName;                                  // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ProceduralMeshComponentName;                              // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ParticleModuleLocationProceduralMeshSurface");
		return ptr;
	}

};


// Class OakGame.PassthroughBalanceStateComponent
// 0x0008 (0x01E0 - 0x01D8)
class UPassthroughBalanceStateComponent : public UBalanceStateComponent
{
public:
	TWeakObjectPtr<class UBalanceStateComponent>       PassthroughTarget;                                        // 0x01D8(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PassthroughBalanceStateComponent");
		return ptr;
	}


	void OnPassthroughTargetLevelChanged(int OldLevel, int NewLevel);
};


// Class OakGame.PatchExpansionData
// 0x0350 (0x0380 - 0x0030)
class UPatchExpansionData : public UGbxDataAsset
{
public:
	class URegionManagerData*                          RegionManagerData;                                        // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UChallengeList*>                      ChallengeLists;                                           // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UGameStatList*>                       GameStatLists;                                            // 0x0048(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TMap<struct FGameplayTag, class UGameStatData*>    KillStatMap;                                              // 0x0058(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UOakLoadingScreenExpansionData*              LoadingScreenData;                                        // 0x00A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UOakMayhemModifiersDataAsset*>        MayhemModeData;                                           // 0x00B0(0x0010) (ZeroConstructor, Deprecated)
	TArray<class UOakMayhemUIDataAsset*>               MayhemModeUIData;                                         // 0x00C0(0x0010) (ZeroConstructor, Deprecated)
	TArray<class UMayhemOverrideDataAsset*>            MayhemModeTwoData;                                        // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TEnumAsByte<EOakLeague>                            SourceLeague;                                             // 0x00E0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00E1(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       LeagueEnterTravelStationClass;                            // 0x00E8(0x0028) (Edit, DisableEditOnInstance)
	struct FTransform                                  LeagueTravelStationTransform;                             // 0x0110(0x0030) (Edit, DisableEditOnInstance, IsPlainOldData)
	TSoftObjectPtr<class UClass>                       LeagueExitTravelStationClass;                             // 0x0140(0x0028) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0168(0x0008) MISSED OFFSET
	struct FTransform                                  LeagueExitTravelStationTransform;                         // 0x0170(0x0030) (Edit, DisableEditOnInstance, IsPlainOldData)
	TSoftObjectPtr<class UClass>                       InitialMission;                                           // 0x01A0(0x0028) (Edit, DisableEditOnInstance)
	TArray<TSoftObjectPtr<class UClass>>               MissionsWithoutMissionGraph;                              // 0x01C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UOakStreamingInteractionEvent*>       AdditionalStreamingEvents;                                // 0x01D8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class FString>                              BadassEventBlackListedStrings;                            // 0x01E8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, EditConst)
	TArray<class FString>                              BadassEventBlackListedNameStrings;                        // 0x01F8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, EditConst)
	TArray<class FString>                              RareChestLootDefsStrings;                                 // 0x0208(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, EditConst)
	TSoftObjectPtr<class UClass>                       LeagueMasterChallenge;                                    // 0x0218(0x0028) (Edit, DisableEditOnInstance)
	struct FText                                       LeagueName;                                               // 0x0240(0x0028) (Edit, DisableEditOnInstance)
	struct FText                                       LeagueDescription;                                        // 0x0258(0x0028) (Edit, DisableEditOnInstance)
	class UTexture2D*                                  LeagueOverviewPanelButtonTexture;                         // 0x0270(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  LeagueChallengesPanelButtonTexture;                       // 0x0278(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  LeagueOverviewPanelButtonTextureSplit;                    // 0x0280(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  LeagueChallengesPanelButtonTextureSplit;                  // 0x0288(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       LeagueActiveText;                                         // 0x0290(0x0028) (Edit, DisableEditOnInstance)
	int                                                LeagueFinalDay;                                           // 0x02A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x02AC(0x0004) MISSED OFFSET
	class UZoneMapListData*                            ZoneMapList;                                              // 0x02B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FLevelTravelDataListStationPatch>    LevelTravelDataLists;                                     // 0x02B8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UChallengeCategoryData*>              ProgressChallengeCategories;                              // 0x02C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FChallengeFilterType>                AvailableZoneChallengeFilters;                            // 0x02D8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FChallengeFilterType>                AvailableGalaxyChallengeFilters;                          // 0x02E8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UCrewQuartersDecorationData*>         CrewQuartersDecorations;                                  // 0x02F8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UAdditionalZoneMapData*>              ZoneMapAdditions;                                         // 0x0308(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UZoneMapPOITypeData*>                 POIDynamicTypeAdditions;                                  // 0x0318(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UGuardianRankRewardData*>             GuardianRankRewards;                                      // 0x0328(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UGuardianRankPerkData*>               GuardianRankPerks;                                        // 0x0338(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UOakVaultCardRewardData*>             VaultCardRewards;                                         // 0x0348(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UVaultCardGeneralData*                       GlobalVaultCardData;                                      // 0x0358(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UItemPoolData*                               ItemPoolToReplaceWithRandomItemPool;                      // 0x0360(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FItemPoolCollection>                 RandomDateBasedItemPools;                                 // 0x0368(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0378(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PatchExpansionData");
		return ptr;
	}

};


// Class OakGame.PerceptiveActiveAmbientSound
// 0x0010 (0x0478 - 0x0468)
class APerceptiveActiveAmbientSound : public AActiveAmbientSound
{
public:
	class UAIPerceptionComponent*                      AIPerception;                                             // 0x0468(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              StartleRadius;                                            // 0x0470(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0474(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PerceptiveActiveAmbientSound");
		return ptr;
	}


	void OnTargetPerceptionUpdated(class AActor* Actor, const struct FAIStimulus& Stimulus);
};


// Class OakGame.PerformanceEchoData
// 0x0008 (0x0038 - 0x0030)
class UPerformanceEchoData : public UPerformanceEchoDataBase
{
public:
	EEchoPerformanceMode                               Mode;                                                     // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PerformanceEchoData");
		return ptr;
	}

};


// Class OakGame.PerPlayerActorCullingManager
// 0x0018 (0x0040 - 0x0028)
class UPerPlayerActorCullingManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	TArray<struct FPerPlayerCullable>                  AllCullables;                                             // 0x0030(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PerPlayerActorCullingManager");
		return ptr;
	}

};


// Class OakGame.PetEnrageRift
// 0x0030 (0x04B8 - 0x0488)
class APetEnrageRift : public AOwnedActionAbilityActor
{
public:
	class UBeastmasterCharacterComponent*              BeastmasterComponent;                                     // 0x0488(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AOakCharacter*                               PetActor;                                                 // 0x0490(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class UTeamComponent*                              CachedTeamComponent;                                      // 0x0498(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x04A0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PetEnrageRift");
		return ptr;
	}


	bool TeleportPetToCurrentLocation();
	void StartPetSummon();
	void OnRep_PetActor();
	void OnPetTeleported();
	void OnPetSummonStarted();
	void OnPetResurrected();
	void OnLinkedTargetRemoved(class AOakCharacter* InLinkedTarget);
	void OnLinkedTargetAdded(class AOakCharacter* InLinkedTarget);
	void OnCinematicModeChanged(class UCinematicModeData* CinematicMode);
	void OnActorExitedSphere(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnActorEnteredSphere(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void NotifyServerWaitingOnTeleport();
	void NotifyClientTeleport();
	class UPrimitiveComponent* GetOverlapComponent();
};


// Class OakGame.PetSpiderantAnimInstance
// 0x0010 (0x0B00 - 0x0AF0)
class UPetSpiderantAnimInstance : public UOakCharacterAnimInstance
{
public:
	float                                              RollSprintSpeedStop;                                      // 0x0AF0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bStopRollSprint;                                          // 0x0AF4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x0AF5(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PetSpiderantAnimInstance");
		return ptr;
	}

};


// Class OakGame.PhaseTranceSingularityActor
// 0x0100 (0x0588 - 0x0488)
class APhaseTranceSingularityActor : public AOwnedActionAbilityActor
{
public:
	struct FSingularityInitializationInfo              SingularityInfo;                                          // 0x0488(0x00C0) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FDataTableValueHandle                       ImpulseRadius;                                            // 0x0548(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FDataTableValueHandle                       AscendantImpulseRadius;                                   // 0x0560(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class AActor*                                      IgnoreActor;                                              // 0x0578(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              SingularityRadius;                                        // 0x0580(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0584(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PhaseTranceSingularityActor");
		return ptr;
	}


	void OnRep_SingularityRadius();
	void ConfigureSingularity();
};


// Class OakGame.PhotoModeAdjustmentsWidget
// 0x0018 (0x0308 - 0x02F0)
class UPhotoModeAdjustmentsWidget : public UGbxUmgMenu
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x02F0(0x0008) MISSED OFFSET
	class APhotoModeController*                        PhotoModeController;                                      // 0x02F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UPhotoModeGlobals*                           PhotoModeGlobals;                                         // 0x0300(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PhotoModeAdjustmentsWidget");
		return ptr;
	}


	void OnVignetteIntensityChanged(float NewVignetteIntensity);
	void OnVignetteFeatheringChanged(float NewVignetteFeathering);
	void OnViewRollChanged(float NewViewRoll);
	void OnToeChanged(float NewToe);
	void OnTimeOfDayChanged(float NewTimeOfDay);
	void OnSuperSharpModeStateChanged(bool bNewSuperSharpModeState);
	void OnSlopeChanged(float NewSlope);
	void OnShoulderChanged(float NewShoulder);
	void OnSaturationChanged(float NewSaturation);
	void OnQualityChanged(float NewQuality);
	void OnPhotoModeUIVisiblityChanged(bool bNewVisibleState);
	void OnOverrideFocusStateChanged(bool bNewOverrideFocusState);
	void OnHUDVisibilityChanged(bool bNewVisibleState);
	void OnHidePlayerStateChanged(bool bNewHidePlayerState);
	void OnHideDamageNumbersStateChanged(bool bNewHideDamageNumbersState);
	void OnGrainIntensityChanged(float NewGrainIntensity);
	void OnGammaChanged(float NewGamma);
	void OnGamePausedStateChangeRequested();
	void OnGainChanged(float NewGain);
	void OnFringeIntensityChanged(float NewFringeIntensity);
	void OnFOVChanged(float NewFOV);
	void OnFocalRegionChanged(float NewFocalRegion);
	void OnFocalDistanceChanged(float NewFocalDistance);
	void OnFilterIntensityChanged(float NewFilterIntensity);
	void OnFilterIndexChanged(int NewFilterIndex);
	void OnFilmToneMapperStateChanged(bool bNewFileToneMapperState);
	void OnExitPhotoModeRequested();
	void OnExitPhotoMode(class AOakCharacter_Player* Player, class AOakPlayerController* PlayerController);
	void OnEnterPhotoMode(class AOakCharacter_Player* Player, class AOakPlayerController* PlayerController);
	void OnDOFIntensityChanged(float NewDOFIntensity);
	void OnContrastChanged(float NewConstrast);
	void OnAutoFocusStateChanged(bool bNewFocusState);
	void HandleGameSoloPlayStateChanged(bool bSoloPlay);
	void HandleGamePauseStateChanged(bool bNewPauseState);
	float ConvertSliderViewRollToGameViewRoll(float SliderValue);
	float ConvertSliderTimeToGameTime(float SliderValue);
	float ConvertSliderSaturationToGameSaturation(float SliderValue);
	float ConvertSliderQualityToGameQuality(float SliderValue);
	float ConvertSliderGammaToGameGamma(float SliderValue);
	float ConvertSliderGainToGameGain(float SliderValue);
	float ConvertSliderFringeIntensityToGameFringeIntensity(float SliderValue);
	float ConvertSliderFOVToGameFOV(float SliderValue);
	float ConvertSliderFocalRegionToGameFocalRegion(float SliderValue);
	float ConvertSliderFocalDistanceToGameFocalDistance(float SliderValue);
	float ConvertSliderDOFIntensityToGameDOFIntensity(float SliderValue);
	float ConvertSliderContrastToGameContrast(float SliderValue);
	void ConvertMinutesToHourMinutesString(int Minutes, class FString* OutTimeString);
	float ConvertGameViewRollToSliderViewRoll();
	float ConvertGameSaturationToSliderSaturation();
	float ConvertGameQualityToSliderQuality();
	float ConvertGameGammaToSliderGamma();
	float ConvertGameGainToSliderGain();
	float ConvertGameFringeIntensityToSliderFringeIntensity();
	float ConvertGameFOVToSliderFOV();
	float ConvertGameFocalRegionToSliderFocalRegion();
	float ConvertGameFocalDistanceToSliderGain();
	float ConvertGameDOFIntensityToSliderDOFIntensity();
	float ConvertGameContrastToSliderContrast();
	ECheckBoxState ConvertBoolToCheckBoxState(bool bBooleanState);
};


// Class OakGame.PhotoModeController
// 0x1318 (0x1770 - 0x0458)
class APhotoModeController : public AActor
{
public:
	class UPostProcessComponent*                       PostProcessComponent;                                     // 0x0458(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class AOakCharacter_Player*                        PhotoPawn;                                                // 0x0460(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	class AOakPlayerController*                        PhotoController;                                          // 0x0468(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0470(0x0010) MISSED OFFSET
	TScriptInterface<class UPhotoModeViewInterface>    PhotoModeView;                                            // 0x0480(0x0010) (ZeroConstructor, IsPlainOldData)
	bool                                               bPhotoModeActive;                                         // 0x0490(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC5F];                                     // 0x0491(0x0C5F) MISSED OFFSET
	struct FPhotoModeState                             PhotoModeState;                                           // 0x10F0(0x0670)
	class UGameStatData*                               StylizeStat;                                              // 0x1760(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x1768(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PhotoModeController");
		return ptr;
	}


	void TakeScreenshot();
	void SetVignetteIntensity(float VignetteIntensity);
	void SetVignetteFeathering(float VignetteFeathering);
	void SetViewRoll(float ViewRoll);
	void SetToe(float Toe);
	void SetTimeOfDay(float TimeOfDay);
	void SetSuperSharpModeState(bool bEnable);
	void SetSlope(float Slope);
	void SetShoulder(float Shoulder);
	void SetSaturation(float SaturationSlider);
	void SetQuality(float Quality);
	void SetPhotoModeUIVisibility(bool bVisible);
	void SetOverrideFocusState(bool bOverrideFocusState);
	void SetHUDVisibilityChanged(bool bVisible);
	void SetHidePlayerState(bool bHidePlayerState);
	void SetHideDamageNumbersState(bool bHideDamageNumbersState);
	void SetGrainIntensity(float GrainIntensity);
	void SetGamma(float Gamma);
	void SetGamePausedState(bool bPaused);
	void SetGain(float Gain);
	void SetFringeIntensity(float FringeIntensity);
	void SetFOV(float FOV);
	void SetFocalRegion(float FocalRegion);
	void SetFocalDistance(float FocalDistance);
	void SetFilterIntensity(float FilterIntensity);
	void SetFilterIndex(int FilterIndex);
	void SetFilmToneMapperState(bool bEnable);
	void SetDOFIntensity(float DOFIntensity);
	void SetContrast(float ConstrastSlider);
	void SetAutoFocusState(bool bEnable);
	void ResetAllSettings();
	void OnNumPlayersChanged(int NewNumPlayers);
	void OnExitPhotoMode();
	void OnEnterPhotoMode();
	bool IsPhotoModeActive();
	bool IsCinematicPhoto();
	float GetVignetteIntensity();
	float GetVignetteFeathering();
	float GetViewRoll();
	float GetToe();
	float GetTimeOfDay();
	bool GetSuperSharpModeState();
	float GetSlope();
	float GetShoulder();
	float GetSaturation();
	float GetQuality();
	bool GetPhotoModeUIVisibility();
	struct FPhotoModeState GetPhotoModeState();
	bool GetOverrideFocusState();
	bool GetHUDVisibility();
	bool GetHidePlayerState();
	bool GetHideDamageNumbersState();
	float GetGrainIntensity();
	float GetGamma();
	bool GetGamePausedState();
	float GetGain();
	float GetFringeIntensity();
	float GetFOV();
	float GetFocalRegion();
	float GetFocalDistance();
	float GetFilterIntensity();
	int GetFilterIndex();
	bool GetFilmToneMapperState();
	float GetDOFIntensity();
	float GetContrast();
	bool GetAutoFocusState();
	void DeactivateSlomo();
	void ActivateSlomo();
};


// Class OakGame.PhotoModeGlobals
// 0x00C0 (0x00F0 - 0x0030)
class UPhotoModeGlobals : public UGbxDataAsset
{
public:
	class UGbxMenuData*                                PhotoModeMenuData;                                        // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      PhotoModeControllerType;                                  // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FPhotoModeOptionSet>                 PhotoModeOptions;                                         // 0x0040(0x0010) (Edit, ZeroConstructor)
	float                                              MinFOV;                                                   // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxFOV;                                                   // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinDOFIntensity;                                          // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDOFIntensity;                                          // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinFocalDistance;                                         // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxFocalDistance;                                         // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinFocalRegion;                                           // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxFocalRegion;                                           // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinContrast;                                              // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxContrast;                                              // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinSaturation;                                            // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxSaturation;                                            // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinGamma;                                                 // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxGamma;                                                 // 0x0084(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinGain;                                                  // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxGain;                                                  // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinQuality;                                               // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxQuality;                                               // 0x0094(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinRoll;                                                  // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxRoll;                                                  // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraModeBlendInTime;                                    // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraModeBlendOutTime;                                   // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraForwardBackScale;                                   // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraForwardBackClamp;                                   // 0x00AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraLeftRightScale;                                     // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraLeftRightClamp;                                     // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraUpDownScale;                                        // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraUpDownClamp;                                        // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraDeadZone;                                           // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraInputPitchScale;                                    // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraInputYawScale;                                      // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinFringeIntensity;                                       // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxFringeIntensity;                                       // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00D4(0x0004) MISSED OFFSET
	TArray<class UTexture*>                            FilterList;                                               // 0x00D8(0x0010) (Edit, ZeroConstructor)
	class UGameStatData*                               StylizeStat;                                              // 0x00E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PhotoModeGlobals");
		return ptr;
	}

};


// Class OakGame.PhotoModeViewInterface
// 0x0000 (0x0028 - 0x0028)
class UPhotoModeViewInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PhotoModeViewInterface");
		return ptr;
	}

};


// Class OakGame.PIEBenchmarkManager
// 0x0010 (0x0038 - 0x0028)
class UPIEBenchmarkManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PIEBenchmarkManager");
		return ptr;
	}

};


// Class OakGame.PlanetData
// 0x0098 (0x0120 - 0x0088)
class UPlanetData : public ULevelGroupData
{
public:
	struct FSoftObjectPath                             PlanetMeshDataReference;                                  // 0x0088(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FSoftClassPath                              PlanetClassReference;                                     // 0x00A0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x8];                                       // 0x00B8(0x0008) MISSED OFFSET
	struct FTransform                                  GalaxyMapTransform;                                       // 0x00C0(0x0030) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsTrialPlanetoid;                                        // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bNoPlanetDisplay;                                         // 0x00F1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bNotAvailableForHyperspaceTravel;                         // 0x00F2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x00F3(0x0005) MISSED OFFSET
	class UTexture2D*                                  ConceptArtToDisplay;                                      // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0100(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlanetData");
		return ptr;
	}


	bool ShouldHighlight(class UObject* WorldContextObject);
	void OnPlanetMeshDataLoaded();
	void OnPlanetClassLoaded();
	class UZoneMapData* STATIC_GetZoneMapForTrackedMission(class UObject* WorldContextObject);
	void GetWorldDiscoveryAreaCounts(class AOakPlayerController* ViewingPlayer, TEnumAsByte<EOakLeague> InAssociatedLeague, class UPatchExpansionData* InAssociatedPatch, class UDownloadableContentData* InAssociatedDLC, int* TotalWorldDiscoveryAreas, int* FoundWorldDiscoveryAreas);
	void GetWorldChallengeCounts(class AOakPlayerController* ViewingPlayer, class UChallengeCategoryData* ChallengeCategory, int* TotalCount, int* CompletedCount);
	bool STATIC_GetPlanetZoneMaps(class AOakPlayerController* PlayerController, class UPlanetData* Planet, bool FindOnlyDiscovered, bool FindOnlyLicensed, TArray<class UZoneMapData*>* OutZoneMaps);
	void STATIC_GetPlanetZoneMapFilenames(class AOakPlayerController* PlayerController, class UPlanetData* Planet, bool FindOnlyDiscovered, TArray<class FString>* OutZoneMapFilenames);
	class UPlanetMeshData* GetPlanetMeshData();
	class UPlanetData* STATIC_GetPlanetForObjective(class UObject* WorldContextObject, class UClass* MissionToTrack);
	void STATIC_GetPlanetFastTravelStations(class UObject* WorldContextObject, class UPlanetData* Planet, bool FindOnlyDiscovered, class APlayerController* ViewingPlayer, TArray<class UFastTravelStationData*>* OutFastTravelStations);
	class UPlanetData* STATIC_GetPlanetDataForCurrentLevel(class UObject* WorldContextObject);
	class UClass* GetPlanetClass();
	void STATIC_GetGalaxyDiscoveryAreaCounts(class AOakPlayerController* ViewingPlayer, TEnumAsByte<EOakLeague> InAssociatedLeague, class UPatchExpansionData* InAssociatedPatch, class UDownloadableContentData* InAssociatedDLC, int* TotalWorldDiscoveryAreas, int* FoundWorldDiscoveryAreas);
	void STATIC_GetGalaxyChallengeCounts(class AOakPlayerController* ViewingPlayer, class UChallengeCategoryData* ChallengeCategory, int* TotalCount, int* CompletedCount);
	class UFastTravelStationData* STATIC_GetClosestFastTravelStationToObjective(class UObject* WorldContextObject, class UClass* MissionToTrack);
	void AsyncLoadPlanetMeshData(const struct FScriptDelegate& LoadedDelegate);
	void AsyncLoadPlanetClass(const struct FScriptDelegate& LoadedDelegate);
};


// Class OakGame.PlanetMeshData
// 0x0050 (0x0080 - 0x0030)
class UPlanetMeshData : public UGbxDataAsset
{
public:
	class UStaticMesh*                                 PlanetMesh;                                               // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 DecoMesh;                                                 // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 RingDecoMesh;                                             // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 GalaxyTable_PlanetMesh;                                   // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FZoneMapPOIMeshListEntry>            ZoneMapPOIMeshs;                                          // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UMaterialInterface*                          PlanetMaterial;                                           // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          GalaxyTable_PlanetShader;                                 // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          GalaxyTable_AtmosphereShader;                             // 0x0070(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  LandTexture;                                              // 0x0078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlanetMeshData");
		return ptr;
	}

};


// Class OakGame.PlayerAlertableInterface
// 0x0000 (0x0028 - 0x0028)
class UPlayerAlertableInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerAlertableInterface");
		return ptr;
	}

};


// Class OakGame.PlayerAlertData
// 0x0038 (0x0068 - 0x0030)
class UPlayerAlertData : public UGbxDataAsset
{
public:
	EPlayerAlertType                                   PlayerAlertType;                                          // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class UDialogEvent*                                PlayerAlertEvent;                                         // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PlayerAlertLifetime;                                      // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               ApplyOutlineEffect;                                       // 0x0044(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               AttachAlertIcon;                                          // 0x0045(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0046(0x0002) MISSED OFFSET
	class UInWorldIconData*                            PlayerAlertIconData;                                      // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                OutlineColor;                                             // 0x0050(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	int                                                CustomStencilValue;                                       // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlaySound;                                               // 0x0064(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0065(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerAlertData");
		return ptr;
	}

};


// Class OakGame.PlayerBalanceStateComponent
// 0x0060 (0x0238 - 0x01D8)
class UPlayerBalanceStateComponent : public UBalanceStateComponent
{
public:
	int                                                Experience;                                               // 0x01D8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	uint32_t                                           UncappedExperience;                                       // 0x01DC(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	struct FGbxAttributeFloat                          CombatExperienceScale;                                    // 0x01E0(0x000C) (Transient)
	struct FGbxAttributeFloat                          MissionExperienceScale;                                   // 0x01EC(0x000C) (Transient)
	struct FGbxAttributeFloat                          AllExperienceScale;                                       // 0x01F8(0x000C) (Transient)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0204(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnLevelUp;                                                // 0x0208(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnExperienceAdded;                                        // 0x0218(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUncappedExperienceAdded;                                // 0x0228(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerBalanceStateComponent");
		return ptr;
	}


	void SimplePlayerBalanceEvent__DelegateSignature();
	void PlayerUncappedExpAddedEvent__DelegateSignature(int ExperienceAdded, EPlayerExperienceSource Source, EPlayerExperienceType Type);
	void PlayerExpAddedEvent__DelegateSignature(int ExperienceAdded, EPlayerExperienceSource Source, EPlayerExperienceType Type);
	void PlayerBalanceEvent__DelegateSignature(int OldExperienceLevel, int NewExperienceLevel);
	void OnRep_UncappedExperience(uint32_t PreviousUncappedExperience);
	void OnRep_Experience();
	int GetExperience();
	void Client_OnLevelUp(int OldExperienceLevel, int NewExperienceLevel);
	void Client_NotifyCheatSetExperienceLevel();
	void AddExperience(int Amount, EPlayerExperienceSource Source, EPlayerExperienceType Type);
};


// Class OakGame.PlayerCharacterComponentSlotData
// 0x0040 (0x0070 - 0x0030)
class UPlayerCharacterComponentSlotData : public UGbxDataAsset
{
public:
	struct FText                                       DisplayName;                                              // 0x0030(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FText                                       Description;                                              // 0x0048(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<class UPlayerCharacterComponentAugmentData*> SupportedAugments;                                        // 0x0060(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerCharacterComponentSlotData");
		return ptr;
	}

};


// Class OakGame.PlayerClassCountAttributeValueResolver
// 0x0010 (0x0038 - 0x0028)
class UPlayerClassCountAttributeValueResolver : public UAttributeValueResolver
{
public:
	class UPlayerClassIdentifier*                      PlayerClass;                                              // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bNormalizeValue;                                          // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerClassCountAttributeValueResolver");
		return ptr;
	}

};


// Class OakGame.PlayerClassIdentifier
// 0x0080 (0x00F0 - 0x0070)
class UPlayerClassIdentifier : public UPrimaryAssetLabel
{
public:
	struct FSoftClassPath                              CharacterBlueprint;                                       // 0x0070(0x0018) (Edit)
	struct FName                                       ShortName;                                                // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       DisplayName;                                              // 0x0090(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       CharacterName;                                            // 0x00A8(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       ClassDescription;                                         // 0x00C0(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bCameraPlayer;                                            // 0x00D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D9(0x0007) MISSED OFFSET
	class UDownloadableExpansionData*                  DlcExpansion;                                             // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAvailableForDataExtraction;                              // 0x00E8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00E9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerClassIdentifier");
		return ptr;
	}

};


// Class OakGame.PlayerClassMissionRewardWeightValueResolver
// 0x0008 (0x0030 - 0x0028)
class UPlayerClassMissionRewardWeightValueResolver : public UAttributeValueResolver
{
public:
	class UPlayerClassIdentifier*                      PlayerClass;                                              // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerClassMissionRewardWeightValueResolver");
		return ptr;
	}

};


// Class OakGame.PlayerGuardianRankComponent
// 0x0128 (0x02A0 - 0x0178)
class UPlayerGuardianRankComponent : public UActorComponent
{
public:
	int                                                GuardianRank;                                             // 0x0178(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	int                                                AvailableTokens;                                          // 0x017C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	int64_t                                            GuardianExperience;                                       // 0x0180(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FGuardianRankRewardEntry>            RankRewards;                                              // 0x0188(0x0010) (Net, ZeroConstructor, Transient)
	struct FGuardianRankEnabledIndexTracker            RankRewardsEnabledBits;                                   // 0x0198(0x0020) (Net, Transient)
	TArray<struct FGuardianRankPerkEntry>              RankPerks;                                                // 0x01B8(0x0010) (ZeroConstructor, Transient)
	struct FGuardianRankEnabledIndexTracker            RankPerksEnabledBits;                                     // 0x01C8(0x0020) (Net, Transient)
	int                                                RankRewardRandomSeed;                                     // 0x01E8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01EC(0x0004) MISSED OFFSET
	TArray<struct FGuardianRankRewardCategoryEntry>    RankRewardCategories;                                     // 0x01F0(0x0010) (ZeroConstructor, Transient)
	TArray<class UGuardianRankRewardData*>             CurrentTokenRedemptionOptions;                            // 0x0200(0x0010) (ZeroConstructor, Transient)
	struct FScriptMulticastDelegate                    OnRankChanged;                                            // 0x0210(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTokensAdded;                                            // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGuardianExperienceAdded;                                // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0240(0x0018) MISSED OFFSET
	bool                                               bGuardianRankSystemEnabled;                               // 0x0258(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bDisabledForGameMode;                                     // 0x0259(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x025A(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnRankRewardEnableChanged;                                // 0x0260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRankPerkEnableChanged;                                  // 0x0270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0280(0x0008) MISSED OFFSET
	class UPlayerBalanceStateComponent*                OwnerBalanceState;                                        // 0x0288(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGbxAbility*                                 AbilityInstance;                                          // 0x0290(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AOakCharacter*                               OakCharacterOwner;                                        // 0x0298(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerGuardianRankComponent");
		return ptr;
	}


	void SetGuardianRank(int NewGuardianRank);
	void ServerStartGuardianRankTracking();
	void ServerSetAvailableTokens(int InAvailableTokens);
	void ServerPurchaseReward(class UGuardianRankRewardData* RewardToPurchase);
	void ServerEnableReward(class UGuardianRankRewardData* RewardToChange, bool bEnable);
	void ServerEnablePerkAbility(class UGuardianRankPerkData* PerkToChange, bool bEnable);
	void ServerEnableGuardianRankSystem(bool bEnabled);
	void OnRep_RankRewardsEnabledBits(struct FGuardianRankEnabledIndexTracker* OldEnabledIndexTracker);
	void OnRep_RankRewards();
	void OnRep_RankPerksEnabledBits(struct FGuardianRankEnabledIndexTracker* OldEnabledIndexTracker);
	void OnRep_GuardianRank(int OldGuardianRank);
	void OnRep_GuardianExperience(int64_t OldGuardianExperience);
	void OnRep_AvailableTokens(int OldAvailableTokens);
	void NotifyUncappedExperienceAdded(int ExperienceAdded, EPlayerExperienceSource Source, EPlayerExperienceType Type);
	void NotifyPrimaryCharacterChanged(class AGbxCharacter* NewPrimaryCharacter);
	bool IsGuardianRankSystemEnabled();
	struct FText GetGuardianRankRewardStatsString();
	int GetGuardianRankExperience();
	int GetGuardianRank();
	void DebugResetGuardianRank();
};


// Class OakGame.PlayerIdentityWidget
// 0x0180 (0x01A8 - 0x0028)
class UPlayerIdentityWidget : public UObject
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0028(0x0030) MISSED OFFSET
	class UGbxGFxMovie*                                OwningMovie;                                              // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x148];                                     // 0x0060(0x0148) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerIdentityWidget");
		return ptr;
	}

};


// Class OakGame.PlayerMeleeData
// 0x0110 (0x0140 - 0x0030)
class UPlayerMeleeData : public UGbxDataAsset
{
public:
	class UGbxCondition*                               OverrideCondition;                                        // 0x0030(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                OverridePriority;                                         // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOnlyOverrideOnSuccess;                                   // 0x003C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCanHitUntargetables;                                     // 0x003D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseTargetHoming;                                         // 0x003E(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x003F(0x0001) MISSED OFFSET
	float                                              TargetMaxDistance;                                        // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ImpactDistance;                                           // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TargetMaxAngleYaw;                                        // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TargetMaxAngleUpPitch;                                    // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TargetMaxAngleDownPitch;                                  // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxPitchUpAngle;                                          // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RotateInterpSpeed;                                        // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxYawRate;                                               // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxPitchRate;                                             // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SocketProxomity;                                          // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAttributeInitializationData                DistanceFormula;                                          // 0x0068(0x0038) (Edit)
	float                                              MaxSuccessMeleeHeightOffsetWhenEnemyBelow;                // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxSuccessMeleeHeightOffsetWhenEnemyAbove;                // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SuccessAction;                                            // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      FailureAction;                                            // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageData;                                               // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SuccessDamageData;                                        // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MeleeCooldown;                                            // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MeleeMissCooldown;                                        // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UImpactData*                                 MeleeImpact;                                              // 0x00D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFeedbackData*                               SuccessMeleeFeedback;                                     // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFeedbackData*                               FailMeleeFeedback;                                        // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAttributeInitializationData                ImpactRange;                                              // 0x00E8(0x0038) (Edit)
	bool                                               bReverseImpact;                                           // 0x0120(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0121(0x0003) MISSED OFFSET
	float                                              DefaultReverseImpactForce;                                // 0x0124(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FMeleeReverseImpactEntry>            Thresholds;                                               // 0x0128(0x0010) (Edit, ZeroConstructor)
	TEnumAsByte<ECollisionChannel>                     UntargetableTraceChannel;                                 // 0x0138(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0139(0x0003) MISSED OFFSET
	float                                              UntargetableTraceRadius;                                  // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerMeleeData");
		return ptr;
	}

};


// Class OakGame.PlayerMeleeStateComponent
// 0x0250 (0x03C8 - 0x0178)
class UPlayerMeleeStateComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0xA8];                                      // 0x0178(0x00A8) MISSED OFFSET
	class UPlayerMeleeData*                            PlayerMeleeData;                                          // 0x0220(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UPlayerMeleeData*>                    PlayerMeleeDataList;                                      // 0x0228(0x0010) (Edit, ZeroConstructor)
	struct FMeleeWeaponAttachmentData                  FirstPersonMeleeWeapon;                                   // 0x0238(0x0040) (Edit)
	struct FMeleeWeaponAttachmentData                  ThirdPersonMeleeWeapon;                                   // 0x0278(0x0040) (Edit)
	struct FName                                       MeleeWeaponBoneModifyStateName;                           // 0x02B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MeleeWeaponBoneModifyBlendTime;                           // 0x02C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x02C4(0x0004) MISSED OFFSET
	class UPlayerMeleeData*                            ActivePlayerMeleeData;                                    // 0x02C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FReplicatedMeleeActionData                  ReplicatedMeleeData;                                      // 0x02D0(0x0018) (Net, Transient)
	float                                              MeleeHitTime;                                             // 0x02E8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              EndMeleeDuration;                                         // 0x02EC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              MeleeCooldownEndTime;                                     // 0x02F0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x14];                                      // 0x02F4(0x0014) MISSED OFFSET
	class AActor*                                      CurrentMeleeTarget;                                       // 0x0308(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       CurrentTargetSocket;                                      // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x98];                                      // 0x0318(0x0098) MISSED OFFSET
	class UGbxDamageType*                              DamageTypeOverride;                                       // 0x03B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnPerformMelee;                                           // 0x03B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerMeleeStateComponent");
		return ptr;
	}


	void SetMeleeDamageType(class UClass* InDamageType);
	void SetEnableMeleeWeaponCFX(bool bEnableEffect);
	void Server_PerformSirenOverrunMelee(class AActor* Target);
	void Server_PerformPlayerMelee();
	void STATIC_ResourceUnlockPlayerMeleeWeaponVisible(class AActor* PlayerActor, const struct FName& Reason);
	void STATIC_ResourceLockPlayerMeleeWeaponVisible(class AActor* PlayerActor, const struct FName& Reason);
	bool PerformPlayerMelee();
	void OnRep_ReplicatedMeleeData();
	void OnMeleeActionEnd(EGbxActionEndState EndState);
	void MeleeStatePerformMelee__DelegateSignature(class UPlayerMeleeData* MeleeData, bool bSuccess, class AActor* MeleeTarget);
	void MeleeStateChangeEvent__DelegateSignature(bool bCanMelee);
	bool IsPerformingMelee();
	void HandleFirstPersonCreated(bool bArmsCreated);
	void ClearMeleeDamageType();
	void CharacterTransported();
};


// Class OakGame.PlayerShopManagerComponent
// 0x0058 (0x01D0 - 0x0178)
class UPlayerShopManagerComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0178(0x0018) MISSED OFFSET
	int                                                MaxBuyBackSize;                                           // 0x0190(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0194(0x0004) MISSED OFFSET
	TArray<struct FPlayerBuyBackableInventory>         BuyBackList;                                              // 0x0198(0x0010) (Net, ZeroConstructor, Transient)
	class AOakPlayerController*                        PlayerController;                                         // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x01B0(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerShopManagerComponent");
		return ptr;
	}


	void ServerSellInventory(class AActor* InventoryActor);
	void ServerSellAllJunk();
	void ServerPurchaseSDU(class UOakSDUData* SDU);
	void ServerPurchaseInventoryFromShop(class AActor* InventoryActor, class UInventoryShopComponent* Shop);
	void ServerPurchaseCustomization(class UGbxCustomizationData* Customization);
	void ServerOnPurchaseCrazyEarl(class UOakCustomizationData* PurchasedItem);
	void ServerOnExitMenuCrazyEarl();
	void ServerNotifyStablyVendingMachineSelectedInventory(EVendingMachineTrayTileType Type, class AActor* InventoryActor);
	void ServerBuyBackInventory(class AActor* InventoryActor);
	void OnRep_BuyBackList();
	void ClientSDUTransactionFinished(class UOakSDUData* SDU, bool bPurchased, int NewSDULevel);
	void ClientInventoryTransactionFinished(ETransactionType TransactionType, TArray<class AActor*> InventoryActor);
	void ClientCustomizationTransactionFinished(class UGbxCustomizationData* CustomizationData);
};


// Class OakGame.PlayerStandIn
// 0x0300 (0x0758 - 0x0458)
class APlayerStandIn : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnCharacterSpawned;                                       // 0x0458(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCharacterDestroyed;                                     // 0x0468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0478(0x0030) MISSED OFFSET
	EPlayerStandInType                                 StandInType;                                              // 0x04A8(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x04A9(0x0007) MISSED OFFSET
	struct FPlayerStandInInitData                      InitData;                                                 // 0x04B0(0x0030) (Transient)
	class UPlayerStandInData*                          StandInData;                                              // 0x04E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FLobbyPlayerStandInLoadOutInfo              LoadOutInfo;                                              // 0x04E8(0x00C8) (Transient)
	struct FLobbyPlayerStandInLoadOutInfo              PendingLoadOut;                                           // 0x05B0(0x00C8) (Transient)
	struct FOakPlayerAbilitySaveGameData               PendingAbilityData;                                       // 0x0678(0x0048) (Transient)
	struct FOakPlayerCharacterSlotSaveGameData         PendingCharacterData;                                     // 0x06C0(0x0010) (Transient)
	unsigned char                                      UnknownData02[0x8];                                       // 0x06D0(0x0008) MISSED OFFSET
	TArray<class UGbxCustomizationData*>               CustomizationsAwaitingApplication;                        // 0x06D8(0x0010) (ZeroConstructor, Transient)
	class UClass*                                      PendingCoordinatedEffect;                                 // 0x06E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AOakCharacter_StandIn*                       CharacterInstance;                                        // 0x06F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FStandInAuxiliaryState>              AuxiliaryActors;                                          // 0x06F8(0x0010) (ZeroConstructor, Transient)
	int                                                SlotIndex;                                                // 0x0708(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x070C(0x0004) MISSED OFFSET
	class UClass*                                      PlayerStandInDigistructEffect;                            // 0x0710(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      PlayerStandInDigistructOutEffect;                         // 0x0718(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      FrontendStandInHoloEffect;                                // 0x0720(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x30];                                      // 0x0728(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerStandIn");
		return ptr;
	}


	void PlayGbxAction(class UClass* Action);
	void HandleCustomizationApplied(class UGbxCustomizationData* Customization);
};


// Class OakGame.PlayerStandInData
// 0x01A0 (0x01D0 - 0x0030)
class UPlayerStandInData : public UGbxDataAsset
{
public:
	class UClass*                                      StandInBlueprint;                                         // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SkillScreenStandInBlueprint;                              // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      StandInAnimBlueprint;                                     // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      FrontendAnimBlueprint;                                    // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<TSoftObjectPtr<class UGbxAnimSet>>          FrontendAnimSets;                                         // 0x0050(0x0010) (Edit, ZeroConstructor)
	TArray<class UGbxAnimSet*>                         CharacterSelectAnimSets;                                  // 0x0060(0x0010) (Edit, ZeroConstructor)
	TArray<struct FExtraStandInAnimationMeshData>      ExtraFrontendAnimationData;                               // 0x0070(0x0010) (Edit, ZeroConstructor)
	struct FFrontendStandInSpecialAnimationData        FrontendSpecialAnimations[0x5];                           // 0x0080(0x0018) (Edit)
	struct FVector                                     CharacterSelectPositionOffset;                            // 0x00F8(0x000C) (Edit, IsPlainOldData)
	struct FRotator                                    CharacterSelectRotationOffset;                            // 0x0104(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     CharacterCreatePositionOffset;                            // 0x0110(0x000C) (Edit, IsPlainOldData)
	struct FRotator                                    CharacterCreateRotationOffset;                            // 0x011C(0x000C) (Edit, IsPlainOldData)
	float                                              CharacterInspectCameraHeightOffset;                       // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CharacterInspectCameraDepthOffset;                        // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PrimaryLobbyStandInCameraHeightOffset;                    // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PrimaryLobbyStandInCameraDepthOffset;                     // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DelayBeforeMainMenuFlourishAnimation;                     // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
	TArray<struct FFrontendStandInAuxiliaryActorData>  CharacterCreateAuxiliaryActors;                           // 0x0140(0x0010) (Edit, ZeroConstructor)
	struct FFrontendStandInAuxiliaryActorData          DefaultAuxiliaryActor;                                    // 0x0150(0x0058) (Edit)
	TArray<struct FPlayerStandIn_ActionAbility>        ActionAbilities;                                          // 0x01A8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FPlayerStandIn_Augment>              Augments;                                                 // 0x01B8(0x0010) (Edit, ZeroConstructor)
	class UInventoryBalanceData*                       FrontendWeaponBalanceWeaponData;                          // 0x01C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerStandInData");
		return ptr;
	}

};


// Class OakGame.PlayerStorage
// 0x0000 (0x06B8 - 0x06B8)
class APlayerStorage : public ACrewQuartersInteractiveObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerStorage");
		return ptr;
	}

};


// Class OakGame.PlayerStorageProxy
// 0x0020 (0x0508 - 0x04E8)
class APlayerStorageProxy : public AAdvancedInteractiveObjectProxy
{
public:
	class UAnimSequence*                               OpenAnim;                                                 // 0x04E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               OpenIdleAnim;                                             // 0x04F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               CloseAnim;                                                // 0x04F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               CloseIdleAnim;                                            // 0x0500(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerStorageProxy");
		return ptr;
	}

};


// Class OakGame.PlayerTradeManager
// 0x0098 (0x04F0 - 0x0458)
class APlayerTradeManager : public AActor
{
public:
	EPlayerTradeManagerStatus                          Status;                                                   // 0x0458(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0459(0x0007) MISSED OFFSET
	class APlayerTradeManager*                         Partner;                                                  // 0x0460(0x0008) (ZeroConstructor, IsPlainOldData)
	class AOakPlayerController*                        PartnerPC;                                                // 0x0468(0x0008) (ZeroConstructor, IsPlainOldData)
	class AOakCharacter_Player*                        PartnerCharacter;                                         // 0x0470(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	EPlayerTradingStance                               PartnerStance;                                            // 0x0478(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0479(0x0003) MISSED OFFSET
	int                                                PartnerCashOffered;                                       // 0x047C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	class AActor*                                      PartnerInvOffered[0x4];                                   // 0x0480(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	int                                                MyCashOffered;                                            // 0x04A0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x04A4(0x0004) MISSED OFFSET
	class AActor*                                      MyInvOffered[0x4];                                        // 0x04A8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x28];                                      // 0x04C8(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayerTradeManager");
		return ptr;
	}


	void ServerUpdateStance(EPlayerTradingStance NewStance, uint32_t Hash);
	void ServerUpdateInventorySlot(class AActor* Inventory, int Slot);
	void ServerUpdateCashOffered(int NewCashValue);
	void ServerCancelTrade();
	void OnRep_PartnerInvOffered();
	void OnRep_PartnerCharacter();
	void OnRep_PartnerCashOffered();
	void ClientStanceReset(uint32_t Hash);
	void ClientShowTradeConfirmationMessage(bool IsDuel);
};


// Class OakGame.PlayThroughAttributeValueResolver
// 0x0008 (0x0030 - 0x0028)
class UPlayThroughAttributeValueResolver : public UAttributeValueResolver
{
public:
	EPlayThroughType                                   PlayThroughToResolve;                                     // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayThroughAttributeValueResolver");
		return ptr;
	}

};


// Class OakGame.PlayThroughDefinedAttributeValueResolver
// 0x0078 (0x00A0 - 0x0028)
class UPlayThroughDefinedAttributeValueResolver : public UAttributeValueResolver
{
public:
	struct FPlaythroughDefinedValueRow                 Value;                                                    // 0x0028(0x0078) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.PlayThroughDefinedAttributeValueResolver");
		return ptr;
	}

};


// Class OakGame.ProjectedShield
// 0x0060 (0x01D8 - 0x0178)
class UProjectedShield : public UActorComponent
{
public:
	class UProjectedShieldData*                        Data;                                                     // 0x0178(0x0008) (Edit, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystemComponent*                    ParticleSystem;                                           // 0x0180(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        StaticMeshComponent;                                      // 0x0188(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWwiseAudioComponent*                        ProjectedAudioComponent;                                  // 0x0190(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0198(0x0030) MISSED OFFSET
	class AActor*                                      OwnerActor;                                               // 0x01C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x01D0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ProjectedShield");
		return ptr;
	}


	void ToggleProjectedShield(bool bToggleOn);
	void SpawnShield();
	void OnTakeAnyDamageInternal(class UDamageComponent* DamageReceiver, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details);
	void OnTakeAnyDamage(class UDamageComponent* DamageReceiver, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details);
	void OnShieldSpawned();
	void OnShieldNotDepletedInternal(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldNotDepleted();
	void OnShieldLowHealth();
	void OnShieldFullHealth();
	void OnShieldDespawned();
	void OnShieldDepleted(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldBreak();
	void OnHealthTypeVeryLow(const struct FHealthType& HealthType, int Index);
	void OnHealthTypeNormal(const struct FHealthType& HealthType, int Index);
	void OnHealthTypeLow(const struct FHealthType& HealthType, int Index);
	bool IsShieldBroken();
	void DespawnShield();
};


// Class OakGame.ProjectedShield_Vehicle
// 0x0018 (0x01F0 - 0x01D8)
class UProjectedShield_Vehicle : public UProjectedShield
{
public:
	class UMaterialInstanceDynamic*                    MaterialInstance;                                         // 0x01D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UVehicleEffectsComponent*                    VehicleEffectsComponent;                                  // 0x01E0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x01E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ProjectedShield_Vehicle");
		return ptr;
	}


	void OnShouldDespawnShield();
	void OnPrimaryOccupantExit();
	void OnPrimaryOccupantEnter();
	void OnEngineStop();
	void OnEngineStart();
	void OnDigiThrustStarted();
	void OnDigiThrustEndFinished();
};


// Class OakGame.ProjectedShieldData
// 0x0130 (0x0160 - 0x0030)
class UProjectedShieldData : public UGbxDataAsset
{
public:
	class UStaticMesh*                                 Mesh;                                                     // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          Material;                                                 // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET
	struct FTransform                                  MeshOffset;                                               // 0x0050(0x0030) (Edit, IsPlainOldData)
	struct FName                                       AudioSocketName;                                          // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FWwiseLocationOverride>              AudioLocations;                                           // 0x0088(0x0010) (Edit, ZeroConstructor)
	class UWwiseEvent*                                 StartShieldWiseEvent;                                     // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 StopShieldWiseEvent;                                      // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             Particle;                                                 // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FTransform                                  ParticleOffset;                                           // 0x00B0(0x0030) (Edit, IsPlainOldData)
	struct FHealthType                                 ShieldHealth;                                             // 0x00E0(0x0078) (Edit)
	bool                                               AttachOnSpawn;                                            // 0x0158(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0159(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ProjectedShieldData");
		return ptr;
	}

};


// Class OakGame.ProjectedShieldData_Vehicle
// 0x0010 (0x0170 - 0x0160)
class UProjectedShieldData_Vehicle : public UProjectedShieldData
{
public:
	bool                                               DespawnShieldOnEngineStop;                                // 0x0160(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0161(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ProjectedShieldData_Vehicle");
		return ptr;
	}

};


// Class OakGame.QuickChange
// 0x0000 (0x0660 - 0x0660)
class AQuickChange : public AAdvancedInteractiveObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.QuickChange");
		return ptr;
	}


	void OnSaveGameRenamed(const struct FText& NewName);
	void OnRespec();
	void OnPickedNewSkinColor(int Index, const struct FLinearColor& Color);
	void OnPickedNewSkin(class UOakCustomizationData* NewSkin);
	void OnPickedNewHead(class UOakCustomizationData* NewHead);
	void OnPickedNewEmote(class UOakCustomizationData* NewEmote);
	void OnPickedNewECHOTheme(class UOakCustomizationData* NewECHOTheme);
	void OnPickedNewBody(class UOakCustomizationData* NewBody);
};


// Class OakGame.QuickChangeProxy
// 0x0000 (0x04E8 - 0x04E8)
class AQuickChangeProxy : public AAdvancedInteractiveObjectProxy
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.QuickChangeProxy");
		return ptr;
	}

};


// Class OakGame.ReapBehaviorInterface
// 0x0000 (0x0028 - 0x0028)
class UReapBehaviorInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ReapBehaviorInterface");
		return ptr;
	}

};


// Class OakGame.RegionBalanceStateComponent
// 0x0030 (0x0208 - 0x01D8)
class URegionBalanceStateComponent : public UBalanceStateComponent
{
public:
	bool                                               bGameStageAlwaysTracksPlayerLevelAboveMinimum;            // 0x01D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01D9(0x0007) MISSED OFFSET
	class URegionManager*                              RegionManager;                                            // 0x01E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class URegionData*                                 REGION;                                                   // 0x01E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x01F0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.RegionBalanceStateComponent");
		return ptr;
	}

};


// Class OakGame.RegionData
// 0x0010 (0x0040 - 0x0030)
class URegionData : public UGbxDataAsset
{
public:
	class UDownloadableExpansionData*                  DlcExpansion;                                             // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UPatchExpansionData*                         PatchExpansion;                                           // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.RegionData");
		return ptr;
	}

};


// Class OakGame.RegionManagerData
// 0x0018 (0x0048 - 0x0030)
class URegionManagerData : public UGbxDataAsset
{
public:
	TArray<struct FPlayThroughData>                    PlayThroughs;                                             // 0x0030(0x0010) (Edit, ZeroConstructor)
	int                                                GameStageIncreaseAbovePlayer;                             // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.RegionManagerData");
		return ptr;
	}

};


// Class OakGame.RegionManager
// 0x0070 (0x0098 - 0x0028)
class URegionManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0028(0x0020) MISSED OFFSET
	TSoftObjectPtr<class URegionManagerData>           RegionManagerDataPtr;                                     // 0x0048(0x0028) (Edit, Config, GlobalConfig)
	class URegionManagerData*                          MainRegionManagerData;                                    // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FRegionSaveData>                     SavedRegionData;                                          // 0x0078(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0088(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.RegionManager");
		return ptr;
	}

};


// Class OakGame.ResourceBar
// 0x0018 (0x02D0 - 0x02B8)
class UResourceBar : public UGbxUserWidget
{
public:
	class UProgressBar*                                ValueBar;                                                 // 0x02B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  CurrentValueText;                                         // 0x02C0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  MaxValueText;                                             // 0x02C8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ResourceBar");
		return ptr;
	}


	void SetTextMaxValue(const struct FText& NewText);
	void SetTextCurrentValue(const struct FText& NewText);
	void SetPercent(float NewValue);
};


// Class OakGame.RespawnRestrictedVolume
// 0x0000 (0x0490 - 0x0490)
class ARespawnRestrictedVolume : public AVolume
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.RespawnRestrictedVolume");
		return ptr;
	}

};


// Class OakGame.ReticleFeedbackWidgetContainer
// 0x0020 (0x02D8 - 0x02B8)
class UReticleFeedbackWidgetContainer : public UGbxUserWidget
{
public:
	TArray<class UOakReticleFeedbackWidget*>           FeedbackWidgets;                                          // 0x02B8(0x0010) (BlueprintVisible, ZeroConstructor)
	TWeakObjectPtr<class AOakPlayerController>         OakPCOwner;                                               // 0x02C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x02D0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ReticleFeedbackWidgetContainer");
		return ptr;
	}


	void OnGameEventCallback(EOakReticleFeedbackGameEvent GameEvent);
};


// Class OakGame.RevolverVehicleAnimInstance
// 0x07F0 (0x1AE0 - 0x12F0)
class URevolverVehicleAnimInstance : public UOakVehicleAnimInstance
{
public:
	float                                              BackRaycastDistance;                                      // 0x12F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UnderRaycastDistance;                                     // 0x12F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ProfileName;                                              // 0x12F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               HitSequence;                                              // 0x1300(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HitBlendInTime;                                           // 0x1308(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HitBlendOutTime;                                          // 0x130C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HitPlayRate;                                              // 0x1310(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                HitLoopCount;                                             // 0x1314(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       HitSlotName;                                              // 0x1318(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      BodyMesh;                                                 // 0x1320(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7B8];                                     // 0x1328(0x07B8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.RevolverVehicleAnimInstance");
		return ptr;
	}

};


// Class OakGame.RotatingStaticMeshActor
// 0x0008 (0x0470 - 0x0468)
class ARotatingStaticMeshActor : public AStaticMeshActor
{
public:
	class URotatingMovementComponent*                  RotatingMovement;                                         // 0x0468(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.RotatingStaticMeshActor");
		return ptr;
	}

};


// Class OakGame.SDUCase
// 0x0000 (0x06B8 - 0x06B8)
class ASDUCase : public ACrewQuartersInteractiveObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SDUCase");
		return ptr;
	}

};


// Class OakGame.SDUCaseProxy
// 0x00D0 (0x05B8 - 0x04E8)
class ASDUCaseProxy : public AAdvancedInteractiveObjectProxy
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x04E8(0x0050) MISSED OFFSET
	TArray<struct FSDUCaseSpawner>                     SDUs;                                                     // 0x0538(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       InitialCameraTarget;                                      // 0x0548(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInstanceConstant*                   SelectedSDUMaterial;                                      // 0x0550(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              MaxSelectionAngle;                                        // 0x0558(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSelectionDistance;                                     // 0x055C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AngleWeight;                                              // 0x0560(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DistanceWeight;                                           // 0x0564(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0568(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SDUCaseProxy");
		return ptr;
	}


	void PurchaseSDU();
	void OnSDUSoldOut(class UOakSDUData* SoldOutSDU, class USocketComponent* AttachmentSocket);
	void OnSDUSelected(class UOakSDUData* NewSDU, class USocketComponent* NewAttachmentSocket, class UOakSDUData* OldSDU, class USocketComponent* OldAttachmentSocket);
	void OnSDUPurchased(class UOakSDUData* PurchasedSDU, class USocketComponent* AttachmentSocket);
	void OnAxisInput(const struct FVector& Vec, bool bGamePad);
	void NavigateUp();
	void NavigateRight();
	void NavigateLeft();
	void NavigateDown();
	void ExitCase();
};


// Class OakGame.ShieldAugmentStackValueResolver
// 0x0030 (0x0058 - 0x0028)
class UShieldAugmentStackValueResolver : public UAttributeValueResolver
{
public:
	TSoftObjectPtr<class UClass>                       Augment;                                                  // 0x0028(0x0028) (Edit)
	struct FName                                       AugmentName;                                              // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldAugmentStackValueResolver");
		return ptr;
	}

};


// Class OakGame.ShieldAugmentValueResolver
// 0x0078 (0x00A0 - 0x0028)
class UShieldAugmentValueResolver : public UAttributeValueResolver
{
public:
	TSoftObjectPtr<class UClass>                       Augment;                                                  // 0x0028(0x0028) (Edit)
	bool                                               bCheckPrimary;                                            // 0x0050(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	struct FName                                       AugmentName;                                              // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EStackOperator                                     Operator;                                                 // 0x0060(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	struct FAttributeInitializationData                ValueB;                                                   // 0x0068(0x0038) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldAugmentValueResolver");
		return ptr;
	}

};


// Class OakGame.ShieldAugmentTableResolver
// 0x0028 (0x0050 - 0x0028)
class UShieldAugmentTableResolver : public UAttributeValueResolver
{
public:
	struct FDataTableRowHandle                         TableShieldAug;                                           // 0x0028(0x0010) (Edit)
	class UGbxAttributeData*                           AttributeAugTier;                                         // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxAttributeData*                           AttributeAugPowerScalar;                                  // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCheckPrimary;                                            // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldAugmentTableResolver");
		return ptr;
	}

};


// Class OakGame.Shield
// 0x0128 (0x05E8 - 0x04C0)
class AShield : public AOakInventoryEquippableItem
{
public:
	struct FGbxAttributeFloat                          ShieldAttribute_Capacity;                                 // 0x04C0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGbxAttributeFloat                          ShieldAttribute_RegenRate;                                // 0x04CC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FGbxAttributeFloat                          ShieldAttribute_RegenDelay;                               // 0x04D8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04E4(0x0004) MISSED OFFSET
	class USkeletalMeshComponent*                      ShieldMesh;                                               // 0x04E8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UGameResourceData*                           ShieldResource;                                           // 0x04F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxAttributeData*                           ShieldDamageAttributeData;                                // 0x04F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UShieldBalanceStateComponent*                BalanceStateComponent;                                    // 0x0500(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData)
	class AOakCharacter_Player*                        OwningPlayer;                                             // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	TMap<class UShieldAugment*, struct FAugmentData>   ShieldAugments;                                           // 0x0510(0x0050) (ZeroConstructor, Transient)
	TArray<struct FTrackedShieldAttributeData>         AppliedAttributes;                                        // 0x0560(0x0010) (ZeroConstructor, Transient)
	TArray<class AOakCharacter*>                       CharactersWithAppliedShotModifiers;                       // 0x0570(0x0010) (ZeroConstructor, Transient)
	TArray<struct FShieldDamageModifierData>           DamageModifiers;                                          // 0x0580(0x0010) (ZeroConstructor, Transient)
	class UWeaponShotModifier*                         ShotModifier;                                             // 0x0590(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	EShieldState                                       ShieldState;                                              // 0x0598(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0599(0x0007) MISSED OFFSET
	class UFeedbackData*                               ShieldBreakFeedback;                                      // 0x05A0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FTimerHandle                                AdaptiveTimer;                                            // 0x05A8(0x0008) (Transient)
	EOakElementalType                                  AdaptiveType;                                             // 0x05B0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x05B1(0x0001) MISSED OFFSET
	bool                                               bIsBarrierShield;                                         // 0x05B2(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x05B3(0x0005) MISSED OFFSET
	class UWwiseAudioComponent*                        AudioComponent;                                           // 0x05B8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UViewAttachmentComponent*                    ProjectedShield;                                          // 0x05C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWwiseAudioComponent*                        ProjectedAudioComponent;                                  // 0x05C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWwiseAudioComponent*                        AmpAudioComponent;                                        // 0x05D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x05D8(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.Shield");
		return ptr;
	}


	void RemoveModifierFromAttribute(class UGbxAttributeData* Attribute, class UClass* AugmentClass, EShieldAttributeModificationSource Source);
	void OnWeaponShotModified(class AWeapon* Weapon, const struct FWeaponShotModifierData& Data);
	void OnWeaponChanged(class AWeapon* Weapon, class AWeapon* LastWeapon);
	void OnShieldUnequipped(class AOakCharacter* Equipper);
	void OnShieldNotFilled(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldNotDepleted(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldFilled(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldEquipped(class AOakCharacter* Equipper);
	void OnShieldDepleted(const struct FGameResourcePoolReference& ResourcePool);
	void OnShieldAbsorbedDamage(class UDamageSource* DamageSource, class UGbxDamageType* InDamageType);
	void OnProjectedShieldParticleSystemFinished(class UParticleSystemComponent* PSC);
	void OnOwnerUncrouched();
	void OnOwnerHealthStateChanged(EHealthState HealthState);
	void OnOwnerEnteredVehicle(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnOwnerCrouched();
	void Multicast_PlayEffectsOnAugment(class UClass* AugmentClass, const struct FName& AugmentName, class UObject* AdditionalContext);
	bool IsProjectedShield();
	bool IsPendingDestroyFromBarrier();
	bool IsBarrierShield();
	class UClass* GetDamageType();
	float GetBaseShieldDamage();
	void AddModifierToAttribute(class UGbxAttributeData* Attribute, class UObject* Context, float Modifier, EGbxAttributeModifierType Type, class UClass* AugmentClass, EShieldAttributeModificationSource Source);
};


// Class OakGame.ShieldAugment
// 0x00E0 (0x0108 - 0x0028)
class UShieldAugment : public UObject
{
public:
	class FString                                      PrimaryStackDescription;                                  // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<struct FAttributeInitializationData>        PrimaryStackValues;                                       // 0x0038(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class FString                                      SecondaryStackDescription;                                // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<struct FAttributeInitializationData>        SecondaryStackValues;                                     // 0x0058(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      bUseReceivedDamageEvent : 1;                              // 0x0068(0x0001) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bUseCausedDamageEvent : 1;                                // 0x0068(0x0001) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bCallReceievedDamageEventForBarrierDamage : 1;            // 0x0068(0x0001) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	struct FShieldAugmentDamageEventData               ReceivedDamageEventData;                                  // 0x0070(0x0048) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FShieldAugmentDamageEventData               CausedDamageEventData;                                    // 0x00B8(0x0048) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	struct FName                                       AugmentName;                                              // 0x0100(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldAugment");
		return ptr;
	}


	void StartAugmentCooldown(class AShield* Shield, float CooldownDuration, struct FAugmentData* StackData);
	void SetDelay(class AShield* Shield, float Delay, const struct FName& DelayName, struct FAugmentData* StackData);
	void K2_OnWeaponShotModified(class AShield* Shield, class AWeapon* Weapon, const struct FWeaponShotModifierData& Data, struct FAugmentData* StackData);
	void K2_OnWeaponChanged(class AShield* Shield, class AWeapon* Weapon, class AWeapon* LastWeapon, struct FAugmentData* StackData);
	void K2_OnShieldUnequipped(class AShield* Shield, class AOakCharacter* Equipper, struct FAugmentData* StackData);
	void K2_OnShieldNotFilled(class AShield* Shield, const struct FGameResourcePoolReference& ResourcePool, struct FAugmentData* StackData);
	void K2_OnShieldNotDepleted(class AShield* Shield, const struct FGameResourcePoolReference& ResourcePool, struct FAugmentData* StackData);
	void K2_OnShieldFilled(class AShield* Shield, const struct FGameResourcePoolReference& ResourcePool, struct FAugmentData* StackData);
	void K2_OnShieldEquipped(class AShield* Shield, class AOakCharacter* Equipper, struct FAugmentData* StackData);
	void K2_OnShieldDepleted(class AShield* Shield, const struct FGameResourcePoolReference& ResourcePool, struct FAugmentData* StackData);
	void K2_OnShieldBeginPlay(class AShield* Shield, struct FAugmentData* StackData);
	void K2_OnShieldAbsorbedDamage(class AShield* Shield, class UDamageSource* DamageSource, class UGbxDamageType* DamageType, struct FAugmentData* StackData);
	void K2_OnReplicatedEffectTriggered(class AShield* Shield, class UObject* AdditionalContext, struct FAugmentData* StackData);
	void K2_OnDamageTaken(class AShield* Shield, class UDamageComponent* DamageReceiver, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details, struct FAugmentData* StackData);
	void K2_OnCausedDamage(class AShield* Shield, class AActor* DamageInstigator, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details, struct FAugmentData* StackData);
	void K2_OnBarrierEnd(class AActor* BarrierActor, class AShield* Shield, struct FAugmentData* StackData);
	void K2_NativeDelayCallback(class AShield* Shield, const struct FName& DelayName, struct FAugmentData* StackData);
	float GetValueFromStackCount(const struct FAugmentData& StackData, bool bPrimary);
};


// Class OakGame.ShieldAugment_Absorb
// 0x0098 (0x01A0 - 0x0108)
class UShieldAugment_Absorb : public UShieldAugment
{
public:
	class UWwiseEvent*                                 AbsorbSound;                                              // 0x0108(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             AbsorbParticles;                                          // 0x0110(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ParticleAttachSocket;                                     // 0x0118(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxAttributeData*                           LoadedWeaponAmmoAttribute;                                // 0x0120(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxAttributeData*                           WeaponMaxAmmoAttribute;                                   // 0x0128(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWeaponSlotData*                             WeaponSlot;                                               // 0x0130(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxAttributeData*                           ShieldAbsorbChanceAttribute;                              // 0x0138(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGameStatData*                               AbsorbStat;                                               // 0x0140(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseRestoreData;                                          // 0x0148(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0149(0x0007) MISSED OFFSET
	struct FShieldAugmentAbsorbRestoreData             ShieldRestoreData;                                        // 0x0150(0x0050) (Edit, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldAugment_Absorb");
		return ptr;
	}

};


// Class OakGame.ShieldAugment_Adaptive
// 0x0010 (0x0118 - 0x0108)
class UShieldAugment_Adaptive : public UShieldAugment
{
public:
	TArray<struct FAdaptiveTypeAssociations>           DamageTypeAssociations;                                   // 0x0108(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldAugment_Adaptive");
		return ptr;
	}

};


// Class OakGame.ShieldAugment_Amp
// 0x0020 (0x0128 - 0x0108)
class UShieldAugment_Amp : public UShieldAugment
{
public:
	class UWeaponShotModifier*                         ShotModifier;                                             // 0x0108(0x0008) (Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UWwiseEvent*                                 AmpShotAudio;                                             // 0x0110(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 AmpReadyAudioStart;                                       // 0x0118(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 AmpReadyAudioStop;                                        // 0x0120(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldAugment_Amp");
		return ptr;
	}

};


// Class OakGame.ShieldAugment_Attribute
// 0x0090 (0x0198 - 0x0108)
class UShieldAugment_Attribute : public UShieldAugment
{
public:
	TArray<struct FAttributeModifiers>                 OnEquippedAttributeModifiers;                             // 0x0108(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class UWwiseEvent*                                 OnEquippedAudioEvent;                                     // 0x0118(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bTurnOffEquippedAudio;                                    // 0x0120(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0121(0x0007) MISSED OFFSET
	TArray<struct FAttributeModifiers>                 OnFilledAttributeModifiers;                               // 0x0128(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class UWwiseEvent*                                 OnFilledAudioEvent;                                       // 0x0138(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bTurnOffFilledAudio;                                      // 0x0140(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0141(0x0007) MISSED OFFSET
	TArray<struct FAttributeModifiers>                 OnNotDepletedAttributeModifiers;                          // 0x0148(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class UWwiseEvent*                                 OnNotDepletedAudioEvent;                                  // 0x0158(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bTurnOffNotDepletedAudio;                                 // 0x0160(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0161(0x0007) MISSED OFFSET
	TArray<struct FAttributeModifiers>                 OnDepletedAttributeModifiers;                             // 0x0168(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class UWwiseEvent*                                 OnDepletedAudioEvent;                                     // 0x0178(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bTurnOffDepletedAudio;                                    // 0x0180(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bApplyDefaultEffectsToPlayersInAura;                      // 0x0181(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bApplyEffectsToBarrier;                                   // 0x0182(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x0183(0x0005) MISSED OFFSET
	TArray<struct FAttributeModifiers>                 PersistentAuraAttributeModifiers;                         // 0x0188(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldAugment_Attribute");
		return ptr;
	}

};


// Class OakGame.ShieldAugment_ChargeSpawner
// 0x0058 (0x0160 - 0x0108)
class UShieldAugment_ChargeSpawner : public UShieldAugment
{
public:
	float                                              SpawnCooldown;                                            // 0x0108(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	class UGbxAttributeData*                           AttributeToModify;                                        // 0x0110(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EGbxAttributeModifierType                          ModifierType;                                             // 0x0118(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0119(0x0003) MISSED OFFSET
	float                                              ModifierDuration;                                         // 0x011C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 PickupMesh;                                               // 0x0120(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UMaterialInterface*>                  PickupMeshMaterials;                                      // 0x0128(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              MeshScalar;                                               // 0x0138(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
	class UWwiseEvent*                                 SpawnAudioEvent;                                          // 0x0140(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 PickupAudioEvent;                                         // 0x0148(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UItemPoolListData*                           ItemPoolList;                                             // 0x0150(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class ULootSpawnPatternData*                       SpawnPattern;                                             // 0x0158(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldAugment_ChargeSpawner");
		return ptr;
	}

};


// Class OakGame.ShieldAugment_Triggerable
// 0x0008 (0x0110 - 0x0108)
class UShieldAugment_Triggerable : public UShieldAugment
{
public:
	EAugmentTriggerOn                                  TriggerableOn;                                            // 0x0108(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUntriggerable;                                           // 0x0109(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAugmentTriggerOn                                  UntriggerableOn;                                          // 0x010A(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bResetOnOpposingTrigger;                                  // 0x010B(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x010C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldAugment_Triggerable");
		return ptr;
	}


	void K2_UntriggerEffect(class AShield* Shield, const struct FGameResourcePoolReference& ResourcePool, struct FAugmentData* StackData);
	void K2_TriggerEffect(class AShield* Shield, const struct FGameResourcePoolReference& ResourcePool, struct FAugmentData* StackData);
};


// Class OakGame.ShieldAugment_Damage
// 0x01A0 (0x02B0 - 0x0110)
class UShieldAugment_Damage : public UShieldAugment_Triggerable
{
public:
	class UClass*                                      DamageData;                                               // 0x0110(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             ScreenParticles;                                          // 0x0118(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FAttributeInitializationData                DamageOverride;                                           // 0x0120(0x0038) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	class UClass*                                      DamageTypeOverride;                                       // 0x0158(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      DamageSourceOverride;                                     // 0x0160(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UExplosionData*                              ExplosionDataOverride;                                    // 0x0168(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FForceSelection                             ImpactDataOverride;                                       // 0x0170(0x0020) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	float                                              DamageDelay;                                              // 0x0190(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCausePersistentDamageOnEquip;                            // 0x0194(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0195(0x0003) MISSED OFFSET
	class UWwiseEvent*                                 PreDelayAudioEvent;                                       // 0x0198(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 DamageAudioEvent;                                         // 0x01A0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseSingularity;                                          // 0x01A8(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x01A9(0x0007) MISSED OFFSET
	struct FAttributeInitializationData                SingularityRadius;                                        // 0x01B0(0x0038) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	float                                              BarrierSingularityOffset;                                 // 0x01E8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x01EC(0x0004) MISSED OFFSET
	struct FSingularityInitializationInfo              SingularityInfo;                                          // 0x01F0(0x00C0) (Edit, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldAugment_Damage");
		return ptr;
	}

};


// Class OakGame.ShieldAugment_DamageModifier
// 0x0010 (0x0120 - 0x0110)
class UShieldAugment_DamageModifier : public UShieldAugment_Triggerable
{
public:
	class UConditionalDamageModifier*                  DamageModifier;                                           // 0x0110(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EShieldDamageModifierApplicationTarget             ApplicationTarget;                                        // 0x0118(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseModifierDuration;                                     // 0x0119(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x011A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldAugment_DamageModifier");
		return ptr;
	}

};


// Class OakGame.ShieldAugment_Projected
// 0x00A8 (0x01B0 - 0x0108)
class UShieldAugment_Projected : public UShieldAugment
{
public:
	class UStaticMesh*                                 Mesh;                                                     // 0x0108(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FTransform                                  ParticleSystemTransform;                                  // 0x0110(0x0030) (Edit, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             Template_OpenAndLoop;                                     // 0x0140(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             Template_Close;                                           // 0x0148(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             Template_Break;                                           // 0x0150(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CollisionProfileName;                                     // 0x0158(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FTransform                                  RelativeTransform;                                        // 0x0160(0x0030) (Edit, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          Material;                                                 // 0x0190(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 ProjectedAudio;                                           // 0x0198(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 ProjectedStopAudio;                                       // 0x01A0(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x01A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldAugment_Projected");
		return ptr;
	}

};


// Class OakGame.ShieldAugment_Resistance
// 0x0010 (0x0118 - 0x0108)
class UShieldAugment_Resistance : public UShieldAugment
{
public:
	TArray<struct FDamageTypeAttribute>                DamageTypeModifiers;                                      // 0x0108(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldAugment_Resistance");
		return ptr;
	}

};


// Class OakGame.ShieldAugment_Spike
// 0x0140 (0x0248 - 0x0108)
class UShieldAugment_Spike : public UShieldAugment
{
public:
	bool                                               bUseCooldown;                                             // 0x0108(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0109(0x0007) MISSED OFFSET
	struct FAttributeInitializationData                Cooldown;                                                 // 0x0110(0x0038) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	class UClass*                                      TriggeringDamageSource;                                   // 0x0148(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      DamageData;                                               // 0x0150(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bTriggerElementalEffect;                                  // 0x0158(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0159(0x0007) MISSED OFFSET
	struct FShieldTriggeredElementalEffect             ElementalEffect;                                          // 0x0160(0x0080) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	bool                                               bTriggerProjectile;                                       // 0x01E0(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x01E1(0x0007) MISSED OFFSET
	struct FShieldTriggeredProjectileReflectEffect     ProjectileEffect;                                         // 0x01E8(0x0048) (Edit, BlueprintReadOnly, DisableEditOnInstance)
	class UClass*                                      FirstPersonSpikeEffectCollection;                         // 0x0230(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SpikeParticleAttachPointName;                             // 0x0238(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ThirdPersonSpikeEffectCollection;                         // 0x0240(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldAugment_Spike");
		return ptr;
	}

};


// Class OakGame.ShieldAugmentAspectData
// 0x0008 (0x0040 - 0x0038)
class UShieldAugmentAspectData : public UInventoryAspectData
{
public:
	class UShieldAugment*                              Augment;                                                  // 0x0038(0x0008) (Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldAugmentAspectData");
		return ptr;
	}

};


// Class OakGame.ShieldAugmentContextResolver
// 0x0000 (0x0050 - 0x0050)
class UShieldAugmentContextResolver : public UAttributeContextResolver
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldAugmentContextResolver");
		return ptr;
	}

};


// Class OakGame.ShieldBalanceStateComponent
// 0x0018 (0x03A0 - 0x0388)
class UShieldBalanceStateComponent : public UOakInventoryBalanceStateComponent
{
public:
	TArray<class UShieldAugment*>                      ShieldAspects;                                            // 0x0388(0x0010) (ZeroConstructor, Transient)
	class UShieldDamageTypeAspectData*                 DamageTypeAspect;                                         // 0x0398(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldBalanceStateComponent");
		return ptr;
	}

};


// Class OakGame.ShieldBarrierInterface
// 0x0000 (0x0028 - 0x0028)
class UShieldBarrierInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldBarrierInterface");
		return ptr;
	}

};


// Class OakGame.ShieldBoosterModifierValueResolver
// 0x0000 (0x0028 - 0x0028)
class UShieldBoosterModifierValueResolver : public UAttributeValueResolver
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldBoosterModifierValueResolver");
		return ptr;
	}

};


// Class OakGame.ShieldBoosterNonAugment
// 0x0030 (0x04D0 - 0x04A0)
class AShieldBoosterNonAugment : public AOakInventoryItem
{
public:
	class UOakManagedActorDefinition*                  ManagedActorDef;                                          // 0x04A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ModifierValue;                                            // 0x04A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04AC(0x0004) MISSED OFFSET
	class UStaticMeshComponent*                        MeshComponent;                                            // 0x04B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UWwiseEvent*                                 PickupAudioEvent;                                         // 0x04B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 CollisionAudioEvent;                                      // 0x04C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             ScreenEffect;                                             // 0x04C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldBoosterNonAugment");
		return ptr;
	}


	void OnShieldChargePickedUp(class AOakCharacter* PickupInstigator);
};


// Class OakGame.ShieldChargeInventoryBalanceStateComponent
// 0x0000 (0x0388 - 0x0388)
class UShieldChargeInventoryBalanceStateComponent : public UOakInventoryBalanceStateComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldChargeInventoryBalanceStateComponent");
		return ptr;
	}

};


// Class OakGame.ShieldChargeModifierValueResolver
// 0x0000 (0x0028 - 0x0028)
class UShieldChargeModifierValueResolver : public UAttributeValueResolver
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldChargeModifierValueResolver");
		return ptr;
	}

};


// Class OakGame.ShieldChargeInventoryPickup
// 0x0048 (0x04E8 - 0x04A0)
class AShieldChargeInventoryPickup : public AOakInventoryItem
{
public:
	class UOakManagedActorDefinition*                  ManagedActorDef;                                          // 0x04A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ModifierValue;                                            // 0x04A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04AC(0x0004) MISSED OFFSET
	class UGbxAttributeData*                           AttributeToModify;                                        // 0x04B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EGbxAttributeModifierType                          ModifierType;                                             // 0x04B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x04B9(0x0003) MISSED OFFSET
	float                                              ModifierDuration;                                         // 0x04BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	class UStaticMeshComponent*                        MeshComponent;                                            // 0x04C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UWwiseEvent*                                 PickupAudioEvent;                                         // 0x04C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 CollisionAudioEvent;                                      // 0x04D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UShieldAugment_ChargeSpawner*                ContextAugment;                                           // 0x04D8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class UParticleSystem*                             ScreenEffect;                                             // 0x04E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldChargeInventoryPickup");
		return ptr;
	}


	void OnShieldChargePickedUp(class AOakCharacter* PickupInstigator);
	void OnRep_ContextAugment();
};


// Class OakGame.ShieldDamageTypeAspectData
// 0x0008 (0x0040 - 0x0038)
class UShieldDamageTypeAspectData : public UInventoryAspectData
{
public:
	class UClass*                                      DamageType;                                               // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldDamageTypeAspectData");
		return ptr;
	}

};


// Class OakGame.ShieldProviderInterface
// 0x0000 (0x0028 - 0x0028)
class UShieldProviderInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShieldProviderInterface");
		return ptr;
	}


	bool HasShieldEquipped();
};


// Class OakGame.ShockwaveEffectCollectionData
// 0x0000 (0x0090 - 0x0090)
class UShockwaveEffectCollectionData : public UElementalEffectCollectionData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ShockwaveEffectCollectionData");
		return ptr;
	}

};


// Class OakGame.SingularityGrenadeAudioEffectComponent
// 0x0070 (0x0340 - 0x02D0)
class USingularityGrenadeAudioEffectComponent : public USceneComponent
{
public:
	class UWwiseAuxBus*                                AuxBus;                                                   // 0x02D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UWwiseAudioEffect*                           AudioEffect;                                              // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UWwiseRtpc*                                  EffectFadeRtpc;                                           // 0x02E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UWwiseEvent*                                 StartEvent;                                               // 0x02E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UWwiseEvent*                                 StopEvent;                                                // 0x02F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              EffectSize;                                               // 0x02F8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              EffectFadeDistance;                                       // 0x02FC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              EffectDuration;                                           // 0x0300(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3C];                                      // 0x0304(0x003C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SingularityGrenadeAudioEffectComponent");
		return ptr;
	}


	void StopActiveEffect();
	void STATIC_SpawnSingularityAudioEffectAtLocation(class UObject* WorldContextObject, class UWwiseAuxBus* EffectAuxBus, const struct FVector& EffectLocation, float Size, float FadeDistance, float Duration, class UWwiseRtpc* FadeDistanceRtpc, class UWwiseEvent* AdditionalStartEvent, class UWwiseEvent* AdditionalStopEvent);
};


// Class OakGame.SingularityPullableInterface
// 0x0000 (0x0028 - 0x0028)
class USingularityPullableInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SingularityPullableInterface");
		return ptr;
	}


	void OnSingularityPullEnd(class USingularityComponent* SingularityComponent);
	void OnSingularityPullBegin(class USingularityComponent* SingularityComponent);
	float GetPullScale();
};


// Class OakGame.SirenArmControllerInterface
// 0x0000 (0x0028 - 0x0028)
class USirenArmControllerInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SirenArmControllerInterface");
		return ptr;
	}

};


// Class OakGame.SirenCharacterComponent
// 0x0150 (0x03C8 - 0x0278)
class USirenCharacterComponent : public UPlayerCharacterComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0278(0x0008) MISSED OFFSET
	struct FName                                       GhostArms1PComponentName;                                 // 0x0280(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       GhostArms3PComponentName;                                 // 0x0288(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UOakPlayerAbilityHUDItemData*                RushHUDItemData;                                          // 0x0290(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UFirstPersonComponent*                       FirstPersonComponent;                                     // 0x0298(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGbxSkeletalMeshComponent*                   GhostArms1P;                                              // 0x02A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGbxSkeletalMeshComponent*                   GhostArms3P;                                              // 0x02A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<struct FRushStackInstance>                  RushStackInstances;                                       // 0x02B0(0x0010) (ZeroConstructor, Transient)
	struct FSirenArmAppearanceState                    ArmAppearanceState;                                       // 0x02C0(0x0058) (Net, Transient)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0318(0x0004) MISSED OFFSET
	int                                                Rush;                                                     // 0x031C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                ConsumedRush;                                             // 0x0320(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0xA4];                                      // 0x0324(0x00A4) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SirenCharacterComponent");
		return ptr;
	}


	void UnlockSirenCastMeshes(const struct FName& Reason);
	void STATIC_StaticRemoveGhostArmController(class AActor* Actor, const TScriptInterface<class USirenArmControllerInterface>& Controller);
	void STATIC_StaticAddGhostArmController(class AActor* Actor, const TScriptInterface<class USirenArmControllerInterface>& Controller);
	void StartTattoFade(bool bVisible);
	void StartArmMaterialInstanceFade(class UMaterialInstance* NewInstance);
	void Start3rdPersonArmFade(bool bVisible, bool bInstant);
	void SetPhaseCastMeshActive(bool bActive);
	void SetArmElement(EPhaseTranceElementalType NewElement);
	void OnRep_ArmAppearanceState();
	void OnPhaseTranceComboChanged(class UOakActionAbility_PhaseTrance* ActionAbility);
	void OnPhaseTranceActivated(class UOakActionAbility* InActionAbility);
	void OnLevelChanged(int OldLevel, int NewLevel);
	void OnFirstPersonCreated(bool bArmsCreated);
	void OnCustomizationApplied(class UGbxCustomizationData* Customization);
	void LockSirenCastMeshes(const struct FName& Reason);
	int GetRushCount();
	int GetMaxRushCount();
	EPhaseTranceElementalType GetActiveGhostArmElementalType();
	int ConsumeRush();
	bool CanPlayPassiveGhostArmAction();
	bool AreGhostArmsVisible();
	void AddRush(int Value);
};


// Class OakGame.SirenRushStackData
// 0x0010 (0x0040 - 0x0030)
class USirenRushStackData : public UDataAsset
{
public:
	struct FName                                       StackName;                                                // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Count;                                                    // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SirenRushStackData");
		return ptr;
	}

};


// Class OakGame.SirenStandInComponent
// 0x0038 (0x0290 - 0x0258)
class USirenStandInComponent : public UStandInCharacterComponent
{
public:
	TArray<struct FSirenStandInFlourish>               SkillFlourishes;                                          // 0x0258(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      EndingAnimation;                                          // 0x0268(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxSkeletalMeshComponent*                   GhostArmsComponent;                                       // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               bShowArmsOnCharacterCreate;                               // 0x0278(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bShowArmsOnCharacterSelect;                               // 0x0279(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x027A(0x0006) MISSED OFFSET
	class AStandInAuxiliaryActor_Siren*                CurrentFlourishAuxiliaryActor;                            // 0x0280(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakActionAbilityAugmentData*                CurrentSlottedPrimaryAugment;                             // 0x0288(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SirenStandInComponent");
		return ptr;
	}


	void SetGhostArmsVisible(bool bNewVisible);
	void OnCustomizationApplied(class UGbxCustomizationData* Customization);
};


// Class OakGame.SkillScreenIronBearAnimInstance
// 0x0020 (0x0560 - 0x0540)
class USkillScreenIronBearAnimInstance : public UGbxAnimInstance
{
public:
	bool                                               bIsLocked;                                                // 0x0540(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Slot_HPL_Active;                                          // 0x0541(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               Slot_HPR_Active;                                          // 0x0542(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0543(0x0001) MISSED OFFSET
	float                                              R_Fist_Weight;                                            // 0x0544(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              L_Fist_Weight;                                            // 0x0548(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              L_Fist_Weight_Inv;                                        // 0x054C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              R_Fist_Weight_Inv;                                        // 0x0550(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FistTorsoWeight;                                          // 0x0554(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0558(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SkillScreenIronBearAnimInstance");
		return ptr;
	}

};


// Class OakGame.SkillScreenStandInAnimInstance
// 0x0010 (0x0550 - 0x0540)
class USkillScreenStandInAnimInstance : public UGbxAnimInstance
{
public:
	bool                                               bIsLocked;                                                // 0x0540(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0541(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SkillScreenStandInAnimInstance");
		return ptr;
	}

};


// Class OakGame.SlaughterGameMode
// 0x0008 (0x05F8 - 0x05F0)
class ASlaughterGameMode : public AOakGameMode
{
public:
	class ASlaughterGameState*                         SlaughterGameState;                                       // 0x05F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SlaughterGameMode");
		return ptr;
	}


	void BroadcastRoundComplete(int RoundNumber);
	void BroadcastNotAllPlayersAssembled();
	void BroadcastNewWave(bool bBossWave, int CountdownDuration);
	void BroadcastNewRound(int RoundNumber);
};


// Class OakGame.SlaughterGameState
// 0x0190 (0x0BE0 - 0x0A50)
class ASlaughterGameState : public AOakGameState
{
public:
	class UHUDNotificationAsset*                       SlaughterRoundStartNotificationData;                      // 0x0A50(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UHUDNotificationAsset*                       SlaughterNewRoundWaveNotificationData;                    // 0x0A58(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UHUDNotificationAsset*                       SlaughterRoundCompletedNotificationData;                  // 0x0A60(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UHUDNotificationAsset*                       SlaughterFailedNotificationData;                          // 0x0A68(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UHUDNotificationAsset*>               SlaughterCountdownNotificationData;                       // 0x0A70(0x0010) (Edit, ZeroConstructor)
	class UHUDNotificationAsset*                       SlaughterNotAllPlayersAssembledNotificationData;          // 0x0A80(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                NewRoundNotificationPriority;                             // 0x0A88(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0A8C(0x0004) MISSED OFFSET
	struct FText                                       NewRoundNotificationText;                                 // 0x0A90(0x0028) (Edit)
	int                                                NewWaveNotificationPriority;                              // 0x0AA8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0AAC(0x0004) MISSED OFFSET
	struct FText                                       NewWaveNotificationText;                                  // 0x0AB0(0x0028) (Edit)
	struct FText                                       BossWaveNotificationText;                                 // 0x0AC8(0x0028) (Edit)
	int                                                RoundCompleteNotificationPriority;                        // 0x0AE0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0AE4(0x0004) MISSED OFFSET
	struct FText                                       RoundCompleteNotificationText;                            // 0x0AE8(0x0028) (Edit)
	int                                                PlayerDiedNotificationPriority;                           // 0x0B00(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0B04(0x0004) MISSED OFFSET
	struct FText                                       PlayerDiedNotificationText;                               // 0x0B08(0x0028) (Edit)
	int                                                TeamWipeNotificationPriority;                             // 0x0B20(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0B24(0x0004) MISSED OFFSET
	struct FText                                       TeamWipeNotificationText;                                 // 0x0B28(0x0028) (Edit)
	int                                                NotAllPlayersAssembledNotificationPriority;               // 0x0B40(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0B44(0x0004) MISSED OFFSET
	struct FText                                       NotAllPlayersAssembledNotificationText;                   // 0x0B48(0x0028) (Edit)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0B60(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlayerDied;                                             // 0x0B68(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAllPlayersDied;                                         // 0x0B78(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnNewRound;                                               // 0x0B88(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnNewWave;                                                // 0x0B98(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRoundComplete;                                          // 0x0BA8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnWaveCountdown;                                          // 0x0BB8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnNotAllPlayersAssembled;                                 // 0x0BC8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	int                                                WaveCountdown;                                            // 0x0BD8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0BDC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SlaughterGameState");
		return ptr;
	}


	void OnSlaughterWaveCountdown__DelegateSignature(int CountdownRemaining);
	void OnSlaughterRoundComplete__DelegateSignature(int RoundNumber);
	void OnSlaughterPlayerDied__DelegateSignature(class AOakPlayerState* PlayerState);
	void OnSlaughterNotAllPlayersAssembled__DelegateSignature();
	void OnSlaughterNewWave__DelegateSignature(bool bBossWave, int CountdownDuration);
	void OnSlaughterNewRound__DelegateSignature(int RoundNumber);
	void OnSlaughterAllPlayersDied__DelegateSignature();
	void BroadcastRoundComplete(int RoundNumber);
	void BroadcastPlayerDied(class AOakPlayerState* PlayerState);
	void BroadcastNotAllPlayersAssembled();
	void BroadcastNewWave(bool bBossWave, int CountdownDuration);
	void BroadcastNewRound(int RoundNumber);
	void BroadcastAllPlayersDied();
};


// Class OakGame.SlideModifierAspectData
// 0x0008 (0x0040 - 0x0038)
class USlideModifierAspectData : public UInventoryAspectData
{
public:
	EOakElementalType                                  ElementalType;                                            // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SlideModifierAspectData");
		return ptr;
	}

};


// Class OakGame.SocialInteractionComponent
// 0x0000 (0x03B0 - 0x03B0)
class USocialInteractionComponent : public UUsableComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SocialInteractionComponent");
		return ptr;
	}

};


// Class OakGame.SoundControllerSensor
// 0x0018 (0x0470 - 0x0458)
class ASoundControllerSensor : public AActor
{
public:
	class ASoundController*                            Aggregator;                                               // 0x0458(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBoxComponent*                               BoxComponent;                                             // 0x0460(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              FadeDistance;                                             // 0x0468(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CurrentValue;                                             // 0x046C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SoundControllerSensor");
		return ptr;
	}

};


// Class OakGame.SoundController
// 0x0068 (0x04C0 - 0x0458)
class ASoundController : public AActor
{
public:
	TArray<class ASoundControllerSensor*>              Sensors;                                                  // 0x0458(0x0010) (Edit, ZeroConstructor)
	class UWwiseRtpc*                                  RTPC;                                                     // 0x0468(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<class AActor*, float>                         Values;                                                   // 0x0470(0x0050) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SoundController");
		return ptr;
	}

};


// Class OakGame.SpawnFactory_Oak
// 0x0008 (0x01E0 - 0x01D8)
class USpawnFactory_Oak : public USpawnFactory_Generic
{
public:
	bool                                               bCopyRegionDataToSpawnedActors;                           // 0x01D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01D9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SpawnFactory_Oak");
		return ptr;
	}

};


// Class OakGame.SpawnFactory_Lootable
// 0x0040 (0x0220 - 0x01E0)
class USpawnFactory_Lootable : public USpawnFactory_Oak
{
public:
	TSoftObjectPtr<class UClass>                       LootableActorClass;                                       // 0x01E0(0x0028) (Edit)
	bool                                               bLockOnSpawn;                                             // 0x0208(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0209(0x0007) MISSED OFFSET
	class UGbxCondition*                               UnlockCondition;                                          // 0x0210(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ULootableBalanceData*                        LootableBalanceDataOverride;                              // 0x0218(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SpawnFactory_Lootable");
		return ptr;
	}

};


// Class OakGame.SpawnFactory_OakAI
// 0x00C8 (0x02A8 - 0x01E0)
class USpawnFactory_OakAI : public USpawnFactory_Oak
{
public:
	TSoftObjectPtr<class UClass>                       AIActorClass;                                             // 0x01E0(0x0028) (Edit)
	class UItemPoolListInterface*                      ItemPoolToDropOnDeath;                                    // 0x0208(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ItemPoolToDropOnDeathAdditive;                            // 0x0210(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EItemDropOnDeathType                               ItemPoolDropOnDeathType;                                  // 0x0211(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideEquippedItems;                                   // 0x0212(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0213(0x0005) MISSED OFFSET
	struct FItemPoolCollection                         CustomItemCollectionToEquip;                              // 0x0218(0x0020) (Deprecated)
	TArray<struct FItemPoolCollection>                 CustomItemCollectionsToEquip;                             // 0x0238(0x0010) (Edit, ZeroConstructor)
	bool                                               bEquipSingleItemFromCollection;                           // 0x0248(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0249(0x0007) MISSED OFFSET
	class UGbxUIName*                                  UINameOverride;                                           // 0x0250(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTeam*                                       TeamOverride;                                             // 0x0258(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGestaltPartListData*                        GestaltPartListDataOverride;                              // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogNameTag*                              DialogNameTagOverride;                                    // 0x0268(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FSpawnFactorKeyedAction                     KeyedActions;                                             // 0x0270(0x0038) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SpawnFactory_OakAI");
		return ptr;
	}

};


// Class OakGame.SpawnFactory_OakInteractiveObject
// 0x0028 (0x0208 - 0x01E0)
class USpawnFactory_OakInteractiveObject : public USpawnFactory_Oak
{
public:
	TSoftObjectPtr<class UClass>                       InteractiveObjectClass;                                   // 0x01E0(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SpawnFactory_OakInteractiveObject");
		return ptr;
	}

};


// Class OakGame.SpawnFactory_OakItemPickup
// 0x0030 (0x0210 - 0x01E0)
class USpawnFactory_OakItemPickup : public USpawnFactory_Oak
{
public:
	TSoftObjectPtr<class UClass>                       PickupActorClass;                                         // 0x01E0(0x0028) (Edit)
	class UItemPoolData*                               ItemPoolToDropFrom;                                       // 0x0208(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SpawnFactory_OakItemPickup");
		return ptr;
	}

};


// Class OakGame.SpawnFactory_OakProjectile
// 0x0028 (0x0208 - 0x01E0)
class USpawnFactory_OakProjectile : public USpawnFactory_Oak
{
public:
	TSoftObjectPtr<class UClass>                       ProjectileClass;                                          // 0x01E0(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SpawnFactory_OakProjectile");
		return ptr;
	}

};


// Class OakGame.SpawnFactory_OakTurret
// 0x0030 (0x0210 - 0x01E0)
class USpawnFactory_OakTurret : public USpawnFactory_Oak
{
public:
	class USpawnFactory*                               SeatFactory;                                              // 0x01E0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TSoftObjectPtr<class UClass>                       TurretActorClass;                                         // 0x01E8(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SpawnFactory_OakTurret");
		return ptr;
	}

};


// Class OakGame.SpawnFactory_OakVehicle
// 0x0038 (0x0218 - 0x01E0)
class USpawnFactory_OakVehicle : public USpawnFactory_Oak
{
public:
	bool                                               bDigistructOnSpawn;                                       // 0x01E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowScanningOnCAR;                                      // 0x01E1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCannotWorldTravel;                                       // 0x01E2(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x01E3(0x0005) MISSED OFFSET
	class UInventoryBalanceData*                       InventoryBalanceData;                                     // 0x01E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      VehicleActorClass;                                        // 0x01F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class USpawnFactory*>                       SeatFactories;                                            // 0x01F8(0x0010) (Edit, ExportObject, ZeroConstructor)
	bool                                               bForceDontDespawnWhenNoOccupant;                          // 0x0208(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bForceKeepAssociatedToSpawner;                            // 0x0209(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x020A(0x0006) MISSED OFFSET
	class UGbxUIName*                                  UINameOverride;                                           // 0x0210(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SpawnFactory_OakVehicle");
		return ptr;
	}

};


// Class OakGame.VehiclePartSetData
// 0x0000 (0x00A0 - 0x00A0)
class UVehiclePartSetData : public UInventoryPartSetData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehiclePartSetData");
		return ptr;
	}

};


// Class OakGame.SpawnFactory_OakVehicleBuilder
// 0x0088 (0x02A0 - 0x0218)
class USpawnFactory_OakVehicleBuilder : public USpawnFactory_OakVehicle
{
public:
	class UClass*                                      VehicleClass;                                             // 0x0218(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bShowArchetypePartOnly;                                   // 0x0220(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0221(0x0007) MISSED OFFSET
	TArray<struct FVehiclePartListData>                VehiclePartLists;                                         // 0x0228(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	class UInventoryBalanceData*                       PartListBalanceData;                                      // 0x0238(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UActorPartSetData*                           PartSetData;                                              // 0x0240(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FSeatOccupant>                       SeatList;                                                 // 0x0248(0x0010) (Edit, ZeroConstructor)
	class USpawnOptionData*                            DefaultSpawnOptions;                                      // 0x0258(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bRandomizePassengerCount;                                 // 0x0260(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0261(0x0003) MISSED OFFSET
	struct FInt32Interval                              RandomizePassengerCount;                                  // 0x0264(0x0008) (Edit)
	bool                                               bWeightedPassengersNum;                                   // 0x026C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x026D(0x0003) MISSED OFFSET
	TArray<struct FWeightedPassengersNum>              WeightedPassengersNum;                                    // 0x0270(0x0010) (Edit, ZeroConstructor)
	class UEnum*                                       PartTypeEnum;                                             // 0x0280(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	class UVehiclePartSetData*                         CustomVehicleInventoryPartSetData;                        // 0x0288(0x0008) (ZeroConstructor, IsPlainOldData)
	class UInventoryData*                              CustomInventoryData;                                      // 0x0290(0x0008) (ZeroConstructor, IsPlainOldData)
	class UInventoryBalanceData*                       CustomVehicleInventoryBalanceData;                        // 0x0298(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SpawnFactory_OakVehicleBuilder");
		return ptr;
	}

};


// Class OakGame.SpawnFactory_OakVehicleRandomSeats
// 0x0010 (0x0228 - 0x0218)
class USpawnFactory_OakVehicleRandomSeats : public USpawnFactory_OakVehicle
{
public:
	TArray<struct FSpawnFactoryDataArray>              SeatOptions;                                              // 0x0218(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SpawnFactory_OakVehicleRandomSeats");
		return ptr;
	}

};


// Class OakGame.SpawnLootManager
// 0x0058 (0x0080 - 0x0028)
class USpawnLootManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET
	TArray<struct FSpawnDroppedPickupLootRequestEntry> DroppedPickupRequests;                                    // 0x0038(0x0010) (ZeroConstructor)
	TArray<struct FSpawnInventoryLootRequestEntry>     InventoryActorRequests;                                   // 0x0048(0x0010) (ZeroConstructor)
	TArray<class AOakInventoryItemPickup*>             PickupsHiddenWhileInStatusMenu;                           // 0x0058(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0068(0x0008) MISSED OFFSET
	TArray<class AOakInventoryItemPickup*>             PickupsHiddenInCinematic;                                 // 0x0070(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SpawnLootManager");
		return ptr;
	}


	void OnNumPlayersChanged(int NewNumPlayers);
};


// Class OakGame.SpawnPerformance_Skeletal
// 0x0008 (0x0460 - 0x0458)
class ASpawnPerformance_Skeletal : public APrototypeActor
{
public:
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                                    // 0x0458(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SpawnPerformance_Skeletal");
		return ptr;
	}

};


// Class OakGame.SpawnPerformance_SkeletalWithReference
// 0x0000 (0x0460 - 0x0460)
class ASpawnPerformance_SkeletalWithReference : public ASpawnPerformance_Skeletal
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SpawnPerformance_SkeletalWithReference");
		return ptr;
	}

};


// Class OakGame.SpawnPerformance_10SMC
// 0x0050 (0x04A8 - 0x0458)
class ASpawnPerformance_10SMC : public APrototypeActor
{
public:
	class UStaticMeshComponent*                        StaticMeshComponent;                                      // 0x0458(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        StaticMeshComponent1;                                     // 0x0460(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        StaticMeshComponent2;                                     // 0x0468(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        StaticMeshComponent3;                                     // 0x0470(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        StaticMeshComponent4;                                     // 0x0478(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        StaticMeshComponent5;                                     // 0x0480(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        StaticMeshComponent6;                                     // 0x0488(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        StaticMeshComponent7;                                     // 0x0490(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        StaticMeshComponent8;                                     // 0x0498(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        StaticMeshComponent9;                                     // 0x04A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SpawnPerformance_10SMC");
		return ptr;
	}

};


// Class OakGame.SpawnPerformance_10SMCWithReferences
// 0x0000 (0x04A8 - 0x04A8)
class ASpawnPerformance_10SMCWithReferences : public ASpawnPerformance_10SMC
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SpawnPerformance_10SMCWithReferences");
		return ptr;
	}

};


// Class OakGame.SpawnPerformance_10Components
// 0x0050 (0x04A8 - 0x0458)
class ASpawnPerformance_10Components : public APrototypeActor
{
public:
	class UBalanceStateComponent*                      BalanceStateComponent;                                    // 0x0458(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOakDamageComponent*                         DamageReceiverComponent;                                  // 0x0460(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UElementalInteractionComponent*              ElementalInteractionComponent;                            // 0x0468(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UOakMissionIconComponent*                    OakMissionIconComponent;                                  // 0x0470(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    ParticleSystemComponent;                                  // 0x0478(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class URotatingMovementComponent*                  RotatingMovementComponent;                                // 0x0480(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                                    // 0x0488(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        StaticMeshComponent;                                      // 0x0490(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUsableComponent*                            UsableComponent;                                          // 0x0498(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWwiseAudioComponent*                        WwiseAudioComponent;                                      // 0x04A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SpawnPerformance_10Components");
		return ptr;
	}

};


// Class OakGame.SpawnPerformance_10ComponentsWithReferences
// 0x0000 (0x04A8 - 0x04A8)
class ASpawnPerformance_10ComponentsWithReferences : public ASpawnPerformance_10Components
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SpawnPerformance_10ComponentsWithReferences");
		return ptr;
	}

};


// Class OakGame.SpinnerSliderTestMovie
// 0x0010 (0x06C0 - 0x06B0)
class USpinnerSliderTestMovie : public UGFxStatusMenuSubmenu
{
public:
	class UGbxGFxSlider*                               TestSlider;                                               // 0x06B0(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UGbxGFxDropDownList*                         TestDropDownList;                                         // 0x06B8(0x0008) (BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SpinnerSliderTestMovie");
		return ptr;
	}

};


// Class OakGame.Splat
// 0x0058 (0x04B0 - 0x0458)
class ASplat : public AActor
{
public:
	class USplatData*                                  SplatDataAsset;                                           // 0x0458(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class UDecalComponent*                             SplatDecal;                                               // 0x0460(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    SplatDecalMID;                                            // 0x0468(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UDecalComponent*                             GroundingDecal;                                           // 0x0470(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    GroundingDecalMID;                                        // 0x0478(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UParticleSystemComponent*                    ParticleSystem;                                           // 0x0480(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGbxConvexComponent*                         OverlapCollision;                                         // 0x0488(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UElementalInteractionComponent*              ElementalInteraction;                                     // 0x0490(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWwiseAudioComponent*                        Audio;                                                    // 0x0498(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x04A0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.Splat");
		return ptr;
	}


	void InitializeSplat();
};


// Class OakGame.SplatDamageData
// 0x0000 (0x0310 - 0x0310)
class USplatDamageData : public UOakDamageData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SplatDamageData");
		return ptr;
	}

};


// Class OakGame.SplatData
// 0x00C8 (0x00F8 - 0x0030)
class USplatData : public UGbxDataAsset
{
public:
	unsigned char                                      bUseGroundingDecal : 1;                                   // 0x0030(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      bUseSplatDecalMaterialArray : 1;                          // 0x0030(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      bOverrideDamageData : 1;                                  // 0x0030(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      bForceDamageToPlayerControlled : 1;                       // 0x0030(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      bOverrideDamageAmount : 1;                                // 0x0030(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      bUseGroundingDecalDeathDelay : 1;                         // 0x0030(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              BirthDuration;                                            // 0x0034(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BirthOpacity;                                             // 0x0038(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BirthRadius;                                              // 0x003C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             BirthEffect;                                              // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 BirthAudio;                                               // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          GroundingDecalMaterial;                                   // 0x0050(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          SplatDecalMaterial;                                       // 0x0058(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialInterface*>                  SplatDecalMaterialArray;                                  // 0x0060(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	class UParticleSystem*                             Effect;                                                   // 0x0070(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // 0x0078(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Opacity;                                                  // 0x007C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x0080(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BonusDecalScalePercent;                                   // 0x0084(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DamageDataOverride;                                       // 0x0088(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DamageScalar;                                             // 0x0090(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FAttitudeDamageRules                        AttitudeDamageRules;                                      // 0x0094(0x0004) (Edit, BlueprintReadOnly)
	struct FAttributeInitializationData                DamageOverride;                                           // 0x0098(0x0038) (Edit, BlueprintReadOnly)
	class UElementalInteractionData*                   ElementalInteraction;                                     // 0x00D0(0x0008) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DeathDuration;                                            // 0x00D8(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DeathOpacity;                                             // 0x00DC(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DeathRadius;                                              // 0x00E0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00E4(0x0004) MISSED OFFSET
	class UWwiseEvent*                                 DeathAudio;                                               // 0x00E8(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GroundingDecalDeathDelay;                                 // 0x00F0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SplatData");
		return ptr;
	}

};


// Class OakGame.SplineFollowerComponent
// 0x00A0 (0x0218 - 0x0178)
class USplineFollowerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnReachedEndOfSpline;                                     // 0x0178(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReachedCallbackInputKey;                                // 0x0188(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReachedCallbackDistance;                                // 0x0198(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              CallbackInputKey;                                         // 0x01A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01AC(0x0004) MISSED OFFSET
	TArray<struct FSplineFollowerDistanceCheckpoint>   CallbackDistancesOnSpline;                                // 0x01B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              MaxSpeed;                                                 // 0x01C0(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               bUseMinSpeed;                                             // 0x01C4(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x01C5(0x0003) MISSED OFFSET
	float                                              MinSpeed;                                                 // 0x01C8(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              Acceleration;                                             // 0x01CC(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              TurnRate;                                                 // 0x01D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoStart;                                               // 0x01D4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x01D5(0x0003) MISSED OFFSET
	float                                              ForwardLookUpDistance;                                    // 0x01D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OnSplineDistanceDelta;                                    // 0x01DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OnSplineYawDelta;                                         // 0x01E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x01E4(0x0004) MISSED OFFSET
	class USplineComponent*                            SplineComponent;                                          // 0x01E8(0x0008) (Edit, ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x01F0(0x0008) MISSED OFFSET
	float                                              CurrentSpeed;                                             // 0x01F8(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              CurrentDistanceOnSpline;                                  // 0x01FC(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bMoving;                                                  // 0x0200(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bOnSpline;                                                // 0x0201(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               bReverse;                                                 // 0x0202(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x15];                                      // 0x0203(0x0015) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SplineFollowerComponent");
		return ptr;
	}


	void TelportToPositionOnSpline(float Percent);
	bool Stop();
	bool Start();
	void SnapToSpline();
	void SetSplineComponent(class USplineComponent* Spline);
	void SetDirection(bool bSetReverse);
	void OnRep_SplineComponent();
	bool IsMoving();
	class USplineComponent* GetSplineComponent();
	struct FVector GetLocationAhead(float AheadDistance);
	bool GetDirection();
	float GetCurrentDistanceOnSpline();
};


// Class OakGame.SplineMovementComponent
// 0x0060 (0x0220 - 0x01C0)
class USplineMovementComponent : public UMovementComponent
{
public:
	class AActor*                                      SplineComponentHolder;                                    // 0x01C0(0x0008) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FName                                       SplineComponentNameSelected;                              // 0x01C8(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              StartDistance;                                            // 0x01D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpeed;                                                 // 0x01D4(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              MinSpeed;                                                 // 0x01D8(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              LinearDamping;                                            // 0x01DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GravityZ;                                                 // 0x01E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AccelerationAngleThreshold;                               // 0x01E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SleepThresholdMaxTime;                                    // 0x01E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SleepThreshold;                                           // 0x01EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIgnoreCollisionWhenMoving : 1;                           // 0x01F0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01F1(0x0003) MISSED OFFSET
	struct FVector                                     OffsetFromSpline;                                         // 0x01F4(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              VelocityCurrent;                                          // 0x0200(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              ImpulseThisFrameAccumulator;                              // 0x0204(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              CurrentDistanceAlongSpline;                               // 0x0208(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x020C(0x000C) MISSED OFFSET
	float                                              TimeWithinSleepThreshold;                                 // 0x0218(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x021C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SplineMovementComponent");
		return ptr;
	}


	void SwitchSpline(class AActor* NewSplineComponentHolder, const struct FName& NewSplineName);
	void SetStartingDistanceOnSpline(float DistanceOnSpline);
	void OnRep_SplineComponentHolder();
	void OnRep_Impulse();
	class USplineComponent* GetSplineComponent();
};


// Class OakGame.SplineMovementComponentDoubleLinked
// 0x0028 (0x0248 - 0x0220)
class USplineMovementComponentDoubleLinked : public USplineMovementComponent
{
public:
	class AActor*                                      CartInFront;                                              // 0x0220(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class AActor*                                      CartBehind;                                               // 0x0228(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              DistanceFromCartInFront;                                  // 0x0230(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DistanceFromCartBehind;                                   // 0x0234(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0238(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SplineMovementComponentDoubleLinked");
		return ptr;
	}

};


// Class OakGame.StandInAuxiliaryActor
// 0x0128 (0x0580 - 0x0458)
class AStandInAuxiliaryActor : public AActor
{
public:
	class UGbxActionComponent*                         ActionComponent;                                          // 0x0458(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGbxCustomizationComponent*                  CustomizationComponent;                                   // 0x0460(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      MeshComponent;                                            // 0x0468(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x98];                                      // 0x0470(0x0098) MISSED OFFSET
	class UGbxSkeletalMeshComponent*                   HeadMeshReference;                                        // 0x0508(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             CachedHeadMeshParent;                                     // 0x0510(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x38];                                      // 0x0518(0x0038) MISSED OFFSET
	bool                                               bWantsFadeInCoordinatedEffects;                           // 0x0550(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0551(0x0007) MISSED OFFSET
	class UInventoryBalanceData*                       EquippedWeaponData;                                       // 0x0558(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       EquippedWeaponSocket;                                     // 0x0560(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EquippedWeaponScale;                                      // 0x0568(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x056C(0x0004) MISSED OFFSET
	class AWeapon*                                     EquippedWeaponInstance;                                   // 0x0570(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0578(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.StandInAuxiliaryActor");
		return ptr;
	}


	void SetHidden(bool bNewHidden, const struct FName& Reason);
	void OnReceivedClonedWeaponAppearance(class USceneComponent* BaseComponent);
	class AOakCharacter_StandIn* GetOwningStandIn();
	class AOakCharacter_Player* GetOwningPlayer();
};


// Class OakGame.StandInAuxiliaryActor_IronBear
// 0x0120 (0x06A0 - 0x0580)
class AStandInAuxiliaryActor_IronBear : public AStandInAuxiliaryActor
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0580(0x0020) MISSED OFFSET
	TSoftObjectPtr<class UOakActionAbilityAugmentSlotData> RightHardPointSlot;                                       // 0x05A0(0x0028) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UOakActionAbilityAugmentData_IronBear> GunnersNestAugment;                                       // 0x05C8(0x0028) (Edit, DisableEditOnInstance)
	TArray<struct FIronBearHardPointAugmentInfo>       Hardpoints;                                               // 0x05F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UGbxSkeletalMeshComponent*                   MainMesh;                                                 // 0x0600(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGbxSkeletalMeshComponent*                   LeftHardPointMeshComponent;                               // 0x0608(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGbxSkeletalMeshComponent*                   RightHardPointMeshComponent;                              // 0x0610(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGbxSkeletalMeshComponent*                   GunnersNestMeshComponent;                                 // 0x0618(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FHardPointSlotSettings                      RightHardPointSlotSettings;                               // 0x0620(0x0028) (Edit, DisableEditOnInstance)
	struct FHardPointSlotSettings                      LeftHardPointSlotSettings;                                // 0x0648(0x0028) (Edit, DisableEditOnInstance)
	class UClass*                                      GenericEquippedCE;                                        // 0x0670(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOnlyPlayInitialHardPointFlourishOnLeftSlot;              // 0x0678(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0679(0x0003) MISSED OFFSET
	float                                              DelayBetweenInitialHardPointFlourishAnimations;           // 0x067C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0680(0x0008) MISSED OFFSET
	class UOakActionAbilityAugmentData*                LastSlottedLeftHardPoint;                                 // 0x0688(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakActionAbilityAugmentData*                LastSlottedRightHardPoint;                                // 0x0690(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0698(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.StandInAuxiliaryActor_IronBear");
		return ptr;
	}

};


// Class OakGame.StandInAuxiliaryActor_Pet
// 0x0000 (0x0580 - 0x0580)
class AStandInAuxiliaryActor_Pet : public AStandInAuxiliaryActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.StandInAuxiliaryActor_Pet");
		return ptr;
	}

};


// Class OakGame.StandInAuxiliaryActor_Siren
// 0x0000 (0x0580 - 0x0580)
class AStandInAuxiliaryActor_Siren : public AStandInAuxiliaryActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.StandInAuxiliaryActor_Siren");
		return ptr;
	}


	void Initialize(class UOakActionAbilityAugmentData* ElementalAugment, class UOakActionAbilityAugmentData* EffectAugment);
};


// Class OakGame.StandInAuxiliaryActorAnimInstance
// 0x0000 (0x0440 - 0x0440)
class UStandInAuxiliaryActorAnimInstance : public UAnimInstance
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.StandInAuxiliaryActorAnimInstance");
		return ptr;
	}

};


// Class OakGame.StandInGlobals
// 0x0558 (0x0588 - 0x0030)
class UStandInGlobals : public UGbxDataAsset
{
public:
	class UDataTable*                                  StandInDataTable;                                         // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TSoftObjectPtr<class UClass>                       StandInOnCE;                                              // 0x0038(0x0028) (Edit)
	TSoftObjectPtr<class UClass>                       StandInQuickOnCE;                                         // 0x0060(0x0028) (Edit)
	TSoftObjectPtr<class UClass>                       StandInOffCE;                                             // 0x0088(0x0028) (Edit)
	TSoftObjectPtr<class UClass>                       StandInQuickOffCE;                                        // 0x00B0(0x0028) (Edit)
	TSoftObjectPtr<class UClass>                       ProjectedStandInLoopCE;                                   // 0x00D8(0x0028) (Edit)
	TSoftObjectPtr<class UClass>                       StandInOffCE_Head;                                        // 0x0100(0x0028) (Edit)
	TSoftObjectPtr<class UClass>                       StandInOnCE_Head;                                         // 0x0128(0x0028) (Edit)
	TSoftObjectPtr<class UClass>                       StandInOffCE_Head_Vertical;                               // 0x0150(0x0028) (Edit)
	TSoftObjectPtr<class UClass>                       StandInOnCE_Head_Vertical;                                // 0x0178(0x0028) (Edit)
	TSoftObjectPtr<class UClass>                       StandInOffCE_Body;                                        // 0x01A0(0x0028) (Edit)
	TSoftObjectPtr<class UClass>                       StandInOnCE_Body;                                         // 0x01C8(0x0028) (Edit)
	TSoftObjectPtr<class UClass>                       StandInOffCE_InnerOutline;                                // 0x01F0(0x0028) (Edit)
	TSoftObjectPtr<class UClass>                       StandInOnCE_InnerOutline;                                 // 0x0218(0x0028) (Edit)
	TSoftObjectPtr<class UInventoryBalanceData>        DefaultWeaponSkinWeaponData;                              // 0x0240(0x0028) (Edit)
	struct FGlobalsStandInSettings                     FullScreenSettings;                                       // 0x0268(0x0070) (Edit)
	struct FGlobalsStandInSettings                     SplitScreenSettings;                                      // 0x02D8(0x0070) (Edit)
	struct FGlobalsStandInSettings                     VerticalSplitScreenSettings;                              // 0x0348(0x0070) (Edit)
	struct FGlobalsStandInSettings                     QuadSplitScreenSettings;                                  // 0x03B8(0x0070) (Edit)
	struct FNumericRange                               RoomDecorationRotationYawLimits;                          // 0x0428(0x0008) (Edit)
	int                                                PlayerLevelToShowActionSkillsOnStandIns;                  // 0x0430(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StandingStandinDelayAfterFrontendEmote;                   // 0x0434(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StandingStandinDelayAfterFrontendInspect;                 // 0x0438(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StandInReturnToInspectRotationInterpSpeed;                // 0x043C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StandInListSelectionChangeDelay;                          // 0x0440(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0444(0x0004) MISSED OFFSET
	struct FFrontendStandInSlotSettings                FrontendSlotSettings[0x4];                                // 0x0448(0x0050) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.StandInGlobals");
		return ptr;
	}

};


// Class OakGame.StandInConfigLibrary
// 0x0000 (0x0028 - 0x0028)
class UStandInConfigLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.StandInConfigLibrary");
		return ptr;
	}

};


// Class OakGame.StatusEffectEventProviderInterface
// 0x0000 (0x0028 - 0x0028)
class UStatusEffectEventProviderInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.StatusEffectEventProviderInterface");
		return ptr;
	}

};


// Class OakGame.StatusEffectStackingStrategyData_OakElemental
// 0x0000 (0x0030 - 0x0030)
class UStatusEffectStackingStrategyData_OakElemental : public UStatusEffectStackingStrategyData
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.StatusEffectStackingStrategyData_OakElemental");
		return ptr;
	}

};


// Class OakGame.StreamerBoosterData
// 0x0020 (0x0050 - 0x0030)
class UStreamerBoosterData : public UGbxDataAsset
{
public:
	TArray<struct FStreamerBoosterInfo>                PrimaryBoosterInfos;                                      // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FStreamerBoosterInfo>                SecondaryBoosterInfos;                                    // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.StreamerBoosterData");
		return ptr;
	}

};


// Class OakGame.StreamerLootableObject
// 0x0048 (0x0830 - 0x07E8)
class AStreamerLootableObject : public ALootableObject
{
public:
	class FString                                      FirstDonor;                                               // 0x07E8(0x0010) (ZeroConstructor, Transient)
	class FString                                      LargestDonor;                                             // 0x07F8(0x0010) (ZeroConstructor, Transient)
	int                                                LargestDonationAmount;                                    // 0x0808(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x080C(0x0004) MISSED OFFSET
	class UOakMissionIconComponent*                    ChestWaypoint;                                            // 0x0810(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	int                                                DonationTier;                                             // 0x0818(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x081C(0x0004) MISSED OFFSET
	class UInWorldIconData*                            ChestWorldIconData;                                       // 0x0820(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ChestWaypointVerticalOffset;                              // 0x0828(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x082C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.StreamerLootableObject");
		return ptr;
	}


	void TriggerShowEffectSlideout(class AOakPlayerController* OakPC);
	void OnShowEffectSlideout(class AOakPlayerController* OakPC);
};


// Class OakGame.StreamingEventDispatcher
// 0x00A0 (0x04F8 - 0x0458)
class AStreamingEventDispatcher : public AActor
{
public:
	class AGbxCharacter*                               EventEnemy;                                               // 0x0458(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakMissionIconComponent*                    EnemyWaypoint;                                            // 0x0460(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGbxUIName*                                  EnemyUIName;                                              // 0x0468(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AOakPlayerController*                        PlayerOwner;                                              // 0x0470(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakStreamingInteractionEvent_EnemySpawn*    EnemySpawnEventRef;                                       // 0x0478(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      SpawnedEnemy;                                             // 0x0480(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnActorSpawned;                                           // 0x0488(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnActorDied;                                              // 0x0498(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnActorSuspend;                                           // 0x04A8(0x0010) (ZeroConstructor, InstancedReference)
	unsigned char                                      UnknownData00[0x40];                                      // 0x04B8(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.StreamingEventDispatcher");
		return ptr;
	}


	void ValidEnemySuspend(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void ValidEnemyDied(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void SetEventEnemyName(const class FString& NewEnemyName);
	void SetEventEnemy(class AGbxCharacter* Enemy);
	void SendUpdatedSessionStats(const struct FOakInteractiveSessionStats& Updated);
	void PlayerDied();
	void OnVehicleExited(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnVehicleEntered(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnRep_ValidEnemyActorSpawned();
	void OnPlayerInjured();
	void OnPlayerDead();
	void OnPlayerCausedDeath(class UDamageComponent* Damaged, const struct FCausedDeathDetails& Details);
	void OnPlayerCausedDamage(class AActor* DamageInstigator, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AActor* DamagedActor, const struct FCausedDamageDetails& Details);
	void OnLegendarySpawned(bool bNewVal);
	void OnEnemySuspend(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void OnEnemySpawned(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void OnEnemyDied(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void HookToEnemySpawnEvent(class UOakStreamingInteractionEvent_EnemySpawn* EnemySpawnEvent, TArray<class USpawnerComponent*> AllValidSpawners);
	void GetUpdatedSessionStats();
	void ExecutePollAction(const struct FSoftObjectPath& PollActionClassPath, class UObject* Context, float Value);
	void CleanEventEnemy();
};


// Class OakGame.StreamingPoolActionInfo
// 0x0038 (0x0068 - 0x0030)
class UStreamingPoolActionInfo : public UGbxDataAsset
{
public:
	struct FText                                       ActionTitle;                                              // 0x0030(0x0028) (Edit)
	struct FText                                       ActionDescription;                                        // 0x0048(0x0028) (Edit)
	struct FVector2D                                   ActionValueMinMax;                                        // 0x0060(0x0008) (Edit, BlueprintVisible, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.StreamingPoolActionInfo");
		return ptr;
	}


	void STATIC_SimulatePollActionSelected(TSoftObjectPtr<class UClass> PollActionClass, class AOakPlayerController* PlayerOwner, class UObject* Context, float Value);
	void PollActionSelected(class AOakPlayerController* PlayerOwner, class UObject* Context, float Value);
	void PollActionInitialized();
};


// Class OakGame.SwayPatternData
// 0x0018 (0x0048 - 0x0030)
class USwayPatternData : public UGbxDataAsset
{
public:
	TArray<struct FVector2D>                           Samples;                                                  // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, EditConst)
	int                                                NumberOfOctaves;                                          // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NumberOfSamplesToGenerate;                                // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.SwayPatternData");
		return ptr;
	}

};


// Class OakGame.TechnicalVehicleAnimInstance
// 0x07C0 (0x1AB0 - 0x12F0)
class UTechnicalVehicleAnimInstance : public UOakVehicleAnimInstance
{
public:
	bool                                               bIsBigWheel;                                              // 0x12F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x12F1(0x0007) MISSED OFFSET
	struct FName                                       SlotToPlayBounceOn;                                       // 0x12F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           BrakeBounceBack;                                          // 0x1300(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           BrakeBounceFront;                                         // 0x1308(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlendAccelAlpha;                                          // 0x1310(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x79C];                                     // 0x1314(0x079C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TechnicalVehicleAnimInstance");
		return ptr;
	}

};


// Class OakGame.TedioreBehavior
// 0x0008 (0x0030 - 0x0028)
class UTedioreBehavior : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TedioreBehavior");
		return ptr;
	}


	void K2_OnProjectileLastBounce(class ATedioreProjectile* Projectile);
	void K2_OnProjectileInitialized(class ATedioreProjectile* Projectile);
	void K2_OnProjectileImpact(class ATedioreProjectile* Projectile, const struct FHitResult& HitResult);
	void K2_OnProjectileFireWeapon(class ATedioreProjectile* Projectile);
	void K2_OnProjectileExplode(class ATedioreProjectile* Projectile);
	void K2_OnProjectileEndPlay(class ATedioreProjectile* Projectile);
	void K2_OnProjectileBounce(class ATedioreProjectile* Projectile);
	void K2_OnProjectileBeginPlay(class ATedioreProjectile* Projectile);
	void K2_OnLastBounceEvent(class ATedioreProjectile* Projectile);
	void K2_OnInitializedEvent(class ATedioreProjectile* Projectile);
	void K2_OnImpactEvent(class ATedioreProjectile* Projectile, const struct FHitResult& HitResult);
	void K2_OnFireWeaponEvent(class ATedioreProjectile* Projectile);
	void K2_OnExplodeEvent(class ATedioreProjectile* Projectile);
	void K2_OnEndPlayEvent(class ATedioreProjectile* Projectile);
	void K2_OnBounceEvent(class ATedioreProjectile* Projectile);
	void K2_OnBeginPlayEvent(class ATedioreProjectile* Projectile);
};


// Class OakGame.TedioreBehavior_Bouncy
// 0x0038 (0x0068 - 0x0030)
class UTedioreBehavior_Bouncy : public UTedioreBehavior
{
public:
	float                                              BouncyLifeSpan;                                           // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxNumBounces;                                            // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Bounciness;                                               // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Friction;                                                 // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ProjectileGravityScale;                                   // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TriggerTime;                                              // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BounceVelocity;                                           // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	class UParticleSystem*                             BouncyTrail;                                              // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 BounceEvent;                                              // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 MirvBounceEvent;                                          // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TedioreBehavior_Bouncy");
		return ptr;
	}

};


// Class OakGame.TedioreBehavior_Drunken
// 0x0008 (0x0038 - 0x0030)
class UTedioreBehavior_Drunken : public UTedioreBehavior
{
public:
	class UDrunkenBaseMovementComponent*               DrunkenTemplate;                                          // 0x0030(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TedioreBehavior_Drunken");
		return ptr;
	}

};


// Class OakGame.TedioreBehavior_Homing
// 0x01B0 (0x01E0 - 0x0030)
class UTedioreBehavior_Homing : public UTedioreBehavior
{
public:
	class UGrenadeHomingComponent*                     HomingTemplate;                                           // 0x0030(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	float                                              InitialHomingDelay;                                       // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RetryHomingDelay;                                         // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FEnvQueryParams                             InitialSearchQuery;                                       // 0x0040(0x00B8) (Edit, DisableEditOnInstance)
	struct FEnvQueryParams                             RetrySearchQuery;                                         // 0x00F8(0x00B8) (Edit, DisableEditOnInstance)
	float                                              OutOfFuelDuration;                                        // 0x01B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GravityScale;                                             // 0x01B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSpeed;                                                 // 0x01B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01BC(0x0004) MISSED OFFSET
	class UWwiseEvent*                                 OnHomingFailed;                                           // 0x01C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 MIRVOnHomingInit;                                         // 0x01C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 MIRVHomingLoopEvent;                                      // 0x01D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 MIRVOnHomingFailed;                                       // 0x01D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TedioreBehavior_Homing");
		return ptr;
	}

};


// Class OakGame.TedioreBehavior_MIRV
// 0x00D8 (0x0108 - 0x0030)
class UTedioreBehavior_MIRV : public UTedioreBehavior
{
public:
	float                                              SpawnAngleOffset;                                         // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MirvSpawnOffset;                                          // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      MirvChildClass;                                           // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHideWeaponVisuals;                                       // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              MirvChildDamageScalar;                                    // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FEnvQueryParams                             MirvHomingSearchQuery;                                    // 0x0048(0x00B8) (Edit, DisableEditOnInstance)
	float                                              MirvHomingInitialDelay;                                   // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MirvHomingRetryDelay;                                     // 0x0104(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TedioreBehavior_MIRV");
		return ptr;
	}

};


// Class OakGame.TedioreBehavior_Shooting
// 0x0038 (0x0068 - 0x0030)
class UTedioreBehavior_Shooting : public UTedioreBehavior
{
public:
	class UClass*                                      MuzzleEffectCollection;                                   // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             LaserSightTemplate;                                       // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     LaserSightMuzzleOffset;                                   // 0x0040(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              ShotDamageScale;                                          // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ShotSpeedScale;                                           // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MinShotsFired;                                            // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NumShotsFiredScale;                                       // 0x0058(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseMaxAmmo;                                              // 0x005C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	float                                              ConeAngleMin;                                             // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ConeAngleMax;                                             // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TedioreBehavior_Shooting");
		return ptr;
	}


	void K2_OnOutOfAmmo(class ATedioreProjectile* Projectile);
};


// Class OakGame.TedioreBehavior_Sticky
// 0x0010 (0x0040 - 0x0030)
class UTedioreBehavior_Sticky : public UTedioreBehavior
{
public:
	class UClass*                                      StuckAICharacter;                                         // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StuckCharacterInitialLifetime;                            // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bFlipMirvStickyTiming;                                    // 0x003C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TedioreBehavior_Sticky");
		return ptr;
	}


	void OnSpawnAiShootingWeapon(class AActor* SpawnedActor);
};


// Class OakGame.TedioreBehavior_SuppressBouncy
// 0x0000 (0x0030 - 0x0030)
class UTedioreBehavior_SuppressBouncy : public UTedioreBehavior
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TedioreBehavior_SuppressBouncy");
		return ptr;
	}

};


// Class OakGame.TedioreBehavior_SuppressDrunken
// 0x0000 (0x0030 - 0x0030)
class UTedioreBehavior_SuppressDrunken : public UTedioreBehavior
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TedioreBehavior_SuppressDrunken");
		return ptr;
	}

};


// Class OakGame.TedioreBehavior_SuppressHoming
// 0x0000 (0x0030 - 0x0030)
class UTedioreBehavior_SuppressHoming : public UTedioreBehavior
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TedioreBehavior_SuppressHoming");
		return ptr;
	}

};


// Class OakGame.TedioreBehavior_TargetCombo
// 0x0048 (0x0078 - 0x0030)
class UTedioreBehavior_TargetCombo : public UTedioreBehavior
{
public:
	class USphereComponent*                            TargetComboSphere;                                        // 0x0030(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	float                                              VisualDelay;                                              // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	class UStaticMeshComponent*                        TargetComboVisuals;                                       // 0x0040(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UHealthTypeData*                             HealthType;                                               // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxAttributeData*                           ComboDamageScale;                                         // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxAttributeData*                           ComboRadiusScale;                                         // 0x0058(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 OnTargetComboExplode;                                     // 0x0060(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 OnTargetComboStart;                                       // 0x0068(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 OnTargetComboEnd;                                         // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TedioreBehavior_TargetCombo");
		return ptr;
	}


	void OnProjectileTakeAnyDamage(class UDamageComponent* DamageReceiver, float Damage, class UGbxDamageType* DamageType, class UDamageSource* DamageSource, class AController* InstigatedBy, class UDamageCauserComponent* DamageCauser, const struct FReceivedDamageDetails& Details);
	void K2_OnComboTargetTriggered(class ATedioreProjectile* Projectile);
	void K2_ComboTargetTriggeredEvent(class ATedioreProjectile* Projectile);
};


// Class OakGame.TedioreProjectile
// 0x01B8 (0x0838 - 0x0680)
class ATedioreProjectile : public AProjectile
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0680(0x0010) MISSED OFFSET
	class UStaticMeshComponent*                        StaticMesh;                                               // 0x0690(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class URotatingMovementComponent*                  RotatingComponent;                                        // 0x0698(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWwiseAudioComponent*                        WwiseComponent;                                           // 0x06A0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USocketComponent*                            FireMuzzleComponent;                                      // 0x06A8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    AttachedTrail;                                            // 0x06B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UTedioreBehavior*>                    TedioreBehaviors;                                         // 0x06B8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	class AWeapon*                                     OwningWeapon;                                             // 0x06C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	class UGbxProjectileMovementComponent*             TedioreProjectileMovement;                                // 0x06D0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGrenadeHomingComponent*                     HomingComponent;                                          // 0x06D8(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UDrunkenBaseMovementComponent*               DrunkenComponent;                                         // 0x06E0(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UWwiseEvent*                                 CachedWeaponFireAudio;                                    // 0x06E8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                AmmoCount;                                                // 0x06F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                AmmoUsed;                                                 // 0x06F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                ProjectilesPerShot;                                       // 0x06F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                ShotAmmoCost;                                             // 0x06FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              ShotDamage;                                               // 0x0700(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              FireRate;                                                 // 0x0704(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              ImpactTriggerDuration;                                    // 0x0708(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bRotateWhenThrown;                                        // 0x070C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x070D(0x0003) MISSED OFFSET
	struct FName                                       MuzzleSocketName;                                         // 0x0710(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       LaserSightSocketName;                                     // 0x0718(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHasMirved;                                               // 0x0720(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsMirvChild;                                             // 0x0721(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0722(0x0002) MISSED OFFSET
	float                                              MirvBaseDamage;                                           // 0x0724(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIgnoreWeaponVisualCloning;                               // 0x0728(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0729(0x0007) MISSED OFFSET
	class UGbxAttributeData*                           NumMirvProjectileAttribute;                               // 0x0730(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FEnvQueryParams                             BouncyAimAssistQuery;                                     // 0x0738(0x00B8) (Edit, BlueprintVisible)
	float                                              MaxAssistAngle;                                           // 0x07F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AssistAngleDot;                                           // 0x07F4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FAttributeInitializationData                StatusEffectDamageScalar;                                 // 0x07F8(0x0038) (Edit, BlueprintVisible)
	bool                                               bIsStuck;                                                 // 0x0830(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0831(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TedioreProjectile");
		return ptr;
	}


	void TurnAttachedTrailOn(bool bRestartTrail);
	void SetAttachedTrail(class UParticleSystem* NewTrail);
	void RemoveAttachedTrail(bool bDestroyTrail);
	void OnRep_OnProjectileStuck();
	void OnProjectileLastBounce(const struct FHitResult& ImpactResult);
	void OnProjectileBounce(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);
	void OnBehaviorInitialized(class UClass* BehaviorClass);
	void STATIC_K2_SpawnTedioreProjectile(class AWeapon* TedioreWeapon, class UClass* TedioreClass);
	bool IsMirvChild();
	class UGrenadeHomingComponent* GetHomingComponent();
	class UDrunkenBaseMovementComponent* GetDrunkenComponent();
	class UParticleSystemComponent* GetAttachedTrail();
	class UTedioreBehavior* FindBehaviorByClass(class UClass* BehaviorClass, bool bCheckChildClasses, EBehaviorOutput* Branches);
	float CalculateExplosionDamage(float DamagePerShot, int BulletsPerShot);
};


// Class OakGame.TedioreProjectileClassAspect
// 0x0008 (0x0040 - 0x0038)
class UTedioreProjectileClassAspect : public UInventoryAspectData
{
public:
	class UClass*                                      TedioreProjectileClass;                                   // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TedioreProjectileClassAspect");
		return ptr;
	}

};


// Class OakGame.TedioreWeaponAspectData
// 0x0008 (0x0040 - 0x0038)
class UTedioreWeaponAspectData : public UInventoryAspectData
{
public:
	class UTedioreBehavior*                            TedioreBehavior;                                          // 0x0038(0x0008) (Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TedioreWeaponAspectData");
		return ptr;
	}

};


// Class OakGame.WeaponBalanceStateComponent
// 0x00C8 (0x0450 - 0x0388)
class UWeaponBalanceStateComponent : public UOakInventoryBalanceStateComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0388(0x0008) MISSED OFFSET
	TArray<struct FWeaponUseModeAspectSetData>         UseModeAspectSetList;                                     // 0x0390(0x0010) (Edit, ZeroConstructor, Transient, EditConst)
	TArray<class UWeaponAudioAspectData*>              AudioAspectList;                                          // 0x03A0(0x0010) (Edit, ZeroConstructor, Transient, EditConst)
	TArray<class UWeaponFoleyAspectData*>              FoleyAspectList;                                          // 0x03B0(0x0010) (Edit, ZeroConstructor, Transient, EditConst)
	TArray<class UWeaponAudioStreamingAspectData*>     AudioStreamingAspectList;                                 // 0x03C0(0x0010) (Edit, ZeroConstructor, Transient, EditConst)
	TArray<class UWeaponEffectBaseAspectData*>         EffectAspectList;                                         // 0x03D0(0x0010) (Edit, ZeroConstructor, Transient, EditConst)
	class UWeaponMaterialWearAspectData*               MaterialWearAspect;                                       // 0x03E0(0x0008) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	class UWeaponPlayerMeleeOverrideAspectData*        PlayerMeleeOverrideAspect;                                // 0x03E8(0x0008) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	class UWeaponTrinketPartData*                      CurrentTrinketPart;                                       // 0x03F0(0x0008) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	class UWeaponSkinPartData*                         CurrentSkinPart;                                          // 0x03F8(0x0008) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x38];                                      // 0x0400(0x0038) MISSED OFFSET
	class UGbxCustomizationComponent*                  CachedCustomizationComponent;                             // 0x0438(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0440(0x0008) MISSED OFFSET
	class AOakWeapon*                                  WeaponPrivate;                                            // 0x0448(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponBalanceStateComponent");
		return ptr;
	}


	void NotifyWeaponPutDown();
	void NotifyWeaponEquipped();
	void NotifyWeaponAttached();
	void NotifyFirstPersonCreated();
};


// Class OakGame.TedioreWeaponBalanceStateComponent
// 0x0028 (0x0478 - 0x0450)
class UTedioreWeaponBalanceStateComponent : public UWeaponBalanceStateComponent
{
public:
	TArray<class UTedioreWeaponAspectData*>            TedioreAspects;                                           // 0x0450(0x0010) (ZeroConstructor, Transient)
	TArray<class UTedioreBehavior*>                    Behaviors;                                                // 0x0460(0x0010) (ZeroConstructor, Transient)
	class UTedioreProjectileClassAspect*               TedioreProjectileClass;                                   // 0x0470(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TedioreWeaponBalanceStateComponent");
		return ptr;
	}


	class UClass* GetTedioreProjectileClass();
};


// Class OakGame.TestMapsMenu
// 0x0048 (0x0338 - 0x02F0)
class UTestMapsMenu : public UGbxUmgMenu
{
public:
	class UGbxListItemText*                            BackItem;                                                 // 0x02F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<struct FText>                               MapCategories;                                            // 0x02F8(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0308(0x0020) MISSED OFFSET
	class UGbxUmgMenuData*                             SubMenuData;                                              // 0x0328(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxScrollBoxList*                           ContentPanel;                                             // 0x0330(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TestMapsMenu");
		return ptr;
	}


	void OnTestMapDLCNameSelected(class UGbxUserWidget* Widget, const struct FGbxMenuInputEvent& InputInfo);
	void OnTestMapCategorySelected(class UGbxUserWidget* Widget, const struct FGbxMenuInputEvent& InputInfo);
	void OnBackClicked(class UGbxUserWidget* Widget, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.TestSubMapsMenu
// 0x0020 (0x0310 - 0x02F0)
class UTestSubMapsMenu : public UGbxUmgMenu
{
public:
	class UGbxListItemText*                            BackItem;                                                 // 0x02F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x02F8(0x0010) MISSED OFFSET
	class UGbxScrollBoxList*                           ContentPanel;                                             // 0x0308(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TestSubMapsMenu");
		return ptr;
	}


	void OnTestMapSelected(class UGbxUserWidget* Widget, const struct FGbxMenuInputEvent& InputInfo);
	void OnBackClicked(class UGbxUserWidget* Widget, const struct FGbxMenuInputEvent& InputInfo);
};


// Class OakGame.TinkPile
// 0x0120 (0x0588 - 0x0468)
class ATinkPile : public ASmartObject
{
public:
	class UOakSpawnerComponent*                        SpawnerComponent;                                         // 0x0468(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UOakSpawnPointComponent*                     SpawnPointComponent;                                      // 0x0470(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      SkelMeshComponent;                                        // 0x0478(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class URegionBalanceStateComponent*                RegionComponent;                                          // 0x0480(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTerritoryComponent*                         TerritoryComponent;                                       // 0x0488(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               bEnabled;                                                 // 0x0490(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ETinkPileBuildOption                               StartState;                                               // 0x0491(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0492(0x0006) MISSED OFFSET
	class UTeam*                                       DefaultTeam;                                              // 0x0498(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TMap<ETinkPileBuildOption, class USpawnOptionData*> SpawnOptions;                                             // 0x04A0(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FSmartObjectActionSet                       UnusedActionSet;                                          // 0x04F0(0x0020) (Edit, DisableEditOnInstance)
	struct FSmartObjectActionSet                       UsedActionSet;                                            // 0x0510(0x0020) (Edit, DisableEditOnInstance)
	class UAnimSequence*                               Anim_UnusedIdle;                                          // 0x0530(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimSequence*                               Anim_UsedIdle;                                            // 0x0538(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UAnimSequence*>                       Anim_Use;                                                 // 0x0540(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UAnimSequence*                               Anim_Reset;                                               // 0x0550(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTeam*                                       CurrentTeam;                                              // 0x0558(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FTimerHandle                                ResetTimerHandle;                                         // 0x0560(0x0008) (Transient)
	ETinkPileUseState                                  UseState;                                                 // 0x0568(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0569(0x0007) MISSED OFFSET
	class AGbxAIController*                            CurrentAIOwner;                                           // 0x0570(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0578(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TinkPile");
		return ptr;
	}


	void StartUsing(class AActor* User);
	void SetTeam(class UTeam* NewTeam);
	void SetStartState(ETinkPileBuildOption NewStartState);
	void SetEnabled(bool bNewEnabled);
	void SetBuildOption(ETinkPileBuildOption NewBuildOption);
	void ResetUse();
	void OnTinkPileUseStarted();
	void OnTinkPileUseFinished();
	void OnRep_UseState();
	void OnActorSpawned(class USpawnerComponent* SpawnerComp, class AActor* Actor);
	void OnActorDied(class USpawnerComponent* SpawnerComp, class AActor* Actor);
	ETinkPileUseState GetUseState();
	void BuildObject();
};


// Class OakGame.TireProjectileMovementComponent
// 0x0018 (0x0370 - 0x0358)
class UTireProjectileMovementComponent : public UWalkingProjectileMovementComponent
{
public:
	class USceneComponent*                             MeshToRotate;                                             // 0x0358(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0360(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TireProjectileMovementComponent");
		return ptr;
	}

};


// Class OakGame.TransporterCrane
// 0x0038 (0x0490 - 0x0458)
class ATransporterCrane : public AActor
{
public:
	class UTransporterTrackComponent*                  TransporterTrackComponent;                                // 0x0458(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USplineFollowerComponent*                    SplineFollowerComponent;                                  // 0x0460(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USplineComponent*                            SplineComponent;                                          // 0x0468(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      CraneMesh;                                                // 0x0470(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0478(0x0004) MISSED OFFSET
	struct FTransporterCraneRecord                     CraneRecord;                                              // 0x047C(0x0010) (Net)
	float                                              ReplicatedCurrentPosition;                                // 0x048C(0x0004) (Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TransporterCrane");
		return ptr;
	}


	void StopTrackMovement();
	void SetTrackMovementDirection(bool bReversed);
	void ResumeTrackMovement();
	void ReachedPickupPoint();
	void ReachedEnd();
	void OnRep_SplineComponent();
	void OnRep_CraneRecord();
	void OnReachedPickupPoint(class USplineFollowerComponent* InSplineFollowerComponent, class AActor* SplineFollowerOwner);
	void OnReachedEnd(class USplineFollowerComponent* InSplineFollowerComponent, class AActor* SplineFollowerOwner);
	void BeginTrack();
};


// Class OakGame.TransporterTrackComponent
// 0x0098 (0x0210 - 0x0178)
class UTransporterTrackComponent : public UActorComponent
{
public:
	TArray<struct FWeightedTransporterCrane>           WeightedCranes;                                           // 0x0178(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              TimeBetweenCranes;                                        // 0x0188(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TimeBetweenPickups;                                       // 0x018C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CarryingSpeed;                                            // 0x0190(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0194(0x0004) MISSED OFFSET
	class AActor*                                      PickupLocation;                                           // 0x0198(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	bool                                               bStartWithCranes;                                         // 0x01A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1F];                                      // 0x01A1(0x001F) MISSED OFFSET
	bool                                               bReversed;                                                // 0x01C0(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1F];                                      // 0x01C1(0x001F) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCraneBeginTrack;                                        // 0x01E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCraneReachedEnd;                                        // 0x01F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCraneReachedPickupPoint;                                // 0x0200(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TransporterTrackComponent");
		return ptr;
	}


	void SetOverrideCrane(class ATransporterCrane* NextCrane);
	void ReverseTrack();
	void ResumeTrack();
	void PauseTrack();
	void ManualSpawnCrane(bool ResetTimer);
	void EnableCranes(bool bEnable);
	void CraneReachedPickupPoint(class ATransporterCrane* Crane);
	void CraneReachedEnd(class ATransporterCrane* Crane);
	void CraneBeginTrack(class ATransporterCrane* Crane);
};


// Class OakGame.TrophyCase
// 0x0010 (0x06C8 - 0x06B8)
class ATrophyCase : public ACrewQuartersInteractiveObject
{
public:
	TArray<struct FTrophyCaseReplicatedSet>            TrophyCaseReplicatedSets;                                 // 0x06B8(0x0010) (Net, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TrophyCase");
		return ptr;
	}


	void OnRep_TrophyCaseReplicatedSets();
};


// Class OakGame.TrophyCaseProxy
// 0x0170 (0x0658 - 0x04E8)
class ATrophyCaseProxy : public AAdvancedInteractiveObjectProxy
{
public:
	unsigned char                                      UnknownData00[0x90];                                      // 0x04E8(0x0090) MISSED OFFSET
	TArray<struct FChallengeTrophySet>                 TrophySets;                                               // 0x0578(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class UStaticMesh*                                 LockedTrophyMesh;                                         // 0x0588(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceConstant*                   BronzeTrophyMaterial;                                     // 0x0590(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceConstant*                   SilverTrophyMaterial;                                     // 0x0598(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceConstant*                   GoldTrophyMaterial;                                       // 0x05A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceConstant*                   PlatinumTrophyMaterial;                                   // 0x05A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceConstant*                   EridiumTrophyMaterial;                                    // 0x05B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TrophyRotationSpeed;                                      // 0x05B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x05BC(0x0004) MISSED OFFSET
	class UMaterialInstanceConstant*                   SelectedTrophyBaseMaterial;                               // 0x05C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSelectionAngle;                                        // 0x05C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSelectionDistance;                                     // 0x05CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AngleWeight;                                              // 0x05D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DistanceWeight;                                           // 0x05D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x80];                                      // 0x05D8(0x0080) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TrophyCaseProxy");
		return ptr;
	}


	void ZoomOut();
	void ZoomIn();
	void StopRotatingTrophy();
	void SelectPrevious();
	void SelectNext();
	void RotateTrophyPositive();
	void RotateTrophyNegative();
	void OnAxisInput(const struct FVector& Vec, bool bGamePad);
};


// Class OakGame.TurretSeatPawn
// 0x0098 (0x0598 - 0x0500)
class ATurretSeatPawn : public ASeatPawn
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0500(0x0018) MISSED OFFSET
	EGroundTurretType                                  TurretType;                                               // 0x0518(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0519(0x0007) MISSED OFFSET
	class UTeamComponent*                              TeamComponent;                                            // 0x0520(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UClass*                                      DefaultTurretAction;                                      // 0x0528(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UOakPawnAttachSlotComponent*                 OakPawnAttachSlotComponent;                               // 0x0530(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UOakPawnAttachSlotComponent*                 OakHijackSlotComponent;                                   // 0x0538(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class AOakCharacter*                               LastCharacterAttached;                                    // 0x0540(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AOakCharacter*                               LastHijackCharacterAttached;                              // 0x0548(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FSpawnCostSelection                         SpawnCostSelection;                                       // 0x0550(0x0018) (Edit)
	struct FName                                       LeftHandIKSocket;                                         // 0x0568(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       RightHandIKSocket;                                        // 0x0570(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       LeftFootIKSocket;                                         // 0x0578(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       RightFootIKSocket;                                        // 0x0580(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMeshComponent*                              MeshComponent;                                            // 0x0588(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0590(0x0001) MISSED OFFSET
	EPlayerAlertType                                   PlayerAlertType;                                          // 0x0591(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x0592(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TurretSeatPawn");
		return ptr;
	}


	void HijackStateChanged();
	void GetAvailableIKSocketNames(TArray<struct FName>* SocketNames);
	void EnableTransitionControl(bool bEnable);
	void AttachStateChanged();
};


// Class OakGame.TutorialGlobals
// 0x0048 (0x0078 - 0x0030)
class UTutorialGlobals : public UGbxDataAsset
{
public:
	struct FPlaythroughUnlockedData                    TutorialPlaythroughUnlockedData;                          // 0x0030(0x0028) (Edit)
	struct FTutorialLevelUpData                        TutorialLevelUpData;                                      // 0x0058(0x0020) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.TutorialGlobals");
		return ptr;
	}

};


// Class OakGame.UIGlobals
// 0x0E98 (0x1120 - 0x0288)
class UUIGlobals : public UGbxUIGlobals
{
public:
	TSoftObjectPtr<class UGbxMenuData>                 CreditsMenuData;                                          // 0x0288(0x0028) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxGFxDialogBoxData>         EULAMenuData;                                             // 0x02B0(0x0028) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxGFxDialogBoxData>         ReportPlayerMenuData;                                     // 0x02D8(0x0028) (Edit, DisableEditOnInstance)
	TSoftObjectPtr<class UGbxGFxDialogBoxData>         DirectXUpgradeMenuData;                                   // 0x0300(0x0028) (Edit, DisableEditOnInstance)
	class UInWorldIconData*                            MissionIcon_Default;                                      // 0x0328(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInWorldIconData*                            MissionIcon_Plot;                                         // 0x0330(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInWorldIconData*                            MissionIcon_Side;                                         // 0x0338(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInWorldIconData*                            MissionIcon_ProvingGrounds;                               // 0x0340(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInWorldIconData*                            MissionIcon_CircleOfSlaughter;                            // 0x0348(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInWorldIconData*                            MissionIcon_Raid;                                         // 0x0350(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInWorldIconData*                            MissionIcon_RareSpawn;                                    // 0x0358(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UInWorldIconData*                            MissionAreaIcon;                                          // 0x0360(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TMap<TSoftObjectPtr<class UPlayerClassIdentifier>, class UTexture*> PlayerClassProfileIcons;                                  // 0x0368(0x0050) (Edit, ZeroConstructor)
	class UGbxMenuData*                                PauseMenuData;                                            // 0x03B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGFxStatusMenuData*                          GFxStatusMenuData;                                        // 0x03C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxMenuData*                                PCTextChatMenuData;                                       // 0x03C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxMenuData*                                PCMenuTextChatMenuData;                                   // 0x03D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxMenuData*                                PCTextChatMenuNotificationMenuData;                       // 0x03D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxMenuData*                                GFxHUDInitializationMenuData;                             // 0x03E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxMenuData*                                GFxModalTutorialMenuData;                                 // 0x03E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGFxModalTutorialDataAsset*                  DefaultModalTutorialData;                                 // 0x03F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxMenuData*                                ItemInspectionMenuData;                                   // 0x03F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<float>                                      StatusMenuNavBarHintWidgetOffsets;                        // 0x0400(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UTutorialMessageDataAsset*                   FastTravelTutorialAsset;                                  // 0x0410(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<TSoftObjectPtr<class UGFxNewsMenuItemDataAsset>> CurrentNewsItems;                                         // 0x0418(0x0010) (Edit, ZeroConstructor)
	TArray<struct FGFxNewsMenuFullscreenData>          FullscreenNewsItems;                                      // 0x0428(0x0010) (Edit, ZeroConstructor)
	TArray<struct FGFxNewsMenuFullscreenData>          FullscreenNewsBackgrounds;                                // 0x0438(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      ControllerDisconnectMovie;                                // 0x0448(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGbxMenuData*                                QuickEmoteMenuData;                                       // 0x0450(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxMenuData*                                ItemTradingMenuData;                                      // 0x0458(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                OverLevelAmount;                                          // 0x0460(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOverrideToHideFriendlyBars;                              // 0x0464(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0465(0x0003) MISSED OFFSET
	TArray<struct FOakBackpackCapacityThreshold>       BackpackThresholds;                                       // 0x0468(0x0010) (Edit, ZeroConstructor)
	class UInventoryCategoryData*                      WeaponCategory;                                           // 0x0478(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UInventoryCategoryData*                      GrenadeCategory;                                          // 0x0480(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UInventoryCategoryData*                      ShieldCategory;                                           // 0x0488(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UInventoryCategoryData*                      ArtifactCategory;                                         // 0x0490(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UInventoryCategoryData*                      ClassModCategory;                                         // 0x0498(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UInventoryCategoryData*                      InstantHealthCategory;                                    // 0x04A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UInventoryCategoryData*                      AmmoCategory;                                             // 0x04A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TMap<class UInventoryCategoryData*, struct FOakThumbnailManagerRenderProperties> CategoryToRenderPropertiesMap;                            // 0x04B0(0x0050) (Edit, ZeroConstructor)
	struct FOakThumbnailManagerRenderProperties        RenderPropertiesForOtherThumbnail;                        // 0x0500(0x0670) (Edit)
	class UGbxGFxDialogBoxData*                        GFxDialogBoxTemplate;                                     // 0x0B70(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FOakThumbnailManagerConfig                  IconConfig;                                               // 0x0B78(0x0018) (Edit)
	struct FText                                       EridianAnalyser;                                          // 0x0B90(0x0028) (Edit)
	struct FText                                       EridianResonator;                                         // 0x0BA8(0x0028) (Edit)
	struct FText                                       MayhemMode;                                               // 0x0BC0(0x0028) (Edit)
	struct FText                                       ArtifactSlot;                                             // 0x0BD8(0x0028) (Edit)
	struct FText                                       EridianFabricator;                                        // 0x0BF0(0x0028) (Edit)
	struct FCurrencyInfo                               MoneyCurrencyInfo;                                        // 0x0C08(0x0030) (Edit)
	struct FCurrencyInfo                               EridiumCurrencyInfo;                                      // 0x0C38(0x0030) (Edit)
	struct FCurrencyInfo                               GoldenKeyCurrencyInfo;                                    // 0x0C68(0x0030) (Edit)
	struct FCurrencyInfo                               VaultCoinCurrencyInfo;                                    // 0x0C98(0x0030) (Edit)
	struct FCurrencyInfo                               DiamondKeyCurrencyInfo;                                   // 0x0CC8(0x0030) (Edit)
	struct FCurrencyInfo                               VaultCardOneKeyCurrencyInfo;                              // 0x0CF8(0x0030) (Edit)
	struct FCurrencyInfo                               VaultCardTwoKeyCurrencyInfo;                              // 0x0D28(0x0030) (Edit)
	struct FCurrencyInfo                               VaultCardThreeKeyCurrencyInfo;                            // 0x0D58(0x0030) (Edit)
	bool                                               bCanDisplayDiamondKeys;                                   // 0x0D88(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0D89(0x0007) MISSED OFFSET
	TMap<struct FName, class UGbxInputActionData*>     MenuInputMap;                                             // 0x0D90(0x0050) (Edit, ZeroConstructor)
	TMap<struct FName, struct FName>                   ClassNameToSkillTutorialMap;                              // 0x0DE0(0x0050) (Edit, ZeroConstructor)
	float                                              MaxPathRange;                                             // 0x0E30(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSubPathNodeRangeSquared;                               // 0x0E34(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                FriendlyColor;                                            // 0x0E38(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                EnemyColor;                                               // 0x0E48(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                NeutralColor;                                             // 0x0E58(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                FriendlyNPCColor_Slight;                                  // 0x0E68(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                EnemyColor_Slight;                                        // 0x0E78(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                FriendlyPlayerColor_Slight;                               // 0x0E88(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                StandardTextColor;                                        // 0x0E98(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                InvalidOptionColor;                                       // 0x0EA8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              GrenadeDangerRadiusScalar;                                // 0x0EB8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GrenadeDangerMinimumRadius;                               // 0x0EBC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PlayerGrenadeDangerDelay;                                 // 0x0EC0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPauseMenuPausesGame;                                     // 0x0EC4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bStatusMenuPausesGame;                                    // 0x0EC5(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0EC6(0x0002) MISSED OFFSET
	TMap<class FString, TSoftObjectPtr<class USwfMovie>> SkillMenuIconMapping;                                     // 0x0EC8(0x0050) (Edit, ZeroConstructor)
	class UClass*                                      TravelMessageMovieClass;                                  // 0x0F18(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OnlineMessageMovieClass;                                  // 0x0F20(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SocialEventMessageMovieClass;                             // 0x0F28(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UHUDNotificationAsset*                       ErrorMessageAsset;                                        // 0x0F30(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UHUDNotificationAsset*                       DiscoveryNotificationAsset;                               // 0x0F38(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UHUDNotificationAsset*                       AreaEnteredNotificationAsset;                             // 0x0F40(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UHUDNotificationAsset*                       VaultRewardNotificationAsset;                             // 0x0F48(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UHUDNotificationAsset*                       CrewChallengeNotification;                                // 0x0F50(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FText                                       AllPlayersRequiredTitlePresent;                           // 0x0F58(0x0028) (Edit)
	struct FText                                       AllPlayersRequiredTitleAbsent;                            // 0x0F70(0x0028) (Edit)
	struct FText                                       AllPlayersRequiredMessagePresent;                         // 0x0F88(0x0028) (Edit)
	struct FText                                       AllPlayersRequiredMessageAbsent;                          // 0x0FA0(0x0028) (Edit)
	float                                              AllPlayersRequiredDuration;                               // 0x0FB8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0FBC(0x0004) MISSED OFFSET
	TMap<class FString, TSoftObjectPtr<class USwfMovie>> LanguageToFontSWFMap;                                     // 0x0FC0(0x0050) (Edit, ZeroConstructor)
	TMap<ECARPartType, class FString>                  VehicleIconTypeToLabelMap;                                // 0x1010(0x0050) (Edit, ZeroConstructor)
	TArray<class UOakCARMenuLoadout*>                  VehicleDefaultLoadouts;                                   // 0x1060(0x0010) (Edit, ZeroConstructor)
	float                                              SubtitleVisibilityShowVolumeDB;                           // 0x1070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SubtitleVisibilityHideVolumeDB;                           // 0x1074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SubtitleVisibilityUpdateFrequency;                        // 0x1078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SubtitleTimeBeforeHide;                                   // 0x107C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FText                                       SubtitleDisplayFormat;                                    // 0x1080(0x0028) (Edit)
	class UDialogEvent*                                DefaultIdleDialogEvent;                                   // 0x1098(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDialogParameter*                            DefaultIdleDialogTargetParamater;                         // 0x10A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMediaSource*                                VoGSource;                                                // 0x10A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EVoiceOfGodSpeaker                                 VoGSpeakerType;                                           // 0x10B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x10B1(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UGbxHUDData>                  LateJoinHUDContainer;                                     // 0x10B8(0x0028) (Edit)
	TSoftObjectPtr<class UGbxHUDStateData>             LateJoinHUDState;                                         // 0x10E0(0x0028) (Edit)
	class UGbxMenuData*                                SkillMenuData;                                            // 0x1108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UBoosterData*                                CitizenScienceBoosterData;                                // 0x1110(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x1118(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.UIGlobals");
		return ptr;
	}

};


// Class OakGame.MessageStackManager
// 0x0040 (0x0068 - 0x0028)
class UMessageStackManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	TArray<struct FUIManagerMessage>                   MessageStack;                                             // 0x0030(0x0010) (ZeroConstructor, Transient)
	class UGFxRolloutMessage*                          MessageMovie;                                             // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AOakPlayerController*                        PlayerOwner;                                              // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UUIManager>                   UiManagerOwner;                                           // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0058(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.MessageStackManager");
		return ptr;
	}


	void HandleCompleteAnimation(class UGFxRolloutMessage* GFxWidget);
};


// Class OakGame.UIManager
// 0x0070 (0x0098 - 0x0028)
class UUIManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET
	class UUIGlobals*                                  UIGlobals;                                                // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0048(0x0010) MISSED OFFSET
	class AOakPlayerController*                        PlayerOwner;                                              // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UInputComponent*                             OnlineMessageInputComponent;                              // 0x0060(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMessageStackManager*                        TravelMessageManager;                                     // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMessageStackManager*                        OnlineMessageManager;                                     // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UMessageStackManager*                        SocialEventMessageManager;                                // 0x0078(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0080(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.UIManager");
		return ptr;
	}


	struct FMessageHandle DisplaySocialMessage(const class FString& PlayerDisplayName, int Level, const struct FText& ClassDisplayName, const struct FText& Description, const struct FText& CommandText);
	void AutoUpdateTravelMessage(class UTravelStationData* DestinationTravelStation, int RemainingTime, ETravelStatus CurrentStatus);
};


// Class OakGame.UIStatData_Ability
// 0x0088 (0x00F0 - 0x0068)
class UUIStatData_Ability : public UUIStatData
{
public:
	struct FText                                       DescriptionText;                                          // 0x0068(0x0028) (Transient)
	int                                                BonusAbilityPoints;                                       // 0x0080(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	class FString                                      ItemColorFrame;                                           // 0x0088(0x0010) (ZeroConstructor, Transient)
	struct FText                                       SkillTreeDelta_PrimaryPlayer;                             // 0x0098(0x0028) (Transient)
	struct FText                                       SkillTreeDelta_SecondaryPlayer;                           // 0x00B0(0x0028) (Transient)
	class FString                                      CharacterID;                                              // 0x00C8(0x0010) (ZeroConstructor, Transient)
	class UOakClassModInventoryBalanceStateComponent*  OwningBalanceComponent;                                   // 0x00D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x00E0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.UIStatData_Ability");
		return ptr;
	}

};


// Class OakGame.UIStatData_MayhemModifier
// 0x0020 (0x0240 - 0x0220)
class UUIStatData_MayhemModifier : public UUIStatData_Numeric
{
public:
	struct FDataTableValueHandle                       DataTableValue;                                           // 0x0220(0x0018) (Edit, BlueprintVisible)
	bool                                               bSubtractOne;                                             // 0x0238(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0239(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.UIStatData_MayhemModifier");
		return ptr;
	}

};


// Class OakGame.UIStatData_WeaponAttribute
// 0x0008 (0x0250 - 0x0248)
class UUIStatData_WeaponAttribute : public UUIStatData_Attribute
{
public:
	EWeaponUseMode                                     UseMode;                                                  // 0x0248(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0249(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.UIStatData_WeaponAttribute");
		return ptr;
	}

};


// Class OakGame.UIStatFormulaEvaluator_WeightedWeaponStatAccumulator
// 0x0030 (0x0058 - 0x0028)
class UUIStatFormulaEvaluator_WeightedWeaponStatAccumulator : public UUIStatFormulaEvaluator
{
public:
	bool                                               bInvertPercent;                                           // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FWeaponTypeAttributeStatWeighting           DefaultWeighting;                                         // 0x0030(0x0018) (Edit)
	TArray<struct FWeaponTypeAttributeStatWeighting>   WeaponTypeWeightings;                                     // 0x0048(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.UIStatFormulaEvaluator_WeightedWeaponStatAccumulator");
		return ptr;
	}

};


// Class OakGame.UMGGameOverScreen
// 0x0008 (0x02F8 - 0x02F0)
class UUMGGameOverScreen : public UGbxUmgMenu
{
public:
	class AOakPlayerController*                        OakPlayerOwner;                                           // 0x02F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.UMGGameOverScreen");
		return ptr;
	}


	void SetCountdownTimerText(const struct FText& CountdownText);
};


// Class OakGame.VaultCardGeneralData
// 0x0050 (0x0080 - 0x0030)
class UVaultCardGeneralData : public UGbxDataAsset
{
public:
	TArray<struct FAttributeInitializationData>        PerMayhemLevelXPScalars;                                  // 0x0030(0x0010) (Edit, ZeroConstructor)
	struct FAttributeInitializationData                BaseLevelXPScalar;                                        // 0x0040(0x0038) (Edit)
	uint32_t                                           Version;                                                  // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VaultCardGeneralData");
		return ptr;
	}

};


// Class OakGame.VaultCardRewardBalanceData
// 0x0040 (0x0168 - 0x0128)
class UVaultCardRewardBalanceData : public UInventoryBalanceData
{
public:
	int                                                ColumnIndex;                                              // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                RowIndex;                                                 // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAttributeInitializationData                AlternateKeyReward;                                       // 0x0130(0x0038) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VaultCardRewardBalanceData");
		return ptr;
	}

};


// Class OakGame.VaultHunterProfileCard
// 0x0080 (0x00B0 - 0x0030)
class UVaultHunterProfileCard : public UGbxDataAsset
{
public:
	TArray<class UChallengeCategoryData*>              GameCompletionChallengeListGroups;                        // 0x0030(0x0010) (Edit, ZeroConstructor)
	TArray<class UChallengeCategoryData*>              EnemyChallengeListGroups;                                 // 0x0040(0x0010) (Edit, ZeroConstructor)
	TArray<class UChallengeCategoryData*>              WeaponChallengeListGroups;                                // 0x0050(0x0010) (Edit, ZeroConstructor)
	TArray<class UChallengeCategoryData*>              CrewChallengeListGroups;                                  // 0x0060(0x0010) (Edit, ZeroConstructor)
	TArray<class UChallengeCategoryData*>              ExplorationChallengeListGroups;                           // 0x0070(0x0010) (Edit, ZeroConstructor)
	TArray<class UChallengeCategoryData*>              SlaugherChallengeListGroups;                              // 0x0080(0x0010) (Edit, ZeroConstructor)
	TArray<class UChallengeCategoryData*>              RaidChallengeListGroups;                                  // 0x0090(0x0010) (Edit, ZeroConstructor)
	TArray<class UChallengeCategoryData*>              ProvingGroundChallengeListGroups;                         // 0x00A0(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VaultHunterProfileCard");
		return ptr;
	}

};


// Class OakGame.VehicleAttachActorComponentAspectData
// 0x0030 (0x0068 - 0x0038)
class UVehicleAttachActorComponentAspectData : public UOakVehicleAspectData
{
public:
	TSoftObjectPtr<class UClass>                       ComponentToAttach;                                        // 0x0038(0x0028) (Edit, BlueprintReadOnly, DisableEditOnTemplate)
	struct FName                                       ComparisonTag;                                            // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleAttachActorComponentAspectData");
		return ptr;
	}

};


// Class OakGame.VehicleAttachMeshAspectData
// 0x00A0 (0x00D8 - 0x0038)
class UVehicleAttachMeshAspectData : public UOakVehicleAspectData
{
public:
	struct FSoftObjectPath                             Mesh;                                                     // 0x0038(0x0018) (Edit, BlueprintReadOnly)
	struct FName                                       ComponentName;                                            // 0x0050(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               ComponentTags;                                            // 0x0058(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	struct FName                                       AttachSocketName;                                         // 0x0068(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LocalOffset;                                              // 0x0070(0x000C) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    LocalRotationOffset;                                      // 0x007C(0x000C) (Edit, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     Scale;                                                    // 0x0088(0x000C) (Edit, BlueprintReadOnly, IsPlainOldData)
	bool                                               bUseAttachParentBound;                                    // 0x0094(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ERevolverOffsetMode                                RevolverOffsetMode;                                       // 0x0095(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0096(0x0002) MISSED OFFSET
	struct FName                                       CollisionProfileName;                                     // 0x0098(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bWeldSimulatedBodies;                                     // 0x00A0(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bWeldedBodiesShouldModifyPhysicalProperties;              // 0x00A1(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseParentPoseComponent;                                  // 0x00A2(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x00A3(0x0005) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       AnimClass;                                                // 0x00A8(0x0028) (Edit, BlueprintReadOnly)
	TEnumAsByte<EAnimationMode>                        AnimMode;                                                 // 0x00D0(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleAttachMeshAspectData");
		return ptr;
	}

};


// Class OakGame.VehicleAttachSlotBlueprintAspectData
// 0x0050 (0x0088 - 0x0038)
class UVehicleAttachSlotBlueprintAspectData : public UOakVehicleAspectData
{
public:
	TSoftObjectPtr<class UClass>                       ActorToCopy;                                              // 0x0038(0x0028) (Edit, BlueprintReadOnly, DisableEditOnTemplate)
	struct FName                                       SocketName;                                               // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FVector                                     LocalOffset;                                              // 0x0068(0x000C) (Edit, BlueprintReadOnly, DisableEditOnTemplate, IsPlainOldData)
	struct FRotator                                    LocalRotationOffset;                                      // 0x0074(0x000C) (Edit, BlueprintReadOnly, DisableEditOnTemplate, IsPlainOldData)
	bool                                               bWeldSimulatedBodies;                                     // 0x0080(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	bool                                               bWeldedBodiesShouldModifyPhysicalProperties;              // 0x0081(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	bool                                               bForwardDamageToParent;                                   // 0x0082(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	bool                                               bAttachToActor;                                           // 0x0083(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0084(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleAttachSlotBlueprintAspectData");
		return ptr;
	}

};


// Class OakGame.VehicleAttachWeaponAspectData
// 0x0070 (0x00A8 - 0x0038)
class UVehicleAttachWeaponAspectData : public UOakVehicleAspectData
{
public:
	class UClass*                                      Weapon;                                                   // 0x0038(0x0008) (BlueprintReadOnly, ZeroConstructor, Deprecated, IsPlainOldData)
	TSoftObjectPtr<class UClass>                       WeaponClass;                                              // 0x0040(0x0028) (Edit, BlueprintReadOnly, DisableEditOnTemplate)
	TSoftObjectPtr<class UOakWeaponVehicleData>        WeaponData;                                               // 0x0068(0x0028) (Edit, BlueprintReadOnly, DisableEditOnTemplate)
	bool                                               SpawnWeapon;                                              // 0x0090(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0091(0x0007) MISSED OFFSET
	class UWeaponSlotData*                             WantedActiveWeaponSlot;                                   // 0x0098(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                PrefferedSlotId;                                          // 0x00A0(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleAttachWeaponAspectData");
		return ptr;
	}

};


// Class OakGame.VehicleAudioAspectData
// 0x0020 (0x0058 - 0x0038)
class UVehicleAudioAspectData : public UOakVehicleAspectData
{
public:
	TArray<class UWwiseEvent*>                         ConfigurationEvents;                                      // 0x0038(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate)
	TArray<struct FVehicleConfigurationRtpc>           ConfigurationRtpcs;                                       // 0x0048(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleAudioAspectData");
		return ptr;
	}

};


// Class OakGame.VehicleAudioProviderComponent
// 0x0238 (0x03B0 - 0x0178)
class UVehicleAudioProviderComponent : public UActorComponent
{
public:
	float                                              ForwardSpeedRTPCRefValue;                                 // 0x0178(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SkidAmountRTPCRefValue;                                   // 0x017C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EWheelAudioType                                    WheelAudioType;                                           // 0x0180(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0181(0x0007) MISSED OFFSET
	struct FName                                       WheelAudioCompTag;                                        // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WheelAudioReverbBoost;                                    // 0x0190(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HoveringInPlaceEngineStrength;                            // 0x0194(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FVehicleLandingEventData>            LandingEvents;                                            // 0x0198(0x0010) (Edit, ZeroConstructor)
	class UWwiseEvent*                                 LandingAudioEvent;                                        // 0x01A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 SteeringAudioEvent;                                       // 0x01B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 SuspensionCompressionEvent;                               // 0x01B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 SuspensionExtensionEvent;                                 // 0x01C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SuspensionCompressionEventThreshold;                      // 0x01C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SuspensionExtensionEventThreshold;                        // 0x01CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 OverspinDebrisEvent;                                      // 0x01D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DelayBeforeOverspinDebrisEvent;                           // 0x01D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01DC(0x0004) MISSED OFFSET
	class UWwiseEvent*                                 OverspinStartEvent;                                       // 0x01E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 OverspinEndEvent;                                         // 0x01E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   WheelSpinMinMax;                                          // 0x01F0(0x0008) (Edit, IsPlainOldData)
	struct FVehicleAudioLoopData                       WheelAudioLoop;                                           // 0x01F8(0x0010) (Edit)
	TArray<struct FVehicleAudioLoopData>               AdditionalWheelAudioLoops;                                // 0x0208(0x0010) (Edit, ZeroConstructor)
	class UWwiseEvent*                                 WheelBrakeEvent;                                          // 0x0218(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bWheelBrakeEventIsPlayerOnly;                             // 0x0220(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x27];                                      // 0x0221(0x0027) MISSED OFFSET
	TArray<struct FWheelRandomSwitchPack>              WheelSwitchPacks;                                         // 0x0248(0x0010) (Edit, ZeroConstructor)
	TArray<struct FVehicleAudioLoopData>               EngineLoops;                                              // 0x0258(0x0010) (Edit, ZeroConstructor)
	TArray<struct FVehicleAudioLoopData>               EngineAdditionalLoops;                                    // 0x0268(0x0010) (Edit, ZeroConstructor)
	TArray<struct FVehicleAudioLoopOnNamedCompData>    EngineMiscLoops;                                          // 0x0278(0x0010) (Edit, ZeroConstructor)
	class AOakVehicle*                                 OwningVehicle;                                            // 0x0288(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UOakAudioGlobalsData*                        CachedAudioGlobals;                                       // 0x0290(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UWwiseAudioComponent*                        EngineAudioComponent;                                     // 0x0298(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<struct FVehicleConfigurationEvent>          ConfigurationWwiseEvents;                                 // 0x02A0(0x0010) (Edit, ZeroConstructor)
	TArray<struct FVehicleConfigurationRtpc>           ConfigurationRtpcs;                                       // 0x02B0(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData03[0xF0];                                      // 0x02C0(0x00F0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleAudioProviderComponent");
		return ptr;
	}


	void OnVehicleLanded(float TimeSpentInAir, float LandAngle, int NumWheelsOnGround, bool bAllWheelsLanded);
	void OnVehicleGearShift(int Gear, bool bIsShiftingUp);
	void OnVehicleBecameAirborne();
	void OnSeatAttachStateChanged();
	void OnOverspinStarted(class UPhysicalMaterial* PhysicalMat);
	void OnOverspinEnded();
	void OnHoverEnabled();
	void OnHoverDisabled();
	void OnEngineStop();
	void OnEngineStart();
};


// Class OakGame.VehicleClassIdentifier
// 0x0008 (0x0078 - 0x0070)
class UVehicleClassIdentifier : public UPrimaryAssetLabel
{
public:
	struct FName                                       ShortName;                                                // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleClassIdentifier");
		return ptr;
	}

};


// Class OakGame.VehicleCollisionDamageAspectData
// 0x0010 (0x0048 - 0x0038)
class UVehicleCollisionDamageAspectData : public UOakVehicleAspectData
{
public:
	bool                                               LinkedToShield;                                           // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	bool                                               bLinkedToBoost;                                           // 0x0039(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
	class UClass*                                      DamageType;                                               // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleCollisionDamageAspectData");
		return ptr;
	}

};


// Class OakGame.VehicleComponent
// 0x0018 (0x0190 - 0x0178)
class UVehicleComponent : public UActorComponent
{
public:
	TArray<struct FVehicleOverrideData>                OverrideByParts;                                          // 0x0178(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class AOakVehicle*                                 OwningVehicle;                                            // 0x0188(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleComponent");
		return ptr;
	}

};


// Class OakGame.VehicleDrivingDataAsset
// 0x0100 (0x0130 - 0x0030)
class UVehicleDrivingDataAsset : public UGbxDataAsset
{
public:
	float                                              DesiredSpeed;                                             // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SpeedToActivateBoost;                                     // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SpeedToActivateSpeedHack;                                 // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ReverseSpeed;                                             // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VehicleReverseTime;                                       // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VehicleReverseFaceThreshold;                              // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TurnSpeedFactor;                                          // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TurnMaxValueDot2;                                         // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TurnMinValueDot2;                                         // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUsePIDController;                                        // 0x0054(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	float                                              Kp;                                                       // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Ki;                                                       // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Kd;                                                       // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDeltaVelIntegral;                                      // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HandbrakeMinVelocity;                                     // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HandbrakeMinTurnDot2;                                     // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ThrottleHandbrakeMinTurnDot2;                             // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HandbrakeStopMinTurnDot2;                                 // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bActivateThrottleHandbrake;                               // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0079(0x0007) MISSED OFFSET
	class UGbxCondition*                               CanDriveCondition;                                        // 0x0080(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FGbxParam                                   SpeedModifierValue;                                       // 0x0088(0x0080) (Edit, BlueprintVisible)
	float                                              SpeedHackForce;                                           // 0x0108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpeedHackGravityFactor;                                   // 0x010C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpeedHackTireGripFactor;                                  // 0x0110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ValidBoostDirectionDot2;                                  // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bWallTest;                                                // 0x0118(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0119(0x0003) MISSED OFFSET
	float                                              TestWallsUpdateDelay;                                     // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TestWallsTraceLength;                                     // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TestWallsBehindDotFactor;                                 // 0x0124(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StuckDisableDelay;                                        // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x012C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleDrivingDataAsset");
		return ptr;
	}

};


// Class OakGame.VehicleEffectsComponent
// 0x02D0 (0x0460 - 0x0190)
class UVehicleEffectsComponent : public UVehicleComponent
{
public:
	struct FScriptMulticastDelegate                    OnEngineStart;                                            // 0x0190(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEngineStop;                                             // 0x01A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBrakesStart;                                            // 0x01B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBrakesStop;                                             // 0x01C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRestartEffectsAfterTravel;                              // 0x01D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TMap<TEnumAsByte<EPhysicalSurface>, class UParticleSystem*> JumpParticleSystemPerSurfaceType;                         // 0x01E0(0x0050) (Edit, ZeroConstructor)
	float                                              MinJumpVelocity;                                          // 0x0230(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BigLandingMinVelocity;                                    // 0x0234(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     LandingFXLocationOffset;                                  // 0x0240(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     BigLandingFXLocationOffset;                               // 0x024C(0x000C) (Edit, IsPlainOldData)
	struct FRuntimeFloatCurve                          WheelAddCurve;                                            // 0x0258(0x0078) (Edit)
	float                                              WheelAddStrength;                                         // 0x02D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WheelOverspin;                                            // 0x02D4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnOverspinStarted;                                        // 0x02D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnOverspinEnded;                                          // 0x02E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x18];                                      // 0x02F8(0x0018) MISSED OFFSET
	class UParticleSystem*                             SpeedLinesPS;                                             // 0x0310(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 SpeedLineCurve;                                           // 0x0318(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ImpactThrottleThreshold;                                  // 0x0320(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GrindingInPlaceMaxSpeed;                                  // 0x0324(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsGrindingInPlace;                                       // 0x0328(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0329(0x0007) MISSED OFFSET
	TArray<class UOakVehicleEffectAspectDataCollection*> DefaultEffectsAspectDataCollections;                      // 0x0330(0x0010) (Edit, ZeroConstructor)
	class UScreenParticleManagerComponent*             ScreenParticleMgrComp;                                    // 0x0340(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0348(0x000C) MISSED OFFSET
	float                                              ImpactCooldownTime;                                       // 0x0354(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LastActorHitResetTime;                                    // 0x0358(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ImpactVelocityThresholdsInKPH[0x6];                       // 0x035C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0374(0x0004) MISSED OFFSET
	TArray<struct FVehicleImpactEffectData>            ImpactEffects;                                            // 0x0378(0x0010) (Edit, EditFixedSize, ZeroConstructor, NoClear)
	TArray<int>                                        ExcludedGearsForBackfire;                                 // 0x0388(0x0010) (Edit, ZeroConstructor)
	struct FFloatRange                                 MaxRPMBackfireFrequencyRange;                             // 0x0398(0x0010) (Edit)
	bool                                               bTriggerBackfireInBoost;                                  // 0x03A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x03A9(0x0003) MISSED OFFSET
	float                                              EndBoostBackfireDelay;                                    // 0x03AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnImpactDetected;                                         // 0x03B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGrindingStopped;                                        // 0x03C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHitVehicle;                                             // 0x03D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHitEnvironment;                                         // 0x03E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHitCharacter;                                           // 0x03F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHitDestructible;                                        // 0x0400(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnHitOther;                                               // 0x0410(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AActor*                                      LastHitActor;                                             // 0x0420(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x10];                                      // 0x0428(0x0010) MISSED OFFSET
	TArray<struct FVehicleEffect>                      VehicleEffects;                                           // 0x0438(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData06[0x18];                                      // 0x0448(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleEffectsComponent");
		return ptr;
	}


	void StopEffects(EVehicleEffectEvent Event);
	void SetEffectVectorParameter(const struct FName& ParamName, const struct FVector& ParamValue, const struct FVehicleEffectQueryData& QueryData);
	void SetEffectMaterialParameter(const struct FName& ParamName, class UMaterialInterface* ParamValue, const struct FVehicleEffectQueryData& QueryData);
	void SetEffectFloatParameter(const struct FName& ParamName, float ParamValue, const struct FVehicleEffectQueryData& QueryData);
	void SetEffectColorParameter(const struct FName& ParamName, const struct FLinearColor& ParamValue, const struct FVehicleEffectQueryData& QueryData);
	void PlayEffects(EVehicleEffectEvent Event);
	void OnStopHorn();
	void OnStatusEffectStarted(class AActor* Receiver, const struct FStatusEffectSpec& Spec, EOakElementalType ElementalType);
	void OnStatusEffectEnded(class AActor* Receiver, const struct FStatusEffectSpec& Spec, EOakElementalType ElementalType);
	void OnStartHorn();
	void OnPrimarySeatStatusChanged();
	void OnPreBeginFreeze(EFreezeType FreezeType);
	void OnHoverStart();
	void OnHoverEnd();
	void OnHealthy();
	void OnHealthVeryLow();
	void OnHealthLow();
	void OnGearShift(int Gear, bool bIsShiftingUp);
	void OnDigitrustStart();
	void OnDigitrustEnd();
	void OnDead();
	void OnCryoThawing();
	void OnCryoThawed();
	void OnCryoFrozen();
	void OnCryoFreezing();
	void OnBoostEnd();
	void OnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void AnimateScalarParameterValueWithCallback(class UMaterialInstanceDynamic* MaterialInstanceDynamic, const struct FName& ParameterName, const struct FVector2D& ValueRange, float Time, const struct FScriptDelegate& OnAnimateEnded);
	void AnimateScalarParameterValue(class UMaterialInstanceDynamic* MaterialInstanceDynamic, const struct FName& ParameterName, const struct FVector2D& ValueRange, float Time);
};


// Class OakGame.BaseVehicleEffectData
// 0x0020 (0x0050 - 0x0030)
class UBaseVehicleEffectData : public UGbxDataAsset
{
public:
	struct FName                                       Event;                                                    // 0x0030(0x0008) (BlueprintReadOnly, ZeroConstructor, Deprecated, IsPlainOldData)
	EVehicleEffectEvent                                EffectEvent;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayerOnly;                                              // 0x0039(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bExcludedInSplitScreen;                                   // 0x003A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x003B(0x0005) MISSED OFFSET
	class UGbxCondition*                               StartCondition;                                           // 0x0040(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGbxCondition*                               StopCondition;                                            // 0x0048(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.BaseVehicleEffectData");
		return ptr;
	}

};


// Class OakGame.BaseVehicleEffectDataWithLocation
// 0x0030 (0x0080 - 0x0050)
class UBaseVehicleEffectDataWithLocation : public UBaseVehicleEffectData
{
public:
	struct FName                                       Socket;                                                   // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       ComponentTag;                                             // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RelativeLocation;                                         // 0x0060(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    RelativeRotation;                                         // 0x006C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              RelativeScale;                                            // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.BaseVehicleEffectDataWithLocation");
		return ptr;
	}

};


// Class OakGame.VehicleAudioEffect
// 0x0038 (0x00B8 - 0x0080)
class UVehicleAudioEffect : public UBaseVehicleEffectDataWithLocation
{
public:
	bool                                               bPlayAudioAtLocation;                                     // 0x0080(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	class UWwiseEvent*                                 StartAudioEvent;                                          // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 StopAudioEvent;                                           // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FConditionalAudioSwitch>             ConditionalAudioSwitches;                                 // 0x0098(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FName                                       AudioComponentName;                                       // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AudioEmitterRadius;                                       // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleAudioEffect");
		return ptr;
	}

};


// Class OakGame.VehicleParticleEffect
// 0x0020 (0x00A0 - 0x0080)
class UVehicleParticleEffect : public UBaseVehicleEffectDataWithLocation
{
public:
	class UParticleSystem*                             ParticleEffect;                                           // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoActivate;                                            // 0x0088(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAttachToParent;                                          // 0x0089(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bAlwaysSpawnNewInstance;                                  // 0x008A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bSpawnOnStop;                                             // 0x008B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	struct FName                                       ParticleComponentTag;                                     // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDisableBeforeFreeze;                                     // 0x0098(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleParticleEffect");
		return ptr;
	}

};


// Class OakGame.VehicleImpactEffect
// 0x0060 (0x00E0 - 0x0080)
class UVehicleImpactEffect : public UBaseVehicleEffectDataWithLocation
{
public:
	class UImpactData*                                 ImpactData;                                               // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRelativeDirectionData                      ImpactTraceDirection;                                     // 0x0088(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly)
	float                                              ImpactTraceLength;                                        // 0x00D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionChannel>                     TraceChannel;                                             // 0x00DC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00DD(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleImpactEffect");
		return ptr;
	}

};


// Class OakGame.VehicleExplosionEffect
// 0x0018 (0x0098 - 0x0080)
class UVehicleExplosionEffect : public UBaseVehicleEffectDataWithLocation
{
public:
	class UExplosionData*                              ExplosionData;                                            // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ExplosionSize;                                            // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	class UClass*                                      ExplosionDamageType;                                      // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleExplosionEffect");
		return ptr;
	}

};


// Class OakGame.VehicleFeedbackEffect
// 0x0010 (0x0090 - 0x0080)
class UVehicleFeedbackEffect : public UBaseVehicleEffectDataWithLocation
{
public:
	class UFeedbackData*                               FeedbackData;                                             // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FeedbackScale;                                            // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bLoop;                                                    // 0x008C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bLocalOnly;                                               // 0x008D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bStopFeedback;                                            // 0x008E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x008F(0x0001) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleFeedbackEffect");
		return ptr;
	}

};


// Class OakGame.VehicleEmitterEnableEffect
// 0x0028 (0x0078 - 0x0050)
class UVehicleEmitterEnableEffect : public UBaseVehicleEffectData
{
public:
	struct FVehicleEffectQueryData                     QueryData;                                                // 0x0050(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	TArray<struct FEmitterEnableData>                  EmittersEnableData;                                       // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleEmitterEnableEffect");
		return ptr;
	}

};


// Class OakGame.VehicleSetAnimPlayRateEffect
// 0x0010 (0x0060 - 0x0050)
class UVehicleSetAnimPlayRateEffect : public UBaseVehicleEffectData
{
public:
	struct FName                                       SkelMeshTag;                                              // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StartPlayRate;                                            // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StopPlayRate;                                             // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleSetAnimPlayRateEffect");
		return ptr;
	}

};


// Class OakGame.VehiclePlaySingleAnimEffect
// 0x0028 (0x0078 - 0x0050)
class UVehiclePlaySingleAnimEffect : public UBaseVehicleEffectData
{
public:
	struct FName                                       SkelMeshTag;                                              // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EVehiclePlaySingleAnimMode                         PlayMode;                                                 // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0058(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	class UAnimationAsset*                             AnimationAsset;                                           // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bLoop;                                                    // 0x0068(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bPlaying;                                                 // 0x0069(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseCurrentAnimPosition;                                  // 0x006A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x006B(0x0001) MISSED OFFSET
	float                                              Position;                                                 // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PlayRate;                                                 // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehiclePlaySingleAnimEffect");
		return ptr;
	}

};


// Class OakGame.VehicleElementalEffectImmunityAspectData
// 0x0008 (0x0040 - 0x0038)
class UVehicleElementalEffectImmunityAspectData : public UOakVehicleAspectData
{
public:
	EOakStatusEffectResourceEffectType                 ResourceEffectType;                                       // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	bool                                               LinkedToShield;                                           // 0x0039(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x003A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleElementalEffectImmunityAspectData");
		return ptr;
	}

};


// Class OakGame.VehicleSeatPawn
// 0x0048 (0x0548 - 0x0500)
class AVehicleSeatPawn : public ASeatPawn
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0500(0x0018) MISSED OFFSET
	class UVehicleSeatComponent*                       VehicleSeatComponent;                                     // 0x0518(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTurretMovementComponent*                    TurretMovementComponent;                                  // 0x0520(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               bControlledByVehicleWhenUnoccupied;                       // 0x0528(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0529(0x0007) MISSED OFFSET
	class UGbxHUDData*                                 HUDInfo;                                                  // 0x0530(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AOakVehicle*                                 Vehicle;                                                  // 0x0538(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bControlledByVehicle;                                     // 0x0540(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0541(0x0001) MISSED OFFSET
	bool                                               bIgnoreCollisionWithVehicle;                              // 0x0542(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x0543(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleSeatPawn");
		return ptr;
	}


	class AOakVehicle* GetVehicle();
};


// Class OakGame.VehicleGunnerSeatPawn
// 0x0040 (0x0588 - 0x0548)
class AVehicleGunnerSeatPawn : public AVehicleSeatPawn
{
public:
	class USmartObjectComponent*                       GetInSmartObject;                                         // 0x0548(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FName                                       SmartObjectComponentName;                                 // 0x0550(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       GetInVehicleBlackboardKeyName;                            // 0x0558(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       GetInVehicleSlotIndexBlackboardKeyName;                   // 0x0560(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FGbxBlackboardKeySelector                   GetInVehicleBlackboardKey;                                // 0x0568(0x0010)
	struct FGbxBlackboardKeySelector                   GetInVehicleSlotIndexBlackboardKey;                       // 0x0578(0x0010)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleGunnerSeatPawn");
		return ptr;
	}


	void OnActionUsageEnded(class AController* UserController, const struct FGameplayTag& ActionTag, ESmartActionResult Result);
	void OnActionReserved(class AController* UserController, const struct FGameplayTag& ActionTag);
};


// Class OakGame.VehicleModifyPhysicPropertiesAspectData
// 0x0010 (0x0048 - 0x0038)
class UVehicleModifyPhysicPropertiesAspectData : public UOakVehicleAspectData
{
public:
	float                                              AdditionalMass;                                           // 0x0038(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FVector                                     InertiaTensorScale;                                       // 0x003C(0x000C) (Edit, BlueprintReadOnly, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleModifyPhysicPropertiesAspectData");
		return ptr;
	}

};


// Class OakGame.VehicleSeatComponent
// 0x00C0 (0x0788 - 0x06C8)
class UVehicleSeatComponent : public UOakPawnAttachSlotComponent
{
public:
	int                                                SeatSlot;                                                 // 0x06C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AdjacentSeatSlot;                                         // 0x06CC(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSkipExitTransitionWhenFlipped;                           // 0x06D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x06D1(0x0007) MISSED OFFSET
	class AOakVehicle*                                 Vehicle;                                                  // 0x06D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                TransitionSeatSlot;                                       // 0x06E0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bUseVehicleAimSettings;                                   // 0x06E4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAffectVehicleTeam;                                       // 0x06E5(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCrouchWhenSeated;                                        // 0x06E6(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bNotUsableByEnemies;                                      // 0x06E7(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EFollowVehicleRotation                             FollowVehicleRotation;                                    // 0x06E8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bForcePawnIgnoreControllerRotationOnTransition;           // 0x06E9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bForcePawnUseAllControllerRotationWhileAttached;          // 0x06EA(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowRootMotionWhileAttached;                            // 0x06EB(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bHideFirstPersonLegsWhileAttached;                        // 0x06EC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDisableHandToWeaponAlpha;                                // 0x06ED(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsUsingBaseAnimation;                                    // 0x06EE(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x06EF(0x0001) MISSED OFFSET
	struct FName                                       HideFirstPersonLegsReason;                                // 0x06F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCanBeSwitchedTo;                                         // 0x06F8(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlaySafePlaceTransitionWhenNoDetachTransitionFound;      // 0x06F9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x06FA(0x0006) MISSED OFFSET
	struct FPawnDetachTransition                       DetachToSafePlaceTransition;                              // 0x0700(0x0068) (Edit)
	bool                                               bOptimizeInteractBoxes;                                   // 0x0768(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0769(0x0003) MISSED OFFSET
	struct FUseCharacterWeaponSettings                 UseCharacterWeapon;                                       // 0x076C(0x0004) (Edit, BlueprintVisible)
	bool                                               bUseCharacterWeapon;                                      // 0x0770(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0771(0x0003) MISSED OFFSET
	float                                              AdditiveMovementScale;                                    // 0x0774(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AdditiveSpeedScale;                                       // 0x0778(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0xC];                                       // 0x077C(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleSeatComponent");
		return ptr;
	}


	void ReserveSeat(class AActor* Actor);
	void RequestSwitchSeats();
	bool IsReservedBy(class AActor* Actor);
	bool IsReserved();
	bool CanUseCharacterWeapon();
};


// Class OakGame.VehicleSetBoostDataAspectData
// 0x0028 (0x0060 - 0x0038)
class UVehicleSetBoostDataAspectData : public UOakVehicleAspectData
{
public:
	TSoftObjectPtr<class UVehicleBoostData>            BoostDataToSet;                                           // 0x0038(0x0028) (Edit, BlueprintReadOnly, DisableEditOnTemplate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleSetBoostDataAspectData");
		return ptr;
	}

};


// Class OakGame.VehicleScanData
// 0x0010 (0x0038 - 0x0028)
class UVehicleScanData : public UObject
{
public:
	class AOakVehicle*                                 VehicleScan;                                              // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NewPartUnlocks;                                           // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleScanData");
		return ptr;
	}

};


// Class OakGame.VehicleSpawnerComponent
// 0x0168 (0x02E0 - 0x0178)
class UVehicleSpawnerComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0178(0x0010) MISSED OFFSET
	TArray<struct FInventoryDataUnlockedInfo>          WheelsUnlocked;                                           // 0x0188(0x0010) (ZeroConstructor, Transient)
	TArray<class UVehicleClassIdentifier*>             VehiclesUnlocked;                                         // 0x0198(0x0010) (ZeroConstructor, Transient)
	TArray<struct FInventoryPartDataUnlockedInfo>      PartsUnlocked;                                            // 0x01A8(0x0010) (ZeroConstructor, Transient)
	TArray<struct FOakCARMenuVehicleConfig>            VehicleLoadouts;                                          // 0x01B8(0x0010) (ZeroConstructor, Transient)
	int                                                LastUsedVehicleLoadoutIndex;                              // 0x01C8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x01CC(0x000C) MISSED OFFSET
	struct FTimerHandle                                RespawnVehicleTimer;                                      // 0x01D8(0x0008) (Transient)
	unsigned char                                      UnknownData02[0xB8];                                      // 0x01E0(0x00B8) MISSED OFFSET
	class UInventoryData*                              SpawnInventoryData;                                       // 0x0298(0x0008) (ZeroConstructor, IsPlainOldData)
	class UInventoryBalanceData*                       SpawnInventoryBalanceData;                                // 0x02A0(0x0008) (ZeroConstructor, IsPlainOldData)
	class AOakVehicle*                                 LastVehicleSpawn;                                         // 0x02A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x30];                                      // 0x02B0(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleSpawnerComponent");
		return ptr;
	}


	void STATIC_UnlockVehicleForAllPlayers(class UObject* WorldContextObject, TSoftObjectPtr<class UInventoryData> Vehicle);
	void STATIC_UnlockVehicleAndPartForAllPlayer(class AOakVehicle* Vehicle);
	void STATIC_UnlockPartForAllPlayers(class UObject* WorldContextObject, TSoftObjectPtr<class UInventoryPartData> Part);
	void SpawnMissionVehicle(class ACatchARide* Console);
	void STATIC_SetMissionVehicle(class UWorld* World, class AOakSpawner* MissionSpawner);
	void ServerUpdateLoadoutAtIndex(int Index, const struct FOakCARMenuVehicleConfig& NewLoadout);
	void ServerUpdateLastUsedVehicleLoadoutIndex(int NewIndex);
	void RequestVehicleSpawnCallback();
	void RequestVehicleSpawn(class AActor* PreviousVehicle);
	bool IsVehicleUnlocked(TSoftObjectPtr<class UInventoryData> Vehicle);
	bool IsPartUnlocked(TSoftObjectPtr<class UInventoryPartData> Part);
	bool IsMissionVehicleCanBeSpawn(class ACatchARide* CatchRideStation);
	void GetVehicleUnlocked(TArray<class UOakCARVehicleData*>* Vehicles);
	class UOakCARVehicleData* STATIC_GetVehicleType(class AOakVehicle* Vehicle);
	void GetVehiclePartUnlocked(class UOakCARVehicleData* Vehicle, ECARPartType PartType, TArray<class UOakCARVehiclePartData*>* Parts);
	class UOakCARVehiclePartData* STATIC_GetVehiclePartByType(class AOakVehicle* Vehicle, ECARPartType Type);
	bool GetVehicleLoadoutAtIndex(int VehicleLoadoutindex, struct FOakCARMenuVehicleConfig* OutLoadout);
	int GetTotalNumVehicles();
	int GetTotalNumParts(class UOakCARVehicleData* Vehicle, ECARPartType PartType);
	void GetNewlyUnlockedVehicles(TArray<class UOakCARVehicleData*>* Vehicles);
	class AOakVehicle* GetLastVehicleSpawn();
};


// Class OakGame.VehicleSpline
// 0x0028 (0x0480 - 0x0458)
class AVehicleSpline : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0458(0x0008) MISSED OFFSET
	class USplineComponent*                            SplineComponent;                                          // 0x0460(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AGbxSpawner*                                 DropOffSpawner;                                           // 0x0468(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AVehicleSpline*                              PostDropOffExitSpline;                                    // 0x0470(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ExitSequenceLeadInDistance;                               // 0x0478(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DescentLeadInDistance;                                    // 0x047C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleSpline");
		return ptr;
	}

};


// Class OakGame.VehicleStatusEffectModifiersAspectData
// 0x0018 (0x0050 - 0x0038)
class UVehicleStatusEffectModifiersAspectData : public UOakVehicleAspectData
{
public:
	TArray<struct FStatusEffectModifiers>              StatusEffectModifiers;                                    // 0x0038(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate)
	bool                                               LinkedToShield;                                           // 0x0048(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	bool                                               bHasHijackProtection;                                     // 0x0049(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x004A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleStatusEffectModifiersAspectData");
		return ptr;
	}

};


// Class OakGame.VehicleTrailComponent
// 0x0138 (0x02C8 - 0x0190)
class UVehicleTrailComponent : public UVehicleComponent
{
public:
	TEnumAsByte<ETickingGroup>                         TrailTickGroup;                                           // 0x0190(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0191(0x0007) MISSED OFFSET
	struct FVehicleTrailParticleSystemData             DefaultParticleSystem;                                    // 0x0198(0x0018) (Edit)
	TMap<class UPhysicalMaterial*, struct FVehicleTrailParticleSystemData> ParticlePerPhysicalMaterial;                              // 0x01B0(0x0050) (Edit, ZeroConstructor)
	TArray<struct FVehicleTrailData>                   TrailData;                                                // 0x0200(0x0010) (Edit, ZeroConstructor)
	int                                                TrailTranslucentSortPriority;                             // 0x0210(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinSpeedForTrail;                                         // 0x0214(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TrailUpOffset;                                            // 0x0218(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FrameIndex;                                               // 0x021C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SkidMarkSize;                                             // 0x0220(0x000C) (Edit, IsPlainOldData)
	float                                              MinRPMForFastSpin;                                        // 0x022C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpeedForFastSpin;                                      // 0x0230(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinSpeedToActivateBigCore;                                // 0x0234(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinRPMToActivateBigCore;                                  // 0x0238(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ParticleDriftVelocity;                                    // 0x023C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bHasUpgrade01;                                            // 0x0240(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bHasUpgrade02;                                            // 0x0241(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0242(0x0006) MISSED OFFSET
	TMap<class UElementalInteractionData*, struct FVehicleTrailParticleSystemData> WadeParticleSystems;                                      // 0x0248(0x0050) (Edit, ZeroConstructor)
	struct FVehicleTrailParticleSystemData             DefaultWadeParticleSystem;                                // 0x0298(0x0018) (Edit)
	TArray<struct FExtraWadingData>                    ExtraWadingEffects;                                       // 0x02B0(0x0010) (Edit, ZeroConstructor)
	class UWheeledVehicleMovementComponentNW*          WheelMoveComp;                                            // 0x02C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VehicleTrailComponent");
		return ptr;
	}

};


// Class OakGame.GbxCondition_CanUseRefillAmmo
// 0x0000 (0x0088 - 0x0088)
class UGbxCondition_CanUseRefillAmmo : public UGbxCondition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.GbxCondition_CanUseRefillAmmo");
		return ptr;
	}

};


// Class OakGame.VendingMachineRefillAllAmmoValueResolver
// 0x0000 (0x0028 - 0x0028)
class UVendingMachineRefillAllAmmoValueResolver : public UAttributeValueResolver
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VendingMachineRefillAllAmmoValueResolver");
		return ptr;
	}

};


// Class OakGame.VendingMachine
// 0x0068 (0x06C8 - 0x0660)
class AVendingMachine : public AAdvancedInteractiveObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0660(0x0010) MISSED OFFSET
	EVendingMachineType                                VendingMachineType;                                       // 0x0670(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableItemOfTheDay;                                      // 0x0671(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0672(0x0006) MISSED OFFSET
	struct FName                                       EchoDeviceIdleScreenName_BuyBack;                         // 0x0678(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       EchoDeviceIdleScreenName_Sell;                            // 0x0680(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       EchoDeviceScreen_BoughtGearSoldByFriend;                  // 0x0688(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       EchoDeviceScreen_BoughtItemOfTheDay;                      // 0x0690(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSellsGearSoldByFriends;                                  // 0x0698(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0699(0x0007) MISSED OFFSET
	class UBalanceStateComponent*                      BalanceComponent;                                         // 0x06A0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UInventoryShopComponent*                     InventoryShopComponent;                                   // 0x06A8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UGbxAreaComponent*                           ItemOfTheDayAreaComponent;                                // 0x06B0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              PostUseRespawnDelaySeconds;                               // 0x06B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x06BC(0x0004) MISSED OFFSET
	class UBoxComponent*                               BoxComponent;                                             // 0x06C0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VendingMachine");
		return ptr;
	}


	void RegisterWithPersistenceManagerPostSpawn(class USpawnerComponent* SpawnerComponent, class AActor* Actor);
	void OnPlayerExitedItemOfTheDayArea(class AGbxPlayerController* Player);
	void OnPlayerEnteredItemOfTheDayArea(class AGbxPlayerController* Player);
	void K2_OnSoldSomething(class AActor* InventoryActor);
	void K2_OnSoldAllJunk();
	void K2_OnShelfStablySelected(EVendingMachineTrayTileType Type, class AActor* InventoryActor);
	void K2_OnRefilledAllHealth();
	void K2_OnRefilledAllAmmo();
	void K2_OnBoughtSomething(EVendingMachineBuyType Type, class AActor* InventoryActor);
};


// Class OakGame.VendingMachineMenu
// 0x0058 (0x0348 - 0x02F0)
class UVendingMachineMenu : public UGbxUmgMenu
{
public:
	class UGbxScrollBoxList*                           VendingMachineList;                                       // 0x02F0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  TitleText;                                                // 0x02F8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  HeaderText;                                               // 0x0300(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTextBlock*                                  ItemFilterText;                                           // 0x0308(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      BackgroundImage;                                          // 0x0310(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGbxListItem*                                FeaturedItemWidget;                                       // 0x0318(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AOakCharacter*                               VendingMachineMenuCharacter;                              // 0x0320(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FOakUIInventoryItemDisplayInfo>      ItemList;                                                 // 0x0328(0x0010) (ZeroConstructor)
	class UPlayerShopManagerComponent*                 PlayerShopManager;                                        // 0x0338(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0340(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VendingMachineMenu");
		return ptr;
	}


	void OnVendingItemClicked(class UGbxListItem* VendingItem);
	void OnFeaturedItemClicked(class UGbxUserWidget* FeaturedItem, const struct FGbxMenuInputEvent& InputInfo);
	void AddItemInWidget(const struct FOakUIInventoryItemDisplayInfo& Item);
};


// Class OakGame.VendingMachineMenuData
// 0x01B0 (0x0208 - 0x0058)
class UVendingMachineMenuData : public UGbxUmgMenuData
{
public:
	TArray<struct FVendingMachineMenuFilter>           Filters;                                                  // 0x0058(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FSlateBrush                                 BackgroundImage;                                          // 0x0068(0x0088) (Edit, DisableEditOnInstance)
	struct FGFxBackpackWidgetConfig                    BackpackConfig;                                           // 0x00F0(0x0118) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VendingMachineMenuData");
		return ptr;
	}

};


// Class OakGame.VendingMachineProxy
// 0x0518 (0x0A00 - 0x04E8)
class AVendingMachineProxy : public AAdvancedInteractiveObjectProxy
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04E8(0x0010) MISSED OFFSET
	class UGFxVendingMachineMenu*                      VendingMachineMenu;                                       // 0x04F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0500(0x0018) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTilePhysicalStateDirty;                                 // 0x0518(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnVendingMachineScrolled;                                 // 0x0528(0x0010) (ZeroConstructor, Transient, InstancedReference)
	struct FScriptMulticastDelegate                    OnInventoryBought;                                        // 0x0538(0x0010) (ZeroConstructor, Transient, InstancedReference)
	EPickupLootAttachmentMode                          ItemAttachmentMode;                                       // 0x0548(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0549(0x0003) MISSED OFFSET
	int                                                NumTrayTiles;                                             // 0x054C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                PrimaryTrayIndex;                                         // 0x0550(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                VisibleTrayTilesBufferSize;                               // 0x0554(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                EndOfListPaddingSize;                                     // 0x0558(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MinNumTilesToAllowWrapping;                               // 0x055C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MinNumTiles;                                              // 0x0560(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHideDummyTiles;                                          // 0x0564(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0565(0x0003) MISSED OFFSET
	float                                              ScrollSkipMaxDuration;                                    // 0x0568(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bScrollSkipOverSoldOutTiles;                              // 0x056C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPickupFlyToEnabled;                                      // 0x056D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x056E(0x0002) MISSED OFFSET
	float                                              DelayBeforeShelfIsStablySelected;                         // 0x0570(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0574(0x0004) MISSED OFFSET
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                                    // 0x0578(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	EVendingMachineInteractionMode                     CurrentInteractionMode;                                   // 0x0580(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EVendingMachineTilesMode                           CurrentTilesMode;                                         // 0x0581(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x6];                                       // 0x0582(0x0006) MISSED OFFSET
	class UAnimSequence*                               Animations[0x10];                                         // 0x0588(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AnimIndexOffsets[0x10];                                   // 0x0608(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DelayBeforeHidingPurchasedItem;                           // 0x0648(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DelayBeforeDigistructingBackInPurchasedItem;              // 0x064C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DelayBeforePurchaseItemClunkSound;                        // 0x0650(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0xC];                                       // 0x0654(0x000C) MISSED OFFSET
	struct FTransform                                  ShelfMeshOffset;                                          // 0x0660(0x0030) (Edit, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 DefaultShelfMesh;                                         // 0x0690(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 FeaturedInventoryShelfMesh;                               // 0x0698(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     ShelfBoxExtent;                                           // 0x06A0(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x06AC(0x0004) MISSED OFFSET
	class UMaterialInterface*                          DefaultShelfMaterial;                                     // 0x06B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          DefaultFeaturedInventoryShelfMaterial;                    // 0x06B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SelectedShelfMaterialParameterName;                       // 0x06C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       InStockShelfMaterialMaterialName;                         // 0x06C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FVendingMachineItemRarityData>       ShelfRarityInfo;                                          // 0x06D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UParticleSystem*                             ItemScoreEmitterTemplate;                                 // 0x06E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemScoreParticleSortPriority;                            // 0x06E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x06EC(0x0004) MISSED OFFSET
	struct FName                                       ItemScoreParameterName;                                   // 0x06F0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FInt32Interval                              ItemScoreParameterRange;                                  // 0x06F8(0x0008) (Edit, DisableEditOnInstance)
	float                                              ItemScoreParticleScale;                                   // 0x0700(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     ItemScoreParticleTranslationOffset;                       // 0x0704(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemScorePositionParameterName;                           // 0x0710(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             SoldOutParticleTemplate;                                  // 0x0718(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SoldOutParticleSortPriority;                              // 0x0720(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    SoldOutParticleRotation;                                  // 0x0724(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             DefaultSelectedItemEmitterTemplate;                       // 0x0730(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             CompareItemEmitterTemplate;                               // 0x0738(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SelectedItemParticleSortPriority;                         // 0x0740(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0744(0x0004) MISSED OFFSET
	struct FName                                       SelectedItemParticleRarityParameterName;                  // 0x0748(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    SelectedItemParticleRotation;                             // 0x0750(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     SelectedItemParticleTranslation;                          // 0x075C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             ErrorShelfEmitterTemplate;                                // 0x0768(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ErrorParticleSortPriority;                                // 0x0770(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    ErrorShelfParticleRotation;                               // 0x0774(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     ErrorShelfParticleTranslation;                            // 0x0780(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x078C(0x0004) MISSED OFFSET
	class UClass*                                      ItemDigistructInCE;                                       // 0x0790(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ItemDigistructOutCE;                                      // 0x0798(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVendingMachineInteractSequence             StartInteractSequence;                                    // 0x07A0(0x0090) (Edit, DisableEditOnInstance)
	struct FVendingMachineInteractSequence             StopInteractionSequence;                                  // 0x0830(0x0090) (Edit, DisableEditOnInstance)
	class UPhysicalMaterial*                           PrimaryPhysMat;                                           // 0x08C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 ErrorSoundEvent;                                          // 0x08C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 DigistructInItemEvent;                                    // 0x08D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 EnteredItemOfTheDayRangeEvent;                            // 0x08D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UWwiseEvent*                                 ExitedItemOfTheDayRangeEvent;                             // 0x08E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSellJunkDuration;                                      // 0x08E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxJunkCount;                                             // 0x08EC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UPlayerShopManagerComponent*                 PlayerShopManager;                                        // 0x08F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        FrontPlateComponent;                                      // 0x08F8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AVendingMachine*                             OwningVendingMachine;                                     // 0x0900(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UInventoryShopComponent*                     OwningShopComponent;                                      // 0x0908(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<struct FVendingMachineTrayTile>             PurchasableTiles;                                         // 0x0910(0x0010) (ZeroConstructor, Transient)
	TArray<struct FVendingMachineTrayTile>             BuyBackTiles;                                             // 0x0920(0x0010) (ZeroConstructor, Transient)
	TArray<struct FVendingMachineTrayTile>             SellTiles;                                                // 0x0930(0x0010) (ZeroConstructor, Transient)
	TArray<struct FVendingMachinePhysicalShelf>        PhysicalShelves;                                          // 0x0940(0x0010) (ZeroConstructor, Transient)
	class UParticleSystemComponent*                    SelectedItemParticleComponent;                            // 0x0950(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    HoveredItemParticleComponent;                             // 0x0958(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    ErrorSelectionParticleComponent;                          // 0x0960(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    CompareItemParticleComponent;                             // 0x0968(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWwiseAudioComponent*                        AudioComponent;                                           // 0x0970(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	int                                                SelectedTileIndex;                                        // 0x0978(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                SelectedCompareItemTileIndex;                             // 0x097C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVendingMachineLastSelectionData            LastSelectionData[0x3];                                   // 0x0980(0x0010) (Transient)
	EVendingMachineAnimType                            CurrentAnimType;                                          // 0x09B0(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4F];                                      // 0x09B1(0x004F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.VendingMachineProxy");
		return ptr;
	}


	void StopAnimation();
	void SetAnimationPaused(bool bNewPaused);
	void ScrollUp(float ScrollDuration, bool bIsInitialPress, bool bCanThrottle);
	void ScrollDown(float ScrollDuration, bool bIsInitialPress, bool bCanThrottle);
	void OnStopInteractionSequenceFinished();
	void OnStartInteractionSequenceFinished();
	void K2_OnSoldSomething(class AActor* InventoryActor);
	void K2_OnSoldAllJunk();
	void K2_OnShelfStablySelected(EVendingMachineTrayTileType Type, class AActor* InventoryActor);
	void K2_OnRefilledAllHealth();
	void K2_OnRefilledAllAmmo();
	void K2_OnItemDroppedToBottomOfVendingMachine();
	void K2_OnBoughtSomething(EVendingMachineBuyType Type, class AActor* InventoryActor);
	struct FTransform GetCurrentSocketTransform(class AActor* InventoryActor, EVendingMachineTilesMode Mode, int SocketLocation);
};


// Class OakGame.ViewAttachmentComponent
// 0x0010 (0x02E0 - 0x02D0)
class UViewAttachmentComponent : public USceneComponent
{
public:
	bool                                               bUpdateLocation;                                          // 0x02D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateRotation;                                          // 0x02D1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x02D2(0x0002) MISSED OFFSET
	float                                              ViewPitchScale;                                           // 0x02D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x02D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ViewAttachmentComponent");
		return ptr;
	}

};


// Class OakGame.WadingEffectsComponent
// 0x00D0 (0x0248 - 0x0178)
class UWadingEffectsComponent : public UActorComponent
{
public:
	TMap<class UElementalInteractionData*, class UParticleSystem*> WakeParticleSystems;                                      // 0x0178(0x0050) (Edit, ZeroConstructor)
	class UParticleSystemComponent*                    WakePSC;                                                  // 0x01C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class ALargeLiquidBody*                            CurrentOverlappingLLB;                                    // 0x01D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                CurrentOverlappingLLBSectionIndex;                        // 0x01D8(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01DC(0x0004) MISSED OFFSET
	class UElementalInteractionData*                   CurrentLiquidElement;                                     // 0x01E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UPhysicalMaterial*                           CurrentLiquidPhysMat;                                     // 0x01E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              CurrentLiquidZ;                                           // 0x01F0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsAttachedToPlayer;                                      // 0x01F4(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x01F5(0x0003) MISSED OFFSET
	TMap<class UPrimitiveComponent*, int>              OverlappingRivers;                                        // 0x01F8(0x0050) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WadingEffectsComponent");
		return ptr;
	}


	void STATIC_NotifyEndRiverOverlap(class UPrimitiveComponent* RiverMesh, class UPrimitiveComponent* OtherComponent);
	void STATIC_NotifyBeginRiverOverlap(class UPrimitiveComponent* RiverMesh, class UPrimitiveComponent* OtherComponent);
};


// Class OakGame.WantedPoster
// 0x0060 (0x05B0 - 0x0550)
class AWantedPoster : public AInteractiveObject
{
public:
	class UWantedPosterDefinition*                     NativeDefinition;                                         // 0x0550(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       CharacterMeshComponentName;                               // 0x0558(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PosterMeshComponentName;                                  // 0x0560(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NearbyPlayerOverlapComponentName;                         // 0x0568(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxSkeletalMeshComponent*                   PosterMeshComponent;                                      // 0x0570(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UGbxSkeletalMeshComponent*                   CharacterMeshComponent;                                   // 0x0578(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UPrimitiveComponent*                         NearbyPlayerOverlapComponent;                             // 0x0580(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMissionDirectorComponent*                   MissionDirectorComponent;                                 // 0x0588(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMissionObserverComponent*                   MissionObserverComponent;                                 // 0x0590(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	bool                                               bHologramActive;                                          // 0x0598(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0599(0x0007) MISSED OFFSET
	TArray<class AActor*>                              RegisteredNearbyPlayers;                                  // 0x05A0(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WantedPoster");
		return ptr;
	}


	void OnRep_bHologramActive();
	void OnNearbyPlayerEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnNearbyPlayerBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnHologramActiveChanged();
	void HandlePlayerActorDestroyed(class AActor* Actor);
	class UClass* GetWantedPosterMission();
};


// Class OakGame.WantedPosterDefinition
// 0x00D0 (0x0100 - 0x0030)
class UWantedPosterDefinition : public UGbxDataAsset
{
public:
	class USkeletalMesh*                               SkeletalMesh;                                             // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0038(0x0008) MISSED OFFSET
	struct FTransform                                  SkeletalMeshTransform;                                    // 0x0040(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	class UAnimSequence*                               SkeletalMeshAnimation;                                    // 0x0070(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UGestaltPartListData*                        GestaltPartList;                                          // 0x0078(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialInterface*>                  HologramMaterialOverrides;                                // 0x0080(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TSoftObjectPtr<class UClass>                       Mission;                                                  // 0x0090(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FMissionObjectiveSetReference               MissionEntryPoint;                                        // 0x00B8(0x0048) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WantedPosterDefinition");
		return ptr;
	}

};


// Class OakGame.WeaponAmmoCurrencyComponent
// 0x0058 (0x0208 - 0x01B0)
class UWeaponAmmoCurrencyComponent : public UWeaponAmmoComponent
{
public:
	class UInventoryCategoryData*                      CurrencyType;                                             // 0x01B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FGbxAttributeInteger                        MaxLoadedAmmo;                                            // 0x01B8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Net)
	int                                                MaxStoredAmmo;                                            // 0x01C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                LoadedAmmo;                                               // 0x01C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StoredAmmo;                                               // 0x01CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                SpareAmmo;                                                // 0x01D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      bInfiniteAmmoForAI : 1;                                   // 0x01D4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01D5(0x0003) MISSED OFFSET
	int                                                ServerSyncedLoadedAmmo;                                   // 0x01D8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01DC(0x0004) MISSED OFFSET
	class UInventoryListComponent*                     OwnerInventoryComponent;                                  // 0x01E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x01E8(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponAmmoCurrencyComponent");
		return ptr;
	}


	void ServerSendAmmoState();
	void OnRep_SpareAmmo();
	void OnRep_ServerSyncedLoadedAmmo();
	void OnMaxLoadedAmmoChanged(float OldValue, float NewValue);
	void OnGivenTo();
	void ClientSetLoadedAmmo(int NewLoadedAmmo);
	void ClientConsumeAmmo(int Amount);
};


// Class OakGame.WeaponEffectBaseAspectData
// 0x0020 (0x0058 - 0x0038)
class UWeaponEffectBaseAspectData : public UInventoryAspectData
{
public:
	struct FGameplayTagContainer                       ComparisonTags;                                           // 0x0038(0x0020) (Edit, BlueprintReadOnly, DisableEditOnTemplate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponEffectBaseAspectData");
		return ptr;
	}

};


// Class OakGame.WeaponAttachmentEffectAspectData
// 0x0068 (0x00C0 - 0x0058)
class UWeaponAttachmentEffectAspectData : public UWeaponEffectBaseAspectData
{
public:
	struct FWeaponRegisterAttachmentEffectData         EffectData;                                               // 0x0058(0x0060) (Edit, BlueprintReadOnly, DisableEditOnTemplate)
	bool                                               bCloneInHighDetailView;                                   // 0x00B8(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponAttachmentEffectAspectData");
		return ptr;
	}

};


// Class OakGame.WeaponAttributeEffectsAspectData
// 0x0010 (0x0080 - 0x0070)
class UWeaponAttributeEffectsAspectData : public UInventoryAttributeEffectsAspectData
{
public:
	TArray<struct FWeaponUseModeAttributeEffectData>   WeaponUseModeAttributeEffects;                            // 0x0070(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponAttributeEffectsAspectData");
		return ptr;
	}

};


// Class OakGame.WeaponAudioAspectData
// 0x0030 (0x0068 - 0x0038)
class UWeaponAudioAspectData : public UInventoryAspectData
{
public:
	int                                                UseModeBitmask;                                           // 0x0038(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<class UWwiseEvent*>                         ConfigurationEvents;                                      // 0x0040(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate)
	TArray<struct FWeaponConfigurationRtpc>            ConfigurationRtpcs;                                       // 0x0050(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate)
	class UWwiseEvent*                                 ConfigureWwiseEvent;                                      // 0x0060(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponAudioAspectData");
		return ptr;
	}

};


// Class OakGame.WeaponAudioStreamingAspectData
// 0x0010 (0x0048 - 0x0038)
class UWeaponAudioStreamingAspectData : public UInventoryAspectData
{
public:
	TArray<class UWwiseEvent*>                         EventsToPrepareForStreaming;                              // 0x0038(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponAudioStreamingAspectData");
		return ptr;
	}

};


// Class OakGame.WeaponBonusCollectionData
// 0x0010 (0x0040 - 0x0030)
class UWeaponBonusCollectionData : public UGbxDataAsset
{
public:
	TArray<struct FWeaponBonusData>                    Bonuses;                                                  // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponBonusCollectionData");
		return ptr;
	}

};


// Class OakGame.WeaponBonusDataTableData
// 0x0028 (0x0058 - 0x0030)
class UWeaponBonusDataTableData : public UGbxDataAsset
{
public:
	class UDataTable*                                  DataTable;                                                // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FWeaponBonusDataTableAttributeMappingData> AttributeMapping;                                         // 0x0038(0x0010) (Edit, ZeroConstructor)
	TArray<struct FWeaponBonusDataTableColumnCollectionData> ColumnCollections;                                        // 0x0048(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponBonusDataTableData");
		return ptr;
	}


	void EnumerateDataTableColumnNames(TArray<class FString>* OutColumnNames);
};


// Class OakGame.WeaponBonusDataTableAttributeValueResolver
// 0x0000 (0x00D0 - 0x00D0)
class UWeaponBonusDataTableAttributeValueResolver : public UDataTableAttributeValueResolver
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponBonusDataTableAttributeValueResolver");
		return ptr;
	}

};


// Class OakGame.WeaponBonusAspectData
// 0x0048 (0x0080 - 0x0038)
class UWeaponBonusAspectData : public UInventoryAspectData
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0038(0x0008) MISSED OFFSET
	bool                                               bInitializationBonus;                                     // 0x0040(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	class UWeaponBonusCollectionData*                  BonusCollection;                                          // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               BonusesToApply;                                           // 0x0050(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FWeaponBonusDataTableSelectionData>  DataTableBonuses;                                         // 0x0060(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<int>                                        BonusIndices;                                             // 0x0070(0x0010) (BlueprintReadOnly, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponBonusAspectData");
		return ptr;
	}


	void EnumerateDataTableRowNames(class UWeaponBonusDataTableData* WeaponBonusDataTable, TArray<struct FName>* OutRowNames);
	void EnumerateDataTableColumnNames(class UWeaponBonusDataTableData* WeaponBonusDataTable, TArray<class FString>* OutColumnNames);
	void EnumerateDataTableColumnCollections(class UWeaponBonusDataTableData* WeaponBonusDataTable, TArray<struct FName>* OutColumnCollections);
	void EnumerateBonuses(TArray<struct FName>* OutBonuses);
};


// Class OakGame.WeaponCOVHeatComponent
// 0x0058 (0x0290 - 0x0238)
class UWeaponCOVHeatComponent : public UWeaponHeatComponent
{
public:
	int                                                MinShotsToBreak;                                          // 0x0238(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxShotsToBreak;                                          // 0x023C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ConsecutiveBreakInfluence;                                // 0x0240(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0244(0x0004) MISSED OFFSET
	TArray<struct FCOVBrokenEffectData>                BrokenEffects;                                            // 0x0248(0x0010) (Edit, ZeroConstructor)
	float                                              Jankiness;                                                // 0x0258(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bBroken;                                                  // 0x025C(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x025D(0x0003) MISSED OFFSET
	int                                                NumShotsToBreak;                                          // 0x0260(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	int8_t                                             SelectedBrokenEffectsIndex;                               // 0x0264(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0265(0x0003) MISSED OFFSET
	int                                                NumOverheatedShots;                                       // 0x0268(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              RepairHeatCooldownRate;                                   // 0x026C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0270(0x0008) MISSED OFFSET
	TArray<class UStaticMeshComponent*>                BrokenMeshComponents;                                     // 0x0278(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0288(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponCOVHeatComponent");
		return ptr;
	}


	void RepairedNotify();
	void OnRepaired();
	void OnRep_Broken(bool bWasBroken);
	void OnBroken();
};


// Class OakGame.WeaponCOVRepairComponent
// 0x0030 (0x0208 - 0x01D8)
class UWeaponCOVRepairComponent : public UWeaponReloadComponent
{
public:
	unsigned char                                      CurrentRepairType;                                        // 0x01D8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x01D9(0x0007) MISSED OFFSET
	TArray<struct FCOVRepairType>                      RepairTypes;                                              // 0x01E0(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x12];                                      // 0x01F0(0x0012) MISSED OFFSET
	uint16_t                                           ClientRepairState;                                        // 0x0202(0x0002) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0204(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponCOVRepairComponent");
		return ptr;
	}


	void OnRep_ClientRepairState();
};


// Class OakGame.WeaponDamageTypeAspectData
// 0x0020 (0x0058 - 0x0038)
class UWeaponDamageTypeAspectData : public UInventoryAspectData
{
public:
	int                                                UseModeBitmask;                                           // 0x0038(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	class UClass*                                      DamageType;                                               // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class UImpactData*                                 ImpactData;                                               // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	bool                                               bUseForBeamsOnly;                                         // 0x0050(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0051(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponDamageTypeAspectData");
		return ptr;
	}

};


// Class OakGame.WeaponElementColorizationEvaluator
// 0x0008 (0x0030 - 0x0028)
class UWeaponElementColorizationEvaluator : public UParticleParameterEvaluator
{
public:
	struct FName                                       ParameterName;                                            // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponElementColorizationEvaluator");
		return ptr;
	}

};


// Class OakGame.WeaponFireLootComponent
// 0x0010 (0x0968 - 0x0958)
class UWeaponFireLootComponent : public UWeaponFireProjectileComponent
{
public:
	bool                                               bSpawnLootAtInstigatorLevel;                              // 0x0958(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0959(0x0003) MISSED OFFSET
	float                                              BaseProjectileSpeed;                                      // 0x095C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UItemPoolData*                               ItemPool;                                                 // 0x0960(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponFireLootComponent");
		return ptr;
	}

};


// Class OakGame.WeaponFoleyAspectData
// 0x0010 (0x0048 - 0x0038)
class UWeaponFoleyAspectData : public UInventoryAspectData
{
public:
	class UFoleyAccessoryComponent*                    FoleyAccessory;                                           // 0x0038(0x0008) (Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData)
	struct FName                                       AttachmentSocket;                                         // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponFoleyAspectData");
		return ptr;
	}

};


// Class OakGame.WeaponJAKFireProjectileComponent
// 0x0028 (0x0980 - 0x0958)
class UWeaponJAKFireProjectileComponent : public UWeaponFireProjectileComponent
{
public:
	bool                                               bStackCrits;                                              // 0x0958(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bNonSuccessiveCritBreaksStack;                            // 0x0959(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x095A(0x0006) MISSED OFFSET
	class UStatusEffectData*                           StackStatusEffectData;                                    // 0x0960(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StackStatusEffectDuration;                                // 0x0968(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                RefundAmmoCount;                                          // 0x096C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                RicochetCount;                                            // 0x0970(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RicochetDamageScale;                                      // 0x0974(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0978(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponJAKFireProjectileComponent");
		return ptr;
	}


	void ResetStack();
};


// Class OakGame.WeaponMaterialEffectAspectData
// 0x00A8 (0x0100 - 0x0058)
class UWeaponMaterialEffectAspectData : public UWeaponEffectBaseAspectData
{
public:
	struct FWeaponRegisterMaterialEffectData           EffectData;                                               // 0x0058(0x00A8) (Edit, BlueprintReadOnly, DisableEditOnTemplate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponMaterialEffectAspectData");
		return ptr;
	}

};


// Class OakGame.WeaponMaterialWearAspectData
// 0x0030 (0x0068 - 0x0038)
class UWeaponMaterialWearAspectData : public UInventoryAspectData
{
public:
	TArray<struct FWeightedFloatRange>                 DirtRanges;                                               // 0x0038(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FWeightedFloatRange>                 RustRanges;                                               // 0x0048(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FWeightedFloatRange>                 WearRanges;                                               // 0x0058(0x0010) (Edit, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponMaterialWearAspectData");
		return ptr;
	}

};


// Class OakGame.WeaponPartData
// 0x0018 (0x0268 - 0x0250)
class UWeaponPartData : public UInventoryPartData
{
public:
	bool                                               bIgnoredForWeaponNaming;                                  // 0x0250(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0251(0x0007) MISSED OFFSET
	TArray<struct FWeaponUseModeAttributeEffectData>   WeaponUseModeAttributeEffects;                            // 0x0258(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponPartData");
		return ptr;
	}

};


// Class OakGame.WeaponPlayerMeleeOverrideAspectData
// 0x0008 (0x0040 - 0x0038)
class UWeaponPlayerMeleeOverrideAspectData : public UInventoryAspectData
{
public:
	class UPlayerMeleeData*                            OverridePlayerMeleeData;                                  // 0x0038(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponPlayerMeleeOverrideAspectData");
		return ptr;
	}

};


// Class OakGame.WeaponSightComponent
// 0x0078 (0x0360 - 0x02E8)
class UWeaponSightComponent : public UWeaponZoomComponent
{
public:
	int                                                CustomColorSchemeIndex;                                   // 0x02E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUpdateZoomTransitionParam : 1;                           // 0x02EC(0x0001) (Edit)
	unsigned char                                      bUpdateColorScheme : 1;                                   // 0x02EC(0x0001) (Edit)
	unsigned char                                      bUseGlobalZoomTransitionState : 1;                        // 0x02EC(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02ED(0x0003) MISSED OFFSET
	int                                                ZoomViewFlags;                                            // 0x02F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinTargetTime;                                            // 0x02F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SpawnProjectileCloserToSightPercentZ;                     // 0x02F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SpawnProjectileCloserToSightPercentX;                     // 0x02FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxAccuracyModifierPct;                                   // 0x0300(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxAccuracyModifierTime;                                  // 0x0304(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x58];                                      // 0x0308(0x0058) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponSightComponent");
		return ptr;
	}

};


// Class OakGame.WeaponRedDotComponent
// 0x0080 (0x03E0 - 0x0360)
class UWeaponRedDotComponent : public UWeaponSightComponent
{
public:
	class UMaterialInstance*                           Material;                                                 // 0x0360(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       MaterialParamName;                                        // 0x0368(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FWeaponRegisterAttachmentEffectData         EffectData;                                               // 0x0370(0x0060) (Edit)
	class UMaterialInstanceDynamic*                    MaterialInstance;                                         // 0x03D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x03D8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponRedDotComponent");
		return ptr;
	}

};


// Class OakGame.WeaponScopeComponent
// 0x0090 (0x03F0 - 0x0360)
class UWeaponScopeComponent : public UWeaponSightComponent
{
public:
	bool                                               bHideWeapon;                                              // 0x0360(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0361(0x0007) MISSED OFFSET
	class UStaticMesh*                                 ScopeMesh;                                                // 0x0368(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ScopeMeshOffset;                                          // 0x0370(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              ScopeMeshScale;                                           // 0x037C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ScopeMeshDepthScale;                                      // 0x0380(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0384(0x0004) MISSED OFFSET
	class UParticleSystem*                             ScopeScreenParticle;                                      // 0x0388(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             CloseScopeScreenParticle;                                 // 0x0390(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScopeScreenTransitionTime;                                // 0x0398(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bHasAmmoCounter : 1;                                      // 0x039C(0x0001) (Edit)
	unsigned char                                      bHasWeaponShieldIndicator : 1;                            // 0x039C(0x0001) (Edit)
	unsigned char                                      bHasTargetLockIndicator : 1;                              // 0x039C(0x0001) (Edit)
	unsigned char                                      bHasHeatIndicator : 1;                                    // 0x039C(0x0001) (Edit)
	unsigned char                                      bHasChargeIndicator : 1;                                  // 0x039C(0x0001) (Edit)
	unsigned char                                      bInheritAdditionalMaterialParameters : 1;                 // 0x039C(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x039D(0x0003) MISSED OFFSET
	struct FWeaponEffectQueryData                      ZoomTransitionEffectQueryData;                            // 0x03A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData03[0x10];                                      // 0x03B0(0x0010) MISSED OFFSET
	class UStaticMeshComponent*                        ScopeMeshComponent;                                       // 0x03C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWeaponShieldComponent*                      WeaponShieldComponent;                                    // 0x03C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWeaponHeatComponent*                        WeaponHeatComponent;                                      // 0x03D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWeaponChargeComponent*                      WeaponChargeComponent;                                    // 0x03D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x03E0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponScopeComponent");
		return ptr;
	}


	void OnTargetLockChange(class AWeapon* EventWeapon, bool bLockedOn);
	void OnHeatChanged();
	void OnAmmoChanged();
};


// Class OakGame.WeaponShieldComponent
// 0x01E0 (0x0358 - 0x0178)
class UWeaponShieldComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0178(0x0008) MISSED OFFSET
	class UGameResourcePoolData*                       ShieldData;                                               // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlockAngle;                                               // 0x0188(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x018C(0x0004) MISSED OFFSET
	TArray<struct FAttributeEffectData>                AttributeEffects;                                         // 0x0190(0x0010) (Edit, ZeroConstructor)
	struct FGbxAttributeFloat                          MaxShield;                                                // 0x01A0(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	unsigned char                                      UnknownData02[0x4];                                       // 0x01AC(0x0004) MISSED OFFSET
	struct FAttributeInitializationData                MaxShieldFormula;                                         // 0x01B0(0x0038) (Edit)
	class UHitRegionData*                              HitRegionData;                                            // 0x01E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FWeaponRegisterAttachmentEffectData> EffectsData;                                              // 0x01F0(0x0010) (Edit, ZeroConstructor)
	float                                              HitConfirmDuration;                                       // 0x0200(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0204(0x0004) MISSED OFFSET
	class UCurveFloat*                                 HitConfirmCurve;                                          // 0x0208(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ScreenHitEffect;                                          // 0x0210(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ShieldStartEffectId;                                      // 0x0218(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ShieldStopEffectId;                                       // 0x021C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ShieldBreakEffectId;                                      // 0x0220(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0224(0x0004) MISSED OFFSET
	struct FGameResourcePoolReference                  ShieldPool;                                               // 0x0228(0x0018) (Net, Transient)
	EWeaponShieldActivationTrigger                     ActivationTrigger;                                        // 0x0240(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EWeaponZoomState                                   ActivationZoomState;                                      // 0x0241(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EWeaponZoomState                                   DeactivationZoomState;                                    // 0x0242(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x5];                                       // 0x0243(0x0005) MISSED OFFSET
	class UWwiseEvent*                                 ShieldStartAudio;                                         // 0x0248(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 ShieldStopAudio;                                          // 0x0250(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 ShieldBreakAudio;                                         // 0x0258(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 ShieldHitAudio;                                           // 0x0260(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UWwiseEvent*                                 ShieldNovaAudio;                                          // 0x0268(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFeedbackData*                               ShieldStartFeedback;                                      // 0x0270(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFeedbackData*                               ShieldStopFeedback;                                       // 0x0278(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFeedbackData*                               ShieldBreakFeedback;                                      // 0x0280(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UFeedbackData*                               ShieldHitFeedback;                                        // 0x0288(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnShieldActivated;                                        // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShieldDeactivated;                                      // 0x02A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTakeDamage;                                             // 0x02B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShieldNowFull;                                          // 0x02C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShieldNowDepleted;                                      // 0x02D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShieldNowRegenerating;                                  // 0x02E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FGbxAttributeModifierHandle>         AttributeModifiers;                                       // 0x02F0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      bNotifyWeaponUsed : 1;                                    // 0x0300(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bShieldCreated : 1;                                       // 0x0300(0x0001) (Transient)
	unsigned char                                      bIsShieldActive : 1;                                      // 0x0300(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	unsigned char                                      UnknownData06 : 1;                                        // 0x0300(0x0001)
	unsigned char                                      bPlayShieldHitAction : 1;                                 // 0x0300(0x0001) (Edit)
	EWeaponShieldState                                 ShieldState;                                              // 0x0301(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x6];                                       // 0x0302(0x0006) MISSED OFFSET
	struct FName                                       ImpactOffsetSocket;                                       // 0x0308(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       HitConfirmParamName;                                      // 0x0310(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ShieldHitActionDuration;                                  // 0x0318(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0xC];                                       // 0x031C(0x000C) MISSED OFFSET
	class UOakStatusEffectManagerComponent*            OwnerStatusEffectComponent;                               // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWwiseAudioComponent*                        AudioComponent;                                           // 0x0330(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UWeaponScopeComponent*                       ActiveScopeComponent;                                     // 0x0338(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData09[0x10];                                      // 0x0340(0x0010) MISSED OFFSET
	class AWeapon*                                     WeaponPrivate;                                            // 0x0350(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponShieldComponent");
		return ptr;
	}


	void StopShieldEffect();
	void StartShieldEffect();
	void ResourceNowRegenerating(const struct FGameResourcePoolReference& ResourcePool);
	void ResourceNowFull(const struct FGameResourcePoolReference& ResourcePool);
	void PlayHitConfirm();
	void PlayFeedbackSoundEvent(class UWwiseEvent* Event, bool bReplicated);
	void OnZoomingOut(unsigned char Level);
	void OnWeaponUsed();
	void OnShieldCreated();
	void OnRep_ShieldState(EWeaponShieldState PreviousState);
	void OnRep_IsShieldActive(bool bWasShieldActive);
	void OnDetached();
	void OnDeactivationTrigger();
	void OnAttached();
	void OnActivationTrigger();
	class AWeapon* GetWeapon();
	int GetStatusEffectStackCount(class UStatusEffectData* StatusEffect);
	class AOakPlayerController* GetPlayerController();
	class APawn* GetInstigator();
	void DeactivateShield();
	void ClientPlayFeedbackSoundEvent(class UWwiseEvent* Event);
	void ActivateShield();
};


// Class OakGame.WeaponSkeletalControlAspectData
// 0x0010 (0x0068 - 0x0058)
class UWeaponSkeletalControlAspectData : public UWeaponEffectBaseAspectData
{
public:
	struct FWeaponRegisterSkeletalControlData          ControlData;                                              // 0x0058(0x0010) (Edit, BlueprintReadOnly, DisableEditOnTemplate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponSkeletalControlAspectData");
		return ptr;
	}

};


// Class OakGame.WeaponSkinPartData
// 0x0010 (0x01A8 - 0x0198)
class UWeaponSkinPartData : public UOakInventoryCustomizationPartData
{
public:
	TArray<struct FWeaponSkinManufacturerData>         Manufacturers;                                            // 0x0198(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponSkinPartData");
		return ptr;
	}

};


// Class OakGame.WeaponSlotAttributeContextResolver
// 0x0008 (0x0058 - 0x0050)
class UWeaponSlotAttributeContextResolver : public UAttributeContextResolver
{
public:
	class UWeaponSlotData*                             WeaponSlot;                                               // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponSlotAttributeContextResolver");
		return ptr;
	}

};


// Class OakGame.WeaponSlotData
// 0x0018 (0x0058 - 0x0040)
class UWeaponSlotData : public UGbxWeaponSlotData
{
public:
	class UWeaponSlotData*                             LinkedWeaponSlot;                                         // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UGameResourceData*                           AccuracyData;                                             // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CrosshairRotation;                                        // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponSlotData");
		return ptr;
	}

};


// Class OakGame.WeaponSwayGoodnessValueResolver
// 0x0000 (0x0028 - 0x0028)
class UWeaponSwayGoodnessValueResolver : public UAttributeValueResolver
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponSwayGoodnessValueResolver");
		return ptr;
	}

};


// Class OakGame.WeaponSwayComponent
// 0x00F0 (0x0268 - 0x0178)
class UWeaponSwayComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0178(0x0010) MISSED OFFSET
	class USwayPatternData*                            Pattern;                                                  // 0x0188(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGbxAttributeFloat                          Scale;                                                    // 0x0190(0x000C) (Edit, Net)
	struct FGbxAttributeFloat                          AccuracyScale;                                            // 0x019C(0x000C) (Edit, Net)
	float                                              Speed;                                                    // 0x01A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Lacunarity;                                               // 0x01AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Persistence;                                              // 0x01B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DiscWidth;                                                // 0x01B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DiscHeight;                                               // 0x01B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGbxAttributeFloat                          ZoomScale;                                                // 0x01BC(0x000C) (Edit, Net)
	struct FGbxAttributeFloat                          ZoomAccuracyScale;                                        // 0x01C8(0x000C) (Edit, Net)
	float                                              ZoomSmoothingSpeed;                                       // 0x01D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ZoomSmoothInTime_OnZoom;                                  // 0x01D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ZoomSmoothInTime_OnFire;                                  // 0x01DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyAccuracyScaleOnlyWhenFiring;                        // 0x01E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x01E1(0x0003) MISSED OFFSET
	float                                              MaxAccuracyPercent;                                       // 0x01E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CurrentRotation;                                          // 0x01E8(0x000C) (Transient, IsPlainOldData)
	float                                              CurrentScale;                                             // 0x01F4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x68];                                      // 0x01F8(0x0068) MISSED OFFSET
	class AWeapon*                                     WeaponPrivate;                                            // 0x0260(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponSwayComponent");
		return ptr;
	}


	void OnZoomed();
	void OnUsed();
	void OnDetached();
	void OnAttached();
	float GetSwayGoodness();
};


// Class OakGame.WeaponTrinketPreviewActor
// 0x0010 (0x0468 - 0x0458)
class AWeaponTrinketPreviewActor : public AActor
{
public:
	class UGbxCustomizationComponent*                  CustomizationComponent;                                   // 0x0458(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UGbxSkeletalMeshComponent*                   SkeletalMeshComponent;                                    // 0x0460(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponTrinketPreviewActor");
		return ptr;
	}

};


// Class OakGame.WeaponTrinketPartData
// 0x0058 (0x01F0 - 0x0198)
class UWeaponTrinketPartData : public UOakInventoryCustomizationPartData
{
public:
	TSoftObjectPtr<class USkeletalMesh>                SkeletalMesh;                                             // 0x0198(0x0028) (Edit, DisableEditOnTemplate)
	TSoftObjectPtr<class UClass>                       AnimInstanceClass;                                        // 0x01C0(0x0028) (Edit, DisableEditOnTemplate)
	struct FName                                       AttachSocket;                                             // 0x01E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponTrinketPartData");
		return ptr;
	}

};


// Class OakGame.WeaponUseModeAspectData
// 0x0018 (0x0050 - 0x0038)
class UWeaponUseModeAspectData : public UInventoryAspectData
{
public:
	EWeaponUseMode                                     UseMode;                                                  // 0x0038(0x0001) (BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                UseModeBitmask;                                           // 0x003C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                InputChannelBitmask;                                      // 0x0040(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	class UWeaponUseComponent*                         WeaponUseComponent;                                       // 0x0048(0x0008) (Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponUseModeAspectData");
		return ptr;
	}

};


// Class OakGame.WeaponUseModeCrosshairAspectData
// 0x0018 (0x0050 - 0x0038)
class UWeaponUseModeCrosshairAspectData : public UInventoryAspectData
{
public:
	EWeaponUseMode                                     UseMode;                                                  // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	class UGbxCrosshairDataAsset*                      CrosshairData;                                            // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class UGbxCrosshairDataAsset*                      ZoomedCrosshairData;                                      // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponUseModeCrosshairAspectData");
		return ptr;
	}

};


// Class OakGame.WeaponUseModeNameAspectData
// 0x0010 (0x0048 - 0x0038)
class UWeaponUseModeNameAspectData : public UInventoryAspectData
{
public:
	EWeaponUseMode                                     UseMode;                                                  // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	class UUIStatData_Text*                            UseModeName;                                              // 0x0040(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponUseModeNameAspectData");
		return ptr;
	}

};


// Class OakGame.WeaponUseModeSecondaryAspectData
// 0x0018 (0x0050 - 0x0038)
class UWeaponUseModeSecondaryAspectData : public UInventoryAspectData
{
public:
	unsigned char                                      bCreateComponent : 1;                                     // 0x0038(0x0001) (Edit, BlueprintReadOnly, DisableEditOnTemplate)
	unsigned char                                      bAdditive : 1;                                            // 0x0038(0x0001) (Edit, BlueprintReadOnly, DisableEditOnTemplate)
	unsigned char                                      bShareBetweenUseModes : 1;                                // 0x0038(0x0001) (Edit, BlueprintReadOnly, DisableEditOnTemplate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	int                                                UseModeBitmask;                                           // 0x003C(0x0004) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	class UActorComponent*                             Component;                                                // 0x0040(0x0008) (Edit, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData)
	class UClass*                                      ComparisonClass;                                          // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponUseModeSecondaryAspectData");
		return ptr;
	}


	void EnumerateComponentTypes(TArray<class UClass*>* OutComponentTypes);
};


// Class OakGame.WeaponVehicleAnimInstance
// 0x09E0 (0x0E20 - 0x0440)
class UWeaponVehicleAnimInstance : public UAnimInstance
{
public:
	bool                                               bIsDriverWeapon;                                          // 0x0440(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSeatedWeapon;                                          // 0x0441(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bHasTurretOwner;                                          // 0x0442(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0443(0x0001) MISSED OFFSET
	float                                              DualWeaponDownOffset;                                     // 0x0444(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DualWeaponDownElbowOffset;                                // 0x0448(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DualWeaponDownArmEndOffset;                               // 0x044C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DualWeaponTopOffset;                                      // 0x0450(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DualWeaponTopElbowOffset;                                 // 0x0454(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DualWeaponTopArmEndOffset;                                // 0x0458(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DualWeaponSideOffset;                                     // 0x045C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxIKStretchRatio;                                        // 0x0460(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StartIKStretchingRatio;                                   // 0x0464(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CircleZone;                                               // 0x0468(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CircleDeadZone;                                           // 0x046C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRuntimeFloatCurve                          DualWeaponRightCurveStartArmExtensionByYaw;               // 0x0470(0x0078) (Edit, BlueprintVisible)
	struct FRuntimeFloatCurve                          DualWeaponRightCurveEndArmExtensionByYaw;                 // 0x04E8(0x0078) (Edit, BlueprintVisible)
	struct FRuntimeFloatCurve                          DualWeaponLeftCurveStartArmExtensionByYaw;                // 0x0560(0x0078) (Edit, BlueprintVisible)
	struct FRuntimeFloatCurve                          DualWeaponLeftCurveEndArmExtensionByYaw;                  // 0x05D8(0x0078) (Edit, BlueprintVisible)
	float                                              StretchWheelBase;                                         // 0x0650(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0654(0x0004) MISSED OFFSET
	struct FName                                       LeftWeaponSocketName;                                     // 0x0658(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       RightWeaponSocketName;                                    // 0x0660(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FVehicleOverrideData>                OverrideByParts;                                          // 0x0668(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData02[0x788];                                     // 0x0678(0x0788) MISSED OFFSET
	class AOakVehicle*                                 Vehicle;                                                  // 0x0E00(0x0008) (ZeroConstructor, IsPlainOldData)
	class AOakWeapon_Vehicle*                          Weapon_Vehicle;                                           // 0x0E08(0x0008) (ZeroConstructor, IsPlainOldData)
	class USkeletalMeshComponent*                      LeftWeaponMesh;                                           // 0x0E10(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      RightWeaponMesh;                                          // 0x0E18(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponVehicleAnimInstance");
		return ptr;
	}

};


// Class OakGame.WeaponWearAttributeValueResolver
// 0x0008 (0x0030 - 0x0028)
class UWeaponWearAttributeValueResolver : public UAttributeValueResolver
{
public:
	EWeaponWearValueType                               ValueToResolve;                                           // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.WeaponWearAttributeValueResolver");
		return ptr;
	}

};


// Class OakGame.ZoneMapData
// 0x0160 (0x0220 - 0x00C0)
class UZoneMapData : public ULevelData
{
public:
	struct FSoftObjectPath                             ZoneMapMeshAssetReference;                                // 0x00C0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	TArray<struct FZoneMapDataSection>                 ZoneMapDataSections;                                      // 0x00D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              CustomUnfogHeight;                                        // 0x00E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CustomVehicleUnfogHeight;                                 // 0x00EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGbxCondition*                               SuppressFastTravelTunnelCondition;                        // 0x00F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	TArray<struct FZoneMapMissionPOIBlacklistEntry>    BlacklistedMissionPOIs;                                   // 0x00F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0108(0x0008) MISSED OFFSET
	struct FTransform                                  PlanetLocationTransform;                                  // 0x0110(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  PlanetZoneDisplayTexture;                                 // 0x0140(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  ConceptArtToDisplay;                                      // 0x0148(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FZoneMapPOIEntry>                    ZoneMapPOIList;                                           // 0x0150(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<struct FZoneMapMissionWaypointEntry>        ZoneMapMissionWaypointList;                               // 0x0160(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<struct FZoneMapChallengeEntry>              ZoneMapChallengeList;                                     // 0x0170(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<struct FZoneMapChallengeGroupEntry>         ZoneMapChallengeGroupList;                                // 0x0180(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	int                                                NumWorldDiscoveryAreas;                                   // 0x0190(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                ZoneMapVersion;                                           // 0x0194(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bIsTutorialTarget;                                        // 0x0198(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0199(0x0007) MISSED OFFSET
	TSoftObjectPtr<class UStaticMesh>                  PlanetPOIZoneMapMesh;                                     // 0x01A0(0x0028) (Edit, BlueprintVisible)
	TEnumAsByte<EOakLeague>                            AssociatedLeague;                                         // 0x01C8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x01C9(0x0007) MISSED OFFSET
	class UPatchExpansionData*                         AssociatedPatch;                                          // 0x01D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UDownloadableContentData*                    AssociatedDLC;                                            // 0x01D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bNoFastTravelStations;                                    // 0x01E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x01E1(0x0007) MISSED OFFSET
	TArray<class UZoneMapPOITypeData*>                 POITypesToIgnoreInCurrentMap;                             // 0x01E8(0x0010) (Edit, ZeroConstructor)
	TArray<class UAdditionalZoneMapData*>              AdditionalZoneMaps;                                       // 0x01F8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData04[0x18];                                      // 0x0208(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapData");
		return ptr;
	}


	bool ShouldHighlight(class UObject* WorldContextObject);
	void SetHighlight(class UObject* WorldContextObject, bool bShouldHighlight);
	bool SaveZoneFogOfDiscovery(class AOakPlayerController* ViewingPlayer, class UTextureRenderTarget2D* FogOfDiscoveryRenderTarget);
	bool STATIC_SaveCurrentZoneFogOfDiscovery(class AOakPlayerController* ViewingPlayer);
	void OnZoneMapMeshDataLoaded();
	class UTexture2D* LoadZoneFogOfDiscoveryTexture(class AOakPlayerController* ViewingPlayer);
	bool LoadZoneFogOfDiscovery(class AOakPlayerController* ViewingPlayer, int DefaultWidth, int DefaultHeight, class UTextureRenderTarget2D** FoDRenderTarget);
	class UTexture2D* STATIC_LoadCurrentZoneFogOfDiscoveryTexture(class AOakPlayerController* ViewingPlayer);
	class UTextureRenderTarget2D* STATIC_LoadCurrentZoneFogOfDiscovery(class AOakPlayerController* ViewingPlayer, int DefaultWidth, int DefaultHeight);
	bool IsZoneMapOnPlanet(class UPlanetData* PlanetData);
	bool IsPOIKnownDirect(class AOakPlayerController* ViewingPlayer, const struct FZoneMapPOIEntry& POIEntry);
	bool IsPOIKnown(class AOakPlayerController* ViewingPlayer, const class FString& POIObjectName);
	void GetZoneWaypointsForMission(class UClass* Mission, TArray<struct FZoneMapMissionWaypointEntry>* OutMissionWaypoints);
	TArray<struct FZoneMapPOIEntry> GetZoneMapPOIList();
	class UPlanetData* GetZoneMapPlanet();
	TArray<struct FZoneMapMissionWaypointEntry> GetZoneMapMissionWaypointList();
	class UZoneMapMeshData* GetZoneMapMeshData();
	TArray<struct FZoneMapChallengeEntry> GetZoneMapChallengeList();
	void GetZoneChallengeCounts(class AOakPlayerController* ViewingPlayer, class UChallengeCategoryData* ChallengeCategory, bool bIgnoreHidden, int* TotalCount, int* CompletedCount);
	void GetWorldDiscoveryAreaCounts(class AOakPlayerController* ViewingPlayer, TEnumAsByte<EOakLeague> InAssociatedLeague, class UDownloadableContentData* InAssociatedDLC, int* TotalWorldDiscoveryAreas, int* FoundWorldDiscoveryAreas);
	void GetTravelStationWaypointsToMission(class UObject* WorldContextObject, class UClass* MissionToTrack, TArray<struct FZoneMapPOIEntry>* StationPOI);
	TEnumAsByte<EZoneMapMissionStatus> GetMissionWaypointStatusDirect(class UObject* WorldContextObject, const struct FZoneMapMissionWaypointEntry& MissionWaypointEntry);
	TEnumAsByte<EZoneMapMissionStatus> GetMissionWaypointStatus(class UObject* WorldContextObject, const class FString& MissionWaypointObjectName);
	void GetMissionWaypointDisplayTextDirect(class UObject* WorldContextObject, const struct FZoneMapMissionWaypointEntry& MissionWaypointEntry, TArray<struct FText>* ObjectiveText, TArray<struct FText>* DirectorText);
	void GetMissionsReferencedByZoneWaypoints(TArray<class UClass*>* OutMissions);
	class FString GetMapFilename();
	class UInWorldIconData* GetChallengeWorldIconDirect(class AGbxPlayerController* Player, const struct FZoneMapChallengeEntry& ChallengeEntry);
	class UInWorldIconData* GetChallengeWorldIcon(class AGbxPlayerController* Player, const class FString& ChallengeObjectName);
	TEnumAsByte<EZoneMapChallengeStatus> GetChallengeStatusDirect(class AGbxPlayerController* Player, const struct FZoneMapChallengeEntry& ChallengeEntry);
	TEnumAsByte<EZoneMapChallengeStatus> GetChallengeStatus(class AGbxPlayerController* Player, const class FString& ChallengeObjectName);
	class FString GetChallengeScaleformIconDirect(class AGbxPlayerController* Player, const struct FZoneMapChallengeEntry& ChallengeEntry);
	class FString GetChallengeScaleformIcon(class AGbxPlayerController* Player, const class FString& ChallengeObjectName);
	struct FText GetChallengeDisplayTextDirect(const struct FZoneMapChallengeEntry& MissionWaypointEntry);
	void AsyncLoadZoneMapMeshData(const struct FScriptDelegate& LoadedDelegate);
	void ActivateZoneMapPOI(class AOakPlayerController* ViewingPlayer, const class FString& POIObjectName);
};


// Class OakGame.ZoneMapDisplayActor
// 0x0000 (0x0458 - 0x0458)
class AZoneMapDisplayActor : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapDisplayActor");
		return ptr;
	}

};


// Class OakGame.ZoneMapDisplayPOI
// 0x0000 (0x0458 - 0x0458)
class AZoneMapDisplayPOI : public AZoneMapDisplayActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapDisplayPOI");
		return ptr;
	}

};


// Class OakGame.ZoneMapGlobalsData
// 0x0200 (0x0230 - 0x0030)
class UZoneMapGlobalsData : public UGbxDataAsset
{
public:
	TArray<TSoftObjectPtr<class UZoneMapPOITypeData>>  ZoneMapPOITypes;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TSoftObjectPtr<class UZoneMapPOITypeData>          MissionGiverPOIType;                                      // 0x0040(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	TSoftObjectPtr<class UZoneMapPOITypeData>          MissionGiverDLCPOIType;                                   // 0x0068(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	TSoftObjectPtr<class UZoneMapPOITypeData>          MissionObjectivePOIType;                                  // 0x0090(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	TSoftObjectPtr<class UZoneMapPOITypeData>          MissionObjectiveOptionalPOIType;                          // 0x00B8(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UZoneMapPOITypeData*                         FriendPOIType;                                            // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UZoneMapPOITypeData*                         CustomWaypointPOIType;                                    // 0x00E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          ZoneMeshMaterial;                                         // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          ZoneMapDisplayMaterial;                                   // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       ZoneMapDisplayTextureParameter;                           // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TSoftObjectPtr<class UClass>                       ZoneMapBlueprint;                                         // 0x0108(0x0028) (Edit)
	TSoftObjectPtr<class UZoneMapPOITypeData>          PlayerPOIData;                                            // 0x0130(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	TSoftObjectPtr<class UClass>                       FoDCaptureBlueprint;                                      // 0x0158(0x0028) (Edit)
	float                                              POIZOffset;                                               // 0x0180(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BasePOISelectionDistance;                                 // 0x0184(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CustomWaypointRemoveDistance;                             // 0x0188(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x018C(0x0004) MISSED OFFSET
	class UMaterialInterface*                          FoDWorldPositionTransformMaterial;                        // 0x0190(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   FoDRenderTargetSize;                                      // 0x0198(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	class UMaterialInterface*                          FoDMasterMaterial;                                        // 0x01A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          FoDTranslucentMasterMaterial;                             // 0x01A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       FoDMasterMaterialParameter;                               // 0x01B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          FODMeshMaterialExternal;                                  // 0x01B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          FODMeshTranslucentMaterialExternal;                       // 0x01C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       FODMeshMatExtTextureParam;                                // 0x01C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       FODMeshMatExtTextureSizeParam;                            // 0x01D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          FoDSolverMaterial;                                        // 0x01D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       FoDSolverMaterialParameter;                               // 0x01E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          FoDLoaderMaterial;                                        // 0x01E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       FoDLoaderMaterialParameter;                               // 0x01F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FoDMoveDistanceTestSquared;                               // 0x01F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01FC(0x0004) MISSED OFFSET
	struct FName                                       FoDPlayerPositionMaterialParameter;                       // 0x0200(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       FoDRadiusMaterialParameter;                               // 0x0208(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTextureRenderTarget2D*                      TestFoDRenderTexture;                                     // 0x0210(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PlayerUnfogRadius;                                        // 0x0218(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VehicleUnfogRadius;                                       // 0x021C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DefaultUnfogHeight;                                       // 0x0220(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DefaultVehicleUnfogHeight;                                // 0x0224(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   IconClampTransitionBounds;                                // 0x0228(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapGlobalsData");
		return ptr;
	}

};


// Class OakGame.ZoneMapIconBase
// 0x0050 (0x04A8 - 0x0458)
class AZoneMapIconBase : public AZoneMapDisplayActor
{
public:
	bool                                               bDisplayInFastTravelList;                                 // 0x0458(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0459(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBeginZoneMapCursorOver;                                 // 0x0460(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndZoneMapCursorOver;                                   // 0x0470(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActivatePOI;                                            // 0x0480(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AActor*                                      SpawnedFromActor;                                         // 0x0490(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class AZoneMapViewer*                              ZoneMap;                                                  // 0x0498(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bActivated;                                               // 0x04A0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x04A1(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapIconBase");
		return ptr;
	}


	void ViewModeChanged();
	void SetHighlighted(bool bNewActivated);
	bool CanActivate();
	void Activate();
};


// Class OakGame.OakZoneMapIcon_POI
// 0x0108 (0x05B0 - 0x04A8)
class AOakZoneMapIcon_POI : public AZoneMapIconBase
{
public:
	struct FName                                       TextureParameter;                                         // 0x04A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  SpriteTexture;                                            // 0x04B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class FString                                      DefaultScaleformIconName;                                 // 0x04B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x04C8(0x0008) MISSED OFFSET
	struct FZoneMapPOIEntry                            POIEntry;                                                 // 0x04D0(0x0060) (BlueprintVisible, Transient)
	class UZoneMapPOITypeData*                         POIType;                                                  // 0x0530(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    SpriteMaterial;                                           // 0x0538(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       MaterialLocationParameter;                                // 0x0540(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       MaterialFODTextureParameter;                              // 0x0548(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       MaterialFODCoordsParameter;                               // 0x0550(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       MaterialFODEnableParameter;                               // 0x0558(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       MaterialPlayerZParameter;                                 // 0x0560(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       MaterialScaleMultiplierParameter;                         // 0x0568(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       MaterialOpacityParameter;                                 // 0x0570(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OpacityIfInWorldIcon;                                     // 0x0578(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x057C(0x0004) MISSED OFFSET
	struct FName                                       MaterialMiniMapActiveParameter;                           // 0x0580(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IconZOffset;                                              // 0x0588(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCullOutsideMiniMap;                                      // 0x058C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x058D(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       AssociatedActor;                                          // 0x0590(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsKnown;                                                 // 0x0598(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsFogged;                                                // 0x0599(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bInvisible;                                               // 0x059A(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x059B(0x0005) MISSED OFFSET
	class UMeshComponent*                              POIMeshComponent;                                         // 0x05A0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x05A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakZoneMapIcon_POI");
		return ptr;
	}


	void SetupSpriteMaterial(class UMaterialInstanceDynamic* InSpriteMaterial);
	void SetSpriteMaterial(class UMaterial* NewSpriteMaterial);
	void SetIsKnown(bool bInIsKnown);
	void SetAssociatedActor(class AActor* InAssociatedActor);
	bool POIActivated(struct FText* ErrorMessage);
	void OnCharacterDied();
	void OnAssociatedActorDestroyed(class AActor* DestroyedActor);
	void GetPOIDisplayInfo(class FString* OutScaleformIconName, struct FText* OutPOIDisplayName, struct FText* OutPOISubHeading, TArray<struct FText>* OutPOIDescriptionText, struct FText* OutPOIUseText);
	void ForceUpdateTransform();
	bool ExitMenuWhenActivated();
	bool CanPOIBeActivated();
};


// Class OakGame.ZoneMapMissionWaypointIcon
// 0x00F0 (0x06A0 - 0x05B0)
class AZoneMapMissionWaypointIcon : public AOakZoneMapIcon_POI
{
public:
	struct FZoneMapMissionWaypointEntry                WaypointEntry;                                            // 0x05B0(0x00F0) (BlueprintVisible, BlueprintReadOnly, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapMissionWaypointIcon");
		return ptr;
	}


	void K2_OnWaypointUpdated();
	TEnumAsByte<EZoneMapMissionStatus> GetMissionStatus();
};


// Class OakGame.OakZoneMapChallengeIcon
// 0x0060 (0x0610 - 0x05B0)
class AOakZoneMapChallengeIcon : public AOakZoneMapIcon_POI
{
public:
	struct FZoneMapChallengeEntry                      ChallengeEntry;                                           // 0x05B0(0x0060) (BlueprintVisible, BlueprintReadOnly, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakZoneMapChallengeIcon");
		return ptr;
	}


	void K2_OnChallengeUpdated();
	TEnumAsByte<EZoneMapChallengeStatus> GetChallengeStatus();
	class UTexture2D* GetChallengeIconTexture();
};


// Class OakGame.OakZoneMapFriendIcon_POI
// 0x0020 (0x05D0 - 0x05B0)
class AOakZoneMapFriendIcon_POI : public AOakZoneMapIcon_POI
{
public:
	struct FScriptMulticastDelegate                    OnFriendStatusMessageChange;                              // 0x05B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x10];                                      // 0x05C0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.OakZoneMapFriendIcon_POI");
		return ptr;
	}

};


// Class OakGame.ZoneMapPlayerIcon_POI
// 0x0020 (0x05D0 - 0x05B0)
class AZoneMapPlayerIcon_POI : public AOakZoneMapIcon_POI
{
public:
	struct FName                                       MaterialYAxisParameter;                                   // 0x05B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       MaterialZAxisParameter;                                   // 0x05B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       PlayerPulseMaterialParameter;                             // 0x05C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateWPOMaterialForVehicleInZoneMapView;                // 0x05C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x05C9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapPlayerIcon_POI");
		return ptr;
	}


	void SetIsOwningPlayer();
	void OnPlayerExitedVehicle(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnPlayerEnteringVehicle(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
};


// Class OakGame.ZoneMapVehicleIcon_POI
// 0x0070 (0x0640 - 0x05D0)
class AZoneMapVehicleIcon_POI : public AZoneMapPlayerIcon_POI
{
public:
	class UZoneMapPOITypeData*                         CatchARidePOIType;                                        // 0x05D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UZoneMapPOITypeData*                         PlayerPOIType;                                            // 0x05D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UZoneMapPOITypeData*                         FriendlyPOIType;                                          // 0x05E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UZoneMapPOITypeData*                         EmptyPOIType;                                             // 0x05E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UZoneMapPOITypeData*                         EnemyPOIType;                                             // 0x05F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       ColorParameterName;                                       // 0x05F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                EnemyColor;                                               // 0x0600(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                PlayerColor;                                              // 0x0610(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                NeutralColor;                                             // 0x0620(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0630(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapVehicleIcon_POI");
		return ptr;
	}


	void OnVehicleSeatsInitialized(class AOakVehicle* AssociatedVehicle);
	void OnSpawnByCatchARideChanged();
	void OnSeatAttachStateChanged();
	void OnOtherCharacterExitedVehicle(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
	void OnOtherCharacterEnteredVehicle(class UVehicleSeatComponent* Seat, class AOakCharacter* Character);
};


// Class OakGame.ZoneMapTravelStationIcon_POI
// 0x0030 (0x05E0 - 0x05B0)
class AZoneMapTravelStationIcon_POI : public AOakZoneMapIcon_POI
{
public:
	struct FText                                       MapUnavailableMessage;                                    // 0x05B0(0x0028) (Edit)
	unsigned char                                      UnknownData00[0x4];                                       // 0x05C8(0x0004) MISSED OFFSET
	TWeakObjectPtr<class UTravelStationComponentBase>  AssociatedTravelComponent;                                // 0x05CC(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x05D4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapTravelStationIcon_POI");
		return ptr;
	}


	void OnTravelIDsChanged();
	void OnFastTravelStationDiscovered(bool bNoActivationSequence);
};


// Class OakGame.ZoneMapInputData
// 0x0130 (0x0160 - 0x0030)
class UZoneMapInputData : public UGbxDataAsset
{
public:
	float                                              SpawnPitchValue;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TargetSpawnPitchValue;                                    // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpawnPitchInterpSpeed;                                    // 0x0038(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PitchMin;                                                 // 0x003C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PitchMax;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RotationYawInterpSpeed;                                   // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RotationPitchInterpSpeed;                                 // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RotationYawInterpSpeedMouse;                              // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RotationPitchInterpSpeedMouse;                            // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RotationYawSpeedMax;                                      // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RotationPitchSpeedMax;                                    // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RotationSpeed;                                            // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScaleMin;                                                 // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScaleMax;                                                 // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LevelScaleRate;                                           // 0x0068(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LevelInterpModeSpeed;                                     // 0x006C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MouseLevelScaleRate;                                      // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MousePlanetScaleRate;                                     // 0x0074(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MouseGalaxyScaleRate;                                     // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PlanetGalaxyScaleRate;                                    // 0x007C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              KeyboardLevelScaleAxisMultiplier;                         // 0x0080(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpawnScaleValue;                                          // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TargetSpawnScaleValue;                                    // 0x0088(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpawnScaleInterpSpeed;                                    // 0x008C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScaleRate;                                                // 0x0090(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScaleInterpolationSpeed;                                  // 0x0094(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TransformInterpSpeed;                                     // 0x0098(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TransformInterpSpeedMouse;                                // 0x009C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TransformMoveSpeedMouse;                                  // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TransformAcceleration;                                    // 0x00A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TransformBuffer;                                          // 0x00A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GlobalTransformScale;                                     // 0x00AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 POIStickinessCurve;                                       // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 MovementSpeedByScaleCurve;                                // 0x00B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 ZoomCurve;                                                // 0x00C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 ZoomSpeedByZoomCurve;                                     // 0x00C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 ZoomSpeedBasedOnZoom;                                     // 0x00D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DisplayRadius;                                            // 0x00D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              POITraceRadius;                                           // 0x00DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              POITraceLeadScale;                                        // 0x00E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               DebugTrace;                                               // 0x00E4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00E5(0x0003) MISSED OFFSET
	class UCurveFloat*                                 POISphereScaleOverZoneMapScale;                           // 0x00E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRecenterResetsOrientation;                               // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	float                                              GalaxyPitchMax;                                           // 0x00F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GalaxyPitchMin;                                           // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GalaxyPitchInterpSpeed;                                   // 0x00FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GalaxyYawInterpSpeed;                                     // 0x0100(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GalaxyInterpSpeedMouse;                                   // 0x0104(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GalaxyMoveSpeedMouse;                                     // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GalaxyDefaultPitch;                                       // 0x010C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GalaxyYawMax;                                             // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GalaxyYawMin;                                             // 0x0114(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GalaxyInterpModeSpeed;                                    // 0x0118(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PlanetPitchMax;                                           // 0x011C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PlanetPitchMin;                                           // 0x0120(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PlanetYawMax;                                             // 0x0124(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PlanetYawMin;                                             // 0x0128(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PlanetRotationInterpSpeed;                                // 0x012C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PlanetRotationInterpSpeedMouse;                           // 0x0130(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PlanetRotationMoveSpeedMouse;                             // 0x0134(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PlanetInterpModeSpeed;                                    // 0x0138(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MiniMap_Pitch;                                            // 0x013C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MiniMap_FoV;                                              // 0x0140(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MiniMap_Distance;                                         // 0x0144(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     MiniMap_RelativeOffset;                                   // 0x0148(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              MouseAxisSensitivityMin;                                  // 0x0154(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MouseAxisSensitivityMax;                                  // 0x0158(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvertMouseXAxis;                                        // 0x015C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvertMouseYAxis;                                        // 0x015D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x015E(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapInputData");
		return ptr;
	}

};


// Class OakGame.ZoneMapListData
// 0x0010 (0x0040 - 0x0030)
class UZoneMapListData : public UGbxDataAsset
{
public:
	TArray<class UZoneMapData*>                        ZoneMapList;                                              // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapListData");
		return ptr;
	}


	class UZoneMapData* GetZoneMapDataForCurrentLevel(class UObject* WorldContextObject);
};


// Class OakGame.ZoneMapMeshData
// 0x0038 (0x0068 - 0x0030)
class UZoneMapMeshData : public UGbxDataAsset
{
public:
	TArray<struct FZoneMapMeshListEntry>               ZoneMapMeshs;                                             // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FZoneMapGPUPointCloudData>           GPUPointCloudList;                                        // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class UTexture2D*                                  FogOfDiscoveryTexture;                                    // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ZoneMapMeshVersion;                                       // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	class AFogOfDiscoveryCapture*                      FoDCapture;                                               // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapMeshData");
		return ptr;
	}


	void SetupStaticMeshComponent(int Index, class UStaticMeshComponent* InStaticMeshComponent);
};


// Class OakGame.ZoneMapPlanetViewer
// 0x0020 (0x0478 - 0x0458)
class AZoneMapPlanetViewer : public AZoneMapDisplayActor
{
public:
	TArray<struct FPlanetZonePOI>                      PlanetZonePOIs;                                           // 0x0458(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UPlanetData*                                 PlanetData;                                               // 0x0468(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class AZoneMapViewer*                              OwningZoneMap;                                            // 0x0470(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapPlanetViewer");
		return ptr;
	}


	class UStaticMesh* GetZoneMeshOnPlanet(class UZoneMapData* ZoneMap);
};


// Class OakGame.ZoneMapPOIComponent
// 0x0060 (0x0760 - 0x0700)
class UZoneMapPOIComponent : public UMaterialBillboardComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0700(0x0008) MISSED OFFSET
	struct FName                                       TextureParameter;                                         // 0x0708(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       MaterialLocationParameter;                                // 0x0710(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       MaterialMiniMapActiveParameter;                           // 0x0718(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  SpriteTexture;                                            // 0x0720(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              IconZOffset;                                              // 0x0728(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               bCullOutsideMiniMap;                                      // 0x072C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x072D(0x0003) MISSED OFFSET
	class UMaterialInstanceDynamic*                    SpriteMaterial;                                           // 0x0730(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       AssociatedActor;                                          // 0x0738(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bIsKnown;                                                 // 0x0740(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0741(0x0007) MISSED OFFSET
	class AZoneMapViewer*                              ZoneMap;                                                  // 0x0748(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UOakMinimapIconComponent*                    MapIconComponent;                                         // 0x0750(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0758(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapPOIComponent");
		return ptr;
	}


	void ViewModeChanged();
	void SetupSpriteMaterial(class UMaterialInstanceDynamic* InSpriteMaterial);
	void OnCharacterExitedVehicle(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnCharacterEnteringVehicle(class UPawnAttachSlotComponent* PawnAttachSlotComponent);
	void OnCharacterDied();
	void OnAssociatedActorDestroyed(class AActor* DestroyedActor);
};


// Class OakGame.ZoneMapPOIAIComponent
// 0x0020 (0x0780 - 0x0760)
class UZoneMapPOIAIComponent : public UZoneMapPOIComponent
{
public:
	class UZoneMapPOITypeData*                         EnemyPOIType;                                             // 0x0760(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0768(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapPOIAIComponent");
		return ptr;
	}


	void OnTeamChanged(class UTeamComponent* TeamComponent, class UTeam* PrevTeam);
	void DelayedTeamChanged();
	void DelayedRemovePOI();
};


// Class OakGame.ZoneMapPOIIconInterface
// 0x0000 (0x0028 - 0x0028)
class UZoneMapPOIIconInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapPOIIconInterface");
		return ptr;
	}

};


// Class OakGame.ZoneMapPOIInterface
// 0x0000 (0x0028 - 0x0028)
class UZoneMapPOIInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapPOIInterface");
		return ptr;
	}

};


// Class OakGame.ZoneMapPOILegendaryComponent
// 0x0000 (0x0760 - 0x0760)
class UZoneMapPOILegendaryComponent : public UZoneMapPOIComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapPOILegendaryComponent");
		return ptr;
	}


	void OnShowLegendariesChanged(bool bNewVal);
};


// Class OakGame.ZoneMapPOIMeshComponent
// 0x0050 (0x0800 - 0x07B0)
class UZoneMapPOIMeshComponent : public UStaticMeshComponent
{
public:
	int                                                MeshRadius;                                               // 0x07B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MeshHeightScale;                                          // 0x07B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                AreaRadius;                                               // 0x07B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              IconZOffset;                                              // 0x07BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       MaterialLocationParameter;                                // 0x07C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       MaterialXAxisParameter;                                   // 0x07C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       MaterialYAxisParameter;                                   // 0x07D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       MaterialZAxisParameter;                                   // 0x07D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       MaterialMiniMapActiveParameter;                           // 0x07E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    MeshMaterial;                                             // 0x07E8(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       AssociatedActor;                                          // 0x07F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x07F8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapPOIMeshComponent");
		return ptr;
	}


	void ViewModeChanged();
	void SetupMeshMaterial(class UMaterialInstanceDynamic* InMeshMaterial);
};


// Class OakGame.ZoneMapPOITypeData
// 0x0118 (0x0148 - 0x0030)
class UZoneMapPOITypeData : public UGbxDataAsset
{
public:
	struct FText                                       DisplayName;                                              // 0x0030(0x0028) (Edit)
	struct FText                                       SubHeading;                                               // 0x0048(0x0028) (Edit)
	struct FText                                       Description;                                              // 0x0060(0x0028) (Edit)
	struct FText                                       UseText;                                                  // 0x0078(0x0028) (Edit)
	struct FText                                       CanNotBeUsedText;                                         // 0x0090(0x0028) (Edit)
	class UTexture2D*                                  POISprite;                                                // 0x00A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class FString                                      IconFrameName;                                            // 0x00B0(0x0010) (Edit, ZeroConstructor)
	class FString                                      AlternateIconFrameName;                                   // 0x00C0(0x0010) (Edit, ZeroConstructor)
	bool                                               bDisplayInFastTravelList;                                 // 0x00D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EZoneMapTargetType                                 POICategory;                                              // 0x00D1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00D2(0x0006) MISSED OFFSET
	TSoftObjectPtr<class UClass>                       POIClass;                                                 // 0x00D8(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UClass*                                      POIIconClass;                                             // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TSoftObjectPtr<class UClass>                       POIIconComponentClass;                                    // 0x0108(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bShowInMiniMap;                                           // 0x0130(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bShowInZoneMap;                                           // 0x0131(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0132(0x0002) MISSED OFFSET
	int                                                TranslucencySortPriority;                                 // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SizeMultiplier;                                           // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IconZOffset;                                              // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               DontUseScaleformIcon;                                     // 0x0140(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0141(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapPOITypeData");
		return ptr;
	}

};


// Class OakGame.ZoneMapViewer
// 0x08F8 (0x0D50 - 0x0458)
class AZoneMapViewer : public AActor
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0458(0x0018) MISSED OFFSET
	TArray<class AOakZoneMapIcon_POI*>                 DLCGalaxyPOIs;                                            // 0x0470(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0xB0];                                      // 0x0480(0x00B0) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFocusedPOIChanged;                                      // 0x0530(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x68];                                      // 0x0540(0x0068) MISSED OFFSET
	bool                                               bEchoMenuOpen;                                            // 0x05A8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bShowingZoneMap;                                          // 0x05A9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bShowingMiniMap;                                          // 0x05AA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1];                                       // 0x05AB(0x0001) MISSED OFFSET
	struct FVector2D                                   MousePanSpeed;                                            // 0x05AC(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              MouseMaxPanSpeed;                                         // 0x05B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   MouseRotateSpeed;                                         // 0x05B8(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              MouseMaxRotateSpeed;                                      // 0x05C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MouseZoomSpeed;                                           // 0x05C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MouseMaxZoomSpeed;                                        // 0x05C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x05CC(0x0004) MISSED OFFSET
	struct FName                                       ZoneMapDecorationTag;                                     // 0x05D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UZoneMapInputData*                           ZoneMapInputData;                                         // 0x05D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MapCenterMaterialParameter;                               // 0x05E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      MissionPOIActorClass;                                     // 0x05E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MissionPOIAreaComponentClass;                             // 0x05F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       MissionGiverPOIDisplayName;                               // 0x05F8(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       MissionObjectivePOIDisplayName;                           // 0x0610(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UClass*                                      ChallengePOIActorClass;                                   // 0x0628(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 LocalPlayerIcon;                                          // 0x0630(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          LocalPlayerIconMaterial;                                  // 0x0638(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseActorPOIs;                                            // 0x0640(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0641(0x0007) MISSED OFFSET
	struct FName                                       PlayerPositionMaterialParameter;                          // 0x0648(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DisplayingLoadedLevelMaterialParameter;                   // 0x0650(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterial*                                   DecorationMeshMaterial;                                   // 0x0658(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       GPUMaterialParameter;                                     // 0x0660(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 GridBaseMesh;                                             // 0x0668(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterial*                                   GridBaseMaterial;                                         // 0x0670(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       GridMaterialParameter;                                    // 0x0678(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterial*                                   WaypointMeshMaterial;                                     // 0x0680(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              POITargetTraceLength;                                     // 0x0688(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   MainViewTargetSize;                                       // 0x068C(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              ZoomSpeedModifierTuning;                                  // 0x0694(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       DistortionRadiusParameter;                                // 0x0698(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DistortionRadiusMultiplier;                               // 0x06A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x06A4(0x0004) MISSED OFFSET
	struct FName                                       DistortionRadiusMaskParameter;                            // 0x06A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DistortionRadiusMaskMultiplier;                           // 0x06B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x06B4(0x0004) MISSED OFFSET
	struct FName                                       HologramDistortionParameter;                              // 0x06B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HologramDistortionMultiplier;                             // 0x06C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x06C4(0x0004) MISSED OFFSET
	TArray<struct FZoneMapDynamicPOIEntry>             DynamicMapPOITypes;                                       // 0x06C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UClass*                                      DynamicPOIClass;                                          // 0x06D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MiniMapScale;                                             // 0x06E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MiniMapPitch;                                             // 0x06E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x06E8(0x0004) MISSED OFFSET
	struct FVector                                     MiniMap2DScreenOffset;                                    // 0x06EC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   MiniMapRenderCoordinatesOffset;                           // 0x06F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              MiniMapOcclusionScale;                                    // 0x0700(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MiniMap2DOcclusionScale;                                  // 0x0704(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FIntPoint                                   MiniMapTargetSize;                                        // 0x0708(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	TEnumAsByte<EBlendMode>                            MiniMapBlendMode;                                         // 0x0710(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0711(0x0003) MISSED OFFSET
	struct FVector2D                                   MiniMapHUDScale;                                          // 0x0714(0x0008) (Edit, IsPlainOldData)
	bool                                               bDeferLevelMapSetState;                                   // 0x071C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bDeferMapListSetup;                                       // 0x071D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x2];                                       // 0x071E(0x0002) MISSED OFFSET
	class USceneComponent*                             ZoneMapRootComponent;                                     // 0x0720(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USpringArmComponent*                         SpringArm;                                                // 0x0728(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USpringArmComponent*                         MinimapSpringArm;                                         // 0x0730(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             PlanetRootComponent;                                      // 0x0738(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             GalaxyRootComponent;                                      // 0x0740(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UClass*                                      MissionIconClass;                                         // 0x0748(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bHideMissionAreaWaypoint;                                 // 0x0750(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x3];                                       // 0x0751(0x0003) MISSED OFFSET
	TWeakObjectPtr<class UZoneMapData>                 LevelData;                                                // 0x0754(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x075C(0x0004) MISSED OFFSET
	class UZoneMapMeshData*                            LevelMeshData;                                            // 0x0760(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UZoneMapMeshData*>                    AdditionalLevelMeshData;                                  // 0x0768(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	class UClass*                                      PlanetClass;                                              // 0x0778(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UPlanetData>                  PlanetData;                                               // 0x0780(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UZoneMapData>                 PlayerLevel;                                              // 0x0788(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class UPlanetData>                  PlayerPlanet;                                             // 0x0790(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FZoneMapIconInfo>                    MapDynamicMissionIcons;                                   // 0x0798(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FZoneMapIconInfo>                    MapStaticMissionIcons;                                    // 0x07A8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FZoneMapIconInfo>                    MapDynamicChallengeIcons;                                 // 0x07B8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FZoneMapIconInfo>                    MapStaticChallengeIcons;                                  // 0x07C8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FZoneMapIconInfo>                    MapDynamicIcons;                                          // 0x07D8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FZoneMapIconInfo>                    MapStaticIcons;                                           // 0x07E8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FZoneMapIconInfo>                    MapPlayerIcons;                                           // 0x07F8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class AOakZoneMapIcon_POI*>                 MapExternalPOIs;                                          // 0x0808(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	EGbxMenuInputDevice                                InputDevice;                                              // 0x0818(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData14[0x3];                                       // 0x0819(0x0003) MISSED OFFSET
	float                                              POISelectionDistance;                                     // 0x081C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      FocusedPOI;                                               // 0x0820(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              FocusedPOIDistanceRatio;                                  // 0x0828(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	EZoneMapMovementMode                               MovementMode;                                             // 0x082C(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bDisableMovementInput;                                    // 0x082D(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData15[0x2];                                       // 0x082E(0x0002) MISSED OFFSET
	float                                              ZoomInAxis;                                               // 0x0830(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ZoomOutAxis;                                              // 0x0834(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              LeftStickAxisX;                                           // 0x0838(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              LeftStickAxisY;                                           // 0x083C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              RightStickAxisX;                                          // 0x0840(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              RightStickAxisY;                                          // 0x0844(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              AxisDeadzone;                                             // 0x0848(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              POIMovementSpeedScale;                                    // 0x084C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData16[0x8];                                       // 0x0850(0x0008) MISSED OFFSET
	struct FVector                                     TransformTarget;                                          // 0x0858(0x000C) (BlueprintVisible, Transient, IsPlainOldData)
	float                                              RotationYawTarget;                                        // 0x0864(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              RotationPitchTarget;                                      // 0x0868(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              InterpolationAlpha;                                       // 0x086C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ScaleValue;                                               // 0x0870(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ScaleValueTarget;                                         // 0x0874(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     TargetSpawnScaleValue;                                    // 0x0878(0x000C) (BlueprintVisible, Transient, IsPlainOldData)
	struct FVector                                     LastPlayerLocation;                                       // 0x0884(0x000C) (BlueprintVisible, Transient, IsPlainOldData)
	bool                                               PlayerMoved;                                              // 0x0890(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData17[0x7];                                       // 0x0891(0x0007) MISSED OFFSET
	TArray<struct FZoneMapLevelMeshInfo>               LevelMapMeshs;                                            // 0x0898(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class UStaticMeshComponent*>                LevelMapMeshComponents;                                   // 0x08A8(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<struct FPlayerIconInfo>                     PlayerIconMeshs;                                          // 0x08B8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	class UStaticMeshComponent*                        GridMeshComponent;                                        // 0x08C8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        GalaxyMeshComponent;                                      // 0x08D0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    GridDMI;                                                  // 0x08D8(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UMaterialInstanceDynamic*>            LevelMapDMIs;                                             // 0x08E0(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	int                                                LastLevelMapMeshCount;                                    // 0x08F0(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	int                                                LastLevelMapDMICount;                                     // 0x08F4(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UMaterialInstanceDynamic*>            ZoneViewLevelMapDMIs;                                     // 0x08F8(0x0010) (BlueprintVisible, ZeroConstructor, Transient)
	int                                                LastZoneViewLevelMapDMICount;                             // 0x0908(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bLevelMeshDataLoaded;                                     // 0x090C(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData18[0x3];                                       // 0x090D(0x0003) MISSED OFFSET
	class UMaterialInstanceDynamic*                    PostProcessDMI;                                           // 0x0910(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    WaypointPathDMI;                                          // 0x0918(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class USplineComponent*                            WaypointSpline;                                           // 0x0920(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UProceduralMeshComponent*                    WaypointMesh;                                             // 0x0928(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextureRenderTarget2D*                      FogOfDiscoveryTexture;                                    // 0x0930(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	class UFogOfDiscoveryComponent*                    FogOfDiscoveryComponent;                                  // 0x0938(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneCaptureComponent2D*                    SceneCapture_MainView;                                    // 0x0940(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneCaptureComponent2D*                    SceneCapture_MiniMap;                                     // 0x0948(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTextureRenderTarget2D*                      ZoneMapRenderTarget;                                      // 0x0950(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UTextureRenderTarget2D*                      MinimapRenderTarget;                                      // 0x0958(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    ZoneMapDisplayMaterialInstance;                           // 0x0960(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     ZoneMapTraceLocation;                                     // 0x0968(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	bool                                               ZoneMapTraceHasHit;                                       // 0x0974(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData19[0x3];                                       // 0x0975(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AOakZoneMapIcon_POI>          CurrentWaypointPOI;                                       // 0x0978(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     ZoneMapMeshOrigin;                                        // 0x0980(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	struct FBox                                        ZoneMapMeshExtent;                                        // 0x098C(0x001C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	float                                              MaxHeight;                                                // 0x09A8(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ZoomInputEased;                                           // 0x09AC(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     ZoomPushTransformOffset;                                  // 0x09B0(0x000C) (BlueprintVisible, Transient, IsPlainOldData)
	struct FVector                                     CachedCameraLocation;                                     // 0x09BC(0x000C) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData)
	bool                                               AdjustPivotAndTargetLength;                               // 0x09C8(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bDisableMenuNotification;                                 // 0x09C9(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bSanctuaryIsHighlighted;                                  // 0x09CA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData20[0x5];                                       // 0x09CB(0x0005) MISSED OFFSET
	class UOakProfile*                                 OakProfile;                                               // 0x09D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FVector2D                                   ZoneMapOffset_4way;                                       // 0x09D8(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector2D                                   ZoneMapOffset_Vertical;                                   // 0x09E0(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData21[0x10];                                      // 0x09E8(0x0010) MISSED OFFSET
	bool                                               bDisableAutoPOI;                                          // 0x09F8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData22[0x7];                                       // 0x09F9(0x0007) MISSED OFFSET
	TSoftObjectPtr<class AActor>                       TrackedTarget;                                            // 0x0A00(0x0028) (Transient)
	TSoftObjectPtr<class UTravelStationData>           FocusedStation;                                           // 0x0A28(0x0028) (Transient)
	struct FZoneMapIconInfo                            TargetInfo;                                               // 0x0A50(0x0270) (Transient)
	TArray<struct FZoneMapIconInfo>                    CycledWaypoints;                                          // 0x0CC0(0x0010) (ZeroConstructor, Transient)
	TArray<class UPrimitiveComponent*>                 POIComponentPool;                                         // 0x0CD0(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData23[0x48];                                      // 0x0CE0(0x0048) MISSED OFFSET
	TArray<TWeakObjectPtr<class USceneComponent>>      CurrentLevelMissionIcons;                                 // 0x0D28(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<TWeakObjectPtr<class USceneComponent>>      CurrentLevelChallengeIcons;                               // 0x0D38(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData24[0x8];                                       // 0x0D48(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class OakGame.ZoneMapViewer");
		return ptr;
	}


	void ZoneMapFocusedPOIChanged__DelegateSignature(class AActor* NewlyFocusedPOI);
	void UpdateTransforms(float DeltaSeconds);
	void UpdatePOISphereRadii();
	void UpdatePlayerIcons();
	void UpdateMiniMapTransforms(float DeltaSeconds);
	void UpdateGalaxyTransforms(float DeltaSeconds);
	void UpdateDMIs(bool bForceUpdate);
	void UpdateCamera(float DeltaSeconds);
	void UnfogMapIconObject(class UObject* IconObject, float Radius, float Height);
	void TraceForPOI(const struct FVector& StartPos, const struct FVector& Direction, struct FVector* OutZoneMapTraceLocation, bool* OutZoneMapTraceHasHit);
	class AOakZoneMapIcon_POI* STATIC_SpawnZoneMapIcon(class USceneComponent* IconParentComponent, const struct FZoneMapIconInfo& IconInfo, class UZoneMapPOITypeData* POIType);
	class UMapIconAnchor* SpawnZoneMapAnchorAndIcon(class USceneComponent* IconParentComponent, class UOakZoneMapIcon* NewZoneMapIcon, class UZoneMapPOITypeData* POIType, struct FZoneMapIconInfo* IconInfo);
	void ShowZoneMap();
	void ShowMenuList(bool bShow);
	void SetWaypoint();
	void SetVisibleRadius(float Alpha, float RadiusAlpha, float Distortion);
	void SetVisible(bool bVisible);
	void SetPivotToActorWorldLocation(const struct FVector& WorldLocation);
	void ResetPropertiesForZoneChange();
	void ResetMapOrientation(bool bInstant, bool bResetOrientation, bool bSnapToPlayer);
	void ResetCycledWaypointIndex();
	void RemoveMapIconObject(class UObject* IconObject);
	void RemoveMapIcon(const struct FZoneMapIconInfo& IconInfo);
	void RemoveActorsFromZoneMapView();
	void RefreshMapIconObject(class UObject* IconObject);
	void OnZoneMapMeshDataLoaded();
	void OnPlayerSaveGameLoaded();
	void OnPlayerProfileChanged();
	void OnPlanetClassLoaded();
	void OnPlanetAddOnPOIsLoaded();
	void OnMinimapIconComponentUpdateTracking(class UOakMinimapIconComponent* MinimapIconComponent);
	void OnMinimapIconComponentEndTracking(class UOakMinimapIconComponent* MinimapIconComponent);
	void OnMinimapIconComponentBeginTracking(class UOakMinimapIconComponent* MinimapIconComponent);
	void NotifyTransitioning(bool bTransitioning);
	void NotifyPOIZoneHighlighted(class UObject* POIIcon, class UZoneMapData* POIZone, bool bSelected);
	void NotifyPOIPlanetHighlighted(class UObject* POIIcon, class UPlanetData* POIPlanet, bool bSelected);
	void NotifyPOIIconHighlighted(class UObject* POIIcon, const struct FZoneMapPOIEntry& POIData, bool bSelected);
	void NotifyMissionWaypointIconHighlighted(class UObject* WaypointIcon, const struct FZoneMapMissionWaypointEntry& WaypointData, bool bSelected);
	void NotifyDeployedVehicleHighlighted(class UObject* POIIcon, class AOakVehicle* TargetedVehicle, bool bSelected);
	void NotifyChallengeIconHighlighted(class UObject* ChallengeIcon, const struct FZoneMapChallengeEntry& ChallengeData, bool bSelected);
	void LoadPlanetForLevel(class UPlanetData* PlanetToLoad);
	void LoadMapForLevel(class UZoneMapData* ZoneMapToLoad, bool bSetAsCurrent);
	bool K2_UpdateTransforms(float DeltaSeconds);
	bool K2_UpdatePOISphereRadii();
	bool K2_UpdateMiniMapTransforms(float DeltaSeconds);
	void K2_SetCustomWaypoint();
	void K2_ResetAxisInput();
	void K2_PostLoadedPlanetClass();
	void K2_PostLoadedMapMesh();
	void K2_OnZoneMapShown();
	void K2_OnZoneMapHidden();
	void K2_OnRemoveIcon(class AOakZoneMapIcon_POI* IconActor, const struct FZoneMapIconInfo& IconInfo);
	void K2_OnMiniMapShown();
	void K2_OnMiniMapHidden();
	void K2_OnEchoOpened();
	void K2_OnEchoClosed();
	void K2_OnAddIcon(class AOakZoneMapIcon_POI* SpawnedIcon, struct FZoneMapIconInfo* IconInfo);
	void K2_HandleVisibilityChanged(bool bVisible);
	bool K2_HandleInputAction(const struct FName& InputAction);
	bool K2_HandleAxisInput(const struct FName& InputAction, float AxisValue);
	void K2_GotoPlanetMap(class UPlanetData* InPlanetData);
	void K2_GotoParentMap();
	void K2_GotoLevelMap(class UZoneMapData* InLevelData);
	bool K2_GetRotationYawTarget(float DeltaSeconds, float YawMin, float YawMax);
	bool K2_GetRotationPitchTarget(float DeltaSeconds);
	bool K2_GetNewTransformTarget(float DeltaSeconds, const struct FVector& TransformMin, const struct FVector& TransformMax, float TransformBuffer, float GlobalTransformScale, float ZoomDelta);
	bool K2_GetNewScaleTarget(float DeltaSeconds, float* ZoomDelta);
	void K2_FocusOnTransform(const struct FTransform& Transform);
	void K2_FocusOnPlanet(class UPlanetData* Planet);
	void K2_FocusOnLevel(class UZoneMapData* Level);
	void K2_CenterOnPlayer();
	bool IsVisible();
	bool IsViewingCurrentLevel();
	bool IsCurrentLevelLoaded();
	void InitializeZoneMapMesh();
	void InitializeZoneMapForLevel();
	void InitializeGalaxyMapMesh();
	void InitializeCompassAndGrid();
	void HideZoneMap();
	class UZoneMapMeshData* GetZoneMeshData();
	void GetZoneChallenges(class UChallengeCategoryData* ChallengeCategory, TArray<struct FZoneMapChallengeQuery>* ZoneChallenges);
	struct FZoneMapIconInfo GetTargetInfo();
	void GetNewTransformTargetNative(float DeltaSeconds, const struct FVector& TransformMin, const struct FVector& TransformMax, float TransformBuffer, float GlobalTransformScale, float ZoomDelta);
	void GetNewScaleTargetNative(float DeltaSeconds, float ScaleMin, float ScaleMax, float ScaleRate, float* ZoomDelta);
	void GetNewRotationYawTargetNative(float DeltaSeconds, float YawMin, float YawMax);
	void GetNewRotationPitchTargetNative(float DeltaSeconds);
	class UTexture* GetMiniMapTexture();
	EZoneMapViewerState GetMapState();
	class UTexture* GetMainViewTexture();
	void GatherZoneMapDecorationActors(TArray<class AActor*>* Actors);
	void EchoDeviceOpened();
	void EchoDeviceClosed();
	void DeferredSetStatePlanet();
	void DeferredSetStateLevel();
	void DeferredRegistrationWithMissionTracker();
	void DeferredRegistrationWithIconTracker();
	void DeferredRegistrationWithFriendStatusSystem();
	void DeferredRegistrationWithChallengeManager();
	void CheckAndAdjustCaptureTextureSize();
	void ChallengesRegistered();
	void AddPOIIcons();
	void AddPlayerIcons(bool AllPlayers);
	class UMapIconAnchor* AddMapIcon(class UOakZoneMapIcon* NewZoneMapIcon, class UZoneMapPOITypeData* POIType, struct FZoneMapIconInfo* IconInfo);
	void AddFriendIcons();
	void AddDecorationMeshs();
	void AddChallengeIcons();
	void AddActorToZoneMapView(class AActor* NewViewActor);
};


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
