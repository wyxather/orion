#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// ENUMS
//---------------------------------------------------------------------------------------------------------------------

enum class ENOTICE_TYPE : uint8
{
	LEVEL_CHANGE_START             = 0,
	LEVEL_CHANGE_PRE_COMPLETE      = 1,
	LEVEL_CHANGE_COMPLETE          = 2,
	REFRESH_SPAWN_COMPLETE         = 3,
	CHANGE_DARK_STATE              = 4,
	BATTLE_READY_START             = 5,
	BATTLE_READY                   = 6,
	BATTLE_START                   = 7,
	BATTLE_END                     = 8,
	GAME_OVER                      = 9,
	GAME_OVER_END                  = 10,
	EVENT_START                    = 11,
	EVENT_CONTINUOUS_START         = 12,
	EVENT_END_EARLY                = 13,
	EVENT_END                      = 14,
	FIELDCOMMAND_MENU_OPEN         = 15,
	FIELDCOMMAND_MENU_CLOSE        = 16,
	FIELDCOMMAND_UNIQUE_MENU_OPEN  = 17,
	FIELDCOMMAND_UNIQUE_MENU_CLOSE = 18,
	FIELDCOMMAND_FINISH            = 19,
	FIELDCOMMAND_SWOON_NPC         = 20,
	MAINMENU_OPEN                  = 21,
	MAINMENU_OPEN_END              = 22,
	MAINMENU_CLOSE                 = 23,
	MAINMENU_CLOSE_END             = 24,
	PER_MINUTE                     = 25,
	UPDATE_MONEY                   = 26,
	START_MAIN_STORY               = 27,
	UPDATE_MAIN_STORY              = 28,
	COMPLETE_MAIN_STORY            = 29,
	UPDATE_MAIN_STORY_TASK         = 30,
	UPDATE_SUB_STORY               = 31,
	COMPLETE_SUB_STORY             = 32,
	OPEN_TREASURE_BOX              = 33,
	ACQUISITION_ABILITY            = 34,
	ACQUISITION_ADVANCED_ABILITY   = 35,
	GET_ITEM                       = 36,
	RETURN_TO_TITLE                = 37,
	START_EVENT_END_FADE_IN        = 38,
	START_TIMEZONE_CHANGE          = 39,
	UPDATE_IS_ENTER_BAR            = 40,
	ON_EVENT_SPEED_UP              = 41,
	ON_CHANGE_BATTLE_SPEED         = 42,
	ON_SAVED_SAVE_GAME             = 43,
	ON_SAVED_SYSTEM_DATA           = 44,
	ON_LOADED_SAVE_GAME            = 45,
	REFRESHED_PARTY_CHARACTER      = 46,
	REFRESHED_FOLLOW_CHARACTER     = 47,
	ON_OPTION_APPLY                = 48,
	BEGIN_LINER_SHIP               = 49,
	ON_BREAK_ENEMY                 = 50,
	ON_BOOST                       = 51,
	ON_HIT_DAMAGE                  = 52,
	ON_JOIN_PLAYER_CHARACTER       = 53,
	ON_CREATED_PLAYER_CONTOLLER    = 54,
	ON_OPEN_ENDCARD                = 55,
	ON_OPEN_ENDCARD_EPILOGUE       = 56,
	ON_TITLE_SCENE                 = 57,
	ON_START_FIELD_MAIN_SEQ        = 58,
	ON_STORY_RECORD_OPEN           = 59,
	ON_SUB_STORY_RECORD_OPEN       = 60,
	ON_STORY_RECORD_RE_OPEN        = 61,
	ON_ABILITY_MENU_OPEN           = 62,
	ON_JOB_MENU_OPEN               = 63,
	ON_EQUIP_MENU_OPEN             = 64,
	ON_WORLD_MAP_OPEN              = 65,
	ON_ITEM_MENU_OPEN              = 66,
	ON_PARTY_MEMBER_CHANGE_MENU_OPEN = 67,
	ON_MUSIC_RECOD_OPEN            = 68,
	ON_INFORMATION_FILED_COMMAND_OPEN = 69,
	CHANGE_INPUT_MODE              = 70,
	BATTLE_WIPE_START_IN_FINISH    = 71,
	BATTLE_WIPE_START_OUT_FINISH   = 72,
	BATTLE_WIPE_END_IN_FINISH      = 73,
	BATTLE_WIPE_END_OUT_FINISH     = 74,
	ON_CHANGE_HOLY_TORCH_STATE     = 75,
	MAX_NUM                        = 76,
	ENOTICE_MAX                    = 77,
};

enum class EBalloonType : uint8
{
	NORMAL                         = 0,
	ANGER                          = 1,
	THINKING                       = 2,
	DEEP_THINKING                  = 3,
	DEEP_THINKING_FIXED_TEXT       = 4,
	EBalloonType_MAX               = 5,
};

enum class EBalloonEventType : uint8
{
	START_OPEN_ANIM                = 0,
	FINIHS_OPEN_ANIM               = 1,
	START_CLOSE_ANIM               = 2,
	FINIHS_CLOSE_ANIM              = 3,
	EVENT_SKIP                     = 4,
	EBalloonEventType_MAX          = 5,
};

enum class EREQUEST_RESULT : uint8
{
	EFAILED                        = 0,
	ESUCCESS                       = 1,
	EREQUEST_MAX                   = 2,
};

enum class ELevelTransitionNotice : uint8
{
	NONE                           = 0,
	START_CHANGE_LEVEL             = 1,
	START_FADE_OUT                 = 2,
	END_FADE_OUT                   = 3,
	START_UNLOAD_LEVEL             = 4,
	END_UNLOAD_LEVEL               = 5,
	START_LEVEL_LOAD               = 6,
	END_LEVEL_LOAD                 = 7,
	PREV_FADE_IN_ENTRY             = 8,
	PREV_FADE_IN_EXIT              = 9,
	START_FADE_IN                  = 10,
	ENDT_FADE_IN                   = 11,
	END_CHANGE_LEVEL               = 12,
	ELevelTransitionNotice_MAX     = 13,
};

enum class ELEVEL_TYPE : uint8
{
	FIELD                          = 0,
	BATTLE                         = 1,
	MAX_NUM                        = 2,
	ELEVEL_MAX                     = 3,
};

enum class ELevelLoaderNotice : uint8
{
	NONE                           = 0,
	LOADED                         = 1,
	UNLOADED                       = 2,
	SHOWN                          = 3,
	HIDDEN                         = 4,
	ELevelLoaderNotice_MAX         = 5,
};

enum class ETUTORIAL_TYPE : uint8
{
	ENONE                          = 0,
	EOPERATION_GUIDE               = 1,
	ERADAR_MAP                     = 7,
	EBATTLE_BREAK                  = 3,
	EBATTLE_BOOST                  = 4,
	EABILITY_CRITICAL              = 5,
	EFIELD_COMMAND_DAYTIME_2       = 9,
	EFIELD_COMMAND_DAYTIME_1       = 8,
	EFIELD_COMMAND_NIGHT           = 12,
	EFIELD_COMMAND_DAYTIME_SIN     = 19,
	EFIELD_COMMAND_NIGHT_SIN       = 20,
	EFIELD_COMMAND_DAYTIME_SHO     = 21,
	EFIELD_COMMAND_NIGHT_SHO       = 22,
	EFIELD_COMMAND_DAYTIME_KAR     = 23,
	EFIELD_COMMAND_NIGHT_KAR       = 24,
	EFIELD_COMMAND_DAYTIME_GAK     = 25,
	EFIELD_COMMAND_NIGHT_GAK       = 26,
	EFIELD_COMMAND_DAYTIME_KUS     = 27,
	EFIELD_COMMAND_NIGHT_KUS       = 28,
	EFIELD_COMMAND_DAYTIME_ODO     = 29,
	EFIELD_COMMAND_NIGHT_ODO       = 30,
	EFIELD_COMMAND_DAYTIME_TOU     = 31,
	EFIELD_COMMAND_NIGHT_TOU       = 32,
	EFIELD_COMMAND_REVEAL_BATTLE   = 18,
	ESWORDMAN_LEARN_SKILL          = 11,
	ESPECIAL_ACTION_SIN            = 33,
	ESPECIAL_ACTION_SHO            = 34,
	ESPECIAL_ACTION_KAR            = 35,
	ESPECIAL_ACTION_GAK            = 36,
	ESPECIAL_ACTION_KUS            = 37,
	ESPECIAL_ACTION_ODO            = 38,
	ESPECIAL_ACTION_TOU            = 39,
	ECAPTURE_SYSTEM                = 40,
	ESTYLE_CHANGE_FENCER           = 14,
	ESTYLE_CHANGE_PRIEST           = 45,
	ESTYLE_CHANGE_MERCHANT         = 46,
	ESTYLE_CHANGE_HUNTER           = 47,
	ESTYLE_CHANGE_PROFESSOR        = 48,
	ESTYLE_CHANGE_ALCHEMIST        = 49,
	ESTYLE_CHANGE_DANCER           = 15,
	ESTYLE_CHANGE_THIEF            = 50,
	ETIMEZONE_CHANGE               = 2,
	EACTION_CANOE                  = 6,
	EMULTIPLE_STORIES              = 43,
	ECOMMERCE                      = 44,
	ESAVE                          = 17,
	ECONNECTION_REPAIR             = 13,
	ECOUPLING_STORY_GAK            = 109,
	ECOUPLING_STORY_ODO            = 110,
	ECOUPLING_STORY_SIN            = 111,
	ECOUPLING_STORY_KUS            = 112,
	EMAIN_STORY                    = 52,
	ESUB_STORY                     = 53,
	EGET_ABILITY                   = 54,
	EGET_ABILITY_PROMPT            = 55,
	EEQUIP_SUPPORT_ABILITY         = 56,
	EEQUIP_SUPPORT_ABILITY_PROMPT  = 57,
	ECHANGE_BATTLE_JOB             = 58,
	ECHANGE_BATTLE_JOB_POMPT       = 59,
	EADD_PARTY                     = 60,
	EADD_PARTY_POMPT               = 61,
	EFAST_TRAVEL                   = 62,
	EBATTLE_CONDITION              = 63,
	ETIPS                          = 64,
	ETIPS_2                        = 65,
	EPROLOGUE_THEATER              = 66,
	ESKIP_PROLOGUE_KEN             = 67,
	ESKIP_PROLOGUE_SIN             = 68,
	ESKIP_PROLOGUE_SHO             = 69,
	ESKIP_PROLOGUE_KAR             = 70,
	ESKIP_PROLOGUE_GAK             = 71,
	ESKIP_PROLOGUE_KUS             = 72,
	ESKIP_PROLOGUE_ODO             = 73,
	ESKIP_PROLOGUE_TOU             = 74,
	EBUSINESS_RECOURD              = 75,
	EMUSIC_PLAYER                  = 76,
	ESHIP                          = 77,
	EPARTY_MEMBER_CHANGE           = 78,
	ETALENT_SUPPORT                = 79,
	ETALENT_SUPPORT_ODO            = 80,
	EST_GAGE                       = 81,
	ELURE_PROMPT                   = 82,
	EENDCARD_KEN                   = 100,
	EENDCARD_KAR                   = 101,
	EENDCARD_KUS                   = 102,
	EENDCARD_SHO                   = 103,
	EENDCARD_SIN                   = 104,
	EENDCARD_GAK                   = 105,
	EENDCARD_TOU                   = 106,
	EENDCARD_ODO                   = 107,
	EENDCARD_TRUE_END              = 108,
	EFIRST_SELECT_CHARACTER        = 113,
	EAWAKE                         = 114,
	EBATTLEJOB_GUILD               = 115,
	ETUTORIAL_MAX                  = 116,
};

enum class EWidgetAnimationGroup : uint8
{
	DefaultGroup                   = 0,
	EffectGroup                    = 1,
	EWidgetAnimationGroup_MAX      = 2,
};

enum class EWorldMapZoomType : uint8
{
	ZOOM_NEAR                      = 0,
	ZOOM_MIDDLE                    = 1,
	ZOOM_FAR                       = 2,
	ZOOM_PLAYERSELECT              = 3,
	ZOOM_MAX                       = 4,
};

enum class EWorldMapEffectType : uint8
{
	EDarkEffect                    = 0,
	ESacredFire                    = 1,
	ESacredFireLine                = 2,
	EWorldMapEffectType_MAX        = 3,
};

enum class EWorldMapGlobeState : uint8
{
	ENone                          = 0,
	EInPreparation                 = 1,
	EControllable                  = 2,
	EInAutoControll                = 3,
	EWorldMapGlobeState_MAX        = 4,
};

enum class EWorldMapState : uint8
{
	None                           = 0,
	InSetup                        = 1,
	FinishSetup                    = 2,
	Opening                        = 3,
	Opened                         = 4,
	Waiting                        = 5,
	Closing                        = 6,
	Closed                         = 7,
	EWorldMapState_MAX             = 8,
};

enum class EWorldMapMode : uint8
{
	WorldMap                       = 0,
	PlayerSelect                   = 1,
	EWorldMapMode_MAX              = 2,
};

enum class EPlayableCharacterID : uint8
{
	ENONE                          = 0,
	EFENCER                        = 1,
	EHUNTER                        = 2,
	EALCHEMIST                     = 3,
	EMERCHANT                      = 4,
	EPRIEST                        = 5,
	EPROFESSOR                     = 6,
	ETHIEF                         = 7,
	EDANCER                        = 8,
	EGUEST_000                     = 9,
	EGUEST_001                     = 10,
	EGUEST_002                     = 11,
	EGUEST_003                     = 12,
	EGUEST_004                     = 13,
	EGUEST_005                     = 14,
	EGUEST_006                     = 15,
	EGUEST_007                     = 16,
	EGUEST_008                     = 17,
	EGUEST_009                     = 18,
	EGUEST_010                     = 19,
	EGUEST_011                     = 20,
	EGUEST_012                     = 21,
	EGUEST_013                     = 22,
	EGUEST_014                     = 23,
	EGUEST_015                     = 24,
	EGUEST_016                     = 25,
	EGUEST_017                     = 26,
	EGUEST_018                     = 27,
	EGUEST_019                     = 28,
	EGUEST_020                     = 29,
	EGUEST_021                     = 30,
	EGUEST_022                     = 31,
	EGUEST_023                     = 32,
	EGUEST_024                     = 33,
	EGUEST_025                     = 34,
	EMAX                           = 35,
	EPlayableCharacterID_MAX       = 36,
};

enum class EPARTY_SPLIT_CLOSE_REASON : uint8
{
	ENone                          = 0,
	ECanceled                      = 1,
	ECompleted                     = 2,
	EPARTY_SPLIT_CLOSE_MAX         = 3,
};

enum class EPARTY_SPLIT_PLACEMENT_POSITION : uint8
{
	EMain                          = 0,
	EWilderness                    = 1,
	EDesert                        = 2,
	EIsland                        = 3,
	EMountain                      = 4,
	EPARTY_SPLIT_PLACEMENT_MAX     = 5,
};

enum class ESESSION_SE_TYPE : uint8
{
	ESESSION_SE_NONE               = 0,
	ESESSION_SE_LUTE               = 1,
	ESESSION_SE_HARP               = 2,
	ESESSION_SE_FLUTE              = 3,
	ESESSION_SE_DJEMBE             = 4,
	ESESSION_SE_TAMBOURINE         = 5,
	ESESSION_SE_TYPE_MAX           = 6,
	ESESSION_SE_MAX                = 7,
};

enum class ECOMMAND_SEALING_TYPE : uint8
{
	EMYTH_BATTLE_EX_ONLY           = 0,
	ETAME_MONSTER_ONLY             = 1,
	ELEGEND_AKUTA_ONLY             = 2,
	EPOTENTIALITY_ACTION_ONLY      = 3,
	EDAMAGE_ACTION_SEAL            = 4,
	ERECOVERY_ACTION_SEAL          = 5,
	ENORMAL_ATTACK_SEAL            = 6,
	EBASE_JOB_SEAL                 = 7,
	EBACKPACK_SEAL                 = 8,
	EREVIVE_ACTION_SEAL            = 9,
	EMAGIC_GAG_SEAL                = 10,
	EMAGIC_SILENCE_SEAL            = 11,
	EPHYSICS_ATTACK_SEAL           = 12,
	EMAGIC_ATTACK_SEAL             = 13,
	EMONSTER_MENU_DISABLE          = 14,
	ESEALING_TYPE_MAX              = 15,
	ECOMMAND_SEALING_MAX           = 16,
};

enum class EACTION_COMMAND_USEABLE : uint8
{
	EUSEABLE                       = 0,
	EDISABLE                       = 1,
	ECOMMAND_SEAL                  = 2,
	EACTION_COMMAND_MAX            = 3,
};

enum class EDISMANTLING_EFFECT_TYPE : uint8
{
	ENONE                          = 0,
	EHP_RECOVERY                   = 1,
	ESP_RECOVERY                   = 2,
	EBP_RECOVERY                   = 3,
	EBUFF                          = 4,
	EMAX                           = 5,
	EDISMANTLING_EFFECT_MAX        = 6,
};

enum class EABILITY_COST_TYPE : uint8
{
	ENONE                          = 0,
	EMP                            = 1,
	EHP                            = 2,
	EBP                            = 3,
	ESP                            = 4,
	EMP_RATIO                      = 5,
	EMONEY                         = 6,
	ENUM                           = 7,
	EINVENTOR                      = 8,
	EABILITY_COST_MAX              = 9,
};

enum class EABILITY_USE_TYPE : uint8
{
	EALWAYS                        = 0,
	EBATTLE_ONLY                   = 1,
	EFIELD_ONLY                    = 2,
	ESUPPORT                       = 3,
	EABILITY_USE_MAX               = 4,
};

enum class EABILITY_TYPE : uint8
{
	EPHYSICS                       = 0,
	EMAGIC                         = 1,
	EHP_RECOVERY                   = 2,
	EMP_RECOVERY                   = 3,
	EREVIVE                        = 4,
	ETAME_MONSTER                  = 5,
	EBUFF                          = 6,
	EDEBUFF                        = 7,
	EOTHER                         = 8,
	EREVIVE_RECOVERY               = 9,
	ESTEAL_ITEM                    = 10,
	ESTEAL_MONEY                   = 11,
	EBRIBE                         = 12,
	ESUMMON                        = 13,
	ESCATTER                       = 14,
	ESEAL_ACTION                   = 15,
	EABILITY_MAX                   = 16,
};

enum class EATTRIBUTE_TYPE : uint8
{
	ENONE                          = 0,
	EFIRE                          = 1,
	EICE                           = 2,
	ETHUNDER                       = 3,
	EWIND                          = 4,
	ELIGHT                         = 5,
	EDARK                          = 6,
	EATTRIBUTE_MAX                 = 7,
};

enum class EAchievementStatus : uint8
{
	NONE                           = 0,
	LOCKED                         = 1,
	UNLOCKED                       = 2,
	EAchievementStatus_MAX         = 3,
};

enum class EBOOST_LEVEL : uint8
{
	NONE                           = 0,
	BOOST_LEVEL_1                  = 1,
	BOOST_LEVEL_2                  = 2,
	BOOST_LEVEL_3                  = 3,
	EBOOST_MAX                     = 4,
};

enum class EAchievementType : uint8
{
	NONE_ACHIVE                    = 0,
	FIELD_COMMAND_SUCCESS_COUNT    = 1,
	FIELD_COMMAND_INFORMATION_SUCCESS_COUNT = 2,
	FOLLOWING_NPC_COUNT            = 3,
	MAIN_STORY_CLEAR               = 4,
	MAIN_STORY_CLEAR_COUNT         = 5,
	SUB_STORY_CLEAR                = 6,
	SUB_STORY_CLEAR_COUNT          = 7,
	ACQUISITION_ABILITY            = 8,
	ACQUISITION_ABILITY_COUNT      = 9,
	ACQUISITION_DEVINE_ABILITY_COUNT = 10,
	ACQUISITION_SUPPORT_ABILITY_COUNT = 11,
	ACQUISITION_ADVANCED_ABILITY_COUNT = 12,
	GET_ITEM                       = 13,
	GET_ITEM_COUNT                 = 14,
	GET_JOB_ITEM_COUNT             = 15,
	GET_SPITEM_COUNT_BY_SPITEM_TYPE = 16,
	VISIT_LEVEL_COUNT              = 17,
	LINER_SHIP_COUNT               = 18,
	JOINED_PLAYER_CHARACTER_COUNT  = 19,
	USED_BOOST_ATTACK_COUNT        = 20,
	BREAK_COUNT                    = 21,
	DAMAGE_VALUE                   = 22,
	MAIN_STORY_CLEAR_ALL_CHAPTER   = 23,
	LAST_CHAPTER_CLEAR             = 24,
	EPILOGUE_CLEAR                 = 25,
	COUPLE_STORY_CLEAR             = 26,
	SWOON_NPC_UNIQUE_COUNT         = 27,
	ACHIEVEMENT_ALL_CLEAR          = 28,
	EX_BOSS_CLEAR                  = 29,
	EAchievementType_MAX           = 30,
};

enum class EAcqImageResourceType : uint8
{
	Texture                        = 0,
	Material                       = 1,
	EAcqImageResourceType_MAX      = 2,
};

enum class EMANAGER_CREATE_PHASE : uint8
{
	ULTRA_FIRST                    = 0,
	FIRST                          = 1,
	IN_GAME                        = 2,
	ANY_TIME                       = 3,
	EMANAGER_CREATE_MAX            = 4,
};

enum class EADDITIVE_ORDER_CATEGORY : uint8
{
	EALL                           = 0,
	ERERAISE                       = 1,
	EFIRST_ATTACK                  = 2,
	ELAST_ATTACK                   = 3,
	ECOUNTER                       = 4,
	EADDITIVE_ORDER_MAX            = 5,
};

enum class EADDITIVE_ORDER_TYPE : uint8
{
	EREFLECTION                    = 0,
	ECOUNTER                       = 1,
	ECHASE_ATTACK                  = 2,
	EDOUBLE_ATTACK                 = 3,
	EREPEAT                        = 4,
	EACTION_COPY                   = 5,
	ERERAISE                       = 6,
	EFIRST_ATTACK                  = 7,
	EENCHANT_ATTRIBUTE             = 8,
	EENEMY_SIGN_OF_BOOST           = 9,
	ELAST_ATTACK                   = 10,
	ECOUNER_ON_DEAD                = 11,
	EDANCER_SONG                   = 12,
	EAUTO_TAME_MONSTER             = 13,
	EADDITIVE_ORDER_MAX            = 14,
};

enum class EBATTLE_ACTION_ORDER_ESTIMATE_TYPE : uint8
{
	ENONE                          = 0,
	ETOP                           = 1,
	EFIRST                         = 2,
	EGUARD                         = 3,
	ELAST                          = 4,
	EAGI_UP                        = 5,
	EAGI_DOWN                      = 6,
	ECOUNT_UP                      = 7,
	ECOUNT_DOWN                    = 8,
	EBUFF_COPY                     = 9,
	EFIRST_PARTY                   = 10,
	ECOUNT_UP_SELF                 = 11,
	EBATTLE_ACTION_ORDER_ESTIMATE_MAX = 12,
};

enum class EACTION_ORDER_TYPE : uint8
{
	ENORMAL                        = 0,
	ETOP                           = 1,
	EFIRST                         = 2,
	EGUARD                         = 3,
	ELAST                          = 4,
	EDELAY                         = 5,
	EBREAK_STYLE                   = 6,
	EBREAK                         = 7,
	ECHARGE_ACTION                 = 8,
	EBREAK_ACT                     = 9,
	ELAST_ACT                      = 10,
	EBRIBE_ACT                     = 11,
	EACTION_ORDER_MAX              = 12,
};

enum class EActivityTaskStatus : uint8
{
	INIT                           = 0,
	START                          = 1,
	COMPLETED                      = 2,
	EActivityTaskStatus_MAX        = 3,
};

enum class EActivityInfoType : uint8
{
	NONE                           = 0,
	MAIN_STORY                     = 1,
	EActivityInfoType_MAX          = 2,
};

enum class EAreaID : uint8
{
	SNOW                           = 0,
	CITY                           = 1,
	SEA                            = 2,
	MOUNTAIN                       = 3,
	DESERT                         = 4,
	ISLAND                         = 5,
	WILDERNESS                     = 6,
	FOREST                         = 7,
	OCEAN                          = 8,
	EAreaID_MAX                    = 9,
};

enum class EBALLOON_TEXT_POS : uint8
{
	ETOP                           = 0,
	EMIDDLE                        = 1,
	EBOTTOM                        = 2,
	EBALLOON_TEXT_MAX              = 3,
};

enum class EEventBalloonDir : uint8
{
	DEFAULT                        = 0,
	UP                             = 1,
	DOWN                           = 2,
	LEFT                           = 3,
	RIGHT                          = 4,
	LEFTUP                         = 5,
	LEFTDOWN                       = 6,
	RIGHTUP                        = 7,
	RIGHTDOWN                      = 8,
	UP_CENTER                      = 9,
	EEventBalloonDir_MAX           = 10,
};

enum class EBARMENU_STORY_PROGRESSTYPE : uint8
{
	ENONE                          = 0,
	EPROGRESS                      = 1,
	EINTERRUPTION                  = 2,
	ECLEARED                       = 3,
	EBARMENU_STORY_MAX             = 4,
};

enum class EBARMENU_STORY_SELECT_ITEM_TYPE : uint8
{
	NOT_PROGRESSIVE                = 0,
	NOT_PROGRESSIVE_NOT_PT         = 1,
	CAN_NOT_START                  = 2,
	PROGRESS                       = 3,
	INTERRUPTION                   = 4,
	INTERRUPTION_NOT_PT            = 5,
	CLEARED                        = 6,
	EBARMENU_STORY_SELECT_ITEM_MAX = 7,
};

enum class EBARMENU_STORY_SELECT_STATE : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	ESELECT                        = 2,
	EDIALOG                        = 3,
	ECHANGE_CLOSE                  = 4,
	ECLOSE                         = 5,
	ETUTORIAL                      = 6,
	EREFRESH                       = 7,
	EBARMENU_STORY_SELECT_MAX      = 8,
};

enum class ESTORY_SELECT_STATE : uint8
{
	ENone                          = 0,
	ESelect_Story                  = 1,
	EOpening_Dialog                = 2,
	ESelected_Story                = 3,
	ESelected_Prologue             = 4,
	ESTORY_SELECT_MAX              = 5,
};

enum class EBATTLE_AI_SUB_STATE : uint8
{
	ESUB_STATE_NONE                = 0,
	ESUB_STATE_01                  = 1,
	ESUB_STATE_02                  = 2,
	ESUB_STATE_03                  = 3,
	ESUB_STATE_04                  = 4,
	ESUB_STATE_05                  = 5,
	ESUB_STATE_06                  = 6,
	ESUB_STATE_07                  = 7,
	ESUB_STATE_08                  = 8,
	ESUB_STATE_09                  = 9,
	ESUB_STATE_10                  = 10,
	ESUB_STATE_11                  = 11,
	ESUB_STATE_12                  = 12,
	ESUB_STATE_13                  = 13,
	ESUB_STATE_14                  = 14,
	ESUB_STATE_15                  = 15,
	ESUB_STATE_16                  = 16,
	ESUB_STATE_17                  = 17,
	ESUB_STATE_18                  = 18,
	ESUB_STATE_19                  = 19,
	ESUB_STATE_20                  = 20,
	ESUB_STATE_MAX                 = 21,
};

enum class EBATTLE_AI_STATE : uint8
{
	EAI_STATE_NONE                 = 0,
	EAI_STATE_01                   = 1,
	EAI_STATE_02                   = 2,
	EAI_STATE_03                   = 3,
	EAI_STATE_04                   = 4,
	EAI_STATE_05                   = 5,
	EAI_STATE_06                   = 6,
	EAI_STATE_07                   = 7,
	EAI_STATE_08                   = 8,
	EAI_STATE_09                   = 9,
	EAI_STATE_10                   = 10,
	EAI_STATE_11                   = 11,
	EAI_STATE_12                   = 12,
	EAI_STATE_13                   = 13,
	EAI_STATE_14                   = 14,
	EAI_STATE_15                   = 15,
	EAI_STATE_16                   = 16,
	EAI_STATE_17                   = 17,
	EAI_STATE_18                   = 18,
	EAI_STATE_19                   = 19,
	EAI_STATE_20                   = 20,
	EAI_STATE_MAX                  = 21,
};

enum class EWEAPON_UNLOAD_GC_TYPE : uint8
{
	ENONE                          = 0,
	ESTEP_OUT                      = 1,
	ETURN_END                      = 2,
	EBATTLE_END                    = 3,
	EWEAPON_UNLOAD_GC_MAX          = 4,
};

enum class EDEBUG_BATTLE_LOG_CATEGORY : uint8
{
	ENONE                          = 0,
	EBATTLE_FLOW                   = 1,
	ECHARACTER                     = 2,
	ESEQUENCER                     = 3,
	EBATTLE_AI                     = 4,
	EACTION_ORDER                  = 5,
	EEFFECT                        = 6,
	EBATTLE_CALC                   = 7,
	EACTION_COMMAND                = 8,
	ECATEGORY_MAX                  = 9,
	EDEBUG_BATTLE_LOG_MAX          = 10,
};

enum class EBATTLE_DEBUG_SWITCH : uint8
{
	EDEBUG_TYPE_NONE               = 0,
	EPARTY_NO_DAMAGE               = 1,
	EENEMY_NO_DAMAGE               = 2,
	EPARTY_NOKO                    = 3,
	EENEMY_NOKO                    = 4,
	ETAME_ALWAYS_SUCCESS           = 5,
	EENABLE_BUSINESS_SUPPORT       = 6,
	EPARTY_FULL_POWER              = 7,
	EENEMY_FULL_POWER              = 8,
	EAUTO_BATTLE                   = 9,
	EALL_ABILITY_OPEN              = 10,
	EBATTLE_VICTORY                = 11,
	EFIXED_WONDER_ABILITY          = 12,
	EENABLE_MANUAL_SEQUENCER_UPDATE = 13,
	EUNENABLE_ABILITY_CAMERA       = 14,
	EFIXED_ENCOUNT_RARE_ENEMY      = 15,
	EALL_ATTACK_AVOID              = 16,
	EALL_ATTACK_HIT                = 17,
	EALL_ATTACK_CRITICAL           = 18,
	ERESULT_DROP_RATE_UP           = 19,
	ERESULT_EXP_UP                 = 20,
	ERESULT_JP_UP                  = 21,
	ERESULT_MONEY_UP               = 22,
	EALL_LEARN_ABILITY_OPEN        = 23,
	EALL_INVADE_MONSTER_OPEN       = 24,
	EFIXED_RANDOM_AILMENT          = 25,
	EFIXED_RANDOM_DAMAGE           = 26,
	EBATTLE_DEFEAT                 = 27,
	EBATTLE_DEFEAT_ONCE            = 28,
	EESCAPE_ALWAYS_SUCCESS         = 29,
	EDRAW_PARAMETER_MASTER         = 30,
	EDRAW_PARAMETER_HP             = 31,
	EDRAW_PARAMETER_SP             = 32,
	EDRAW_PARAMETER_BP             = 33,
	EDRAW_PARAMETER_POT            = 34,
	EDRAW_PARAMETER_SHIELD         = 35,
	EDRAW_PARAMETER_ATK            = 36,
	EDRAW_PARAMETER_MATK           = 37,
	EDRAW_PARAMETER_DEF            = 38,
	EDRAW_PARAMETER_MDEF           = 39,
	EDRAW_PARAMETER_ACC            = 40,
	EDRAW_PARAMETER_EVA            = 41,
	EDRAW_PARAMETER_CON            = 42,
	EDRAW_PARAMETER_AGI            = 43,
	EDRAW_PARAMETER_AISTATE        = 44,
	EDRAW_PARAMETER_TAMERATE       = 45,
	EDRAW_PARAMETER_RESULT         = 46,
	EDRAW_PARAMETER_SUPPORT        = 47,
	EDRAW_PARAMETER_DISEASE        = 48,
	EDEBUG_SWITCH_MAX              = 49,
	EBATTLE_DEBUG_MAX              = 50,
};

enum class EBATTLE_CAMERA_SEQUENCE : uint8
{
	ECAMERA_SEQUENCE_NONE          = 0,
	ECAMERA_SEQUENCE_START         = 1,
	ECAMERA_SEQUENCE_SLIDE         = 2,
	ECAMERA_SEQUENCE_BACK          = 3,
	ECAMERA_SEQUENCE_END           = 4,
	ECAMERA_SEQUENCE_MAX           = 5,
};

enum class EBATTLE_DRAG_IN_TYPE : uint8
{
	EDRAG_IN_COMMON                = 0,
	EDRAG_IN_SEA                   = 1,
	EDRAG_IN_SAND_S                = 2,
	EDRAG_IN_SAND_L                = 3,
	EDRAG_IN_MAX                   = 4,
};

enum class EBATTLE_WARP_OFFSET_TYPE : uint8
{
	EWARP_OFFSET_DEFAULT           = 0,
	EWARP_OFFSET_BACK              = 1,
	EWARP_OFFSET_FRONT             = 2,
	EWARP_OFFSET_MAX               = 3,
};

enum class EBATTLE_RESULT_TYPE : uint8
{
	ENONE                          = 0,
	ENORMAL                        = 1,
	EFULL_BOOST_FINISH             = 2,
	EBOSS_FINISH                   = 3,
	EREVEAL_RESULT                 = 4,
	ESHORT_RESULT                  = 5,
	EEIGHT_BATTLE                  = 6,
	EBATTLE_RESULT_MAX             = 7,
};

enum class EBATTLE_START_DASH_TYPE : uint8
{
	ENONE                          = 0,
	ENORMAL                        = 1,
	EADVANTAGE                     = 2,
	EBACK_ATTACK                   = 3,
	EBATTLE_START_DASH_MAX         = 4,
};

enum class EBATTLE_CHARA_POSITION_RESET_TYPE : uint8
{
	ERESET_NONE                    = 0,
	ERESET_BASE                    = 1,
	ERESET_CURRENT                 = 2,
	ERESET_ORIGIN                  = 3,
	ERESET_MAX                     = 4,
};

enum class EBATTLE_SEQUENCE_PATTERN_TYPE : uint8
{
	EPATTERN_NONE                  = 0,
	EPATTERN_A                     = 1,
	EPATTERN_B                     = 2,
	EPATTERN_C                     = 3,
	EPATTERN_D                     = 4,
	EPATTERN_E                     = 5,
	EPATTERN_F                     = 6,
	EPATTERN_G                     = 7,
	EPATTERN_H                     = 8,
	EPATTERN_I                     = 9,
	EPATTERN_MAX                   = 10,
};

enum class EBATTLE_EFFECT_ATTACH_TYPE : uint8
{
	EATTACH_NONE                   = 0,
	EATTACH_ENFORCER               = 1,
	EATTACH_TARGET                 = 2,
	EATTACH_OWNAREA                = 3,
	EATTACH_OTHERAREA              = 4,
	EATTACH_PARTYALL               = 5,
	EATTACH_ENEMYALL               = 6,
	EATTACH_OWNER                  = 7,
	EATTACH_MAX                    = 8,
};

enum class ECOMMAND_SUB_MENU_TYPE : uint8
{
	ENONE                          = 0,
	EUNIQUE                        = 1,
	EDEFAULT_JOB                   = 2,
	EEXTEND_JOB                    = 3,
	EMONSTER                       = 4,
	ESUPPORTER                     = 5,
	EMATERIAL_A                    = 6,
	EMATERIAL_B                    = 7,
	EITEM                          = 8,
	EWEAPON                        = 9,
	EMERCENARY                     = 10,
	ELEARNING                      = 11,
	EMULTI_MONSTER                 = 12,
	EPOTENTIALITY_ACTION           = 13,
	ECOMMAND_SUB_MENU_MAX          = 14,
};

enum class ECOMMAND_MENU_TYPE : uint8
{
	ECOMMAND                       = 0,
	ESUB_MENU                      = 1,
	EBOOST                         = 2,
	EESCAPE                        = 3,
	EDEFENSE                       = 4,
	EMONSTER                       = 5,
	ESUPPORTER                     = 6,
	EPREPARATION                   = 7,
	EITEM                          = 8,
	EWEAPON_THROW                  = 9,
	EINVENTOR_ITEM                 = 10,
	ECOMMAND_MENU_MAX              = 11,
};

enum class ECOMMAND_MENU_STEP : uint8
{
	EMAIN_MENU                     = 0,
	ESUB_MENU                      = 1,
	ETHIRD_MENU                    = 2,
	ETARGET_SELECT                 = 3,
	ETAME_MONSTER_CONFIRM          = 4,
	ECOMMAND_MENU_MAX              = 5,
};

enum class EAILMENT_TARGET_TYPE : uint8
{
	EDEPEND                        = 0,
	EENFORCER                      = 1,
	ERANDOM                        = 2,
	EPARTY_ALL                     = 3,
	EPARTY_SINGLE                  = 4,
	EENEMY_ALL                     = 5,
	EENEMY_SINGLE                  = 6,
	ECHARACTER_ALL                 = 7,
	EBATTLE_FIELD                  = 8,
	EHP_LOWEST                     = 9,
	EHP_HIGHEST                    = 10,
	EEXCEPT_ENFORCER               = 11,
	ERANDOM_EXCEPT_ENFORCER        = 12,
	ERANDOM_EXCEPT_DISEASE         = 13,
	ECHASE                         = 14,
	EOWNER                         = 15,
	EMAX                           = 16,
	EAILMENT_TARGET_MAX            = 17,
};

enum class EBATTLE_TARGET_TYPE : uint8
{
	ESELF                          = 0,
	EPARTY_SINGLE                  = 1,
	EPARTY_ALL                     = 2,
	EENEMY_SINGLE                  = 3,
	EENEMY_ALL                     = 4,
	EALL                           = 5,
	EALL_SINGLE                    = 6,
	EBATTLE_TARGET_MAX             = 7,
};

enum class EBATTLE_SEQUENCER_CHANGE_TYPE : uint8
{
	START                          = 0,
	END                            = 1,
	LOOP                           = 2,
	SHUTDOWN                       = 3,
	EBATTLE_SEQUENCER_CHANGE_MAX   = 4,
};

enum class EAILMENT_CALC_TYPE : uint8
{
	EPHYSICS                       = 0,
	EMAGIC                         = 1,
	ERATIO                         = 2,
	ERATIO_CURRENT                 = 3,
	EFIX                           = 4,
	EITEM                          = 5,
	EDRAIN                         = 6,
	EAILMENT_CALC_MAX              = 7,
};

enum class EBATTLE_DAMAGE_TYPE : uint8
{
	NORMAL                         = 0,
	WEAKNESS                       = 1,
	CRITICAL                       = 2,
	JUST_BREAK                     = 3,
	BREAK_NORMAL                   = 4,
	BREAK_WEAKNESS                 = 5,
	BREAK_CRITICAL                 = 6,
	MP_DAMAGE                      = 7,
	BP_DAMAGE                      = 8,
	SP_DAMAGE                      = 9,
	MAX_HP_RATIO                   = 10,
	FORCE_WEAKNESS                 = 11,
	EBATTLE_DAMAGE_MAX             = 12,
};

enum class EBATTLE_VOICE_TYPE : uint8
{
	EBATTLE_VOICE_NONE             = 0,
	EBATTLE_START                  = 1,
	EBATTLE_VICTORY                = 2,
	EORDER_START                   = 3,
	ETAKE_DAMAGE                   = 4,
	EON_DEAD                       = 5,
	ENORMAL_ATTACK                 = 6,
	ENORMAL_ATTACK_LAST_HIT        = 7,
	EON_BOOST                      = 8,
	EOPEN_WEAKNESS                 = 9,
	EBREAK_ENEMY                   = 10,
	EON_AVOID                      = 11,
	EKILL_ENEMY                    = 12,
	EON_RECOVERED                  = 13,
	EON_REVIVED                    = 14,
	EUSE_ITEM_TO_PARTY             = 15,
	EUSE_ITEM_TO_ENEMY             = 16,
	EPLAY_GUARD                    = 17,
	EPLAY_ABILITY                  = 18,
	EON_POTENTIALITY_ACTION        = 19,
	EINVADE_MONSTER                = 20,
	ECALL_SUPPORTER                = 21,
	ECALLED_SUPPORTER              = 22,
	EPLAY_LEARN_ABILITY            = 23,
	EPREPARATION_RECOVERY          = 24,
	EPREPARATION_ATTACK            = 25,
	EON_INVALID_DISEASE            = 26,
	EON_COVER                      = 27,
	EBATTLE_VOICE_MAX              = 28,
};

enum class EBATTLE_ACTION_TYPE : uint8
{
	IDLE                           = 0,
	BOOST_IDLE                     = 1,
	STEP_IN                        = 2,
	STEP_OUT                       = 3,
	ATTACK_SWORD                   = 4,
	ATTACK_LANCE                   = 5,
	ATTACK_DAGGER                  = 6,
	ATTACK_AXE                     = 7,
	ATTACK_BOW                     = 8,
	ATTACK_ROD                     = 9,
	USE_ITEM                       = 10,
	GUARD                          = 11,
	BOOST_START                    = 12,
	BOOST_LEVEL_UP                 = 13,
	BOOST_CANCEL                   = 14,
	KNOCKBACK                      = 15,
	BATTLE_START                   = 16,
	ESCAPE                         = 17,
	VICTORY                        = 18,
	LEVELUP                        = 19,
	PINCH                          = 20,
	DEAD                           = 21,
	CHANGE_SWORD                   = 22,
	CHANGE_LANCE                   = 23,
	CHANGE_DAGGER                  = 24,
	CHANGE_AXE                     = 25,
	CHANGE_BOW                     = 26,
	CHANGE_ROD                     = 27,
	DRAG_IN_IDLE                   = 28,
	EBATTLE_ACTION_MAX             = 29,
};

enum class EBATTLE_VIEWER_MODE : uint8
{
	ENORMAL                        = 0,
	EUSE_ENEMY_GROUP               = 1,
	EUSE_ENEMY_LIST                = 2,
	EBATTLE_VIEWER_MAX             = 3,
};

enum class EBATTLE_START_TYPE : uint8
{
	ENORMAL                        = 0,
	EADVANTAGE                     = 1,
	EBACK_ATTACK                   = 2,
	EBATTLE_START_MAX              = 3,
};

enum class EBATTLE_STYLE_TYPE : uint8
{
	ENEUTRAL                       = 0,
	EBREAK                         = 1,
	EBOOST                         = 2,
	EBATTLE_STYLE_MAX              = 3,
};

enum class EBATTLE_ENCOUNT_TYPE : uint8
{
	ENORMAL                        = 0,
	EEVENT                         = 1,
	EBOUT                          = 2,
	EINVADE                        = 3,
	EREVEAL                        = 4,
	EREPLAY                        = 5,
	EEIGHT_BATTLE                  = 6,
	EPREPARATION                   = 7,
	EBATTLE_ENCOUNT_MAX            = 8,
};

enum class EBATTLE_RESULT : uint8
{
	NONE                           = 0,
	VICTORY                        = 1,
	DEFEAT                         = 2,
	ESCAPE                         = 3,
	EBATTLE_MAX                    = 4,
};

enum class EBREAK_CAMERA_TYPE : uint8
{
	ENORMAL                        = 0,
	EWIDE                          = 1,
	EWIDE_TILTUP                   = 2,
	EVIDE_SECOND                   = 3,
	EBREAK_CAMERA_MAX              = 4,
};

enum class EBATTLE_CAMERA_TYPE : uint8
{
	NEAR                           = 0,
	FAR                            = 1,
	EIGHT_BATTLE                   = 2,
	EBATTLE_CAMERA_MAX             = 3,
};

enum class EBattlePlacementType : uint8
{
	TEST_PLACEMENT_00              = 0,
	TEST_PLACEMENT_01              = 1,
	TEST_PLACEMENT_02              = 2,
	TEST_PLACEMENT_03              = 3,
	TEST_PLACEMENT_04              = 4,
	TEST_PLACEMENT_05              = 5,
	TEST_PLACEMENT_06              = 6,
	TEST_PLACEMENT_07              = 7,
	TEST_PLACEMENT_08              = 8,
	TEST_PLACEMENT_09              = 9,
	TEST_PLACEMENT_10              = 10,
	TEST_PLACEMENT_11              = 11,
	TEST_PLACEMENT_12              = 12,
	TEST_PLACEMENT_13              = 13,
	TEST_PLACEMENT_14              = 14,
	TEST_PLACEMENT_15              = 15,
	TEST_PLACEMENT_16              = 16,
	TEST_PLACEMENT_17              = 17,
	TEST_PLACEMENT_18              = 18,
	TEST_PLACEMENT_19              = 19,
	BT_PLT_001                     = 20,
	BT_PLT_002                     = 21,
	BT_PLT_003                     = 22,
	BT_PLT_004                     = 23,
	BT_PLT_005                     = 24,
	BT_PLT_006                     = 25,
	BT_PLT_007                     = 26,
	BT_PLT_008                     = 27,
	BT_PLT_009                     = 28,
	BT_PLT_010                     = 29,
	BT_PLT_011                     = 30,
	BT_PLT_012                     = 31,
	BT_PLT_013                     = 32,
	BT_PLT_014                     = 33,
	BT_PLT_015                     = 34,
	BT_PLT_016                     = 35,
	BT_PLT_003_A                   = 36,
	BT_PLT_004_A                   = 37,
	PMT_TYPE_001                   = 38,
	PMT_TYPE_002                   = 39,
	PMT_TYPE_003                   = 40,
	PMT_TYPE_004                   = 41,
	PMT_TYPE_005                   = 42,
	PMT_TYPE_006                   = 43,
	PMT_TYPE_007                   = 44,
	PMT_TYPE_008                   = 45,
	PMT_TYPE_009                   = 46,
	PMT_TYPE_010                   = 47,
	PMT_TYPE_011                   = 48,
	PMT_TYPE_012                   = 49,
	PMT_TYPE_013                   = 50,
	PMT_TYPE_014                   = 51,
	PMT_TYPE_015                   = 52,
	PMT_TYPE_016                   = 53,
	PMT_TYPE_017                   = 54,
	PMT_TYPE_018                   = 55,
	PMT_TYPE_019                   = 56,
	PMT_TYPE_020                   = 57,
	PMT_TYPE_021                   = 58,
	PMT_TYPE_022                   = 59,
	PMT_TYPE_023                   = 60,
	PMT_TYPE_024                   = 61,
	PMT_TYPE_025                   = 62,
	PMT_TYPE_026                   = 63,
	PMT_TYPE_027                   = 64,
	PMT_TYPE_028                   = 65,
	PMT_TYPE_029                   = 66,
	PMT_TYPE_030                   = 67,
	PMT_TYPE_031                   = 68,
	PMT_TYPE_032                   = 69,
	PMT_TYPE_033                   = 70,
	PMT_TYPE_034                   = 71,
	PMT_TYPE_035                   = 72,
	PMT_TYPE_036                   = 73,
	PMT_TYPE_037                   = 74,
	PMT_TYPE_038                   = 75,
	PMT_TYPE_039                   = 76,
	PMT_TYPE_040                   = 77,
	PMT_GUR_TYPE_001               = 78,
	PMT_GUR_TYPE_002               = 79,
	PMT_GUR_TYPE_003               = 80,
	PMT_GUR_TYPE_004               = 81,
	PMT_GUR_TYPE_005               = 82,
	PMT_GUR_TYPE_006               = 83,
	PMT_GUR_TYPE_007               = 84,
	PMT_GUR_TYPE_008               = 85,
	PMT_GUR_TYPE_009               = 86,
	PMT_GUR_TYPE_010               = 87,
	PMT_GUR_TYPE_011               = 88,
	PMT_GUR_TYPE_012               = 89,
	EBattlePlacementType_MAX       = 90,
};

enum class EBATTLE_REPLAY_FINISH_TYPE : uint8
{
	ENORMAL                        = 0,
	EADDITIVE                      = 1,
	ECOUNTER                       = 2,
	EREFLECTION                    = 3,
	EPOISON                        = 4,
	EBATTLE_REPLAY_FINISH_MAX      = 5,
};

enum class EBATTLE_REPLAY_FIELD_STATUS : uint8
{
	EREPLAY_FIELD_NONE             = 0,
	EREPLAY_FATAL_POISON           = 1,
	EREPLAY_HPMAX_POISON           = 2,
	EREPLAY_DISABLE_MAGIC_MENU     = 3,
	EREPLAY_EVASION_UP             = 4,
	EREPLAY_MAGIC_UP               = 5,
	EREPLAY_MAX                    = 6,
};

enum class EBATTLE_REPLAY_CHARA_STATUS : uint8
{
	EREPLAY_ALIVE                  = 0,
	EREPLAY_PINCH                  = 1,
	EREPLAY_DECONDITION            = 2,
	EREPLAY_DEAD                   = 3,
	EREPLAY_STONE                  = 4,
	EREPLAY_STONE_DEAD             = 5,
	EREPLAY_EXCEPT_FIELD           = 6,
	EREPLAY_GUARD                  = 7,
	EREPLAY_MAX                    = 8,
};

enum class ETRAKING_RELEASED_TYPE : uint8
{
	ETOWN_OUTSIDE                  = 0,
	ECHANGE_TIMEZOON               = 1,
	EFLAG_ON                       = 2,
	EFLAG_OFF                      = 3,
	EBATTLE_DEAD                   = 4,
	ETRAKING_RELEASED_MAX          = 5,
};

enum class EBATTLE_COMMAND_ATTRIBUTE_ICON : uint8
{
	ESWORD                         = 0,
	ELANCE                         = 1,
	EDAGGER                        = 2,
	EAXE                           = 3,
	EBOW                           = 4,
	EROD                           = 5,
	ENONE                          = 6,
	EFIRE                          = 7,
	EICE                           = 8,
	ETHUNDER                       = 9,
	EWIND                          = 10,
	ELIGHT                         = 11,
	EDARK                          = 12,
	EPOISON                        = 13,
	EMATERIAL_ATTACK               = 14,
	EMATERIAL_HEAL                 = 15,
	ECOMMAND_SEALING               = 16,
	EBATTLE_COMMAND_ATTRIBUTE_MAX  = 17,
};

enum class EABILITY_ICON_TYPE : uint8
{
	ENONE                          = 0,
	EPHYSICS                       = 1,
	EMAGIC                         = 2,
	EHEAL                          = 3,
	EBUFF                          = 4,
	EDEBUFF                        = 5,
	EABILITY_ICON_MAX              = 6,
};

enum class EDAMAGE_UI_COLOR_TYPE : uint8
{
	EDAMAGE_COLOR_NORMAL           = 0,
	EDAMAGE_COLOR_WEAKNESS         = 1,
	EDAMAGE_COLOR_RECOVERY_BP      = 2,
	EDAMAGE_COLOR_RECOVERY_HP      = 3,
	EDAMAGE_COLOR_RECOVERY_MP      = 4,
	EDAMAGE_COLOR_HP_RATIO         = 5,
	EDAMAGE_COLOR_MAX              = 6,
};

enum class EBATTLERESULT_STATE : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	EUPDATE                        = 2,
	ESUBPARTY_UPDATE               = 3,
	EDROPITEM_OPEN                 = 4,
	ECLOSE                         = 5,
	EINPUT_WAITING                 = 6,
	EJP_TUTORIAL                   = 7,
	ESUPPORTER_RETURN_OPEN         = 8,
	EBATTLERESULT_MAX              = 9,
};

enum class EBATTLERESULT_BONUS_TYPE : uint8
{
	EBONUS_TYPE_BREAK              = 0,
	EBONUS_TYPE_1TURN_KILL         = 1,
	EBONUS_TYPE_NO_DAMAGE          = 2,
	EBONUS_TYPE_OVERKILL           = 3,
	EBONUS_TYPE_OVERKILL_BREAK     = 4,
	EBONUS_TYPE_MAX                = 5,
};

enum class EBATTLE_WEAK_ATTRIBUTE_TYPE : uint8
{
	ESWORD                         = 0,
	ELANCE                         = 1,
	EDAGGER                        = 2,
	EAXE                           = 3,
	EBOW                           = 4,
	EROD                           = 5,
	EFIRE                          = 6,
	EICE                           = 7,
	ETHUNDER                       = 8,
	EWIND                          = 9,
	ELIGHT                         = 10,
	EDARK                          = 11,
	EPOISON                        = 12,
	EBATTLE_WEAK_ATTRIBUTE_MAX     = 13,
};

enum class EBATTLE_WIPE_STATE : uint8
{
	ENONE                          = 0,
	EBATTLE_START_WIPE_IN          = 1,
	EBATTLE_START_WIPE_OUT         = 2,
	EBATTLE_END_WIPE_IN            = 3,
	EBATTLE_END_WIPE_OUT           = 4,
	EBATTLE_WIPE_MAX               = 5,
};

enum class EKSBitFlag : uint8
{
	System00000                    = 0,
	JOB_MERCHANT                   = 1,
	JOB_THIEF                      = 2,
	JOB_FENCER                     = 3,
	JOB_HUNTER                     = 4,
	JOB_PRIEST                     = 5,
	JOB_DANCER                     = 6,
	JOB_PROFESSOR                  = 7,
	JOB_ALCHEMIST                  = 8,
	JOB_WEAPON_MASTER              = 9,
	JOB_WIZARD                     = 10,
	JOB_ASTRONOMY                  = 11,
	JOB_RUNE_MASTER                = 12,
	JOB_RESERVE001                 = 13,
	JOB_RESERVE002                 = 14,
	JOB_RESERVE003                 = 15,
	JOB_RESERVE004                 = 16,
	JOB_RESERVE005                 = 17,
	JOB_RESERVE006                 = 18,
	JOB_RESERVE007                 = 19,
	FIRST_ACQUISITION_LICENSE      = 20,
	RELEASE_STYLECHANGE_FENCER     = 30,
	RELEASE_STYLECHANGE_HUNTER     = 31,
	RELEASE_STYLECHANGE_ALCHEMIST  = 32,
	RELEASE_STYLECHANGE_MERCHANT   = 33,
	RELEASE_STYLECHANGE_PRIEST     = 34,
	RELEASE_STYLECHANGE_PROFESOR   = 35,
	RELEASE_STYLECHANGE_THIEF      = 36,
	RELEASE_STYLECHANGE_DANCER     = 37,
	NEW_MAINMENU_JOB               = 100,
	NEW_MAINMENU_ABILITY           = 101,
	NEW_MAINMENU_SUPPORT_ABILITY   = 102,
	NEW_MAINMENU_RESERVE002        = 103,
	NEW_MAINMENU_RESERVE003        = 104,
	RELEASE_MERCHANT_SHIP          = 200,
	RELEASE_MERCHANT_GRAMOPHONE    = 201,
	RELEASE_MERCHANT_LETTER        = 202,
	RELEASE_MERCHANT_ANYMISSION    = 203,
	HIDE_LINERSHIP                 = 204,
	DECISION_SHIPTYPE_AA           = 210,
	DECISION_SHIPTYPE_AB           = 211,
	DECISION_SHIPTYPE_AC           = 212,
	DECISION_SHIPTYPE_BA           = 213,
	DECISION_SHIPTYPE_BB           = 214,
	DECISION_SHIPTYPE_BC           = 215,
	DECISION_SHIPTYPE_CA           = 216,
	DECISION_SHIPTYPE_CB           = 217,
	DECISION_SHIPTYPE_CC           = 218,
	ENDSTORY_DARKMAPFLAG_MNT       = 220,
	ENDSTORY_DARKMAPFLAG_WLD       = 221,
	ENDSTORY_DARKMAPFLAG_ISD       = 222,
	ENDSTORY_DARKMAPFLAG_DST       = 223,
	CLOSE_MAINMENU_ALL             = 400,
	CLOSE_MAINMENU_WORLDMAP        = 401,
	CLOSE_MAINMENU_MISSIONRECORD   = 402,
	CLOSE_MAINMENU_ITEM            = 403,
	CLOSE_MAINMENU_RECOVERABILITY  = 404,
	CLOSE_MAINMENU_EQUIPMENT       = 405,
	CLOSE_MAINMENU_JOB             = 406,
	CLOSE_MAINMENU_ABILITY         = 407,
	CLOSE_MAINMENU_STATUS          = 408,
	CLOSE_MAINMENU_ETC             = 409,
	MAINMENU_SUPPORTABI_ENABLE_FLAG = 410,
	MAINMENU_JOB_ENABLE            = 411,
	MAINMENU_ABILITY_ENABLE        = 412,
	CLOSE_MAINMENU_CHANGEMEMBER    = 413,
	HIDE_MAINMENU_WORLDMAP         = 414,
	HIDE_MAINMENU_CHANGEMEMBER     = 415,
	HIDE_MAINMENU_MISSIONRECORD    = 416,
	HIDE_MAINMENU_ITEM             = 417,
	HIDE_MAINMENU_RECOVERABILITY   = 418,
	HIDE_MAINMENU_EQUIPMENT        = 419,
	HIDE_MAINMENU_JOB              = 420,
	HIDE_MAINMENU_ABILITY          = 421,
	HIDE_MAINMENU_STATUS           = 422,
	HIDE_MAINMENU_ETC              = 423,
	ALL_EQUIPMENT_DISABLE          = 450,
	FIELDCOMMAND_KEN_DAYTIME       = 500,
	FIELDCOMMAND_KEN_NIGHT         = 501,
	FIELDCOMMAND_ODO_DAYTIME       = 502,
	FIELDCOMMAND_ODO_NIGHT         = 503,
	FIELDCOMMAND_SHO_DAYTIME       = 504,
	FIELDCOMMAND_SHO_NIGHT         = 505,
	FIELDCOMMAND_KAR_DAYTIME       = 506,
	FIELDCOMMAND_KAR_NIGHT         = 507,
	FIELDCOMMAND_SIN_DAYTIME       = 508,
	FIELDCOMMAND_SIN_NIGHT         = 509,
	FIELDCOMMAND_KUS_DAYTIME       = 510,
	FIELDCOMMAND_KUS_NIGHT         = 511,
	FIELDCOMMAND_GAK_DAYTIME       = 512,
	FIELDCOMMAND_GAK_NIGHT         = 513,
	FIELDCOMMAND_TOU_DAYTIME       = 514,
	FIELDCOMMAND_TOU_NIGHT         = 515,
	FIELDCOMMAND_RESERVE001        = 516,
	FIELDCOMMAND_RESERVE002        = 517,
	FIELDCOMMAND_RESERVE003        = 518,
	FIELDCOMMAND_RESERVE004        = 519,
	FIXED_FOLLOW_NPC_FC_SIN_DAYTIME = 520,
	FIXED_FOLLOW_NPC_FC_ODO_DAYTIME = 521,
	FIXED_FOLLOW_NPC_FC_SHO_NIGHT  = 522,
	FIXED_FOLLOW_NPC_FC_KAR_NIGHT  = 523,
	BAN_TIME_ELAPSED               = 550,
	BAN_TIME_CHANGE                = 551,
	BAN_OPEN_MENU                  = 552,
	BAN_FIELD_COMMAND              = 553,
	LF_SYS_SAVE_DISABLE            = 554,
	HIDE_HUNTER_FIELDCOMMAND_DAYTIME_CONFIRMATION = 555,
	HIDE_FENCER_FIELDCOMMAND_DAYTIME_CONFIRMATION = 556,
	HIDE_FORCED_RADARMAP           = 557,
	RELEASE_TUTORIAL_BATTLE        = 570,
	LF_MS_KAR_10_004               = 600,
	LF_MS_KAR_10_005               = 601,
	LF_MS_SIN_10_RELEASE_EX_ABILITY = 602,
	CANOE_RESOURCE_CHANGE          = 603,
	LF_MS_GAK_10_024               = 604,
	PERMISSION_EIGHT_PARTY         = 605,
	TEMPORARY_BAN_FASTTRAVEL_KEN   = 606,
	TEMPORARY_BAN_FASTTRAVEL_GAK   = 607,
	PRIEST_DUNGEON_APPEARANCE      = 608,
	MARCHANT_BILLION_MONEY         = 609,
	KAR_PARTNER_AWAKENING          = 610,
	KAR_PARTNER_CONSTANT_AWAKENING = 611,
	KEN_FORCED_STYLECHANGE         = 612,
	KAR_2A_MONSTER_FORCED_INVADE   = 613,
	SHO_40_BAN_AutoSave            = 614,
	SWITCHING_KEN_STYLECHANGE_YANG = 615,
	KUS_40_SPECIAL_FORMULATION     = 616,
	DIALOG_DISPLAY_EIGHT_PARTY     = 617,
	BAN_GAK_SPECIAL_ACTION         = 650,
	BAN_SIN_SPECIAL_ACTION         = 651,
	BAN_TOU_SPECIAL_ACTION         = 652,
	BATTLEVOICE_CHANGE_SIN_010     = 653,
	BATTLEVOICE_CHANGE_SHO_010     = 654,
	BATTLEVOICE_CHANGE_SIN_020     = 655,
	BATTLEVOICE_CHANGE_SHO_020     = 656,
	TUTORIAL_OPERATION_GUIDE       = 1000,
	TUTORIAL_TIMEZONE_CHANGE       = 1001,
	TUTORIAL_BATTLE_BREAK          = 1002,
	TUTORIAL_BATTLE_BOOST          = 1003,
	TUTORIAL_ABILITY_CRITICAL      = 1004,
	TUTORIAL_ACTION_CANOE          = 1005,
	TUTORIAL_RADAR_MAP             = 1006,
	TUTORIAL_FIELD_COMMAND_DAYTIME = 1007,
	TUTORIAL_CHANGES_IN_TOWN_OVER_TIME = 1008,
	TUTORIAL_FIELD_COMMAND_NIGHT   = 1009,
	TUTORIAL_CONNECTION_REPAIR     = 1010,
	TUTORIAL_STYLE_CHANGE_FENCER   = 1011,
	TUTORIAL_STYLE_CHANGE_DANCER   = 1012,
	TUTORIAL_STYLE_CHANGE_DEMERIT  = 1013,
	TUTORIAL_SWORDMAN_LEARN_SKILL  = 1014,
	TUTORIAL_SAVE                  = 1015,
	TUTORIAL_FIELD_COMMAND_RIVEAL_BATTLE = 1016,
	TUTORIAL_FIELD_COMMAND_DAYTIME_SIN = 1017,
	TUTORIAL_FIELD_COMMAND_NIGHT_SIN = 1018,
	TUTORIAL_FIELD_COMMAND_DAYTIME_SHO = 1019,
	TUTORIAL_FIELD_COMMAND_NIGHT_SHO = 1020,
	TUTORIAL_FIELD_COMMAND_DAYTIME_KAR = 1021,
	TUTORIAL_FIELD_COMMAND_NIGHT_KAR = 1022,
	TUTORIAL_FIELD_COMMAND_DAYTIME_GAK = 1023,
	TUTORIAL_FIELD_COMMAND_NIGHT_GAK = 1024,
	TUTORIAL_FIELD_COMMAND_DAYTIME_KUS = 1025,
	TUTORIAL_FIELD_COMMAND_NIGHT_KUS = 1026,
	TUTORIAL_FIELD_COMMAND_DAYTIME_ODO = 1027,
	TUTORIAL_FIELD_COMMAND_NIGHT_ODO = 1028,
	TUTORIAL_FIELD_COMMAND_DAYTIME_TOU = 1029,
	TUTORIAL_FIELD_COMMAND_NIGHT_TOU = 1030,
	TUTORIAL_SPECIAL_ACTION_SIN    = 1031,
	TUTORIAL_SPECIAL_ACTION_SHO    = 1032,
	TUTORIAL_SPECIAL_ACTION_KAR    = 1033,
	TUTORIAL_SPECIAL_ACTION_GAK    = 1034,
	TUTORIAL_SPECIAL_ACTION_KUS    = 1035,
	TUTORIAL_SPECIAL_ACTION_ODO    = 1036,
	TUTORIAL_SPECIAL_ACTION_TOU    = 1037,
	TUTORIAL_CAPTURE               = 1038,
	TUTORIAL_STYLE_CHANGE_SORDMAN_LIST = 1039,
	TUTORIAL_STYLE_CHANGE_DANCER_LIST = 1040,
	TUTORIAL_MULTIPLE_STORIES      = 1041,
	TUTORIAL_COMMERCE              = 1042,
	TUTORIAL_STYLE_CHANGE_PRIEST   = 1043,
	TUTORIAL_STYLE_CHANGE_MERCHANT = 1044,
	TUTORIAL_STYLE_CHANGE_HUNTER   = 1045,
	TUTORIAL_STYLE_CHANGE_PROFESSOR = 1046,
	TUTORIAL_STYLE_CHANGE_ALCHEMIST = 1047,
	TUTORIAL_STYLE_CHANGE_THIEF    = 1048,
	TUTORIAL_COUPLING              = 1049,
	TUTORIAL_MAINSTORY             = 1050,
	TUTORIAL_SUBSTORY              = 1051,
	TUTORIAL_ABILITY               = 1052,
	TUTORIAL_ABILITY_NOW           = 1053,
	TUTORIAL_SUPPORTABILITY        = 1054,
	TUTORIAL_SUPPORTABILITY_NOW    = 1055,
	TUTORIAL_BATTLEJOB             = 1056,
	TUTORIAL_BATTLEJOB_NOW         = 1057,
	TUTORIAL_FRIEND                = 1058,
	TUTORIAL_FRIEND_NOW            = 1059,
	TUTORIAL_FASTTRAVEL            = 1060,
	TUTORIAL_CONDITION             = 1061,
	TUTORIAL_TIPS                  = 1062,
	TUTORIAL_TIPS2                 = 1063,
	TUTORIAL_SKIPSTORY             = 1064,
	TUTORIAL_SKIP_PROLOGUE         = 1065,
	TUTORIAL_SKIP_PROLOUGE_KEN     = 1066,
	TUTORIAL_SKIP_PROLOUGE_SIN     = 1067,
	TUTORIAL_SKIP_PROLOUGE_SHO     = 1068,
	TUTORIAL_SKIP_PROLOUGE_KAR     = 1069,
	TUTORIAL_SKIP_PROLOUGE_GAK     = 1070,
	TUTORIAL_SKIP_PROLOUGE_KUS     = 1071,
	TUTORIAL_SKIP_PROLOUGE_ODO     = 1072,
	TUTORIAL_SKIP_PROLOUGE_TOU     = 1073,
	TUTORIAL_COMMERCE_A            = 1074,
	TUTORIAL_COMMERCE_B            = 1075,
	TUTORIAL_COMMERCE_C            = 1076,
	TUTORIAL_PARTY_CHANGE_MENU     = 1077,
	TUTORIAL_TALENT_SUPPORT        = 1078,
	TUTORIAL_TALENT_SUPPORT_ODO    = 1079,
	TUTORIAL_ST_GAGE               = 1080,
	TUTORIAL_ALLURE_NOW            = 1081,
	TUTORIAL_ENDCARD_FENCER        = 1082,
	TUTORIAL_ENDCARD_HUNTER        = 1083,
	TUTORIAL_ENDCARD_ALCHEMIST     = 1084,
	TUTORIAL_ENDCARD_MERCHANT      = 1085,
	TUTORIAL_ENDCARD_PRIEST        = 1086,
	TUTORIAL_ENDCARD_PROFESSOR     = 1087,
	TUTORIAL_ENDCARD_THIEF         = 1088,
	TUTORIAL_ENDCARD_DANCER        = 1089,
	TUTORIAL_COUPLING_GAK          = 1091,
	TUTORIAL_COUPLING_ODO          = 1092,
	TUTORIAL_COUPLING_SIN          = 1093,
	TUTORIAL_COUPLING_KUS          = 1094,
	TUTORIAL_AWAKE                 = 1095,
	TUTORIAL_OPENED_OPERATION_GUIDE = 1300,
	TUTORIAL_OPENED_TIMEZONE_CHANGE = 1301,
	TUTORIAL_OPENED_BATTLE_BREAK   = 1302,
	TUTORIAL_OPENED_BATTLE_BOOST   = 1303,
	TUTORIAL_OPENED_ABILITY_CRITICAL = 1304,
	TUTORIAL_OPENED_ACTION_CANOE   = 1305,
	TUTORIAL_OPENED_RADAR_MAP      = 1306,
	TUTORIAL_OPENED_FIELD_COMMAND_DAYTIME = 1307,
	TUTORIAL_OPENED_CHANGES_IN_TOWN_OVER_TIME = 1308,
	TUTORIAL_OPENED_FIELD_COMMAND_NIGHT = 1309,
	TUTORIAL_OPENED_CONNECTION_REPAIR = 1310,
	TUTORIAL_OPENED_STYLE_CHANGE_FENCER = 1311,
	TUTORIAL_OPENED_STYLE_CHANGE_DANCER = 1312,
	TUTORIAL_OPENED_STYLE_CHANGE_DEMERIT = 1313,
	TUTORIAL_OPENED_SWORDMAN_LEARN_SKILL = 1314,
	TUTORIAL_OPENED_SAVE           = 1315,
	TUTORIAL_OPENED_FIELD_COMMAND_RIVEAL_BATTLE = 1316,
	TUTORIAL_OPENED_FIELD_COMMAND_DAYTIME_SIN = 1317,
	TUTORIAL_OPENED_FIELD_COMMAND_NIGHT_SIN = 1318,
	TUTORIAL_OPENED_FIELD_COMMAND_DAYTIME_SHO = 1319,
	TUTORIAL_OPENED_FIELD_COMMAND_NIGHT_SHO = 1320,
	TUTORIAL_OPENED_FIELD_COMMAND_DAYTIME_KAR = 1321,
	TUTORIAL_OPENED_FIELD_COMMAND_NIGHT_KAR = 1322,
	TUTORIAL_OPENED_FIELD_COMMAND_DAYTIME_GAK = 1323,
	TUTORIAL_OPENED_FIELD_COMMAND_NIGHT_GAK = 1324,
	TUTORIAL_OPENED_FIELD_COMMAND_DAYTIME_KUS = 1325,
	TUTORIAL_OPENED_FIELD_COMMAND_NIGHT_KUS = 1326,
	TUTORIAL_OPENED_FIELD_COMMAND_DAYTIME_ODO = 1327,
	TUTORIAL_OPENED_FIELD_COMMAND_NIGHT_ODO = 1328,
	TUTORIAL_OPENED_FIELD_COMMAND_DAYTIME_TOU = 1329,
	TUTORIAL_OPENED_FIELD_COMMAND_NIGHT_TOU = 1330,
	TUTORIAL_OPENED_SPECIAL_ACTION_SIN = 1331,
	TUTORIAL_OPENED_SPECIAL_ACTION_SHO = 1332,
	TUTORIAL_OPENED_SPECIAL_ACTION_KAR = 1333,
	TUTORIAL_OPENED_SPECIAL_ACTION_GAK = 1334,
	TUTORIAL_OPENED_SPECIAL_ACTION_KUS = 1335,
	TUTORIAL_OPENED_SPECIAL_ACTION_ODO = 1336,
	TUTORIAL_OPENED_SPECIAL_ACTION_TOU = 1337,
	TUTORIAL_OPENED_CAPTURE        = 1338,
	TUTORIAL_OPENED_STYLE_CHANGE_SORDMAN_LIST = 1339,
	TUTORIAL_OPENED_STYLE_CHANGE_DANCER_LIST = 1340,
	TUTORIAL_OPENED_MULTIPLE_STORIES = 1341,
	TUTORIAL_OPENED_COMMERCE       = 1342,
	TUTORIAL_OPENED_STYLE_CHANGE_PRIEST = 1343,
	TUTORIAL_OPENED_STYLE_CHANGE_MERCHANT = 1344,
	TUTORIAL_OPENED_STYLE_CHANGE_HUNTER = 1345,
	TUTORIAL_OPENED_STYLE_CHANGE_PROFESSOR = 1346,
	TUTORIAL_OPENED_STYLE_CHANGE_ALCHEMIST = 1347,
	TUTORIAL_OPENED_STYLE_CHANGE_THIEF = 1348,
	TUTORIAL_OPENED_COUPLING       = 1349,
	TUTORIAL_OPENED_MAINSTORY      = 1350,
	TUTORIAL_OPENED_SUBSTORY       = 1351,
	TUTORIAL_OPENED_ABILITY        = 1352,
	TUTORIAL_OPENED_ABILITY_NOW    = 1353,
	TUTORIAL_OPENED_SUPPORTABILITY = 1354,
	TUTORIAL_OPENED_SUPPORTABILITY_NOW = 1355,
	TUTORIAL_OPENED_BATTLEJOB      = 1356,
	TUTORIAL_OPENED_BATTLEJOB_NOW  = 1357,
	TUTORIAL_OPENED_FRIEND         = 1358,
	TUTORIAL_OPENED_FRIEND_NOW     = 1359,
	TUTORIAL_OPENED_FASTTRAVEL     = 1360,
	TUTORIAL_OPENED_CONDITION      = 1361,
	TUTORIAL_OPENED_TIPS           = 1362,
	TUTORIAL_OPENED_TIPS2          = 1363,
	TUTORIAL_OPENED_SKIPSTORY      = 1364,
	TUTORIAL_OPENED_SKIP_PROLOGUE  = 1365,
	TUTORIAL_OPENED_SKIP_PROLOUGE_KEN = 1366,
	TUTORIAL_OPENED_SKIP_PROLOUGE_SIN = 1367,
	TUTORIAL_OPENED_SKIP_PROLOUGE_SHO = 1368,
	TUTORIAL_OPENED_SKIP_PROLOUGE_KAR = 1369,
	TUTORIAL_OPENED_SKIP_PROLOUGE_GAK = 1370,
	TUTORIAL_OPENED_SKIP_PROLOUGE_KUS = 1371,
	TUTORIAL_OPENED_SKIP_PROLOUGE_ODO = 1372,
	TUTORIAL_OPENED_SKIP_PROLOUGE_TOU = 1373,
	TUTORIAL_OPENED_COMMERCE_A     = 1374,
	TUTORIAL_OPENED_COMMERCE_B     = 1375,
	TUTORIAL_OPENED_COMMERCE_C     = 1376,
	TUTORIAL_OPENED_PARTY_CHANGE_MENU = 1377,
	TUTORIAL_OPENED_TALENT_SUPPORT = 1378,
	TUTORIAL_OPENED_TALENT_SUPPORT_ODO = 1379,
	TUTORIAL_OPENED_ST_GAGE        = 1380,
	TUTORIAL_OPENED_ALLURE_NOW     = 1381,
	TUTORIAL_OPENED_ENDCARD_FENCER = 1382,
	TUTORIAL_OPENED_ENDCARD_HUNTER = 1383,
	TUTORIAL_OPENED_ENDCARD_ALCHEMIST = 1384,
	TUTORIAL_OPENED_ENDCARD_MERCHANT = 1385,
	TUTORIAL_OPENED_ENDCARD_PRIEST = 1386,
	TUTORIAL_OPENED_ENDCARD_PROFESSOR = 1387,
	TUTORIAL_OPENED_ENDCARD_THIEF  = 1388,
	TUTORIAL_OPENED_ENDCARD_DANCER = 1389,
	TUTORIAL_OPENED_ENDCARD_TRUE_END = 1390,
	TUTORIAL_OPENED_AWAKE          = 1391,
	MS_KEN_PROGRESS_FLAG           = 2000,
	MS_SHO_PROGRESS_FLAG           = 2001,
	MS_GAK_PROGRESS_FLAG           = 2002,
	MS_ODO_PROGRESS_FLAG           = 2003,
	MS_KAR_PROGRESS_FLAG           = 2004,
	MS_TOU_PROGRESS_FLAG           = 2005,
	MS_SIN_PROGRESS_FLAG           = 2006,
	MS_KUS_PROGRESS_FLAG           = 2007,
	MS_LASTCHAPTER_START_FLAG      = 2008,
	MS_LASTCHAPTER_END_FLAG        = 2009,
	MS_LASTCHAPTER_CANSTART_FLAG   = 2010,
	MS_LASTCHAPTER_END_20_FLAG     = 2011,
	MS_KAR_20_NOCLEAR_FLAG         = 2012,
	DISAPPEARANCE_DST_TORCH        = 2013,
	DISAPPEARANCE_WLD_TORCH        = 2014,
	DISAPPEARANCE_ISD_TORCH        = 2015,
	DISAPPEARANCE_ANY_TORCH        = 2016,
	PARTY_CHARA_REMOVE_DISABLE     = 2050,
	MS_PROGRESS_FLAG_END           = 2099,
	MS_KEN_REMINISCENCE_END_FLAG   = 2100,
	MS_SHO_REMINISCENCE_END_FLAG   = 2101,
	MS_GAK_REMINISCENCE_END_FLAG   = 2102,
	MS_ODO_REMINISCENCE_END_FLAG   = 2103,
	MS_KAR_REMINISCENCE_END_FLAG   = 2104,
	MS_TOU_REMINISCENCE_END_FLAG   = 2105,
	MS_SIN_REMINISCENCE_END_FLAG   = 2106,
	MS_KUS_REMINISCENCE_END_FLAG   = 2107,
	FENCER_MAINCHARACTER_FLAG      = 2200,
	HUNTER_MAINCHARACTER_FLAG      = 2201,
	ALCHEMIST_MAINCHARACTER_FLAG   = 2202,
	MERCHANT_MAINCHARACTER_FLAG    = 2203,
	PROFESSOR_MAINCHARACTER_FLAG   = 2204,
	PRIEST_MAINCHARACTER_FLAG      = 2205,
	THIEF_MAINCHARACTER_FLAG       = 2206,
	DANCER_MAINCHARACTER_FLAG      = 2207,
	DECISION_MAINCHARACTER_FLAG    = 2208,
	LASTCHAPTER_SHINING_MIRROR_FLAG = 2300,
	WEAPONMASTER_NPC_FIRST_TALK    = 2400,
	WEAPONMASTER_NPC_FIRST_TALK_SELL_WEAPON = 2401,
	WEAPONMASTER_WEAPON_SWD_FIRST_GET = 2402,
	WEAPONMASTER_WEAPON_LNS_FIRST_GET = 2403,
	WEAPONMASTER_WEAPON_DGR_FIRST_GET = 2404,
	WEAPONMASTER_WEAPON_AXE_FIRST_GET = 2405,
	WEAPONMASTER_WEAPON_BOW_FIRST_GET = 2406,
	WEAPONMASTER_WEAPON_SLD_FIRST_GET = 2407,
	INVENTOR_INVENTION_A_GET       = 2408,
	INVENTOR_INVENTION_B_GET       = 2409,
	INVENTOR_INVENTION_C_GET       = 2410,
	INVENTOR_INVENTION_D_GET       = 2411,
	INVENTOR_INVENTION_E_GET       = 2412,
	INVENTOR_INVENTION_F_GET       = 2413,
	INVENTOR_INVENTION_G_GET       = 2414,
	INVENTOR_INVENTION_H_GET       = 2415,
	INVENTOR_INVENTION_ALL_GET     = 2416,
	WEAPONMASTER_FIRST_JOB_LICENSE_GET = 2417,
	RELEASE_JOB_WIZARD             = 2420,
	RELEASE_JOB_SHAMAN             = 2430,
	RELEASE_KEN_ADVANCED_ABILITY   = 2500,
	RELEASE_KAR_ADVANCED_ABILITY   = 2501,
	RELEASE_KUS_ADVANCED_ABILITY   = 2502,
	RELEASE_SHO_ADVANCED_ABILITY   = 2503,
	RELEASE_SIN_ADVANCED_ABILITY   = 2504,
	RELEASE_GAK_ADVANCED_ABILITY   = 2505,
	RELEASE_TOU_ADVANCED_ABILITY   = 2506,
	RELEASE_ODO_ADVANCED_ABILITY   = 2507,
	FORCED_SHIP_TURN_LEFT          = 2600,
	FORCED_SHIP_TURN_RIGHT         = 2601,
	REMINISCENCE                   = 2900,
	REMINISCENCE_MAINMENU          = 2901,
	FIRST_BATATLE                  = 3000,
	FIRST_ABILITY_SELECT           = 3001,
	LOOKS_SHO_CHILD                = 4000,
	LOOKS_SHO_BOY                  = 4001,
	LOOKS_ODO_VILLAGE              = 4002,
	LOOKS_ODO_BREAK                = 4003,
	LOOKS_GAK_RESTRAINT            = 4004,
	LOOKS_KAR_CHILD                = 4005,
	KAR_PARTNER_BIRD               = 4006,
	KAR_PARTNER_WOLF               = 4007,
	LOOKS_SHO_NOHAT                = 4008,
	LOOKS_TOU_CHOKER               = 4009,
	LOOKS_GAK_RESTRAINT_NoGag      = 4010,
	LOOKS_TOU_MONK                 = 4011,
	LOOKS_SHO_YOUTH                = 4012,
	LOOKS_KUS_NoBAG                = 4013,
	LOOKS_GAK_PAST                 = 4014,
	LOOKS_GAK_EPILOGUE             = 4015,
	LOOKS_ODO_EPILOGUE             = 4016,
	LOOKS_SYSTEM_TOU_CHOKER        = 4017,
	GIFT_01                        = 4900,
	GIFT_02                        = 4901,
	GIFT_03                        = 4902,
	GIFT_04                        = 4903,
	GIFT_05                        = 4904,
	GIFT_06                        = 4905,
	GIFT_07                        = 4906,
	GIFT_08                        = 4907,
	GIFT_09                        = 4908,
	GIFT_10                        = 4909,
	GIFT_11                        = 4910,
	GIFT_12                        = 4911,
	GIFT_13                        = 4912,
	GIFT_14                        = 4913,
	GIFT_15                        = 4914,
	GIFT_16                        = 4915,
	GIFT_17                        = 4916,
	GIFT_18                        = 4917,
	GIFT_19                        = 4918,
	GIFT_20                        = 4919,
	MF_KEN_10_0100                 = 5000,
	MF_KEN_10_0200                 = 5001,
	MF_KEN_10_0300                 = 5002,
	MF_KEN_10_0400                 = 5003,
	MF_KEN_10_0500                 = 5004,
	MF_KEN_10_0600                 = 5005,
	MF_KEN_10_0700                 = 5006,
	MF_KEN_10_0800                 = 5007,
	MF_KEN_10_0810                 = 5008,
	MF_KEN_10_0900                 = 5009,
	MF_KEN_10_1000                 = 5010,
	MF_KEN_10_1100                 = 5011,
	MF_KEN_10_1200                 = 5012,
	MF_KEN_10_1210                 = 5013,
	MF_KEN_10_1300                 = 5014,
	MF_KEN_10_1400                 = 5015,
	MF_KEN_10_1500                 = 5016,
	MF_KEN_10_1600                 = 5017,
	MF_KEN_10_1700                 = 5018,
	MF_KEN_10_1800                 = 5019,
	MF_KEN_10_1810                 = 5020,
	MF_KEN_10_1900                 = 5021,
	MF_KEN_10_2000                 = 5022,
	NEXT_KEN_10_FLG010             = 5023,
	NEXT_KEN_10_FLG020             = 5024,
	NEXT_KEN_10_FLG030             = 5025,
	NEXT_KEN_10_FLG040             = 5026,
	NEXT_KEN_10_FLG050             = 5027,
	NEXT_KEN_10_FLG060             = 5028,
	NEXT_KEN_10_FLG070             = 5029,
	NEXT_KEN_10_FLG080             = 5030,
	NEXT_KEN_10_FLG090             = 5031,
	NEXT_KEN_10_FLG100             = 5032,
	MF_KEN_10_END                  = 5049,
	MF_KEN_20_0100                 = 5050,
	MF_KEN_20_0200                 = 5051,
	MF_KEN_20_0300                 = 5052,
	MF_KEN_20_0400                 = 5053,
	MF_KEN_20_0500                 = 5054,
	MF_KEN_20_0600                 = 5055,
	MF_KEN_20_0610                 = 5056,
	MF_KEN_20_0700                 = 5057,
	MF_KEN_20_0800                 = 5058,
	MF_KEN_20_0900                 = 5059,
	MF_KEN_20_0910                 = 5060,
	MF_KEN_20_0920                 = 5061,
	MF_KEN_20_1000                 = 5062,
	MF_KEN_20_1100                 = 5063,
	MF_KEN_20_1200                 = 5064,
	MF_KEN_20_1300                 = 5065,
	MF_KEN_20_1400                 = 5066,
	MF_KEN_20_1500                 = 5067,
	MF_KEN_20_1600                 = 5068,
	MF_KEN_20_1610                 = 5069,
	MF_KEN_20_1700                 = 5070,
	MF_KEN_20_1800                 = 5071,
	MF_KEN_20_1900                 = 5072,
	MF_KEN_20_2000                 = 5073,
	MF_KEN_20_2100                 = 5074,
	MF_KEN_20_2200                 = 5075,
	NEXT_KEN_20_FLG010             = 5076,
	NEXT_KEN_20_FLG020             = 5077,
	NEXT_KEN_20_FLG030             = 5078,
	NEXT_KEN_20_FLG040             = 5079,
	NEXT_KEN_20_FLG050             = 5080,
	NEXT_KEN_20_FLG060             = 5081,
	NEXT_KEN_20_FLG070             = 5082,
	NEXT_KEN_20_FLG080             = 5083,
	NEXT_KEN_20_FLG090             = 5084,
	MF_KEN_30_0100                 = 5100,
	MF_KEN_30_0200                 = 5101,
	MF_KEN_30_0300                 = 5102,
	MF_KEN_30_0400                 = 5103,
	MF_KEN_30_0500                 = 5104,
	MF_KEN_30_0600                 = 5105,
	MF_KEN_30_0700                 = 5106,
	MF_KEN_30_0800                 = 5107,
	MF_KEN_30_0900                 = 5108,
	MF_KEN_30_1000                 = 5109,
	MF_KEN_30_1100                 = 5110,
	MF_KEN_30_1200                 = 5111,
	MF_KEN_30_1300                 = 5112,
	NEXT_KEN_30_FLG010             = 5113,
	NEXT_KEN_30_FLG020             = 5114,
	NEXT_KEN_30_FLG030             = 5115,
	MF_KEN_40_0100                 = 5150,
	MF_KEN_40_0200                 = 5151,
	MF_KEN_40_0210                 = 5152,
	MF_KEN_40_0300                 = 5153,
	MF_KEN_40_0400                 = 5154,
	MF_KEN_40_0500                 = 5155,
	MF_KEN_40_0600                 = 5156,
	MF_KEN_40_0700                 = 5157,
	MF_KEN_40_0800                 = 5158,
	MF_KEN_40_0810                 = 5159,
	MF_KEN_40_0900                 = 5160,
	MF_KEN_40_1000                 = 5161,
	MF_KEN_40_1100                 = 5162,
	MF_KEN_40_1200                 = 5163,
	MF_KEN_40_1300                 = 5164,
	MF_KEN_40_1400                 = 5165,
	MF_KEN_40_1500                 = 5166,
	MF_KEN_40_1600                 = 5167,
	MF_KEN_40_1700                 = 5168,
	MF_KEN_40_1800                 = 5169,
	MF_KEN_40_1900                 = 5170,
	NEXT_KEN_40_FLG010             = 5171,
	NEXT_KEN_40_FLG020             = 5172,
	NEXT_KEN_40_FLG030             = 5173,
	NEXT_KEN_40_FLG040             = 5174,
	NEXT_KEN_40_FLG050             = 5175,
	NEXT_KEN_40_FLG060             = 5176,
	MF_KEN_50_0100                 = 5200,
	MF_KEN_50_0200                 = 5201,
	MF_KEN_50_0300                 = 5202,
	MF_KEN_50_0400                 = 5203,
	MF_KEN_50_0410                 = 5204,
	MF_KEN_50_0500                 = 5205,
	MF_KEN_50_0510                 = 5206,
	MF_KEN_50_0600                 = 5207,
	MF_KEN_50_0610                 = 5208,
	MF_KEN_50_0700                 = 5209,
	MF_KEN_50_0710                 = 5210,
	MF_KEN_50_0800                 = 5211,
	MF_KEN_50_0900                 = 5212,
	MF_KEN_50_1000                 = 5213,
	MF_KEN_50_1100                 = 5214,
	MF_KEN_50_1200                 = 5215,
	MF_KEN_50_1300                 = 5216,
	MF_KEN_50_1400                 = 5217,
	MF_KEN_50_1500                 = 5218,
	MF_KEN_50_1600                 = 5219,
	MF_KEN_50_1700                 = 5220,
	MF_KEN_50_1710                 = 5221,
	MF_KEN_50_1800                 = 5222,
	MF_KEN_50_1810                 = 5223,
	MF_KEN_50_1900                 = 5224,
	MF_KEN_50_2000                 = 5225,
	NEXT_KEN_50_FLG010             = 5226,
	NEXT_KEN_50_FLG020             = 5227,
	NEXT_KEN_50_FLG030             = 5228,
	NEXT_KEN_50_FLG040             = 5229,
	NEXT_KEN_50_FLG050             = 5230,
	NEXT_KEN_50_FLG060             = 5231,
	NEXT_KEN_50_FLG070             = 5232,
	MF_KEN_50_0310                 = 5233,
	MF_KEN_50_0720                 = 5234,
	MF_KEN_50_0730                 = 5235,
	MF_SIN_10_0100                 = 5500,
	MF_SIN_10_0200                 = 5501,
	MF_SIN_10_0300                 = 5502,
	MF_SIN_10_0400                 = 5503,
	MF_SIN_10_0410                 = 5504,
	MF_SIN_10_0420                 = 5505,
	MF_SIN_10_0430                 = 5506,
	MF_SIN_10_0440                 = 5507,
	MF_SIN_10_0500                 = 5508,
	MF_SIN_10_0600                 = 5509,
	MF_SIN_10_0700                 = 5510,
	MF_SIN_10_0800                 = 5511,
	MF_SIN_10_0900                 = 5512,
	MF_SIN_10_1000                 = 5513,
	MF_SIN_10_1100                 = 5514,
	MF_SIN_10_1200                 = 5515,
	MF_SIN_10_1300                 = 5516,
	MF_SIN_10_1400                 = 5517,
	MF_SIN_10_1500                 = 5518,
	MF_SIN_10_1600                 = 5519,
	MF_SIN_10_1700                 = 5520,
	MF_SIN_10_1800                 = 5521,
	NEXT_SIN_10_FLG010             = 5522,
	NEXT_SIN_10_FLG020             = 5523,
	NEXT_SIN_10_FLG025             = 5524,
	NEXT_SIN_10_FLG030             = 5525,
	NEXT_SIN_10_FLG040             = 5526,
	NEXT_SIN_10_FLG050             = 5527,
	NEXT_SIN_10_FLG060             = 5528,
	NEXT_SIN_10_FLG070             = 5529,
	NEXT_SIN_10_FLG080             = 5530,
	NEXT_SIN_10_FLG090             = 5531,
	NEXT_SIN_10_FLG100             = 5532,
	NEXT_SIN_10_FLG110             = 5533,
	NEXT_SIN_10_FLG120             = 5534,
	MF_SIN_20_0100                 = 5550,
	MF_SIN_20_0200                 = 5551,
	MF_SIN_20_0300                 = 5552,
	MF_SIN_20_0400                 = 5553,
	MF_SIN_20_0500                 = 5554,
	MF_SIN_20_0700                 = 5555,
	MF_SIN_20_0800                 = 5556,
	MF_SIN_20_0900                 = 5557,
	MF_SIN_20_0910                 = 5558,
	MF_SIN_20_1100                 = 5559,
	MF_SIN_20_1200                 = 5560,
	MF_SIN_20_1300                 = 5561,
	MF_SIN_20_1310                 = 5562,
	MF_SIN_20_1400                 = 5563,
	MF_SIN_20_1500                 = 5564,
	MF_SIN_20_1600                 = 5565,
	MF_SIN_20_1700                 = 5566,
	MF_SIN_20_1800                 = 5567,
	NEXT_SIN_20_FLG010             = 5568,
	NEXT_SIN_20_FLG020             = 5569,
	NEXT_SIN_20_FLG030             = 5570,
	NEXT_SIN_20_FLG040             = 5571,
	NEXT_SIN_20_FLG050             = 5572,
	NEXT_SIN_20_FLG060             = 5573,
	NEXT_SIN_20_FLG070             = 5574,
	NEXT_SIN_20_FLG080             = 5575,
	MF_SIN_3A_0100                 = 5600,
	MF_SIN_3A_0200                 = 5601,
	MF_SIN_3A_0300                 = 5602,
	MF_SIN_3A_0310                 = 5603,
	MF_SIN_3A_0400                 = 5604,
	MF_SIN_3A_0500                 = 5605,
	MF_SIN_3A_0600                 = 5606,
	MF_SIN_3A_0700                 = 5607,
	MF_SIN_3A_0800                 = 5608,
	MF_SIN_3A_0900                 = 5609,
	MF_SIN_3A_1000                 = 5610,
	MF_SIN_3A_1100                 = 5611,
	MF_SIN_3A_1110                 = 5612,
	MF_SIN_3A_1120                 = 5613,
	MF_SIN_3A_1130                 = 5614,
	MF_SIN_3A_1140                 = 5615,
	MF_SIN_3A_1200                 = 5616,
	MF_SIN_3A_1210                 = 5617,
	MF_SIN_3A_1300                 = 5618,
	MF_SIN_3A_1400                 = 5619,
	MF_SIN_3A_1500                 = 5620,
	NEXT_SIN_3A_FLG010             = 5621,
	NEXT_SIN_3A_FLG020             = 5622,
	NEXT_SIN_3A_FLG030             = 5623,
	NEXT_SIN_3A_FLG040             = 5624,
	NEXT_SIN_3A_FLG050             = 5625,
	NEXT_SIN_3A_FLG060             = 5626,
	NEXT_SIN_3A_FLG070             = 5627,
	NEXT_SIN_3A_FLG080             = 5628,
	NEXT_SIN_3A_FLG090             = 5629,
	MF_SIN_3A_0810                 = 5630,
	MF_SIN_3A_0820                 = 5631,
	MF_SIN_3A_0000                 = 5632,
	MF_SIN_3A_1600                 = 5633,
	MF_SIN_3A_1115                 = 5634,
	MF_SIN_3B_0100                 = 5650,
	MF_SIN_3B_0200                 = 5651,
	MF_SIN_3B_0300                 = 5652,
	MF_SIN_3B_0400                 = 5653,
	MF_SIN_3B_0500                 = 5654,
	MF_SIN_3B_0600                 = 5655,
	MF_SIN_3B_0700                 = 5656,
	MF_SIN_3B_0800                 = 5657,
	MF_SIN_3B_0900                 = 5658,
	MF_SIN_3B_1000                 = 5659,
	MF_SIN_3B_1100                 = 5660,
	MF_SIN_3B_1200                 = 5661,
	NEXT_SIN_3B_FLG010             = 5662,
	NEXT_SIN_3B_FLG020             = 5663,
	NEXT_SIN_3B_FLG030             = 5664,
	NEXT_SIN_3B_FLG040             = 5665,
	NEXT_SIN_3B_FLG050             = 5666,
	NEXT_SIN_3B_FLG060             = 5667,
	NEXT_SIN_3B_FLG070             = 5668,
	MF_SIN_40_0000                 = 5700,
	MF_SIN_40_0100                 = 5701,
	MF_SIN_40_0200                 = 5702,
	MF_SIN_40_0300                 = 5703,
	MF_SIN_40_0310                 = 5704,
	MF_SIN_40_0400                 = 5705,
	MF_SIN_40_0500                 = 5706,
	MF_SIN_40_0600                 = 5707,
	MF_SIN_40_0700                 = 5708,
	MF_SIN_40_0710                 = 5709,
	MF_SIN_40_0720                 = 5710,
	MF_SIN_40_0800                 = 5711,
	MF_SIN_40_0900                 = 5712,
	MF_SIN_40_1000                 = 5713,
	MF_SIN_40_1100                 = 5714,
	MF_SIN_40_1200                 = 5715,
	NEXT_SIN_40_FLG010             = 5716,
	NEXT_SIN_40_FLG020             = 5717,
	NEXT_SIN_40_FLG030             = 5718,
	NEXT_SIN_40_FLG040             = 5719,
	NEXT_SIN_40_FLG050             = 5720,
	MF_SIN_40_0510                 = 5721,
	MF_SIN_40_0410                 = 5722,
	NEXT_SIN_40_FLG060             = 5723,
	MF_SHO_10_0100                 = 6000,
	MF_SHO_10_0110                 = 6001,
	MF_SHO_10_0200                 = 6002,
	MF_SHO_10_0300                 = 6003,
	MF_SHO_10_0400                 = 6004,
	MF_SHO_10_0500                 = 6005,
	MF_SHO_10_0600                 = 6006,
	MF_SHO_10_0700                 = 6007,
	MF_SHO_10_0800                 = 6008,
	MF_SHO_10_0900                 = 6009,
	MF_SHO_10_1000                 = 6010,
	MF_SHO_10_1100                 = 6011,
	MF_SHO_10_1200                 = 6012,
	MF_SHO_10_1300                 = 6013,
	MF_SHO_10_1400                 = 6014,
	MF_SHO_10_1500                 = 6015,
	MF_SHO_10_1510                 = 6016,
	MF_SHO_10_1600                 = 6017,
	MF_SHO_10_1700                 = 6018,
	MF_SHO_10_1800                 = 6019,
	NEXT_SHO_10_FLG010             = 6020,
	NEXT_SHO_10_FLG020             = 6021,
	NEXT_SHO_10_FLG030             = 6022,
	NEXT_SHO_10_FLG040             = 6023,
	NEXT_SHO_10_FLG050             = 6024,
	NEXT_SHO_10_FLG060             = 6025,
	NEXT_SHO_10_FLG070             = 6026,
	NEXT_SHO_10_FLG080             = 6027,
	NEXT_SHO_10_FLG090             = 6028,
	NEXT_SHO_10_FLG100             = 6029,
	NEXT_SHO_10_FLG110             = 6030,
	NEXT_SHO_10_FLG120             = 6031,
	NEXT_SHO_10_FLG130             = 6032,
	MF_SHO_20_0050                 = 6076,
	MF_SHO_20_0100                 = 6050,
	MF_SHO_20_0110                 = 6051,
	MF_SHO_20_0200                 = 6052,
	MF_SHO_20_0300                 = 6053,
	MF_SHO_20_0400                 = 6054,
	MF_SHO_20_0410                 = 6055,
	MF_SHO_20_0500                 = 6056,
	MF_SHO_20_0600                 = 6057,
	MF_SHO_20_0610                 = 6058,
	MF_SHO_20_0620                 = 6059,
	MF_SHO_20_0630                 = 6077,
	MF_SHO_20_0640                 = 6078,
	MF_SHO_20_0650                 = 6079,
	MF_SHO_20_0700                 = 6060,
	MF_SHO_20_0800                 = 6061,
	MF_SHO_20_0810                 = 6080,
	MF_SHO_20_0820                 = 6081,
	MF_SHO_20_0900                 = 6062,
	MF_SHO_20_1000                 = 6063,
	MF_SHO_20_1010                 = 6064,
	MF_SHO_20_1100                 = 6065,
	NEXT_SHO_20_FLG010             = 6066,
	NEXT_SHO_20_FLG020             = 6067,
	NEXT_SHO_20_FLG030             = 6068,
	NEXT_SHO_20_FLG040             = 6069,
	NEXT_SHO_20_FLG050             = 6070,
	NEXT_SHO_20_FLG060             = 6071,
	NEXT_SHO_20_FLG070             = 6072,
	NEXT_SHO_20_FLG080             = 6073,
	NEXT_SHO_20_FLG090             = 6074,
	NEXT_SHO_20_FLG100             = 6075,
	MF_SHO_30_0100                 = 6100,
	MF_SHO_30_0200                 = 6101,
	MF_SHO_30_0300                 = 6102,
	MF_SHO_30_03A0                 = 6103,
	MF_SHO_30_0400                 = 6104,
	MF_SHO_30_0500                 = 6105,
	MF_SHO_30_05A0                 = 6106,
	MF_SHO_30_05B0                 = 6107,
	MF_SHO_30_05C0                 = 6108,
	MF_SHO_30_0600                 = 6109,
	MF_SHO_30_0700                 = 6110,
	MF_SHO_30_0900                 = 6112,
	MF_SHO_30_1000                 = 6113,
	MF_SHO_30_1100                 = 6114,
	MF_SHO_30_1200                 = 6115,
	MF_SHO_30_1300                 = 6116,
	MF_SHO_30_1400                 = 6117,
	NEXT_SHO_30_FLG010             = 6118,
	NEXT_SHO_30_FLG020             = 6119,
	NEXT_SHO_30_FLG030             = 6120,
	NEXT_SHO_30_FLG040             = 6121,
	NEXT_SHO_30_FLG050             = 6122,
	NEXT_SHO_30_FLG060             = 6123,
	NEXT_SHO_30_FLG070             = 6124,
	NEXT_SHO_30_FLG080             = 6125,
	NEXT_SHO_30_FLG090             = 6126,
	NEXT_SHO_30_FLG100             = 6127,
	NEXT_SHO_30_FLG110             = 6128,
	NEXT_SHO_30_FLG120             = 6129,
	NEXT_SHO_30_FLG130             = 6130,
	NEXT_SHO_30_FLG140             = 6131,
	NEXT_SHO_30_FLG150             = 6132,
	MF_SHO_30_0510                 = 6133,
	MF_SHO_30_0520                 = 6134,
	MF_SHO_30_0505                 = 6135,
	MF_SHO_40_0100                 = 6150,
	MF_SHO_40_0200                 = 6151,
	MF_SHO_40_0300                 = 6152,
	MF_SHO_40_0400                 = 6153,
	MF_SHO_40_0410                 = 6154,
	MF_SHO_40_0500                 = 6155,
	MF_SHO_40_0600                 = 6156,
	MF_SHO_40_0700                 = 6157,
	MF_SHO_40_0800                 = 6158,
	MF_SHO_40_0900                 = 6159,
	MF_SHO_40_1000                 = 6160,
	MF_SHO_40_1100                 = 6161,
	MF_SHO_40_1200                 = 6162,
	MF_SHO_40_1300                 = 6163,
	MF_SHO_40_1400                 = 6164,
	MF_SHO_40_1500                 = 6165,
	MF_SHO_40_1600                 = 6166,
	MF_SHO_40_1700                 = 6167,
	MF_SHO_40_1800                 = 6168,
	NEXT_SHO_40_FLG010             = 6169,
	NEXT_SHO_40_FLG020             = 6170,
	NEXT_SHO_40_FLG030             = 6171,
	NEXT_SHO_40_FLG040             = 6172,
	NEXT_SHO_40_FLG050             = 6173,
	NEXT_SHO_40_FLG060             = 6174,
	NEXT_SHO_40_FLG070             = 6175,
	NEXT_SHO_40_FLG080             = 6176,
	MF_SHO_40_1510                 = 6177,
	MF_SHO_40_0610                 = 6178,
	MF_SHO_EX1_0100                = 6200,
	MF_SHO_EX1_0200                = 6201,
	MF_SHO_EX1_0300                = 6202,
	MF_SHO_EX1_0400                = 6203,
	MF_SHO_EX1_0410                = 6204,
	MF_SHO_EX1_0500                = 6205,
	MF_SHO_EX1_0600                = 6206,
	MF_SHO_EX1_0700                = 6207,
	MF_SHO_EX1_0800                = 6208,
	MF_SHO_EX2_0100                = 6250,
	MF_SHO_EX2_0200                = 6251,
	MF_SHO_EX2_0300                = 6252,
	MF_SHO_EX2_04A0                = 6253,
	MF_SHO_EX2_04B0                = 6254,
	MF_SHO_EX2_04C0                = 6255,
	MF_SHO_EX2_0400                = 6256,
	MF_SHO_EX2_0500                = 6257,
	MF_SHO_EX3_0100                = 6300,
	MF_SHO_EX3_0200                = 6301,
	MF_SHO_EX3_0300                = 6302,
	MF_SHO_EX3_0400                = 6303,
	MF_SHO_EX3_0500                = 6304,
	MF_SHO_EX3_0600                = 6305,
	MF_ODO_10_0100                 = 6500,
	MF_ODO_10_0200                 = 6501,
	MF_ODO_10_0300                 = 6502,
	MF_ODO_10_0400                 = 6503,
	MF_ODO_10_0500                 = 6504,
	MF_ODO_10_0600                 = 6505,
	MF_ODO_10_0700                 = 6506,
	MF_ODO_10_0800                 = 6507,
	MF_ODO_10_0900                 = 6508,
	MF_ODO_10_1000                 = 6509,
	MF_ODO_10_1100                 = 6510,
	MF_ODO_10_1200                 = 6511,
	MF_ODO_10_1300                 = 6512,
	MF_ODO_10_1400                 = 6513,
	MF_ODO_10_1500                 = 6514,
	MF_ODO_10_1600                 = 6515,
	MF_ODO_10_1700                 = 6516,
	MF_ODO_10_1800                 = 6517,
	MF_ODO_10_1900                 = 6525,
	NEXT_ODO_10_FLG010             = 6518,
	NEXT_ODO_10_FLG020             = 6519,
	NEXT_ODO_10_FLG030             = 6520,
	NEXT_ODO_10_FLG040             = 6521,
	NEXT_ODO_10_FLG050             = 6522,
	NEXT_ODO_10_FLG060             = 6523,
	NEXT_ODO_10_FLG070             = 6526,
	NEXT_ODO_10_FLG080             = 6527,
	NEXT_ODO_10_FLG090             = 6528,
	NEXT_ODO_10_FLG100             = 6529,
	NEXT_ODO_10_FLG110             = 6530,
	MF_ODO_10_END                  = 6549,
	MF_ODO_20_0100                 = 6550,
	MF_ODO_20_0200                 = 6551,
	MF_ODO_20_0300                 = 6552,
	MF_ODO_20_0310                 = 6553,
	MF_ODO_20_0320                 = 6554,
	MF_ODO_20_0400                 = 6555,
	MF_ODO_20_0500                 = 6556,
	MF_ODO_20_0600                 = 6557,
	MF_ODO_20_0700                 = 6558,
	MF_ODO_20_0800                 = 6559,
	MF_ODO_20_0900                 = 6560,
	MF_ODO_20_1000                 = 6561,
	MF_ODO_20_1100                 = 6562,
	MF_ODO_20_1110                 = 6588,
	MF_ODO_20_1200                 = 6563,
	MF_ODO_20_1300                 = 6564,
	MF_ODO_20_1400                 = 6565,
	MF_ODO_20_1410                 = 6587,
	MF_ODO_20_1500                 = 6566,
	MF_ODO_20_1600                 = 6589,
	NEXT_ODO_20_FLG010             = 6567,
	NEXT_ODO_20_FLG020             = 6568,
	NEXT_ODO_20_FLG030             = 6569,
	NEXT_ODO_20_FLG040             = 6570,
	NEXT_ODO_20_FLG050             = 6571,
	NEXT_ODO_20_FLG060             = 6572,
	NEXT_ODO_20_FLG070             = 6573,
	NEXT_ODO_20_FLG080             = 6574,
	NEXT_ODO_20_FLG090             = 6575,
	NEXT_ODO_20_FLG100             = 6576,
	NEXT_ODO_20_FLG110             = 6577,
	NEXT_ODO_20_FLG120             = 6578,
	NEXT_ODO_20_FLG130             = 6579,
	NEXT_ODO_20_FLG140             = 6580,
	NEXT_ODO_20_FLG150             = 6581,
	NEXT_ODO_20_FLG160             = 6582,
	NEXT_ODO_20_FLG170             = 6583,
	NEXT_ODO_20_FLG180             = 6584,
	NEXT_ODO_20_FLG190             = 6585,
	NEXT_ODO_20_FLG200             = 6586,
	MF_ODO_30_0100                 = 6600,
	MF_ODO_30_0200                 = 6601,
	MF_ODO_30_0300                 = 6602,
	MF_ODO_30_0400                 = 6603,
	MF_ODO_30_0500                 = 6604,
	MF_ODO_30_0600                 = 6605,
	MF_ODO_30_0700                 = 6606,
	MF_ODO_30_0800                 = 6607,
	NEXT_ODO_30_FLG010             = 6608,
	NEXT_ODO_30_FLG020             = 6609,
	NEXT_ODO_30_FLG030             = 6610,
	NEXT_ODO_30_FLG040             = 6611,
	NEXT_ODO_30_FLG050             = 6612,
	NEXT_ODO_30_FLG060             = 6613,
	MF_ODO_40_0100                 = 6650,
	MF_ODO_40_0105                 = 6651,
	MF_ODO_40_0110                 = 6652,
	MF_ODO_40_0200                 = 6653,
	MF_ODO_40_0400                 = 6654,
	MF_ODO_40_0500                 = 6655,
	MF_ODO_40_0600                 = 6656,
	MF_ODO_40_0800                 = 6657,
	MF_ODO_40_0810                 = 6658,
	MF_ODO_40_0900                 = 6659,
	MF_ODO_40_1000                 = 6660,
	MF_ODO_40_1100                 = 6661,
	MF_ODO_40_1200                 = 6662,
	MF_ODO_40_1300                 = 6663,
	MF_ODO_40_1400                 = 6664,
	MF_ODO_40_1500                 = 6665,
	MF_ODO_40_1600                 = 6666,
	MF_ODO_40_1700                 = 6667,
	NEXT_ODO_40_FLG010             = 6668,
	NEXT_ODO_40_FLG020             = 6669,
	NEXT_ODO_40_FLG030             = 6670,
	NEXT_ODO_40_FLG040             = 6671,
	NEXT_ODO_40_FLG050             = 6672,
	NEXT_ODO_40_FLG060             = 6673,
	MF_ODO_50_0100                 = 6700,
	MF_ODO_50_0200                 = 6701,
	MF_ODO_50_0300                 = 6702,
	MF_ODO_50_0400                 = 6703,
	MF_ODO_50_0410                 = 6704,
	MF_ODO_50_0600                 = 6705,
	MF_ODO_50_0700                 = 6706,
	MF_ODO_50_0900                 = 6707,
	MF_ODO_50_1000                 = 6708,
	MF_ODO_50_1100                 = 6709,
	MF_ODO_50_1200                 = 6710,
	MF_ODO_50_1300                 = 6711,
	MF_ODO_50_1400                 = 6712,
	MF_ODO_50_1600                 = 6713,
	MF_ODO_50_1700                 = 6714,
	MF_ODO_50_1800                 = 6715,
	MF_ODO_50_1900                 = 6716,
	MF_ODO_50_2000                 = 6717,
	NEXT_ODO_50_FLG010             = 6718,
	NEXT_ODO_50_FLG020             = 6719,
	NEXT_ODO_50_FLG030             = 6720,
	NEXT_ODO_50_FLG040             = 6721,
	NEXT_ODO_50_FLG050             = 6722,
	NEXT_ODO_50_FLG060             = 6723,
	MF_GAK_10_0100                 = 7000,
	MF_GAK_10_0200                 = 7001,
	MF_GAK_10_0300                 = 7002,
	MF_GAK_10_0400                 = 7003,
	MF_GAK_10_0500                 = 7004,
	MF_GAK_10_0600                 = 7005,
	MF_GAK_10_0700                 = 7006,
	MF_GAK_10_0800                 = 7007,
	MF_GAK_10_0810                 = 7008,
	MF_GAK_10_0820                 = 7009,
	MF_GAK_10_0900                 = 7010,
	MF_GAK_10_0910                 = 7011,
	MF_GAK_10_0920                 = 7012,
	MF_GAK_10_1000                 = 7013,
	MF_GAK_10_1100                 = 7014,
	MF_GAK_10_1200                 = 7015,
	MF_GAK_10_1300                 = 7016,
	MF_GAK_10_1400                 = 7017,
	MF_GAK_10_1410                 = 7036,
	MF_GAK_10_1500                 = 7018,
	MF_GAK_10_1600                 = 7019,
	MF_GAK_10_1700                 = 7020,
	NEXT_GAK_10_FLG010             = 7021,
	NEXT_GAK_10_FLG020             = 7022,
	NEXT_GAK_10_FLG030             = 7023,
	NEXT_GAK_10_FLG040             = 7024,
	NEXT_GAK_10_FLG050             = 7025,
	NEXT_GAK_10_FLG060             = 7026,
	NEXT_GAK_10_FLG070             = 7027,
	NEXT_GAK_10_FLG080             = 7028,
	NEXT_GAK_10_FLG090             = 7029,
	NEXT_GAK_10_FLG100             = 7030,
	NEXT_GAK_10_FLG110             = 7031,
	NEXT_GAK_10_FLG120             = 7032,
	NEXT_GAK_10_FLG130             = 7033,
	NEXT_GAK_10_FLG045             = 7034,
	NEXT_GAK_10_FLG140             = 7035,
	NEXT_GAK_10_FLG150             = 7037,
	NEXT_GAK_10_FLG160             = 7038,
	MF_GAK_20_0100                 = 7050,
	MF_GAK_20_0110                 = 7051,
	MF_GAK_20_0200                 = 7052,
	MF_GAK_20_0210                 = 7053,
	MF_GAK_20_0300                 = 7054,
	MF_GAK_20_0400                 = 7055,
	MF_GAK_20_0500                 = 7056,
	MF_GAK_20_0600                 = 7057,
	MF_GAK_20_0700                 = 7058,
	MF_GAK_20_0710                 = 7059,
	MF_GAK_20_0800                 = 7060,
	MF_GAK_20_0900                 = 7061,
	MF_GAK_20_1000                 = 7062,
	NEXT_GAK_20_FLG010             = 7063,
	NEXT_GAK_20_FLG020             = 7064,
	NEXT_GAK_20_FLG030             = 7065,
	NEXT_GAK_20_FLG040             = 7066,
	NEXT_GAK_20_FLG050             = 7067,
	MF_GAK_30_0100                 = 7100,
	MF_GAK_30_0200                 = 7101,
	MF_GAK_30_0300                 = 7102,
	MF_GAK_30_0400                 = 7103,
	MF_GAK_30_0500                 = 7104,
	MF_GAK_30_0510                 = 7105,
	MF_GAK_30_0600                 = 7106,
	MF_GAK_30_0700                 = 7107,
	MF_GAK_30_0800                 = 7108,
	NEXT_GAK_30_FLG_010            = 7109,
	NEXT_GAK_30_FLG_020            = 7110,
	NEXT_GAK_30_FLG_030            = 7111,
	NEXT_GAK_30_FLG_040            = 7112,
	NEXT_GAK_30_FLG_050            = 7113,
	MF_GAK_40_0100                 = 7150,
	MF_GAK_40_0200                 = 7151,
	MF_GAK_40_0300                 = 7152,
	MF_GAK_40_0400                 = 7153,
	MF_GAK_40_0500                 = 7154,
	MF_GAK_40_0600                 = 7155,
	MF_GAK_40_0650                 = 7156,
	MF_GAK_40_0700                 = 7157,
	MF_GAK_40_0800                 = 7158,
	MF_GAK_40_0900                 = 7159,
	MF_GAK_40_1000                 = 7160,
	NEXT_GAK_40_FLG010             = 7161,
	NEXT_GAK_40_FLG020             = 7162,
	NEXT_GAK_40_FLG030             = 7163,
	NEXT_GAK_40_FLG040             = 7164,
	NEXT_GAK_40_FLG050             = 7165,
	MF_GAK_40_0510                 = 7166,
	MF_GAK_40_0520                 = 7167,
	MF_GAK_50_0100                 = 7200,
	MF_GAK_50_0200                 = 7201,
	MF_GAK_50_0300                 = 7202,
	MF_GAK_50_0500                 = 7203,
	MF_GAK_50_0600                 = 7204,
	MF_GAK_50_0700                 = 7205,
	MF_GAK_50_0800                 = 7206,
	MF_GAK_50_0900                 = 7207,
	MF_GAK_50_1000                 = 7208,
	MF_GAK_50_1100                 = 7209,
	MF_GAK_50_1300                 = 7210,
	NEXT_GAK_50_FLG010             = 7211,
	NEXT_GAK_50_FLG020             = 7212,
	NEXT_GAK_50_FLG030             = 7213,
	MF_GAK_50_0310                 = 7214,
	MF_GAK_50_0320                 = 7215,
	NEXT_GAK_50_FLG040             = 7216,
	NEXT_GAK_50_FLG050             = 7217,
	MF_KAR_10_0100                 = 7500,
	MF_KAR_10_0200                 = 7501,
	MF_KAR_10_0300                 = 7502,
	MF_KAR_10_0400                 = 7503,
	MF_KAR_10_0500                 = 7504,
	MF_KAR_10_0600                 = 7505,
	MF_KAR_10_0700                 = 7506,
	MF_KAR_10_0800                 = 7507,
	MF_KAR_10_0900                 = 7508,
	MF_KAR_10_1000                 = 7509,
	MF_KAR_10_1100                 = 7510,
	MF_KAR_10_1200                 = 7511,
	MF_KAR_10_1300                 = 7512,
	MF_KAR_10_1400                 = 7513,
	MF_KAR_10_1500                 = 7514,
	MF_KAR_10_1510                 = 7515,
	MF_KAR_10_1600                 = 7516,
	MF_KAR_10_1700                 = 7517,
	MF_KAR_10_1710                 = 7518,
	MF_KAR_10_1800                 = 7519,
	MF_KAR_10_1900                 = 7520,
	MF_KAR_10_2000                 = 7521,
	NEXT_KAR_10_FLG010             = 7522,
	NEXT_KAR_10_FLG020             = 7523,
	NEXT_KAR_10_FLG030             = 7524,
	NEXT_KAR_10_FLG040             = 7525,
	NEXT_KAR_10_FLG050             = 7526,
	NEXT_KAR_10_FLG060             = 7527,
	NEXT_KAR_10_FLG070             = 7528,
	NEXT_KAR_10_FLG075             = 7532,
	NEXT_KAR_10_FLG080             = 7529,
	NEXT_KAR_10_FLG090             = 7530,
	NEXT_KAR_10_FLG100             = 7531,
	MF_KAR_2A_0100                 = 7550,
	MF_KAR_2A_0110                 = 7551,
	MF_KAR_2A_0200                 = 7552,
	MF_KAR_2A_0300                 = 7553,
	MF_KAR_2A_0310                 = 7554,
	MF_KAR_2A_0400                 = 7555,
	MF_KAR_2A_0500                 = 7556,
	MF_KAR_2A_0510                 = 7557,
	MF_KAR_2A_0600                 = 7558,
	NEXT_KAR_2A_FLG010             = 7559,
	NEXT_KAR_2A_FLG020             = 7560,
	NEXT_KAR_2A_FLG030             = 7561,
	NEXT_KAR_2A_FLG040             = 7562,
	NEXT_KAR_2A_FLG050             = 7563,
	NEXT_KAR_2A_FLG060             = 7564,
	MF_KAR_2B_0100                 = 7600,
	MF_KAR_2B_0200                 = 7601,
	MF_KAR_2B_0300                 = 7602,
	MF_KAR_2B_0400                 = 7603,
	MF_KAR_2B_0500                 = 7604,
	MF_KAR_2B_0600                 = 7605,
	MF_KAR_2B_0700                 = 7606,
	MF_KAR_2B_0800                 = 7607,
	MF_KAR_2B_0900                 = 7608,
	NEXT_KAR_2B_FLG010             = 7609,
	NEXT_KAR_2B_FLG020             = 7610,
	NEXT_KAR_2B_FLG030             = 7611,
	NEXT_KAR_2B_FLG040             = 7612,
	NEXT_KAR_2B_FLG050             = 7613,
	MF_KAR_2C_0100                 = 7650,
	MF_KAR_2C_0200                 = 7651,
	MF_KAR_2C_0300                 = 7652,
	MF_KAR_2C_0400                 = 7653,
	MF_KAR_2C_0500                 = 7654,
	MF_KAR_2C_0600                 = 7655,
	MF_KAR_2C_0700                 = 7656,
	MF_KAR_2C_0800                 = 7657,
	MF_KAR_2C_0900                 = 7658,
	MF_KAR_2C_1000                 = 7659,
	MF_KAR_2C_1100                 = 7660,
	MF_KAR_2C_1200                 = 7661,
	NEXT_KAR_2C_FLG010             = 7662,
	NEXT_KAR_2C_FLG020             = 7663,
	NEXT_KAR_2C_FLG030             = 7664,
	NEXT_KAR_2C_FLG040             = 7665,
	NEXT_KAR_2C_FLG050             = 7666,
	MF_KAR_30_0000                 = 7730,
	MF_KAR_30_0100                 = 7700,
	MF_KAR_30_0200                 = 7701,
	MF_KAR_30_0300                 = 7702,
	MF_KAR_30_0400                 = 7703,
	MF_KAR_30_0500                 = 7704,
	MF_KAR_30_0600                 = 7705,
	MF_KAR_30_0700                 = 7706,
	MF_KAR_30_0800                 = 7707,
	MF_KAR_30_0900                 = 7708,
	MF_KAR_30_1000                 = 7709,
	MF_KAR_30_1100                 = 7710,
	MF_KAR_30_1200                 = 7711,
	MF_KAR_30_1300                 = 7712,
	MF_KAR_30_1400                 = 7713,
	MF_KAR_30_1500                 = 7714,
	MF_KAR_30_1600                 = 7715,
	MF_KAR_30_1700                 = 7716,
	MF_KAR_30_1800                 = 7717,
	MF_KAR_30_1900                 = 7718,
	MF_KAR_30_2000                 = 7719,
	MF_KAR_30_2100                 = 7720,
	MF_KAR_30_2200                 = 7721,
	MF_KAR_30_2300                 = 7722,
	MF_KAR_30_2400                 = 7723,
	MF_KAR_30_2500                 = 7724,
	NEXT_KAR_30_FLG010             = 7725,
	NEXT_KAR_30_FLG020             = 7726,
	NEXT_KAR_30_FLG030             = 7727,
	NEXT_KAR_30_FLG040             = 7728,
	NEXT_KAR_30_FLG050             = 7729,
	MF_TOU_10_0100                 = 8000,
	MF_TOU_10_0200                 = 8001,
	MF_TOU_10_0300                 = 8002,
	MF_TOU_10_0400                 = 8003,
	MF_TOU_10_0500                 = 8004,
	MF_TOU_10_0600                 = 8005,
	MF_TOU_10_0700                 = 8006,
	MF_TOU_10_0800                 = 8007,
	MF_TOU_10_0900                 = 8008,
	MF_TOU_10_1000                 = 8009,
	MF_TOU_10_1100                 = 8010,
	MF_TOU_10_1200                 = 8011,
	MF_TOU_10_1300                 = 8012,
	MF_TOU_10_1400                 = 8013,
	MF_TOU_10_1500                 = 8014,
	MF_TOU_10_1600                 = 8015,
	MF_TOU_10_1700                 = 8016,
	MF_TOU_10_1800                 = 8017,
	MF_TOU_10_1900                 = 8018,
	MF_TOU_10_2000                 = 8019,
	NEXT_TOU_10_FLG010             = 8020,
	NEXT_TOU_10_FLG020             = 8021,
	NEXT_TOU_10_FLG030             = 8022,
	NEXT_TOU_10_FLG040             = 8023,
	NEXT_TOU_10_FLG050             = 8024,
	NEXT_TOU_10_FLG060             = 8025,
	NEXT_TOU_10_FLG070             = 8026,
	NEXT_TOU_10_FLG080             = 8027,
	NEXT_TOU_10_FLG090             = 8028,
	NEXT_TOU_10_FLG100             = 8029,
	MF_TOU_2A_0100                 = 8050,
	MF_TOU_2A_0200                 = 8051,
	MF_TOU_2A_0300                 = 8052,
	MF_TOU_2A_0400                 = 8053,
	MF_TOU_2A_0500                 = 8054,
	MF_TOU_2A_0600                 = 8055,
	MF_TOU_2A_0610                 = 8064,
	MF_TOU_2A_0700                 = 8056,
	MF_TOU_2A_0800                 = 8057,
	MF_TOU_2A_0900                 = 8058,
	NEXT_TOU_2A_FLG010             = 8059,
	NEXT_TOU_2A_FLG020             = 8060,
	NEXT_TOU_2A_FLG030             = 8061,
	NEXT_TOU_2A_FLG040             = 8062,
	NEXT_TOU_2A_FLG050             = 8063,
	NEXT_TOU_2A_FLG060             = 8065,
	MF_TOU_2A_0510                 = 8066,
	NEXT_TOU_2A_FLG070             = 8067,
	NEXT_TOU_2A_FLG080             = 8068,
	MF_TOU_2B_0100                 = 8100,
	MF_TOU_2B_0200                 = 8101,
	MF_TOU_2B_0300                 = 8102,
	MF_TOU_2B_0400                 = 8103,
	MF_TOU_2B_0500                 = 8104,
	MF_TOU_2B_0600                 = 8105,
	MF_TOU_2B_0700                 = 8106,
	MF_TOU_2B_0800                 = 8107,
	MF_TOU_2B_0900                 = 8108,
	MF_TOU_2B_0910                 = 8115,
	MF_TOU_2B_1000                 = 8109,
	NEXT_TOU_2B_FLG010             = 8110,
	NEXT_TOU_2B_FLG020             = 8111,
	NEXT_TOU_2B_FLG030             = 8112,
	NEXT_TOU_2B_FLG040             = 8113,
	NEXT_TOU_2B_FLG050             = 8114,
	MF_TOU_2B_0710                 = 8116,
	MF_TOU_3A_0100                 = 8150,
	MF_TOU_3A_0200                 = 8151,
	MF_TOU_3A_0300                 = 8152,
	MF_TOU_3A_0400                 = 8153,
	MF_TOU_3A_0500                 = 8154,
	MF_TOU_3A_0600                 = 8155,
	MF_TOU_3A_0700                 = 8156,
	MF_TOU_3A_0720                 = 8166,
	MF_TOU_3A_0800                 = 8157,
	MF_TOU_3A_0900                 = 8158,
	MF_TOU_3A_1000                 = 8159,
	MF_TOU_3A_1100                 = 8160,
	NEXT_TOU_3A_FLG010             = 8161,
	NEXT_TOU_3A_FLG020             = 8162,
	NEXT_TOU_3A_FLG030             = 8163,
	NEXT_TOU_3A_FLG040             = 8164,
	NEXT_TOU_3A_FLG050             = 8165,
	MF_TOU_3B_0100                 = 8200,
	MF_TOU_3B_0200                 = 8201,
	MF_TOU_3B_0300                 = 8202,
	MF_TOU_3B_0400                 = 8203,
	MF_TOU_3B_0500                 = 8204,
	MF_TOU_3B_0600                 = 8205,
	MF_TOU_3B_0700                 = 8206,
	MF_TOU_3B_0800                 = 8207,
	MF_TOU_3B_0900                 = 8208,
	MF_TOU_3B_1000                 = 8209,
	MF_TOU_3B_1100                 = 8210,
	MF_TOU_3B_1200                 = 8211,
	NEXT_TOU_3B_FLG010             = 8212,
	NEXT_TOU_3B_FLG020             = 8213,
	NEXT_TOU_3B_FLG030             = 8214,
	MF_TOU_3M_0100                 = 8250,
	MF_TOU_40_0100                 = 8300,
	MF_TOU_40_0200                 = 8301,
	MF_TOU_40_0300                 = 8302,
	MF_TOU_40_0400                 = 8303,
	MF_TOU_40_0410                 = 8304,
	MF_TOU_40_0500                 = 8305,
	MF_TOU_40_0510                 = 8306,
	MF_TOU_40_0600                 = 8307,
	MF_TOU_40_0700                 = 8308,
	MF_TOU_40_0800                 = 8309,
	MF_TOU_40_0900                 = 8310,
	MF_TOU_40_1000                 = 8311,
	MF_TOU_40_1100                 = 8312,
	MF_TOU_40_1200                 = 8313,
	NEXT_TOU_40_FLG010             = 8314,
	NEXT_TOU_40_FLG020             = 8315,
	NEXT_TOU_40_FLG030             = 8316,
	NEXT_TOU_40_FLG040             = 8317,
	NEXT_TOU_40_FLG050             = 8318,
	NEXT_TOU_40_FLG060             = 8319,
	NEXT_TOU_40_FLG070             = 8320,
	MF_TOU_40_1210                 = 8321,
	MF_TOU_40_0210                 = 8322,
	MF_TOU_40_0420                 = 8323,
	MF_TOU_40_0810                 = 8324,
	NEXT_TOU_40_FLG080             = 8325,
	NEXT_TOU_40_FLG090             = 8326,
	NEXT_TOU_40_FLG100             = 8327,
	NEXT_TOU_40_FLG110             = 8328,
	MF_KUS_10_0100                 = 8500,
	MF_KUS_10_0200                 = 8501,
	MF_KUS_10_0300                 = 8502,
	MF_KUS_10_0400                 = 8503,
	MF_KUS_10_0500                 = 8504,
	MF_KUS_10_0600                 = 8505,
	MF_KUS_10_0610                 = 8506,
	MF_KUS_10_0700                 = 8507,
	MF_KUS_10_0710                 = 8508,
	MF_KUS_10_0720                 = 8529,
	MF_KUS_10_0800                 = 8509,
	MF_KUS_10_0900                 = 8510,
	MF_KUS_10_1000                 = 8511,
	MF_KUS_10_1100                 = 8512,
	MF_KUS_10_1110                 = 8513,
	MF_KUS_10_1200                 = 8514,
	MF_KUS_10_1300                 = 8515,
	MF_KUS_10_1400                 = 8516,
	MF_KUS_10_1500                 = 8517,
	MF_KUS_10_1600                 = 8518,
	MF_KUS_10_1700                 = 8519,
	MF_KUS_10_1800                 = 8520,
	NEXT_KUS_10_FLG010             = 8521,
	NEXT_KUS_10_FLG020             = 8522,
	NEXT_KUS_10_FLG030             = 8523,
	NEXT_KUS_10_FLG040             = 8524,
	NEXT_KUS_10_FLG050             = 8525,
	NEXT_KUS_10_FLG060             = 8526,
	NEXT_KUS_10_FLG070             = 8527,
	NEXT_KUS_10_FLG080             = 8528,
	MF_KUS_2A_0100                 = 8550,
	MF_KUS_2A_0200                 = 8551,
	MF_KUS_2A_0300                 = 8552,
	MF_KUS_2A_0400                 = 8553,
	MF_KUS_2A_0500                 = 8554,
	MF_KUS_2A_0600                 = 8555,
	MF_KUS_2A_0700                 = 8556,
	MF_KUS_2A_0800                 = 8557,
	MF_KUS_2A_0900                 = 8558,
	MF_KUS_2A_1000                 = 8559,
	MF_KUS_2A_1100                 = 8560,
	MF_KUS_2A_1200                 = 8561,
	MF_KUS_2A_1300                 = 8562,
	MF_KUS_2A_1400                 = 8563,
	MF_KUS_2A_1500                 = 8564,
	MF_KUS_2A_1600                 = 8565,
	MF_KUS_2A_1700                 = 8566,
	MF_KUS_2A_1800                 = 8567,
	NEXT_KUS_2A_FLG010             = 8568,
	NEXT_KUS_2A_FLG020             = 8569,
	NEXT_KUS_2A_FLG030             = 8570,
	NEXT_KUS_2A_FLG040             = 8571,
	NEXT_KUS_2A_FLG050             = 8572,
	NEXT_KUS_2A_FLG060             = 8573,
	NEXT_KUS_2A_FLG070             = 8574,
	NEXT_KUS_2A_FLG080             = 8575,
	MF_KUS_2A_1110                 = 8576,
	NEXT_KUS_2A_FLG090             = 8577,
	MF_KUS_2B_0100                 = 8600,
	MF_KUS_2B_0200                 = 8601,
	MF_KUS_2B_0300                 = 8602,
	MF_KUS_2B_0400                 = 8603,
	MF_KUS_2B_0410                 = 8628,
	MF_KUS_2B_0500                 = 8604,
	MF_KUS_2B_0510                 = 8629,
	MF_KUS_2B_0600                 = 8605,
	MF_KUS_2B_0700                 = 8606,
	MF_KUS_2B_0800                 = 8607,
	MF_KUS_2B_0900                 = 8608,
	MF_KUS_2B_1000                 = 8609,
	MF_KUS_2B_1100                 = 8610,
	MF_KUS_2B_1200                 = 8611,
	MF_KUS_2B_1300                 = 8612,
	MF_KUS_2B_1400                 = 8613,
	MF_KUS_2B_1500                 = 8614,
	MF_KUS_2B_1600                 = 8615,
	MF_KUS_2B_1700                 = 8616,
	MF_KUS_2B_1800                 = 8617,
	NEXT_KUS_2B_FLG010             = 8618,
	NEXT_KUS_2B_FLG020             = 8619,
	NEXT_KUS_2B_FLG030             = 8620,
	NEXT_KUS_2B_FLG040             = 8621,
	NEXT_KUS_2B_FLG050             = 8622,
	NEXT_KUS_2B_FLG060             = 8623,
	NEXT_KUS_2B_FLG070             = 8624,
	NEXT_KUS_2B_FLG080             = 8625,
	NEXT_KUS_2B_FLG090             = 8626,
	NEXT_KUS_2B_FLG100             = 8627,
	NEXT_KUS_2B_FLG110             = 8630,
	MF_KUS_2M_0100                 = 8650,
	MF_KUS_30_0100                 = 8700,
	MF_KUS_30_0110                 = 8701,
	MF_KUS_30_0200                 = 8702,
	MF_KUS_30_0300                 = 8703,
	MF_KUS_30_0400                 = 8704,
	MF_KUS_30_0500                 = 8705,
	MF_KUS_30_0510                 = 8706,
	MF_KUS_30_0600                 = 8707,
	MF_KUS_30_0700                 = 8708,
	MF_KUS_30_0800                 = 8709,
	MF_KUS_30_0900                 = 8710,
	MF_KUS_30_1000                 = 8711,
	MF_KUS_30_1100                 = 8712,
	MF_KUS_30_1200                 = 8713,
	MF_KUS_30_1300                 = 8714,
	MF_KUS_30_1400                 = 8715,
	MF_KUS_30_1500                 = 8716,
	MF_KUS_30_1600                 = 8717,
	MF_KUS_30_1700                 = 8718,
	MF_KUS_30_1800                 = 8727,
	NEXT_KUS_30_FLG010             = 8719,
	NEXT_KUS_30_FLG020             = 8720,
	NEXT_KUS_30_FLG030             = 8721,
	NEXT_KUS_30_FLG040             = 8722,
	NEXT_KUS_30_FLG050             = 8723,
	NEXT_KUS_30_FLG060             = 8724,
	NEXT_KUS_30_FLG070             = 8725,
	NEXT_KUS_30_FLG080             = 8726,
	MF_KUS_30_1010                 = 8728,
	MF_KUS_30_1410                 = 8729,
	MF_KUS_40_0100                 = 8750,
	MF_KUS_40_0200                 = 8751,
	MF_KUS_40_0300                 = 8752,
	MF_KUS_40_0400                 = 8753,
	MF_KUS_40_0500                 = 8754,
	MF_KUS_40_0600                 = 8755,
	MF_KUS_40_0700                 = 8756,
	MF_KUS_40_0800                 = 8757,
	MF_KUS_40_0900                 = 8758,
	MF_KUS_40_1000                 = 8759,
	MF_KUS_40_1100                 = 8760,
	MF_KUS_40_1200                 = 8761,
	NEXT_KUS_40_FLG010             = 8762,
	NEXT_KUS_40_FLG020             = 8763,
	NEXT_KUS_40_FLG030             = 8764,
	NEXT_KUS_40_FLG040             = 8765,
	NEXT_KUS_40_FLG050             = 8766,
	NEXT_KUS_40_FLG060             = 8767,
	MF_KUS_40_0910                 = 8768,
	MF_KUS_40_0710                 = 8769,
	MF_FIRSTSTORY_END              = 9000,
	MF_COP_GS1_0100                = 9100,
	MF_COP_GS1_0200                = 9101,
	MF_COP_GS1_0300                = 9102,
	MF_COP_GS1_0400                = 9103,
	MF_COP_GS1_0500                = 9104,
	NEXT_COP_GS1_FLG010            = 9105,
	NEXT_COP_GS1_FLG020            = 9106,
	NEXT_COP_GS1_FLG030            = 9107,
	MF_COP_GS2_0100                = 9150,
	MF_COP_GS2_0200                = 9151,
	MF_COP_GS2_0300                = 9152,
	MF_COP_GS2_0400                = 9153,
	MF_COP_GS2_0500                = 9154,
	MF_COP_GS2_0600                = 9155,
	MF_COP_GS2_0700                = 9156,
	MF_COP_GS2_0800                = 9157,
	MF_COP_GS2_0900                = 9158,
	MF_COP_GS2_1000                = 9159,
	MF_COP_GS2_1100                = 9160,
	MF_COP_GS2_1200                = 9161,
	NEXT_COP_GS2_FLG010            = 9162,
	NEXT_COP_GS2_FLG020            = 9163,
	NEXT_COP_GS2_FLG030            = 9164,
	NEXT_COP_GS2_FLG040            = 9165,
	MF_COP_ST1_0100                = 9200,
	MF_COP_ST1_0200                = 9201,
	MF_COP_ST1_0210                = 9202,
	MF_COP_ST1_0300                = 9203,
	MF_COP_ST1_0400                = 9204,
	MF_COP_ST1_0500                = 9205,
	MF_COP_ST1_0600                = 9206,
	MF_COP_ST1_0700                = 9207,
	NEXT_COP_ST1_FLG010            = 9208,
	NEXT_COP_ST1_FLG020            = 9209,
	NEXT_COP_ST1_FLG030            = 9210,
	NEXT_COP_ST1_FLG040            = 9211,
	MF_COP_ST2_0100                = 9250,
	MF_COP_ST2_0200                = 9251,
	MF_COP_ST2_0300                = 9252,
	MF_COP_ST2_0310                = 9253,
	MF_COP_ST2_0400                = 9254,
	MF_COP_ST2_0500                = 9255,
	MF_COP_ST2_0600                = 9256,
	MF_COP_ST2_0700                = 9257,
	NEXT_COP_ST2_FLG010            = 9258,
	NEXT_COP_ST2_FLG020            = 9259,
	NEXT_COP_ST2_FLG030            = 9260,
	NEXT_COP_ST2_FLG040            = 9261,
	NEXT_COP_ST2_FLG050            = 9262,
	MF_COP_OK1_0100                = 9300,
	MF_COP_OK1_0200                = 9301,
	MF_COP_OK1_0300                = 9302,
	MF_COP_OK1_0310                = 9303,
	MF_COP_OK1_0400                = 9304,
	MF_COP_OK1_0500                = 9305,
	MF_COP_OK1_0510                = 9306,
	MF_COP_OK1_0600                = 9307,
	NEXT_COP_OK1_FLG010            = 9308,
	NEXT_COP_OK1_FLG020            = 9309,
	NEXT_COP_OK1_FLG030            = 9310,
	NEXT_COP_OK1_FLG040            = 9311,
	NEXT_COP_OK1_FLG050            = 9312,
	NEXT_COP_OK1_FLG060            = 9313,
	NEXT_COP_OK1_FLG070            = 9314,
	MF_COP_OK2_0100                = 9350,
	MF_COP_OK2_0200                = 9351,
	MF_COP_OK2_0300                = 9352,
	MF_COP_OK2_0400                = 9353,
	MF_COP_OK2_0500                = 9354,
	MF_COP_OK2_0600                = 9355,
	MF_COP_OK2_0700                = 9356,
	MF_COP_OK2_0800                = 9357,
	NEXT_COP_OK2_FLG010            = 9358,
	NEXT_COP_OK2_FLG020            = 9359,
	NEXT_COP_OK2_FLG030            = 9360,
	NEXT_COP_OK2_FLG040            = 9361,
	NEXT_COP_OK2_FLG050            = 9362,
	MF_COP_KK1_0100                = 9400,
	MF_COP_KK1_0200                = 9401,
	MF_COP_KK1_0300                = 9402,
	MF_COP_KK1_0400                = 9403,
	MF_COP_KK1_0500                = 9404,
	MF_COP_KK1_0600                = 9405,
	MF_COP_KK1_0700                = 9406,
	NEXT_COP_KK1_FLG010            = 9407,
	NEXT_COP_KK1_FLG020            = 9408,
	NEXT_COP_KK1_FLG030            = 9409,
	NEXT_COP_KK1_FLG040            = 9410,
	MF_COP_KK2_0100                = 9450,
	MF_COP_KK2_0200                = 9451,
	MF_COP_KK2_0300                = 9452,
	MF_COP_KK2_0400                = 9453,
	MF_COP_KK2_0500                = 9454,
	MF_COP_KK2_0600                = 9455,
	MF_COP_KK2_0700                = 9456,
	MF_COP_KK2_0800                = 9457,
	NEXT_COP_KK2_FLG010            = 9458,
	NEXT_COP_KK2_FLG020            = 9459,
	NEXT_COP_KK2_FLG030            = 9460,
	NEXT_COP_KK2_FLG040            = 9461,
	NEXT_COP_KK2_FLG050            = 9462,
	MF_END_10_0100                 = 9500,
	MF_END_10_0110                 = 9501,
	MF_END_10_0200                 = 9502,
	MF_END_10_0300                 = 9503,
	MF_END_10_0400                 = 9504,
	MF_END_10_01A0                 = 9505,
	MF_END_10_01B0                 = 9506,
	MF_END_10_01C0                 = 9507,
	MF_END_10_01D0                 = 9508,
	MF_END_2A_0100                 = 9550,
	MF_END_2A_0200                 = 9551,
	MF_END_2A_0300                 = 9552,
	MF_END_2A_0400                 = 9553,
	MF_END_2A_0500                 = 9554,
	MF_END_2A_0600                 = 9555,
	MF_END_2A_0700                 = 9556,
	NEXT_END_2A_FLG010             = 9557,
	NEXT_END_2A_FLG020             = 9558,
	NEXT_END_2A_FLG030             = 9559,
	MF_END_2A_F010                 = 9560,
	MF_END_2A_F020                 = 9561,
	MF_END_2A_F030                 = 9562,
	MF_END_2A_F040                 = 9563,
	MF_END_2A_0010                 = 9564,
	MF_END_2A_0020                 = 9565,
	MF_END_2B_0100                 = 9600,
	MF_END_2B_0200                 = 9601,
	MF_END_2B_0400                 = 9602,
	MF_END_2B_0500                 = 9603,
	MF_END_2B_0600                 = 9604,
	MF_END_2B_0700                 = 9605,
	MF_END_2B_0710                 = 9606,
	MF_END_2B_0800                 = 9607,
	NEXT_END_2B_FLG010             = 9608,
	NEXT_END_2B_FLG020             = 9609,
	NEXT_END_2B_FLG030             = 9610,
	NEXT_END_2B_FLG040             = 9611,
	MF_END_2B_F010                 = 9612,
	MF_END_2B_F020                 = 9613,
	MF_END_2B_F030                 = 9614,
	MF_END_2B_F040                 = 9615,
	MF_END_2B_F050                 = 9616,
	MF_END_2B_F060                 = 9617,
	MF_END_2B_F070                 = 9618,
	MF_END_2B_F080                 = 9619,
	MF_END_2B_F090                 = 9620,
	MF_END_2B_F100                 = 9621,
	MF_END_2B_F110                 = 9622,
	MF_END_2B_F120                 = 9623,
	MF_END_2B_F130                 = 9624,
	MF_END_2B_F140                 = 9625,
	MF_END_2B_F150                 = 9626,
	MF_END_2B_F160                 = 9627,
	MF_END_2B_F170                 = 9628,
	MF_END_2B_F180                 = 9629,
	MF_END_2B_F190                 = 9630,
	MF_END_2B_F200                 = 9631,
	MF_END_2B_F210                 = 9632,
	MF_END_2C_0100                 = 9650,
	MF_END_2C_0200                 = 9651,
	MF_END_2C_0300                 = 9652,
	MF_END_2C_0400                 = 9653,
	MF_END_2C_0500                 = 9654,
	MF_END_2C_0600                 = 9655,
	MF_END_2C_0700                 = 9656,
	MF_END_2C_0710                 = 9657,
	MF_END_2C_0800                 = 9658,
	NEXT_END_2C_FLG010             = 9659,
	NEXT_END_2C_FLG020             = 9660,
	NEXT_END_2C_FLG030             = 9661,
	NEXT_END_2C_FLG040             = 9662,
	MF_END_2C_DARKHUNTER_DEFEAT    = 9663,
	MF_END_2D_0100                 = 9700,
	MF_END_2D_0200                 = 9701,
	MF_END_2D_0300                 = 9702,
	MF_END_2D_0400                 = 9703,
	MF_END_2D_0500                 = 9704,
	MF_END_2D_0600                 = 9705,
	MF_END_2D_0700                 = 9706,
	MF_END_2D_0800                 = 9707,
	MF_END_2D_0900                 = 9708,
	MF_END_2D_1000                 = 9709,
	MF_END_2D_1100                 = 9710,
	MF_END_2D_1200                 = 9711,
	MF_END_2D_1300                 = 9712,
	MF_END_2D_1400                 = 9713,
	MF_END_2D_1500                 = 9714,
	MF_END_2D_1600                 = 9715,
	MF_END_2D_1700                 = 9716,
	MF_END_2D_1710                 = 9717,
	MF_END_2D_1800                 = 9718,
	NEXT_END_2D_FLG010             = 9719,
	NEXT_END_2D_FLG020             = 9720,
	NEXT_END_2D_FLG030             = 9721,
	NEXT_END_2D_FLG040             = 9722,
	NEXT_END_2D_FLG050             = 9723,
	NEXT_END_2D_FLG060             = 9724,
	MF_END_30_0100                 = 9750,
	MF_END_30_0200                 = 9751,
	MF_END_30_0300                 = 9752,
	MF_END_30_0400                 = 9753,
	MF_END_30_0500                 = 9754,
	MF_END_30_0600                 = 9755,
	MF_END_30_0700                 = 9756,
	MF_END_30_0800                 = 9757,
	MF_END_30_0900                 = 9758,
	MF_END_30_1000                 = 9759,
	MF_END_30_1100                 = 9760,
	MF_END_30_1200                 = 9761,
	MF_END_30_1300                 = 9762,
	MF_END_30_1400                 = 9763,
	MF_END_30_1500                 = 9764,
	MF_END_30_1600                 = 9765,
	MF_END_30_1700                 = 9766,
	MF_END_30_1710                 = 9767,
	MF_END_30_1800                 = 9768,
	MF_END_30_1900                 = 9769,
	MF_END_30_2000                 = 9770,
	MF_END_30_2100                 = 9771,
	MF_END_30_2200                 = 9772,
	MF_END_30_2300                 = 9773,
	MF_END_30_2400                 = 9774,
	MF_END_30_2500                 = 9775,
	MF_END_30_2600                 = 9776,
	MF_END_30_2700                 = 9777,
	MF_END_30_2800                 = 9778,
	MF_END_30_2900                 = 9779,
	MF_END_30_3000                 = 9780,
	NEXT_END_30_FLG010             = 9781,
	NEXT_END_30_FLG020             = 9782,
	NEXT_END_30_FLG030             = 9783,
	NEXT_END_30_FLG040             = 9784,
	NEXT_END_30_FLG050             = 9785,
	NEXT_END_30_FLG060             = 9786,
	GUR_FLG_01                     = 9800,
	GUR_FLG_02                     = 9801,
	GUR_FLG_03                     = 9802,
	GUR_FLG_04                     = 9803,
	GUR_FLG_04A                    = 9804,
	GUR_FLG_04B                    = 9805,
	GUR_FLG_05                     = 9806,
	GUR_FLG_06                     = 9807,
	GUR_FLG_06A                    = 9808,
	GUR_FLG_07                     = 9809,
	GUR_FLG_08                     = 9810,
	GUR_FLG_001                    = 9811,
	GUR_FLG_002                    = 9812,
	GUR_FLG_003                    = 9813,
	GUR_FLG_004                    = 9814,
	GUR_FLG_005                    = 9815,
	GUR_FLG_END                    = 9816,
	NF_GUR_FLG_01                  = 9817,
	NF_GUR_FLG_02                  = 9818,
	NF_GUR_FLG_03                  = 9819,
	NF_GUR_FLG_04                  = 9820,
	NF_GUR_FLG_05                  = 9821,
	NF_GUR_FLG_06                  = 9822,
	NF_GUR_FLG_07                  = 9823,
	NF_GUR_FLG_08                  = 9824,
	NF_GUR_FLG_09                  = 9825,
	FIRST_Look                     = 9826,
	MF_EPI_0100                    = 9900,
	MF_EPI_FENCER                  = 9901,
	MF_EPI_HUNTER                  = 9902,
	MF_EPI_ALCHEMIST               = 9903,
	MF_EPI_MERCHANT                = 9904,
	MF_EPI_PRIEST                  = 9905,
	MF_EPI_PROFESSOR               = 9906,
	MF_EPI_THIEF                   = 9907,
	MF_EPI_DANCER                  = 9908,
	MF_EPI_FELLOW_ALL              = 9909,
	MF_EPI_END                     = 9910,
	SF_FLAGMIN                     = 20000,
	SF_JNP_ALT_0010                = 20001,
	SF_JNP_ALT_0020                = 20002,
	SF_JNP_ALT_0030                = 20003,
	SF_JNP_ALT_0040                = 20004,
	SF_JNP_APN_0010                = 20005,
	SF_JNP_APN_0020                = 20006,
	SF_JNP_APN_0030                = 20007,
	SF_JNP_BND_0010                = 20008,
	SF_JNP_BND_0020                = 20009,
	SF_JNP_BND_0030                = 20010,
	SF_JNP_BND_0035                = 20011,
	SF_JNP_BND_0040                = 20012,
	SF_JNP_BND_0050                = 20013,
	SF_JNP_CLA_0010                = 20014,
	SF_JNP_CLA_0020                = 20015,
	SF_JNP_CLA_0030                = 20016,
	SF_JNP_FAS_0010                = 20017,
	SF_JNP_FAS_0020                = 20018,
	SF_JNP_LYL_0010                = 20019,
	SF_JNP_LYL_0020                = 20020,
	SF_JNP_LYL_0030                = 20021,
	SF_JNP_LYL_0040                = 20022,
	SF_JNP_MEL_0010                = 20023,
	SF_JNP_MEL_0020                = 20024,
	SF_JNP_MEL_0030                = 20025,
	SF_JNP_MEL_0040                = 20026,
	SF_JNP_MIK_0010                = 20027,
	SF_JNP_MIK_0020                = 20028,
	SF_JNP_MIK_0030                = 20029,
	SF_JNP_MIK_0040                = 20030,
	SF_JNP_MOR_0010                = 20031,
	SF_JNP_MOR_0020                = 20032,
	SF_JNP_MOR_0030                = 20033,
	SF_JNP_MOR_0040                = 20034,
	SF_JNP_RAM_0010                = 20035,
	SF_JNP_RAM_0020                = 20036,
	SF_JNP_RAM_0030                = 20037,
	SF_JNP_SHI_0010                = 20038,
	SF_JNP_SHI_0020                = 20039,
	SF_JNP_YJB_0010                = 20040,
	SF_JNP_YJB_0020                = 20041,
	SF_JNP_YJB_0030                = 20042,
	SF_JNP_BND_START               = 20043,
	SF_JNP_CLA_START               = 20044,
	SF_JNP_LYL_START               = 20045,
	SF_JNP_MIK_START               = 20046,
	SF_JNP_BND_LEAD                = 20047,
	SF_JNP_CLA_LEAD                = 20048,
	SF_JNP_MIK_LEAD                = 20049,
	SF_JNP_RAM_LEAD                = 20050,
	SF_JNP_KOH_LEAD                = 20051,
	SF_SUBEVENTFLAG_START          = 20100,
	SF_TM12_0100_0010              = 20101,
	SF_TM12_0100_0020              = 20102,
	SF_TM12_0100_0030              = 20103,
	SF_TM12_0100_0040              = 20104,
	SF_TM12_0100_0050              = 20105,
	SF_TM12_0200_0010              = 20106,
	SF_TM12_0200_0020              = 20107,
	SF_TM12_0200_0030              = 20108,
	SF_TM12_0200_0040              = 20109,
	SF_TM12_0200_0050              = 20110,
	SF_TM12_0300_0010              = 20111,
	SF_TM12_0300_0020              = 20112,
	SF_TM12_0300_0030              = 20113,
	SF_TM12_0300_0040              = 20114,
	SF_TM12_0300_0050              = 20115,
	SF_TM12_0300_0060              = 20116,
	SF_TM21_0100_0010              = 20117,
	SF_TM21_0100_0020              = 20118,
	SF_TM21_0100_0030              = 20119,
	SF_TM21_0100_0040              = 20120,
	SF_TM21_0100_0050              = 20121,
	SF_TM21_0200_0010              = 20122,
	SF_TM21_0200_0020              = 20123,
	SF_TM21_0200_0030              = 20124,
	SF_TM21_0200_0040              = 20125,
	SF_TM21_0200_0050              = 20126,
	SF_TM21_0300_0010              = 20127,
	SF_TM21_0300_0020              = 20128,
	SF_TM21_0300_0030              = 20129,
	SF_TM21_0300_0040              = 20130,
	SF_TM21_0300_0050              = 20131,
	SF_TM21_0400_0010              = 20132,
	SF_TM21_0400_0020              = 20133,
	SF_TM21_0400_0030              = 20134,
	SF_TM21_0400_0040              = 20135,
	SF_TM21_0400_0050              = 20136,
	SF_TM31_0100_0010              = 20137,
	SF_TM31_0100_0020              = 20138,
	SF_TM31_0100_0030              = 20139,
	SF_TM31_0100_0040              = 20140,
	SF_TM31_0100_0050              = 20141,
	SF_TM31_0200_0010              = 20142,
	SF_TM31_0200_0020              = 20143,
	SF_TM31_0200_0030              = 20144,
	SF_TM31_0200_0040              = 20145,
	SF_TM31_0200_0050              = 20146,
	SF_TD11_0100_0010              = 20147,
	SF_TD11_0100_0020              = 20148,
	SF_TD11_0100_0030              = 20149,
	SF_TD11_0100_0040              = 20150,
	SF_TD11_0100_0050              = 20151,
	SF_TD21_0100_0010              = 20152,
	SF_TD21_0100_0020              = 20153,
	SF_TD21_0100_0030              = 20154,
	SF_TD21_0100_0040              = 20155,
	SF_TD21_0100_0050              = 20156,
	SF_TD21_0200_0010              = 20157,
	SF_TD21_0200_0020              = 20158,
	SF_TD21_0200_0030              = 20159,
	SF_TD21_0200_0040              = 20160,
	SF_TD21_0200_0050              = 20161,
	SF_TD21_0300_0010              = 20162,
	SF_TD21_0300_0020              = 20163,
	SF_TD21_0300_0030              = 20164,
	SF_TD21_0300_0040              = 20165,
	SF_TD21_0300_0050              = 20166,
	SF_TD31_0100_0010              = 20167,
	SF_TD31_0100_0020              = 20168,
	SF_TD31_0100_0030              = 20169,
	SF_TD31_0100_0040              = 20170,
	SF_TD31_0100_0050              = 20171,
	SF_TD31_0200_0010              = 20172,
	SF_TD31_0200_0020              = 20173,
	SF_TD31_0200_0030              = 20174,
	SF_TD31_0200_0040              = 20175,
	SF_TD31_0200_0050              = 20176,
	SF_TD31_0300_0010              = 20177,
	SF_TD31_0300_0020              = 20178,
	SF_TD31_0300_0030              = 20179,
	SF_TD31_0300_0040              = 20180,
	SF_TD31_0300_0050              = 20181,
	SF_TD31_0400_0010              = 20182,
	SF_TD31_0400_0020              = 20183,
	SF_TD31_0400_0030              = 20184,
	SF_TD31_0400_0040              = 20185,
	SF_TD31_0400_0050              = 20186,
	SF_TC11_0100_0010              = 20187,
	SF_TC11_0100_0020              = 20188,
	SF_TC11_0100_0030              = 20189,
	SF_TC11_0100_0040              = 20190,
	SF_TC11_0200_0010              = 20191,
	SF_TC11_0200_0020              = 20192,
	SF_TC11_0200_0030              = 20193,
	SF_TC11_0200_0040              = 20194,
	SF_TC11_0200_0050              = 20195,
	SF_TC11_0200_0060              = 20196,
	SF_TC11_0300_0010              = 20197,
	SF_TC11_0300_0020              = 20198,
	SF_TC11_0300_0030              = 20199,
	SF_TC11_0300_0040              = 20200,
	SF_TC11_0300_0050              = 20201,
	SF_TC11_0400_0010              = 20202,
	SF_TC11_0400_0020              = 20203,
	SF_TC11_0400_0030              = 20204,
	SF_TC11_0400_0040              = 20205,
	SF_TC11_0400_0050              = 20206,
	SF_TC11_0500_0010              = 20207,
	SF_TC11_0500_0020              = 20208,
	SF_TC11_0500_0030              = 20209,
	SF_TC11_0500_0040              = 20210,
	SF_TC11_0500_0050              = 20211,
	SF_TC21_0100_0010              = 20212,
	SF_TC21_0100_0020              = 20213,
	SF_TC21_0100_0030              = 20214,
	SF_TC21_0100_0040              = 20215,
	SF_TC21_0100_0050              = 20216,
	SF_TC21_0200_0010              = 20217,
	SF_TC21_0200_0020              = 20218,
	SF_TC21_0200_0030              = 20219,
	SF_TC21_0200_0040              = 20220,
	SF_TC21_0200_0050              = 20221,
	SF_TC21_0300_0010              = 20222,
	SF_TC21_0300_0020              = 20223,
	SF_TC21_0300_0030              = 20224,
	SF_TC21_0300_0040              = 20225,
	SF_TC21_0300_0050              = 20226,
	SF_TI11_0100_0010              = 20227,
	SF_TI11_0100_0020              = 20228,
	SF_TI11_0100_0030              = 20229,
	SF_TI11_0100_0040              = 20230,
	SF_TI11_0100_0050              = 20231,
	SF_TI11_0200_0010              = 20232,
	SF_TI11_0200_0020              = 20233,
	SF_TI11_0200_0030              = 20234,
	SF_TI11_0200_0040              = 20235,
	SF_TI11_0200_0050              = 20236,
	SF_TI21_0100_0010              = 20237,
	SF_TI21_0100_0020              = 20238,
	SF_TI21_0100_0030              = 20239,
	SF_TI21_0100_0040              = 20240,
	SF_TI21_0100_0050              = 20241,
	SF_TI21_0200_0010              = 20242,
	SF_TI21_0200_0020              = 20243,
	SF_TI21_0200_0030              = 20244,
	SF_TI21_0200_0040              = 20245,
	SF_TI21_0200_0050              = 20246,
	SF_TI21_0300_0010              = 20247,
	SF_TI21_0300_0020              = 20248,
	SF_TI21_0300_0030              = 20249,
	SF_TI21_0300_0040              = 20250,
	SF_TI21_0300_0050              = 20251,
	SF_TI31_0100_0010              = 20252,
	SF_TI31_0100_0020              = 20253,
	SF_TI31_0100_0030              = 20254,
	SF_TI31_0100_0040              = 20255,
	SF_TI31_0100_0050              = 20256,
	SF_TI31_0200_0010              = 20257,
	SF_TI31_0200_0020              = 20258,
	SF_TI31_0200_0030              = 20259,
	SF_TI31_0200_0040              = 20260,
	SF_TI31_0200_0050              = 20261,
	SF_TW11_0100_0010              = 20262,
	SF_TW11_0100_0020              = 20263,
	SF_TW11_0100_0030              = 20264,
	SF_TW11_0100_0040              = 20265,
	SF_TW11_0100_0050              = 20266,
	SF_TW11_0200_0010              = 20267,
	SF_TW11_0200_0020              = 20268,
	SF_TW11_0200_0030              = 20269,
	SF_TW11_0200_0040              = 20270,
	SF_TW11_0200_0050              = 20271,
	SF_TW21_0100_0010              = 20272,
	SF_TW21_0100_0020              = 20273,
	SF_TW21_0100_0030              = 20274,
	SF_TW21_0100_0040              = 20275,
	SF_TW21_0100_0050              = 20276,
	SF_TW21_0200_0010              = 20277,
	SF_TW21_0200_0020              = 20278,
	SF_TW21_0200_0030              = 20279,
	SF_TW21_0200_0040              = 20280,
	SF_TW21_0200_0050              = 20281,
	SF_TW31_0100_0010              = 20282,
	SF_TW31_0100_0020              = 20283,
	SF_TW31_0100_0030              = 20284,
	SF_TW31_0100_0040              = 20285,
	SF_TW31_0100_0050              = 20286,
	SF_TW31_0200_0010              = 20287,
	SF_TW31_0200_0020              = 20288,
	SF_TW31_0200_0030              = 20289,
	SF_TW31_0200_0040              = 20290,
	SF_TW31_0200_0050              = 20291,
	SF_TW31_0300_0010              = 20292,
	SF_TW31_0300_0020              = 20293,
	SF_TW31_0300_0030              = 20294,
	SF_TW31_0300_0040              = 20295,
	SF_TW31_0300_0050              = 20296,
	SF_TSe11_0100_0010             = 20297,
	SF_TSe11_0100_0020             = 20298,
	SF_TSe11_0100_0030             = 20299,
	SF_TSe11_0100_0040             = 20300,
	SF_TSe11_0100_0050             = 20301,
	SF_TSe11_0200_0010             = 20302,
	SF_TSe11_0200_0020             = 20303,
	SF_TSe11_0200_0030             = 20304,
	SF_TSe11_0200_0040             = 20305,
	SF_TSe11_0200_0050             = 20306,
	SF_TSe11_0300_0010             = 20307,
	SF_TSe11_0300_0020             = 20308,
	SF_TSe11_0300_0030             = 20309,
	SF_TSe11_0300_0040             = 20310,
	SF_TSe11_0300_0050             = 20311,
	SF_TSe21_0100_0010             = 20312,
	SF_TSe21_0100_0020             = 20313,
	SF_TSe21_0100_0030             = 20314,
	SF_TSe21_0100_0040             = 20315,
	SF_TSe21_0100_0050             = 20316,
	SF_TSe21_0200_0010             = 20317,
	SF_TSe21_0200_0020             = 20318,
	SF_TSe21_0200_0030             = 20319,
	SF_TSe21_0200_0040             = 20320,
	SF_TSe21_0200_0050             = 20321,
	SF_TSe21_0300_0010             = 20322,
	SF_TSe21_0300_0020             = 20323,
	SF_TSe21_0300_0030             = 20324,
	SF_TSe21_0300_0040             = 20325,
	SF_TSe21_0300_0050             = 20326,
	SF_TSe21_0400_0010             = 20327,
	SF_TSe21_0400_0020             = 20328,
	SF_TSe21_0400_0030             = 20329,
	SF_TSe21_0400_0040             = 20330,
	SF_TSe21_0400_0050             = 20331,
	SF_TF11_0100_0010              = 20332,
	SF_TF11_0100_0020              = 20333,
	SF_TF11_0100_0030              = 20334,
	SF_TF11_0100_0040              = 20335,
	SF_TF11_0100_0050              = 20336,
	SF_TF11_0200_0010              = 20337,
	SF_TF11_0200_0020              = 20338,
	SF_TF11_0200_0030              = 20339,
	SF_TF11_0200_0040              = 20340,
	SF_TF11_0200_0050              = 20341,
	SF_TF21_0100_0010              = 20342,
	SF_TF21_0100_0020              = 20343,
	SF_TF21_0100_0030              = 20344,
	SF_TF21_0100_0040              = 20345,
	SF_TF21_0100_0050              = 20346,
	SF_TF21_0200_0010              = 20347,
	SF_TF21_0200_0020              = 20348,
	SF_TF21_0200_0030              = 20349,
	SF_TF21_0200_0040              = 20350,
	SF_TF21_0200_0050              = 20351,
	SF_TF21_0300_0010              = 20352,
	SF_TF21_0300_0020              = 20353,
	SF_TF21_0300_0030              = 20354,
	SF_TF21_0300_0040              = 20355,
	SF_TF21_0300_0050              = 20356,
	SF_TF31_0100_0010              = 20357,
	SF_TF31_0100_0020              = 20358,
	SF_TF31_0100_0030              = 20359,
	SF_TF31_0100_0040              = 20360,
	SF_TF31_0100_0050              = 20361,
	SF_TF31_0200_0010              = 20362,
	SF_TF31_0200_0020              = 20363,
	SF_TF31_0200_0030              = 20364,
	SF_TF31_0200_0040              = 20365,
	SF_TF31_0200_0050              = 20366,
	SF_TF31_0300_0010              = 20367,
	SF_TF31_0300_0020              = 20368,
	SF_TF31_0300_0030              = 20369,
	SF_TF31_0300_0040              = 20370,
	SF_TF31_0300_0050              = 20371,
	SF_TF31_0400_0010              = 20372,
	SF_TF31_0400_0020              = 20373,
	SF_TF31_0400_0030              = 20374,
	SF_TF31_0400_0040              = 20375,
	SF_TF31_0400_0050              = 20376,
	SF_TSn12_0100_0010             = 20377,
	SF_TSn12_0100_0020             = 20378,
	SF_TSn12_0100_0030             = 20379,
	SF_TSn12_0100_0040             = 20380,
	SF_TSn12_0100_0050             = 20381,
	SF_TSn12_0200_0010             = 20382,
	SF_TSn12_0200_0020             = 20383,
	SF_TSn12_0200_0030             = 20384,
	SF_TSn12_0200_0040             = 20385,
	SF_TSn12_0200_0050             = 20386,
	SF_TSn21_0100_0010             = 20387,
	SF_TSn21_0100_0020             = 20388,
	SF_TSn21_0100_0030             = 20389,
	SF_TSn21_0100_0040             = 20390,
	SF_TSn21_0100_0050             = 20391,
	SF_TSn21_0200_0010             = 20392,
	SF_TSn21_0200_0020             = 20393,
	SF_TSn21_0200_0030             = 20394,
	SF_TSn21_0200_0040             = 20395,
	SF_TSn21_0200_0050             = 20396,
	SF_TSn31_0100_0010             = 20397,
	SF_TSn31_0100_0020             = 20398,
	SF_TSn31_0100_0030             = 20399,
	SF_TSn31_0100_0040             = 20400,
	SF_TSn31_0100_0050             = 20401,
	SF_TSn31_0200_0010             = 20402,
	SF_TSn31_0200_0020             = 20403,
	SF_TSn31_0200_0030             = 20404,
	SF_TSn31_0200_0040             = 20405,
	SF_TSn31_0200_0050             = 20406,
	SF_TSn31_0300_0010             = 20407,
	SF_TSn31_0300_0020             = 20408,
	SF_TSn31_0300_0030             = 20409,
	SF_TSn31_0300_0040             = 20410,
	SF_TSn31_0300_0050             = 20411,
	SF_FW21_0100_0010              = 20412,
	SF_FW21_0100_0020              = 20413,
	SF_FW21_0100_0030              = 20414,
	SF_FW21_0100_0040              = 20415,
	SF_FW21_0100_0050              = 20416,
	SF_FC13_0100_0010              = 20417,
	SF_FC13_0100_0020              = 20418,
	SF_FC13_0100_0030              = 20419,
	SF_TD11_0100_LEAD_01           = 20420,
	SF_TC11_0200_LEAD_01           = 20421,
	SF_TSe11_0100_LEAD_01          = 20422,
	SF_TSe11_0100_LEAD_02          = 20423,
	SF_TSn12_0100_LEAD_01          = 20424,
	SF_TM12_0400_0010              = 20425,
	SF_TM12_0400_0020              = 20426,
	SF_TM12_0400_0030              = 20427,
	SF_TM12_0400_0040              = 20428,
	SF_TM12_0400_0050              = 20429,
	SF_TC11_0600_0010              = 20430,
	SF_TC11_0600_0020              = 20431,
	SF_TC11_0600_0030              = 20432,
	SF_TC11_0600_0040              = 20433,
	SF_TC11_0600_0050              = 20434,
	SF_TC11_0200_0070              = 20435,
	SF_TW21_0100_BOXGet            = 20436,
	SF_TW21_0100_A_ON              = 20437,
	SF_TW21_0100_A_OFF             = 20438,
	SF_TW21_0100_CD_ON             = 20439,
	SF_TW21_0100_CD_OFF            = 20440,
	SF_TW21_0100_F_ON              = 20441,
	SF_TW21_0100_F_OFF             = 20442,
	SF_TM21_0300_KENWIN            = 20443,
	SF_TM21_0300_KARWIN            = 20444,
	SF_TM21_0300_KUSWIN            = 20445,
	SF_TM21_0300_TOUWIN            = 20446,
	SF_TW31_0400_0010              = 20447,
	SF_TW31_0400_0020              = 20448,
	SF_TW31_0400_0030              = 20449,
	SF_TW31_0400_0040              = 20450,
	SF_TW31_0400_0050              = 20451,
	SF_TW31_0400_STUN_001D         = 20452,
	SF_TW31_0400_STUN_002D         = 20453,
	SF_TW31_0400_STUN_003D         = 20454,
	SF_TW31_0400_STUN_004D         = 20455,
	SF_TW31_0400_STUN_005D         = 20456,
	SF_TW31_0400_STUN_006D         = 20457,
	SF_TW31_0400_STUN_007D         = 20458,
	SF_TW31_0400_STUN_008D         = 20459,
	SF_TW31_0400_STUN_009D         = 20460,
	SF_TW31_0400_STUN_010D         = 20461,
	SF_TW31_0400_STUN_001N         = 20462,
	SF_TW31_0400_STUN_002N         = 20463,
	SF_TW31_0400_STUN_003N         = 20464,
	SF_TW31_0400_STUN_004N         = 20465,
	SF_TW31_0400_STUN_005N         = 20466,
	SF_TW31_0400_STUN_006N         = 20467,
	SF_TW31_0400_STUN_007N         = 20468,
	SF_TW31_0400_STUN_008N         = 20469,
	SF_TW31_0400_STUN_009N         = 20470,
	SF_TW31_0400_STUN_010N         = 20471,
	SF_SP_TUTORIAL_0001            = 20500,
	SF_SP_TUTORIAL_0002            = 20501,
	SF_SP_TUTORIAL_0003            = 20502,
	SF_SP_TUTORIAL_0004            = 20503,
	SF_SP_TUTORIAL_0005            = 20504,
	SF_SP_TUTORIAL_0006            = 20505,
	SF_SP_TUTORIAL_0007            = 20506,
	SF_SP_TUTORIAL_0008            = 20507,
	SF_SP_TUTORIAL_0009            = 20508,
	SF_SP_TUTORIAL_ENABLE          = 20509,
	SF_SP_TUTORIAL_CONDITIONS      = 20510,
	SF_SP_TUTORIAL_COMPLETED       = 20511,
	SF_SP_TUTORIAL_BANDIT_TALKED   = 20512,
	SF_JNP_LYL_0050                = 20513,
	SF_TF31_0400_0060              = 20514,
	SF_TF31_0400_0070              = 20515,
	JNP_KAR_030_LEAD               = 20516,
	SF_TW21_0100_SE01              = 20517,
	SF_TW21_0100_SE02              = 20518,
	SF_TW21_0100_SE03              = 20519,
	SF_TW21_0100_SE04              = 20520,
	JNP_SHO_070_LEAD               = 20521,
	SF_FC13_0100_0010_INVOBJ_A     = 20522,
	SF_FC13_0100_0010_INVOBJ_B     = 20523,
	SF_FC13_0100_0010_INVOBJ_C     = 20524,
	SF_FC13_0100_0010_INVOBJ_D     = 20525,
	SF_FC13_0100_0010_INVOBJ_E     = 20526,
	SF_FC13_0100_0010_INVOBJ_F     = 20527,
	SF_FC13_0100_0010_INVOBJ_G     = 20528,
	SF_FC13_0100_0010_INVOBJ_H     = 20529,
	FEV_Fld_Sea_1_2_0100_0010      = 23000,
	FEV_Fld_Sea_1_2_0100_0020      = 23001,
	FEV_Fld_Sea_1_2_0100_0030      = 23002,
	FEV_Fld_Wld_3_2_0100_0010      = 23003,
	FEV_Fld_Dst_3_1_B_0100_0010    = 23004,
	FEV_Fld_Dst_3_1_B_0100_0020    = 23005,
	FEV_Fld_Dst_3_1_B_0100_0030    = 23006,
	FEV_Fld_Dst_3_1_B_0100_0040    = 23007,
	FEV_Fld_Dst_3_1_B_0100_0050    = 23008,
	FEV_Fld_Dst_3_1_B_0100_1win    = 23009,
	FEV_Fld_Dst_3_1_B_0100_2win    = 23010,
	FEV_Fld_Dst_3_1_B_0100_3win    = 23011,
	FEV_Fld_Dst_3_1_B_0100_4win    = 23012,
	FEV_Fld_Dst_3_1_B_0100_5win    = 23013,
	FEV_Fld_Dst_2_3_0100_0010      = 23014,
	FEV_Fld_Dst_2_3_0100_0020      = 23015,
	FEV_Fld_Dst_2_3_0100_0030      = 23016,
	FEV_Fld_Dst_2_3_0100_0040      = 23017,
	FEV_Fld_Dst_2_3_0100_0010T     = 23018,
	FEV_Fld_Dst_2_3_0100_0020T     = 23019,
	FEV_Fld_Dst_2_3_0100_0030T     = 23020,
	FEV_Fld_Dst_2_3_0100_0040T     = 23021,
	FEV_Fld_Mnt_2_1_0100_0010      = 23022,
	FEV_Fld_Dst_2_3_0100_0000E     = 23023,
	FEV_Fld_Dst_2_3_0100_0010E     = 23024,
	FEV_Fld_Dst_2_3_0100_0020E     = 23025,
	FEV_Fld_Dst_2_3_0100_0030E     = 23026,
	SF_TSe21_0100_0060             = 24989,
	SF_TSe21_0100_0070             = 24990,
	SF_TSe21_0100_0080             = 24991,
	SF_TSe21_0100_0090             = 24992,
	SF_TSe21_0100_0100             = 24993,
	SF_TSe21_0100_0110             = 24994,
	SF_TSe21_0100_0120             = 24995,
	SF_FO14_Gardella_0010          = 24996,
	SF_FO14_Gardella_0020          = 24997,
	SF_FO14_Gardella_0030          = 24998,
	SF_FLAGMAX                     = 24999,
	LF_MS_KEN_10_001               = 25000,
	LF_MS_KEN_10_002               = 25001,
	LF_MS_KEN_10_003               = 25002,
	LF_MS_KEN_10_004               = 25003,
	LF_MS_KEN_10_005               = 25004,
	LF_MS_KEN_10_006               = 25005,
	LF_MS_KEN_10_007               = 25006,
	LF_MS_KEN_10_008               = 25007,
	LF_MS_KEN_10_009               = 25008,
	LF_MS_KEN_10_010               = 25009,
	LF_MS_KEN_10_011               = 25010,
	LF_MS_KEN_10_012               = 25011,
	LF_MS_KEN_10_013               = 25012,
	LF_MS_KEN_10_014               = 25013,
	LF_MS_KEN_10_015               = 25014,
	LF_MS_KEN_10_016               = 25015,
	LF_MS_KEN_10_017               = 25016,
	LF_MS_KEN_10_FIRETOWN          = 25017,
	LF_MS_SIN_10_1300_Glass        = 25018,
	LF_MS_SIN_10_1300_Candle       = 25019,
	LF_MS_SIN_10_1300_Bible        = 25020,
	LF_MS_SIN_10_001               = 25021,
	LF_MS_SIN_10_002               = 25022,
	LF_MS_SIN_10_003               = 25023,
	LF_MS_SIN_10_DEEPWORLD         = 25024,
	LF_MS_SIN_10_004               = 25025,
	LF_MS_SIN_10_005               = 25026,
	LF_MS_SIN_10_006               = 25028,
	LF_MS_SIN_10_007               = 25029,
	LF_MS_SIN_10_008               = 25030,
	LF_MS_SIN_10_014               = 25031,
	LF_MS_SIN_10_015               = 25032,
	LF_MS_SIN_10_016               = 25033,
	LF_GUR_FLG_001                 = 25042,
	LF_GUR_FLG_002                 = 25043,
	LF_GUR_FLG_003                 = 25044,
	LF_GUR_FLG_004                 = 25045,
	LF_GUR_FLG_005                 = 25046,
	LF_GUR_FLG_006                 = 25047,
	LF_GUR_FLG_007                 = 25048,
	LF_GUR_FLG_008                 = 25049,
	LF_GUR_FLG_009                 = 25050,
	LF_GUR_FLG_010                 = 25051,
	LF_GUR_FLG_011                 = 25052,
	LF_GUR_FLG_012                 = 25053,
	LF_GUR_FLG_013                 = 25054,
	LF_GUR_FLG_014                 = 25055,
	LF_GUR_FLG_015                 = 25056,
	LF_GUR_FLG_016                 = 25057,
	LF_GUR_FLG_017                 = 25058,
	LF_GUR_FLG_018                 = 25059,
	LF_GUR_FLG_019                 = 25060,
	LF_GUR_FLG_020                 = 25061,
	LF_GUR_FLG_021                 = 25062,
	LF_GUR_FLG_022                 = 25063,
	LF_GUR_FLG_023                 = 25064,
	LF_GUR_FLG_024                 = 25065,
	LF_GUR_FLG_025                 = 25066,
	LF_GUR_FLG_026                 = 25067,
	LF_GUR_FLG_027                 = 25068,
	LF_MS_SHO_10_001               = 25069,
	LF_MS_SHO_10_002               = 25070,
	LF_MS_SHO_10_003               = 25071,
	LF_MS_SHO_10_004               = 25072,
	LF_MS_SHO_10_005               = 25073,
	LF_MS_SHO_10_006               = 25074,
	LF_MS_SHO_10_007               = 25075,
	LF_MS_ODO_10_001               = 25076,
	LF_MS_ODO_10_002               = 25077,
	LF_MS_ODO_10_003               = 25078,
	LF_MS_ODO_10_004               = 25079,
	LF_MS_ODO_10_005               = 25080,
	LF_MS_ODO_10_006               = 25081,
	LF_MS_ODO_10_007               = 25082,
	LF_MS_GAK_10_001               = 25083,
	LF_MS_GAK_10_002               = 25084,
	LF_MS_GAK_10_003               = 25085,
	LF_MS_GAK_10_004               = 25086,
	LF_MS_GAK_10_005               = 25087,
	LF_MS_GAK_10_006               = 25088,
	LF_MS_GAK_10_007               = 25089,
	LF_MS_GAK_10_008               = 25090,
	LF_MS_GAK_10_009               = 25091,
	LF_MS_GAK_10_010               = 25092,
	LF_MS_GAK_10_011               = 25093,
	LF_MS_GAK_10_012               = 25094,
	LF_MS_GAK_10_013               = 25095,
	LF_MS_GAK_10_014               = 25096,
	LF_MS_GAK_10_015               = 25097,
	LF_MS_GAK_10_016               = 25098,
	LF_MS_GAK_10_017               = 25099,
	LF_MS_GAK_10_018               = 25100,
	LF_MS_GAK_10_019               = 25101,
	LF_MS_KAR_10_001               = 25102,
	LF_MS_SHO_10_008               = 25103,
	LF_MS_GAK_10_020               = 25104,
	LF_MS_KUS_10_001               = 25105,
	LF_MS_KUS_10_002               = 25106,
	LF_MS_KUS_10_003               = 25107,
	LF_MS_KUS_10_004               = 25108,
	LF_MS_KUS_10_005               = 25109,
	LF_MS_GAK_10_021               = 25114,
	LF_MS_GAK_10_022               = 25115,
	LF_MS_KAR_10_002               = 25116,
	LF_MS_KAR_10_003               = 25117,
	LF_MS_GAK_10_023               = 25120,
	LF_MS_KAR_10_006               = 25121,
	LF_MS_KAR_10_007               = 25123,
	LF_MS_KAR_10_008               = 25124,
	LF_MS_SHO_20_001               = 25125,
	LF_MS_SHO_20_002               = 25126,
	LF_MS_SHO_30_001               = 25127,
	LF_MS_SHO_30_002               = 25128,
	LF_MS_SHO_30_003               = 25129,
	LF_MS_SHO_30_004               = 25130,
	LF_MS_SHO_30_005               = 25131,
	LF_MS_SHO_30_006               = 25132,
	LF_MS_SHO_30_007               = 25133,
	LF_MS_SHO_30_008               = 25134,
	LF_MS_TOU_2A_001               = 25135,
	LF_MS_TOU_3A_001               = 25136,
	LF_MS_TOU_40_001               = 25137,
	LF_MS_ODO_30_001               = 25138,
	LF_MS_ODO_40_001               = 25139,
	LF_MS_ODO_50_001               = 25140,
	LF_MS_KEN_20_001               = 25141,
	LF_MS_KEN_20_002               = 25142,
	LF_MS_KEN_20_003               = 25143,
	LF_MS_KEN_20_004               = 25144,
	LF_MS_KEN_20_005               = 25145,
	LF_MS_KEN_20_006               = 25146,
	LF_MS_SIN_3A_001               = 25147,
	LF_MS_SIN_3A_002               = 25148,
	LF_MS_SHO_20_003               = 25149,
	LF_MS_SHO_20_004               = 25150,
	LF_MS_SHO_20_005               = 25151,
	LF_MS_SHO_20_006               = 25152,
	LF_MS_SHO_20_007               = 25153,
	LF_MS_KUS_2B_001               = 25154,
	LF_MS_KUS_2B_002               = 25155,
	LF_MS_KUS_2B_003               = 25156,
	LF_MS_KUS_2B_004               = 25157,
	LF_MS_KUS_2B_005               = 25158,
	LF_MS_KUS_2B_006               = 25159,
	LF_MS_KAR_2B_001               = 25160,
	LF_MS_KAR_2B_002               = 25161,
	LF_MS_KAR_2B_003               = 25162,
	LF_MS_ODO_20_001               = 25163,
	LF_MS_ODO_20_002               = 25164,
	LF_MS_ODO_20_003               = 25165,
	LF_MS_ODO_20_004               = 25166,
	LF_MS_ODO_20_005               = 25167,
	LF_MS_ODO_20_006               = 25168,
	LF_MS_ODO_20_007               = 25169,
	LF_MS_ODO_20_008               = 25170,
	LF_MS_ODO_20_009               = 25171,
	LF_MS_ODO_20_010               = 25172,
	LF_MS_ODO_20_011               = 25173,
	LF_MS_ODO_20_012               = 25174,
	LF_MS_ODO_20_013               = 25175,
	LF_MS_ODO_20_014               = 25176,
	LF_MS_ODO_20_015               = 25177,
	LF_MS_ODO_20_016               = 25178,
	LF_MS_ODO_20_017               = 25179,
	LF_MS_ODO_20_018               = 25180,
	LF_MS_ODO_20_019               = 25181,
	LF_MS_ODO_20_020               = 25182,
	LF_MS_ODO_20_021               = 25183,
	LF_MS_ODO_20_022               = 25184,
	LF_MS_ODO_20_023               = 25185,
	LF_MS_ODO_20_024               = 25186,
	LF_MS_ODO_20_025               = 25187,
	LF_MS_KEN_20_1510              = 25188,
	LF_MS_GAK_30_001               = 25189,
	LF_MS_GAK_30_002               = 25190,
	LF_MS_GAK_30_003               = 25191,
	LF_MS_ODO_30_002               = 25192,
	LF_MS_ODO_30_003               = 25193,
	LF_MS_SIN_20_001               = 25194,
	LF_MS_SIN_20_002               = 25195,
	LF_MS_SIN_20_003               = 25196,
	LF_MS_SIN_20_004               = 25197,
	LF_MS_SIN_20_005               = 25198,
	LF_MS_SIN_20_006               = 25199,
	LF_MS_SIN_20_007               = 25200,
	LF_MS_SHO_30_009               = 25202,
	LF_MS_SHO_30_010               = 25203,
	LF_MS_SHO_30_011               = 25204,
	LF_MS_SHO_30_012               = 25205,
	LF_MS_SHO_30_013               = 25206,
	LF_MS_SHO_30_014               = 25207,
	LF_MS_SHO_30_015               = 25208,
	LF_MS_SHO_30_016               = 25209,
	LF_MS_SHO_30_017               = 25210,
	LF_MS_SHO_30_018               = 25211,
	LF_MS_SHO_30_019               = 25212,
	LF_MS_SHO_30_020               = 25213,
	LF_MS_KUS_30_001               = 25214,
	LF_MS_KUS_30_002               = 25215,
	LF_MS_KUS_30_003               = 25216,
	LF_MS_KUS_30_RAIN_SEQUENCER    = 25217,
	LF_MS_KEN_10_018               = 25218,
	LF_MS_GAK_40_001               = 25219,
	LF_MS_GAK_40_002               = 25220,
	LF_MS_GAK_40_003               = 25221,
	LF_MS_GAK_40_004               = 25222,
	LF_MS_GAK_40_005               = 25223,
	LF_MS_GAK_50_001               = 25224,
	LF_MS_GAK_50_002               = 25225,
	LF_MS_GAK_50_003               = 25226,
	LF_MS_SIN_40_001               = 25227,
	LF_MS_KUS_40_RAIN_SEQUENCER    = 25228,
	LF_MS_KUS_40_001               = 25229,
	LF_MS_KUS_40_002               = 25230,
	LF_MS_KUS_40_003               = 25231,
	LF_MS_SHO_40_001               = 25232,
	LF_MS_TOU_2B_001               = 25233,
	LF_MS_TOU_2B_002               = 25234,
	LF_MS_TOU_2B_003               = 25235,
	LF_MS_SHO_20_008               = 25236,
	LF_MS_SHO_20_009               = 25237,
	LF_MS_SHO_30_021               = 25238,
	LF_MS_SHO_30_022               = 25239,
	LF_MS_SHO_30_023               = 25240,
	LF_MS_SHO_30_024               = 25241,
	LF_MS_SHO_30_025               = 25242,
	LF_MS_SHO_30_026               = 25243,
	LF_MS_SHO_30_027               = 25244,
	LF_MS_SHO_30_028               = 25245,
	LF_MS_SHO_30_029               = 25246,
	LF_MS_SHO_30_030               = 25247,
	LF_MS_SHO_30_031               = 25248,
	LF_MS_KEN_50_001               = 25249,
	LF_MS_KEN_50_002               = 25250,
	LF_MS_SHO_20_010               = 25251,
	LF_MS_SHO_20_011               = 25252,
	LF_MS_KAR_10_009               = 25253,
	LF_MS_KAR_10_010               = 25254,
	LF_MS_ODO_20_026               = 25255,
	LF_MS_ODO_20_027               = 25256,
	LF_MS_KUS_30_004               = 25257,
	LF_MS_KUS_40_004               = 25258,
	LF_MS_KUS_40_005               = 25259,
	LF_MS_KUS_40_006               = 25260,
	LF_MS_SIN_3B_001               = 25264,
	LF_MS_END_TORCH_FIRST          = 25265,
	LF_MS_END_TORCH_SECOND         = 25266,
	LF_MS_END_TORCH_THIRD          = 25267,
	LF_MS_COP_OK2_001              = 25268,
	LF_MS_COP_OK2_002              = 25269,
	LF_MS_COP_OK2_003              = 25270,
	LF_MS_COP_OK2_004              = 25271,
	LF_MS_COP_KK1_001              = 25272,
	LF_MS_COP_KK1_002              = 25273,
	LF_MS_COP_KK1_003              = 25274,
	LF_MS_COP_ST1_001              = 25275,
	LF_MS_COP_ST1_002              = 25276,
	LF_MS_COP_ST1_003              = 25277,
	LF_MS_COP_GS1_001              = 25278,
	LF_MS_COP_GS1_002              = 25279,
	LF_MS_COP_GS1_003              = 25280,
	LF_MS_COP_GS1_004              = 25281,
	LF_MS_END_MNT_TORCH_ACCESS     = 25282,
	LF_MS_END_WLD_TORCH_ACCESS     = 25283,
	LF_MS_END_ISD_TORCH_ACCESS     = 25284,
	LF_MS_END_DST_TORCH_ACCESS     = 25285,
	LF_MS_SHO_EX2_001              = 25286,
	LF_MS_SHO_EX2_002              = 25287,
	LF_MS_SHO_EX2_003              = 25288,
	LF_MS_ODO_20_LYRICS_A          = 25292,
	LF_MS_ODO_20_LYRICS_B          = 25293,
	LF_MS_ODO_20_LYRICS_C          = 25294,
	LF_MS_ODO_30_LYRICS_A          = 25295,
	LF_MS_ODO_30_LYRICS_B          = 25296,
	LF_MS_ODO_30_LYRICS_C          = 25297,
	LF_MS_ODO_40_LYRICS_A          = 25298,
	LF_MS_ODO_40_LYRICS_B          = 25299,
	LF_MS_ODO_40_LYRICS_C          = 25300,
	LF_MS_GAK_10_025               = 25301,
	LF_MS_GAK_10_026               = 25302,
	LF_MS_GAK_10_027               = 25303,
	LF_MS_TOU_10_001               = 25304,
	LF_MS_TOU_10_002               = 25305,
	LF_MS_GAK_10_028               = 25306,
	LF_MS_GAK_10_029               = 25307,
	LF_MS_GAK_10_030               = 25308,
	LF_MS_GAK_10_031               = 25309,
	LF_MS_GAK_10_032               = 25310,
	LF_MS_GAK_10_033               = 25311,
	LF_MS_KUS_10_010               = 25312,
	LF_KAR_PARTNAR_DECISION        = 25322,
	LF_MS_ODO_10_008               = 25323,
	LF_MS_ODO_10_009               = 25324,
	LF_MS_ODO_10_010               = 25325,
	LF_MS_ODO_10_011               = 25326,
	LF_MS_ODO_10_012               = 25327,
	LF_MS_ODO_10_013               = 25328,
	LF_MS_ODO_10_014               = 25329,
	LF_MS_ODO_10_015               = 25330,
	LF_MS_ODO_10_016               = 25331,
	LF_MS_ODO_10_017               = 25332,
	LF_MS_ODO_10_018               = 25333,
	LF_MS_END_MNT_TORCH_REIGNITION = 25334,
	LF_MS_END_WLD_TORCH_REIGNITION = 25335,
	LF_MS_END_ISD_TORCH_REIGNITION = 25336,
	LF_MS_END_DST_TORCH_REIGNITION = 25337,
	LF_MS_KAR_10_011               = 25338,
	LF_MS_KAR_30_SCARLETMOON_SEQUENCER = 25339,
	LF_MS_ODO_10_019               = 25340,
	LF_MS_ODO_10_020               = 25341,
	LF_MS_ODO_10_021               = 25342,
	LF_MS_SHO_EX1_001              = 25343,
	LF_MS_SHO_EX1_002              = 25344,
	LF_MS_SHO_EX1_003              = 25345,
	LF_MS_SHO_EX1_004              = 25346,
	LF_MS_SHO_EX1_005              = 25347,
	LF_MS_SHO_EX1_006              = 25348,
	LF_MS_SHO_EX1_007              = 25349,
	LF_MS_SHO_EX1_008              = 25350,
	LF_MS_SHO_EX1_009              = 25351,
	LF_MS_SHO_EX1_010              = 25352,
	LF_MS_SHO_EX1_011              = 25353,
	LF_MS_SHO_EX1_012              = 25354,
	LF_MS_ODO_20_LYRIC_Achievement = 25355,
	LF_MS_ODO_30_LYRIC_Achievement = 25356,
	LF_MS_ODO_40_LYRIC_Achievement = 25357,
	LF_MS_SHO_30_ClearQuickly      = 25358,
	LF_MS_SHO_EX1_ClearQuickly     = 25359,
	LF_MS_SIN_3A_ClearQuickly      = 25360,
	LF_MS_SIN_3B_ClearQuickly      = 25361,
	LF_MS_SIN_3A_0600_3B_NotClear  = 25362,
	LF_MS_SIN_3A_0800_3B_NotClear  = 25363,
	LF_MS_SIN_3A_0820_3B_NotClear  = 25364,
	LF_MS_SIN_3A_1400_3B_NotClear  = 25365,
	LF_MS_SHO_EX2_004              = 25366,
	LF_MS_SHO_EX2_005              = 25367,
	LF_MS_SHO_EX2_006              = 25368,
	LF_MS_SHO_EX2_007              = 25369,
	LF_MS_TOU_3M_001               = 25370,
	LF_MS_TOU_3M_002               = 25371,
	LF_MS_ODO_30_004               = 25372,
	LF_MS_SHO_30_032               = 25373,
	LF_MS_SHO_30_033               = 25374,
	LF_MS_SHO_30_034               = 25375,
	LF_MS_KUS_30_005               = 25376,
	LF_MS_KEN_40_Reminiscence      = 25377,
	LF_MS_SIN_20_DeepDirecting     = 25378,
	LF_MS_KUS_30_006               = 25379,
	LF_MS_SHO_EX3_001              = 25380,
	LF_MS_KAR_10_Reminiscence      = 25381,
	LF_MS_SHO_10_Reminiscence      = 25382,
	LF_END_20_1ST_TOUCH_ACHIEVEMENT = 25383,
	LF_END_20_2ND_TOUCH_ACHIEVEMENT = 25384,
	LF_END_20_3RD_TOUCH_ACHIEVEMENT = 25385,
	LF_END_20_4TH_TOUCH_ACHIEVEMENT = 25386,
	LF_MS_SIN_40_MapIN_Right       = 25387,
	LF_MS_SIN_40_MapIN_Left        = 25388,
	LF_MS_SIN_40_MapIN_Rear        = 25389,
	LF_MS_SIN_40_HINT_10Times_Achievement = 25390,
	LF_MS_SIN_40_002               = 25391,
	LF_MS_SIN_40_003               = 25392,
	LF_MS_SIN_40_004               = 25393,
	LF_MS_KAR_30_001               = 25394,
	LF_MS_KAR_30_002               = 25395,
	LF_MS_KAR_30_003               = 25396,
	LF_MS_KAR_10_AWAKENING_STATUS  = 25397,
	LF_MS_KAR_2C_Snowing_Light     = 25398,
	LF_MS_KEN_50_003               = 25399,
	LF_MS_KEN_50_004               = 25400,
	LF_MS_KEN_50_005               = 25401,
	LF_MS_KEN_50_006               = 25402,
	LF_MS_ODO_10_Dng_Fst_2_2       = 25403,
	LF_MS_SHO_20_BAN_Encount       = 25404,
	LF_MS_KUS_30_BAN_Encount       = 25405,
	LF_MS_COP_KK2_BAN_Encount      = 25406,
	LF_MS_TOU_3A_BAN_Encount       = 25407,
	LF_MS_COP_KK2_001              = 25408,
	LF_MS_SIN_10_FOLLOW_Click      = 25409,
	LF_MS_SIN_10_FOLLOW_RELEASE_Click = 25410,
	LF_MS_KAR_10_FOLLOW_Girl       = 25411,
	LF_MS_KAR_10_FOLLOW_RELEASE_Girl = 25412,
	LF_MS_SHO_EX3_002              = 25413,
	LF_MS_SIN_3B_FOLLOW_Lieza      = 25414,
	LF_MS_KAR_2B_FOLLOW_Pom        = 25415,
	LF_MS_ODO_30_FOLLOW_Giselle    = 25416,
	LF_MS_COP_ST1_FOLLOW_Oldman    = 25417,
	LF_MS_SIN_3B_FOLLOW_RELEASE_Lieza = 25418,
	LF_MS_KAR_2B_FOLLOW_RELEASE_Pom = 25419,
	LF_MS_ODO_30_FOLLOW_RELEASE_Giselle = 25420,
	LF_MS_COP_ST1_FOLLOW_RELEASE_Oldman = 25421,
	LF_MS_SHO_10_TOWN_DEVASTATION  = 25422,
	LF_MS_ODO_10_022               = 25423,
	LF_MS_ODO_10_023               = 25424,
	LF_MS_ODO_10_024               = 25425,
	LF_Twn_Mnt_2_1_C_NPCChange     = 25426,
	LF_MS_KUS_10_011               = 25427,
	LF_MS_TOU_10_003               = 25428,
	LF_MS_SHO_10_009               = 25429,
	LF_MS_GAK_10_034               = 25430,
	LF_MS_SIN_10_025               = 25431,
	LF_MS_KAR_10_012               = 25432,
	LF_MS_KAR_10_013               = 25433,
	LF_MS_SHO_10_010               = 25434,
	LF_MS_KEN_10_019               = 25435,
	LF_MS_KEN_10_020               = 25436,
	LF_MS_SIN_20_012               = 25437,
	LF_MS_KUS_10_012               = 25438,
	LF_MS_SIN_20_013               = 25439,
	LF_MS_SIN_10_026               = 25440,
	LF_MS_SIN_20_014               = 25441,
	LF_MS_SIN_20_015               = 25442,
	LF_MS_SIN_20_016               = 25443,
	LF_MS_SIN_10_027               = 25444,
	LF_MS_SIN_3B_002               = 25445,
	LF_MS_SIN_30_001               = 25446,
	LF_Twn_Fst_3_1_B_Delete_TransitionClosed = 25447,
	LF_RELEASE_Twn_Fst_3_2_A       = 25448,
	LF_MS_COP_OK2_005              = 25449,
	LF_MS_COP_OK2_006              = 25450,
	LF_MS_SIN_20_017               = 25451,
	LF_MS_SHO_PROLOGUE             = 25452,
	LF_MS_SHO_EX2_008              = 25453,
	LF_MS_SHO_EX2_009              = 25454,
	LF_MS_SHO_EX2_010              = 25455,
	LF_MS_SHO_EX0_ImpossibleFlag   = 25456,
	LF_MS_SHO_EX1_ImpossibleFlag   = 25457,
	LF_MS_SHO_EX2_ImpossibleFlag   = 25458,
	LF_MS_SHO_EX3_ImpossibleFlag   = 25459,
	LF_Twn_Mnt_3_1_B_Delete_TransitionClosed = 25460,
	LF_MS_KEN_50_Playing           = 25461,
	LF_MS_KEN_10_021               = 25462,
	LF_MS_KAR_20_ANY_CLEAR         = 25463,
	LF_MS_KUS_20_ANY_CLEAR         = 25464,
	LF_MS_TOU_20_ANY_CLEAR         = 25465,
	LF_Dng_Snw_3_4_FALL_BRIDGE     = 25466,
	LF_MS_SHO_30_035               = 25467,
	LF_MS_SHO_30_036               = 25468,
	LF_Fld_Ocn_1_1_Shark_Achievement = 25469,
	LF_Fld_Ocn_1_1_Umibozu_Achievement = 25470,
	LF_MS_KAR_10_014               = 25471,
	LF_MS_COP_ST2_BAN_Encount      = 25472,
	LF_MS_END_GARDELLA_STATUS_SAVE = 25473,
	LF_MS_SHO_GRAMOPHONE_EARLY     = 25474,
	LF_MS_GAK_50_004               = 25475,
	LF_MS_GAK_50_005               = 25476,
	LF_MS_GAK_50_006               = 25477,
	LF_MS_GAK_50_007               = 25478,
	LF_MS_KEN_10_022               = 25479,
	LF_MS_GAK_10_035               = 25480,
	LF_MS_END_20_001               = 25481,
	LF_MS_END_20_002               = 25482,
	LF_MS_END_20_003               = 25483,
	LF_MS_END_20_004               = 25484,
	LF_Dng_Cty_3_1_Door            = 25485,
	LF_MS_TOU_10_004               = 25486,
	LF_MS_TOU_10_005               = 25487,
	LF_MS_TOU_10_006               = 25488,
	LF_MS_TOU_10_007               = 25489,
	LF_MS_TOU_10_008               = 25490,
	LF_MS_TOU_10_009               = 25491,
	LF_MS_COP_ST2_001              = 25492,
	LF_MS_KEN_10_023               = 25493,
	LF_MS_KEN_10_024               = 25494,
	LF_MS_KEN_10_025               = 25495,
	LF_MS_KEN_10_026               = 25496,
	LF_MS_KEN_10_027               = 25497,
	LF_MS_KAR_10_015               = 25498,
	LF_MS_KAR_10_016               = 25499,
	LF_FLD_CTY_1_2_BLACKMARKET_A   = 25500,
	LF_FLD_CTY_1_2_BLACKMARKET_B   = 25501,
	LF_FLD_CTY_1_2_BLACKMARKET_C   = 25502,
	LF_FLD_CTY_1_2_BLACKMARKET_D   = 25503,
	LF_TWN_WLD_3_1_A_BILL_COLLECTION_A = 25510,
	LF_TWN_WLD_3_1_A_BILL_COLLECTION_B = 25511,
	LF_TWN_WLD_3_1_A_BILL_COLLECTION_C = 25512,
	LF_FLD_MNT_3_2_ADDITIONAL_MERCENARIES = 25520,
	LF_MS_EPI_001                  = 25521,
	LF_MS_EPI_Twn_Cty_1_1_A_Clear  = 25522,
	LF_MS_EPI_Twn_Cty_1_1_B_Clear  = 25523,
	LF_MS_GAK_20_001               = 25524,
	LF_MS_SIN_40_HINT_4Times_Achievement = 25525,
	LF_MS_COP_ST2_002              = 25526,
	LF_MS_GAK_50_NightOnly         = 25527,
	LF_MS_COP_KK2_Dark_Sequencer   = 25528,
	LF_MS_ThemeBGM                 = 25529,
	LF_MS_KEN_50_01                = 25530,
	LF_MS_KAR_10_017               = 25531,
	LF_Twn_Cty_2_1_A_GATEKEEPER    = 25532,
	LF_MS_KAR_10_018               = 25533,
	LF_MS_KUS_40_007               = 25534,
	LF_MS_GAK_10_036               = 25535,
	LF_END_TORCH_BGM_DST           = 25536,
	LF_END_TORCH_BGM_WLD           = 25537,
	LF_END_TORCH_BGM_ISD           = 25538,
	LF_END_TORCH_BGM_MNT           = 25539,
	LF_END_TORCH_BGM_OTHER         = 25540,
	LF_MS_KAR_10_019               = 25541,
	LF_MS_KEN_10_028               = 25542,
	LF_MS_KEN_10_029               = 25543,
	LF_MS_KEN_10_030               = 25544,
	LF_MS_KEN_10_031               = 25545,
	LF_MS_GAK_10_037               = 25546,
	LF_MS_COP_KK2_002              = 25547,
	LF_MS_KAR_10_020               = 25548,
	LF_MS_KAR_10_021               = 25549,
	LF_MS_COP_KK2_003              = 25550,
	LF_MS_KAR_10_022               = 25551,
	LF_FLAGMAX                     = 33999,
	OBJ_ONOFF_0000                 = 34000,
	OBJ_ONOFF_0010                 = 34001,
	OBJ_ONOFF_0020                 = 34002,
	OBJ_ONOFF_0030                 = 34003,
	OBJ_ONOFF_0040                 = 34004,
	OBJ_ONOFF_0050                 = 34005,
	OBJ_ONOFF_0060                 = 34006,
	OBJ_ONOFF_0070                 = 34007,
	OBJ_ONOFF_0080                 = 34008,
	OBJ_ONOFF_0090                 = 34009,
	OBJ_ONOFF_0100                 = 34010,
	OBJ_ONOFF_0110                 = 34011,
	OBJ_ONOFF_0120                 = 34012,
	OBJ_ONOFF_0130                 = 34013,
	OBJ_ONOFF_0140                 = 34014,
	OBJ_ONOFF_0150                 = 34015,
	OBJ_ONOFF_0160                 = 34016,
	OBJ_ONOFF_0170                 = 34017,
	OBJ_ONOFF_0180                 = 34018,
	OBJ_ONOFF_0190                 = 34019,
	OBJ_ONOFF_0200                 = 34020,
	OBJ_ONOFF_0210                 = 34021,
	OBJ_ONOFF_0220                 = 34022,
	OBJ_ONOFF_0230                 = 34023,
	OBJ_ONOFF_0240                 = 34024,
	OBJ_ONOFF_0250                 = 34025,
	OBJ_ONOFF_0260                 = 34026,
	OBJ_ONOFF_0270                 = 34027,
	OBJ_ONOFF_0280                 = 34028,
	OBJ_ONOFF_0290                 = 34029,
	OBJ_ONOFF_0300                 = 34030,
	OBJ_ONOFF_0310                 = 34031,
	OBJ_ONOFF_0320                 = 34032,
	OBJ_ONOFF_0330                 = 34033,
	OBJ_ONOFF_0340                 = 34034,
	OBJ_ONOFF_0350                 = 34035,
	OBJ_ONOFF_0360                 = 34036,
	OBJ_ONOFF_0370                 = 34037,
	OBJ_ONOFF_0380                 = 34038,
	OBJ_ONOFF_0390                 = 34039,
	OBJ_ONOFF_0400                 = 34040,
	OBJ_ONOFF_0410                 = 34041,
	OBJ_ONOFF_0420                 = 34042,
	OBJ_ONOFF_0430                 = 34043,
	OBJ_ONOFF_0440                 = 34044,
	OBJ_ONOFF_0450                 = 34045,
	OBJ_ONOFF_0460                 = 34046,
	OBJ_ONOFF_0470                 = 34047,
	OBJ_ONOFF_0480                 = 34048,
	OBJ_ONOFF_0490                 = 34049,
	OBJ_ONOFF_0500                 = 34050,
	OBJ_ONOFF_0510                 = 34051,
	OBJ_ONOFF_0520                 = 34052,
	OBJ_ONOFF_0530                 = 34053,
	OBJ_ONOFF_0540                 = 34054,
	OBJ_ONOFF_0550                 = 34055,
	OBJ_ONOFF_0560                 = 34056,
	OBJ_ONOFF_0570                 = 34057,
	OBJ_ONOFF_0580                 = 34058,
	OBJ_ONOFF_0590                 = 34059,
	OBJ_ONOFF_0600                 = 34060,
	OBJ_ONOFF_0610                 = 34061,
	OBJ_ONOFF_0620                 = 34062,
	OBJ_ONOFF_0630                 = 34063,
	OBJ_ONOFF_0640                 = 34064,
	OBJ_ONOFF_0650                 = 34065,
	OBJ_ONOFF_0660                 = 34066,
	OBJ_ONOFF_0670                 = 34067,
	OBJ_ONOFF_0680                 = 34068,
	OBJ_ONOFF_0690                 = 34069,
	OBJ_ONOFF_0700                 = 34070,
	OBJ_ONOFF_0710                 = 34071,
	OBJ_ONOFF_0720                 = 34072,
	OBJ_ONOFF_0730                 = 34073,
	OBJ_ONOFF_0740                 = 34074,
	OBJ_ONOFF_0750                 = 34075,
	OBJ_ONOFF_0760                 = 34076,
	OBJ_ONOFF_0770                 = 34077,
	OBJ_ONOFF_0780                 = 34078,
	OBJ_ONOFF_0790                 = 34079,
	OBJ_ONOFF_0800                 = 34080,
	OBJ_ONOFF_0810                 = 34081,
	OBJ_ONOFF_0820                 = 34082,
	OBJ_ONOFF_0830                 = 34083,
	OBJ_ONOFF_0840                 = 34084,
	OBJ_ONOFF_0850                 = 34085,
	OBJ_ONOFF_0860                 = 34086,
	OBJ_ONOFF_0870                 = 34087,
	OBJ_ONOFF_0880                 = 34088,
	OBJ_ONOFF_0890                 = 34089,
	OBJ_ONOFF_0900                 = 34090,
	OBJ_ONOFF_0910                 = 34091,
	OBJ_ONOFF_0920                 = 34092,
	OBJ_ONOFF_0930                 = 34093,
	OBJ_ONOFF_0940                 = 34094,
	OBJ_ONOFF_0950                 = 34095,
	OBJ_ONOFF_0960                 = 34096,
	OBJ_ONOFF_0970                 = 34097,
	OBJ_ONOFF_0980                 = 34098,
	OBJ_ONOFF_0990                 = 34099,
	OBJ_ONOFF_0991                 = 34100,
	OBJ_ONOFF_0992                 = 34101,
	OBJ_ONOFF_1000                 = 34102,
	OBJ_ONOFF_1010                 = 34103,
	OBJ_ONOFF_1020                 = 34104,
	OBJ_ONOFF_1030                 = 34105,
	OBJ_ONOFF_1040                 = 34106,
	OBJ_ONOFF_1050                 = 34107,
	OBJ_ONOFF_1060                 = 34108,
	OBJ_ONOFF_1070                 = 34109,
	OBJ_ONOFF_1080                 = 34110,
	OBJ_ONOFF_1090                 = 34111,
	OBJ_ONOFF_1100                 = 34112,
	OBJ_ONOFF_1110                 = 34113,
	OBJ_ONOFF_1120                 = 34114,
	OBJ_ONOFF_1130                 = 34115,
	OBJ_ONOFF_1140                 = 34116,
	OBJ_ONOFF_1150                 = 34117,
	OBJ_ONOFF_1160                 = 34118,
	OBJ_ONOFF_1170                 = 34119,
	OBJ_ONOFF_1180                 = 34120,
	OBJ_ONOFF_1190                 = 34121,
	OBJ_ONOFF_1200                 = 34122,
	OBJ_ONOFF_1210                 = 34123,
	OBJ_ONOFF_1230                 = 34124,
	OBJ_ONOFF_1240                 = 34125,
	OBJ_ONOFF_1250                 = 34130,
	OBJ_ONOFF_1260                 = 34131,
	OBJ_ONOFF_1270                 = 34132,
	OBJ_ONOFF_1280                 = 34133,
	OBJ_ONOFF_1290                 = 34134,
	OBJ_ONOFF_1300                 = 34135,
	OBJ_ONOFF_1310                 = 34136,
	OBJ_ONOFF_1320                 = 34137,
	OBJ_ONOFF_1330                 = 34138,
	OBJ_ONOFF_1340                 = 34139,
	OBJ_ONOFF_1350                 = 34140,
	OBJ_ONOFF_1360                 = 34141,
	OBJ_ONOFF_1370                 = 34142,
	OBJ_ONOFF_1380                 = 34143,
	OBJ_ONOFF_1390                 = 34144,
	OBJ_ONOFF_1400                 = 34145,
	OBJ_ONOFF_1500                 = 34146,
	OBJ_ONOFF_1510                 = 34147,
	OBJ_ONOFF_1520                 = 34148,
	OBJ_ONOFF_1530                 = 34149,
	OBJ_ONOFF_1540                 = 34150,
	OBJ_ONOFF_1550                 = 34151,
	OBJ_ONOFF_1560                 = 34152,
	OBJ_ONOFF_1570                 = 34153,
	OBJ_ONOFF_1580                 = 34154,
	OBJ_ONOFF_1590                 = 34155,
	OBJ_ONOFF_1600                 = 34156,
	OBJ_ONOFF_1610                 = 34157,
	OBJ_ONOFF_1620                 = 34158,
	OBJ_ONOFF_1630                 = 34159,
	OBJ_ONOFF_1640                 = 34160,
	OBJ_ONOFF_1650                 = 34161,
	OBJ_ONOFF_1660                 = 34162,
	OBJ_ONOFF_1670                 = 34163,
	OBJ_ONOFF_1680                 = 34164,
	OBJ_ONOFF_1690                 = 34165,
	OBJ_ONOFF_1700                 = 34166,
	OBJ_ONOFF_1710                 = 34167,
	OBJ_ONOFF_1720                 = 34168,
	OBJ_ONOFF_1730                 = 34169,
	OBJ_ONOFF_1740                 = 34170,
	OBJ_ONOFF_1750                 = 34171,
	OBJ_ONOFF_1760                 = 34172,
	OBJ_ONOFF_1770                 = 34173,
	OBJ_ONOFF_1780                 = 34174,
	OBJ_ONOFF_1790                 = 34175,
	OBJ_ONOFF_1800                 = 34176,
	OBJ_ONOFF_1810                 = 34177,
	OBJ_ONOFF_1820                 = 34178,
	OBJ_ONOFF_1830                 = 34179,
	OBJ_ONOFF_1840                 = 34180,
	OBJ_ONOFF_1850                 = 34181,
	OBJ_ONOFF_1860                 = 34182,
	OBJ_ONOFF_1870                 = 34183,
	OBJ_ONOFF_1880                 = 34184,
	OBJ_ONOFF_1890                 = 34185,
	OBJ_ONOFF_0197                 = 34186,
	OBJ_ONOFF_0198                 = 34187,
	OBJ_ONOFF_0199                 = 34188,
	OBJ_ONOFF_1900                 = 34189,
	OBJ_ONOFF_1910                 = 34190,
	OBJ_ONOFF_1920                 = 34191,
	OBJ_ONOFF_1930                 = 34192,
	OBJ_ONOFF_1940                 = 34193,
	OBJ_ONOFF_1950                 = 34194,
	OBJ_ONOFF_1960                 = 34195,
	OBJ_ONOFF_1970                 = 34196,
	OBJ_ONOFF_1980                 = 34197,
	OBJ_ONOFF_1990                 = 34198,
	OBJ_ONOFF_2000                 = 34199,
	OBJ_ONOFF_2010                 = 34200,
	OBJ_ONOFF_2020                 = 34201,
	OBJ_ONOFF_2030                 = 34202,
	OBJ_ONOFF_2040                 = 34203,
	OBJ_ONOFF_2050                 = 34204,
	OBJ_ONOFF_2060                 = 34205,
	OBJ_ONOFF_2070                 = 34206,
	OBJ_ONOFF_2080                 = 34207,
	OBJ_ONOFF_2090                 = 34208,
	OBJ_ONOFF_2100                 = 34209,
	OBJ_ONOFF_2110                 = 34210,
	OBJ_ONOFF_2120                 = 34211,
	OBJ_ONOFF_2130                 = 34212,
	OBJ_ONOFF_2140                 = 34213,
	OBJ_ONOFF_2150                 = 34214,
	OBJ_ONOFF_2160                 = 34215,
	OBJ_ONOFF_2170                 = 34216,
	OBJ_ONOFF_2180                 = 34217,
	OBJ_ONOFF_2190                 = 34218,
	OBJ_ONOFF_2200                 = 34219,
	OBJ_ONOFF_2210                 = 34220,
	OBJ_ONOFF_2220                 = 34221,
	OBJ_ONOFF_2230                 = 34222,
	OBJ_ONOFF_2240                 = 34223,
	OBJ_ONOFF_2250                 = 34224,
	OBJ_ONOFF_2260                 = 34225,
	OBJ_ONOFF_2270                 = 34226,
	OBJ_ONOFF_2280                 = 34227,
	OBJ_ONOFF_2290                 = 34228,
	OBJ_ONOFF_2300                 = 34229,
	OBJ_ONOFF_2310                 = 34230,
	OBJ_ONOFF_2320                 = 34231,
	OBJ_ONOFF_2330                 = 34232,
	OBJ_ONOFF_2340                 = 34233,
	OBJ_ONOFF_2350                 = 34234,
	OBJ_ONOFF_2360                 = 34235,
	OBJ_ONOFF_2370                 = 34236,
	OBJ_ONOFF_2380                 = 34237,
	OBJ_ONOFF_2390                 = 34238,
	OBJ_ONOFF_2400                 = 34239,
	INFO_AP_GUR_FLG_001            = 38000,
	INFO_AP_GUR_FLG_002            = 38001,
	INFO_AP_GUR_FLG_003            = 38002,
	INFO_AP_GUR_FLG_004            = 38003,
	INFO_AP_GUR_FLG_005            = 38004,
	INFO_AP_GUR_FLG_006            = 38005,
	INFO_AP_GUR_FLG_007            = 38006,
	INFO_AP_GUR_FLG_008            = 38007,
	INFO_AP_GUR_FLG_009            = 38008,
	INFO_AP_GUR_FLG_010            = 38009,
	FC30999                        = 38010,
	INFO_KUS_10_10A0               = 38030,
	INFO_KUS_10_10B0               = 38031,
	INFO_KUS_10_10C0               = 38032,
	INFO_GAK_10_08A0               = 38033,
	INFO_GAK_10_08B0               = 38037,
	Twn_Cty_1_1_A_SHOP01_EXPA      = 38301,
	Twn_Cty_1_1_A_SHOP04_EXPA      = 38302,
	INFO_AP_Twn_Cty_1_1_A_001      = 38303,
	INFO_AP_Twn_Cty_1_1_A_002      = 38304,
	INFO_AP_Twn_Cty_1_1_A_003      = 38305,
	INFO_AP_Twn_Cty_1_1_A_004      = 38306,
	INFO_AP_Twn_Cty_1_1_B_001      = 38311,
	INFO_AP_Twn_Cty_1_1_B_002      = 38312,
	INFO_AP_Twn_Cty_1_1_C_001      = 38321,
	INFO_AP_Twn_Cty_1_1_C_002      = 38322,
	Twn_Cty_1_2_A_SHOP03_EXPA      = 38330,
	Twn_Cty_1_2_A_SHOP04_EXPA      = 38331,
	Twn_Cty_2_1_A_SHOP01_EXPA      = 38350,
	Twn_Cty_2_1_B_SHOP04_EXPA      = 38351,
	INFO_AP_Twn_Cty_2_1_A_001      = 38360,
	INFO_AP_Twn_Cty_2_1_A_002      = 38361,
	INFO_AP_Twn_Cty_2_1_A_003      = 38362,
	INFO_AP_Twn_Cty_2_1_B_001      = 38370,
	INFO_AP_Twn_Cty_2_1_B_002      = 38371,
	INFO_AP_Twn_Cty_2_1_B_003      = 38372,
	Twn_Cty_3_1_A_SHOP01_EXPA      = 38380,
	Twn_Cty_3_1_A_SHOP04_EXPA      = 38381,
	INFO_AP_Twn_Cty_3_1_A_001      = 38390,
	INFO_AP_Twn_Cty_3_1_A_002      = 38391,
	Twn_Isd_1_1_A_SHOP01_EXPA      = 38406,
	Twn_Isd_1_1_A_SHOP04_EXPA      = 38401,
	INFO_AP_Twn_Isd_1_1_A_001      = 38402,
	INFO_AP_Twn_Isd_1_1_A_002      = 38403,
	INFO_AP_Twn_Isd_1_1_A_003      = 38404,
	INFO_AP_Twn_Isd_1_1_A_004      = 38405,
	Twn_Isd_2_1_A_SHOP01_EXPA      = 38410,
	Twn_Isd_2_1_A_SHOP04_EXPA      = 38411,
	INFO_AP_Twn_Isd_2_1_A_001      = 38420,
	INFO_AP_Twn_Isd_2_1_A_002      = 38421,
	INFO_AP_Twn_Isd_2_1_A_003      = 38422,
	INFO_AP_Twn_Isd_2_1_A_004      = 38423,
	INFO_AP_Twn_Isd_2_1_B_001      = 38430,
	INFO_AP_Twn_Isd_2_1_B_002      = 38431,
	INFO_AP_Twn_Isd_2_1_B_003      = 38432,
	INFO_AP_Twn_Isd_2_1_B_004      = 38433,
	INFO_AP_Twn_Isd_2_1_C_001      = 38440,
	INFO_AP_Twn_Isd_2_1_C_002      = 38441,
	INFO_AP_Twn_Isd_2_1_C_003      = 38442,
	Twn_Isd_3_1_A_SHOP01_EXPA      = 38450,
	Twn_Isd_3_1_A_SHOP04_EXPA      = 38451,
	INFO_AP_Twn_Isd_3_1_A_001      = 38460,
	INFO_AP_Twn_Isd_3_1_A_002      = 38461,
	Twn_Fst_1_1_A_SHOP03_EXPA      = 38501,
	Twn_Fst_1_1_A_SHOP04_EXPA      = 38502,
	INFO_AP_Twn_Fst_1_1_A_001      = 38503,
	INFO_AP_Twn_Fst_1_1_A_002      = 38504,
	INFO_AP_Twn_Fst_1_1_A_003      = 38505,
	INFO_AP_Twn_Fst_1_1_A_004      = 38506,
	INFO_AP_Fld_Fst_1_2_001        = 38507,
	Twn_Fst_2_1_C_SHOP01_EXPA      = 38510,
	Twn_Fst_2_1_C_SHOP02_EXPA      = 39133,
	Twn_Fst_2_1_A_SHOP04_EXPA      = 38511,
	INFO_AP_Twn_Fst_2_1_A_001      = 38520,
	INFO_AP_Twn_Fst_2_1_A_002      = 38521,
	INFO_AP_Twn_Fst_2_1_A_003      = 38522,
	INFO_AP_Twn_Fst_2_1_B_001      = 38530,
	INFO_AP_Twn_Fst_2_1_B_002      = 38531,
	INFO_AP_Twn_Fst_2_1_C_001      = 38540,
	Twn_Fst_3_1_A_SHOP01_EXPA      = 38550,
	Twn_Fst_3_1_A_SHOP04_EXPA      = 38551,
	INFO_AP_Twn_Fst_3_1_A_001      = 38560,
	INFO_AP_Twn_Fst_3_1_A_002      = 38561,
	INFO_AP_Twn_Fst_3_1_A_003      = 38562,
	INFO_AP_Twn_Fst_3_1_A_004      = 38563,
	INFO_AP_Twn_Fst_3_1_B_001      = 38570,
	INFO_AP_Twn_Fst_3_1_B_002      = 38571,
	INFO_AP_Twn_Fst_3_1_B_003      = 38572,
	INFO_AP_Twn_Fst_3_2_A_001      = 38580,
	INFO_AP_Twn_Fst_3_2_A_002      = 38581,
	INFO_AP_Twn_Fst_3_2_A_003      = 38582,
	INFO_AP_Twn_Fst_3_2_A_004      = 38583,
	Twn_Sea_1_1_A_SHOP01_EXPA      = 38601,
	Twn_Sea_1_1_A_SHOP04_EXPA      = 38602,
	INFO_AP_Twn_Sea_1_1_A_001      = 38603,
	INFO_AP_Twn_Sea_1_1_A_002      = 38604,
	INFO_AP_Twn_Sea_1_1_A_003      = 38605,
	INFO_AP_Twn_Sea_1_1_A_004      = 38606,
	Twn_Sea_2_1_A_SHOP01_EXPA      = 38610,
	Twn_Sea_2_1_A_SHOP04_EXPA      = 38611,
	INFO_AP_Twn_Sea_2_1_A_001      = 38620,
	INFO_AP_Twn_Sea_2_1_A_002      = 38621,
	INFO_AP_Twn_Sea_2_1_A_003      = 38622,
	INFO_AP_Twn_Sea_2_1_B_001      = 38630,
	INFO_AP_Twn_Sea_2_1_B_002      = 38631,
	Twn_Sea_3_1_A_SHOP01_EXPA      = 38650,
	Twn_Sea_3_1_A_SHOP04_EXPA      = 38651,
	INFO_AP_Twn_Sea_3_1_A_001      = 38660,
	INFO_AP_Twn_Sea_3_1_A_002      = 38661,
	INFO_AP_Twn_Snw_1_1_A_001      = 38701,
	INFO_AP_Twn_Snw_1_1_A_002      = 38702,
	INFO_AP_Twn_Snw_1_1_B_001      = 38711,
	Twn_Snw_1_2_A_SHOP03_EXPA      = 38720,
	Twn_Snw_1_2_A_SHOP04_EXPA      = 38721,
	INFO_AP_Twn_Snw_1_2_A_001      = 38730,
	INFO_AP_Twn_Snw_1_2_A_002      = 38731,
	INFO_AP_Twn_Snw_1_2_A_003      = 38732,
	Twn_Snw_2_1_B_SHOP01_EXPA      = 38740,
	Twn_Snw_2_1_A_SHOP04_EXPA      = 38741,
	INFO_AP_Twn_Snw_2_1_A_001      = 38750,
	INFO_AP_Twn_Snw_2_1_A_002      = 38751,
	INFO_AP_Twn_Snw_2_1_A_003      = 38752,
	INFO_AP_Twn_Snw_2_1_A_004      = 38753,
	INFO_AP_Twn_Snw_2_1_B_001      = 38760,
	INFO_AP_Twn_Snw_2_1_B_002      = 38761,
	Twn_Snw_3_1_A_SHOP01_EXPA      = 38770,
	Twn_Snw_3_1_A_SHOP04_EXPA      = 38771,
	INFO_AP_Twn_Snw_3_1_A_001      = 38780,
	INFO_AP_Twn_Snw_3_1_A_002      = 38781,
	INFO_AP_Twn_Snw_3_1_B_001      = 38782,
	INFO_AP_Twn_Snw_3_2_A_001      = 38790,
	INFO_KEN_30_0100               = 38801,
	INFO_SIN_20_0100               = 38802,
	INFO_SIN_20_0200               = 38803,
	INFO_SIN_20_0300               = 38804,
	INFO_SIN_20_0400               = 38805,
	INFO_SIN_20_0500               = 38806,
	INFO_SIN_20_0600               = 38807,
	INFO_SIN_40_0100               = 38808,
	Twn_Dst_1_1_SHOP01_EXPA        = 38035,
	Twn_Dst_1_1_SHOP04_EXPA        = 38036,
	INFO_AP_Twn_Dst_1_1_001        = 38015,
	Twn_Dst_2_1_A_SHOP01_EXPA      = 38900,
	Twn_Dst_2_1_A_SHOP04_EXPA      = 38901,
	INFO_AP_Twn_Dst_2_1_A_001      = 38910,
	INFO_AP_Twn_Dst_2_1_A_002      = 38911,
	INFO_AP_Twn_Dst_2_1_A_003      = 38912,
	INFO_AP_Twn_Dst_2_1_B_001      = 38920,
	INFO_AP_Twn_Dst_2_1_B_002      = 38921,
	INFO_AP_Twn_Dst_2_1_B_003      = 38922,
	Twn_Dst_3_1_A_SHOP01_EXPA      = 38034,
	INFO_AP_Twn_Dst_3_1_A_001      = 38011,
	INFO_AP_Twn_Dst_3_1_A_002      = 38012,
	INFO_AP_Twn_Dst_3_1_A_003      = 38013,
	INFO_AP_Twn_Dst_3_1_B_001      = 38014,
	Twn_Mnt_1_1_A_SHOP01_EXPA      = 38026,
	Twn_Mnt_1_1_A_SHOP04_EXPA      = 38027,
	INFO_AP_Twn_Mnt_1_1_A_001      = 38016,
	INFO_AP_Twn_Mnt_1_1_A_002      = 38017,
	INFO_AP_Twn_Mnt_1_1_A_003      = 38018,
	INFO_AP_Twn_Mnt_1_1_A_004      = 38019,
	INFO_AP_Twn_Mnt_1_2_A_001      = 38020,
	INFO_AP_Twn_Mnt_1_2_A_002      = 38021,
	Twn_Mnt_2_1_C_SHOP01_EXPA_1    = 39000,
	Twn_Mnt_2_1_C_SHOP01_EXPA_2    = 39134,
	Twn_Mnt_2_1_C_SHOP01_EXPA_3    = 39135,
	Twn_Mnt_2_1_A_SHOP02_EXPA      = 39136,
	Twn_Mnt_2_1_A_SHOP04_EXPA      = 39001,
	INFO_AP_Twn_Mnt_2_1_A_001      = 39010,
	INFO_AP_Twn_Mnt_2_1_A_002      = 39011,
	INFO_AP_Twn_Mnt_2_1_A_003      = 39012,
	INFO_AP_Twn_Mnt_2_1_A_004      = 39013,
	INFO_AP_Twn_Mnt_2_1_A_005      = 39014,
	INFO_AP_Twn_Mnt_2_1_A_006      = 39015,
	INFO_AP_Twn_Mnt_2_1_B_001      = 39020,
	INFO_AP_Twn_Mnt_2_1_B_002      = 39021,
	INFO_AP_Twn_Mnt_2_1_B_003      = 39022,
	INFO_AP_Twn_Mnt_2_1_B_004      = 39023,
	INFO_AP_Twn_Mnt_2_1_C_001      = 39030,
	INFO_AP_Twn_Mnt_2_1_C_002      = 39031,
	INFO_AP_Twn_Mnt_2_1_C_003      = 39032,
	INFO_AP_Twn_Mnt_2_1_C_004      = 39033,
	Twn_Mnt_3_1_A_SHOP01_EXPA      = 39040,
	Twn_Mnt_3_1_A_SHOP04_EXPA      = 39041,
	INFO_AP_Twn_Mnt_3_1_A_001      = 39050,
	INFO_AP_Twn_Mnt_3_1_A_002      = 39051,
	INFO_AP_Twn_Mnt_3_1_A_003      = 39052,
	INFO_AP_Twn_Mnt_3_1_B_001      = 39060,
	INFO_AP_Twn_Mnt_3_1_B_002      = 39061,
	Twn_Wld_1_1_C_SHOP01_EXPA      = 38028,
	Twn_Wld_1_1_C_SHOP04_EXPA      = 38029,
	INFO_AP_Twn_Wld_1_1_C_001      = 38022,
	INFO_AP_Twn_Wld_1_1_C_002      = 38023,
	INFO_AP_Twn_Wld_1_1_C_003      = 38024,
	INFO_AP_Twn_Wld_1_1_C_004      = 38025,
	Twn_Wld_2_1_A_SHOP01_EXPA      = 39100,
	Twn_Wld_2_1_A_SHOP04_EXPA      = 39101,
	INFO_AP_Twn_Wld_2_1_A_001      = 39110,
	INFO_AP_Twn_Wld_2_1_A_002      = 39111,
	INFO_AP_Twn_Wld_2_1_A_003      = 39112,
	Twn_Wld_3_1_A_SHOP01_EXPA      = 39120,
	Twn_Wld_3_1_A_SHOP04_EXPA      = 39121,
	INFO_AP_Twn_Wld_3_1_A_001      = 39130,
	INFO_AP_Twn_Wld_3_1_A_002      = 39131,
	INFO_AP_Twn_Wld_3_1_A_003      = 39132,
	INFO_AP_Twn_Cty_1_1_A_AP_010   = 39201,
	INFO_AP_Twn_Cty_1_1_A_AP_020   = 39202,
	INFO_AP_Twn_Cty_1_1_A_AP_030   = 39203,
	INFO_AP_Twn_Cty_1_1_A_AP_040   = 39204,
	INFO_AP_Twn_Cty_1_1_A_AP_050   = 39205,
	INFO_AP_Twn_Cty_1_1_A_AP_060   = 39206,
	INFO_AP_Twn_Cty_1_1_A_AP_070   = 39207,
	INFO_AP_Twn_Cty_1_1_A_AP_080   = 39208,
	INFO_AP_Twn_Cty_1_1_B_AP_010   = 39209,
	INFO_AP_Twn_Cty_1_1_B_AP_020   = 39210,
	INFO_AP_Twn_Cty_1_1_B_AP_030   = 39211,
	INFO_AP_Twn_Cty_1_1_B_AP_040   = 39212,
	INFO_AP_Twn_Cty_1_1_C_AP_010   = 39213,
	INFO_AP_Twn_Cty_1_1_C_AP_020   = 39214,
	INFO_AP_Twn_Cty_1_1_C_AP_030   = 39215,
	INFO_AP_Twn_Dst_1_1_A_AP_010   = 39220,
	INFO_AP_Twn_Dst_1_1_A_AP_020   = 39221,
	INFO_AP_Twn_Dst_1_1_A_AP_030   = 39222,
	INFO_AP_Twn_Dst_1_1_A_AP_040   = 39223,
	INFO_AP_Twn_Dst_1_1_A_AP_050   = 39224,
	INFO_AP_Twn_Fst_1_1_A_AP_010   = 39230,
	INFO_AP_Twn_Fst_1_1_A_AP_020   = 39231,
	INFO_AP_Twn_Fst_1_1_A_AP_030   = 39232,
	INFO_AP_Twn_Fst_1_1_A_AP_040   = 39233,
	INFO_AP_Twn_Isd_1_1_A_AP_010   = 39240,
	INFO_AP_Twn_Isd_1_1_A_AP_020   = 39241,
	INFO_AP_Twn_Isd_1_1_A_AP_030   = 39242,
	INFO_AP_Twn_Isd_1_1_A_AP_040   = 39243,
	INFO_AP_Twn_Isd_1_1_A_AP_050   = 39244,
	INFO_AP_Twn_Isd_1_1_A_AP_060   = 39245,
	INFO_AP_Twn_Isd_1_1_A_AP_070   = 39246,
	INFO_AP_Twn_Mnt_1_1_A_AP_010   = 39250,
	INFO_AP_Twn_Mnt_1_1_A_AP_020   = 39251,
	INFO_AP_Twn_Mnt_1_1_A_AP_030   = 39252,
	INFO_AP_Twn_Mnt_1_1_A_AP_040   = 39253,
	INFO_AP_Twn_Mnt_1_1_A_AP_050   = 39254,
	INFO_AP_Twn_Mnt_1_1_A_AP_060   = 39255,
	INFO_AP_Twn_Mnt_1_1_A_AP_070   = 39256,
	INFO_AP_Twn_Mnt_1_2_A_AP_010   = 39257,
	INFO_AP_Twn_Mnt_1_2_A_AP_020   = 39258,
	INFO_AP_Twn_Mnt_1_2_A_AP_030   = 39259,
	INFO_AP_Twn_Mnt_1_2_B_AP_010   = 39260,
	INFO_AP_Twn_Mnt_1_2_B_AP_020   = 39261,
	INFO_AP_Twn_Sea_1_1_A_AP_010   = 39270,
	INFO_AP_Twn_Sea_1_1_A_AP_020   = 39271,
	INFO_AP_Twn_Sea_1_1_A_AP_030   = 39272,
	INFO_AP_Twn_Sea_1_1_A_AP_040   = 39273,
	INFO_AP_Twn_Sea_1_1_A_AP_050   = 39274,
	INFO_AP_Twn_Sea_1_1_A_AP_060   = 39275,
	INFO_AP_Twn_Snw_1_2_A_AP_010   = 39280,
	INFO_AP_Twn_Snw_1_2_A_AP_020   = 39281,
	INFO_AP_Twn_Snw_1_2_A_AP_030   = 39282,
	INFO_AP_Twn_Snw_1_2_A_AP_040   = 39283,
	INFO_AP_Twn_Wld_1_1_C_AP_010   = 39290,
	INFO_AP_Twn_Wld_1_1_C_AP_020   = 39291,
	INFO_AP_Twn_Wld_1_1_C_AP_030   = 39292,
	INFO_AP_Twn_Wld_1_2_B_AP_010   = 39293,
	INFO_AP_Twn_Wld_1_2_B_AP_020   = 39294,
	INFO_AP_Twn_Cty_2_1_A_AP_010   = 39300,
	INFO_AP_Twn_Cty_2_1_A_AP_020   = 39301,
	INFO_AP_Twn_Cty_2_1_A_AP_030   = 39302,
	INFO_AP_Twn_Cty_2_1_A_AP_040   = 39303,
	INFO_AP_Twn_Cty_2_1_A_AP_050   = 39304,
	INFO_AP_Twn_Cty_2_1_B_AP_010   = 39305,
	INFO_AP_Twn_Cty_2_1_B_AP_020   = 39306,
	INFO_AP_Twn_Cty_2_1_B_AP_030   = 39307,
	INFO_AP_Twn_Cty_2_1_B_AP_040   = 39308,
	INFO_AP_Twn_Cty_2_1_B_AP_050   = 39309,
	INFO_AP_Twn_Cty_2_1_B_AP_060   = 39310,
	INFO_AP_Twn_Cty_2_1_B_AP_070   = 39311,
	INFO_AP_Twn_Cty_1_2_A_AP_010   = 39320,
	INFO_AP_Twn_Cty_1_2_A_AP_020   = 39321,
	INFO_AP_Twn_Dst_2_1_A_AP_010   = 39330,
	INFO_AP_Twn_Dst_2_1_A_AP_020   = 39331,
	INFO_AP_Twn_Dst_2_1_A_AP_030   = 39332,
	INFO_AP_Twn_Dst_2_1_A_AP_040   = 39333,
	INFO_AP_Twn_Dst_2_1_A_AP_050   = 39334,
	INFO_AP_Twn_Dst_2_1_B_AP_010   = 39335,
	INFO_AP_Twn_Dst_2_1_B_AP_020   = 39336,
	INFO_AP_Twn_Dst_2_1_B_AP_030   = 39337,
	INFO_AP_Twn_Dst_2_1_B_AP_040   = 39338,
	INFO_AP_Twn_Dst_2_1_B_AP_050   = 39339,
	INFO_AP_Twn_Dst_2_1_B_AP_060   = 39340,
	INFO_AP_Twn_Dst_2_1_B_AP_070   = 39341,
	INFO_AP_Twn_Fst_2_1_A_AP_010   = 39350,
	INFO_AP_Twn_Fst_2_1_A_AP_020   = 39351,
	INFO_AP_Twn_Fst_2_1_A_AP_030   = 39352,
	INFO_AP_Twn_Fst_2_1_A_AP_040   = 39353,
	INFO_AP_Twn_Fst_2_1_A_AP_050   = 39354,
	INFO_AP_Twn_Fst_2_1_A_AP_060   = 39355,
	INFO_AP_Twn_Fst_2_1_A_AP_070   = 39356,
	INFO_AP_Twn_Fst_2_1_A_AP_080   = 39357,
	INFO_AP_Twn_Fst_2_1_C_AP_010   = 39358,
	INFO_AP_Twn_Fst_2_1_C_AP_020   = 39359,
	INFO_AP_Twn_Fst_2_1_C_AP_030   = 39360,
	INFO_AP_Twn_Fst_2_1_C_AP_040   = 39361,
	INFO_AP_Twn_Fst_2_1_C_AP_050   = 39362,
	INFO_AP_Twn_Fst_2_1_C_AP_060   = 39363,
	INFO_AP_Twn_Isd_2_1_A_AP_010   = 39370,
	INFO_AP_Twn_Isd_2_1_A_AP_020   = 39371,
	INFO_AP_Twn_Isd_2_1_A_AP_030   = 39372,
	INFO_AP_Twn_Isd_2_1_A_AP_040   = 39373,
	INFO_AP_Twn_Isd_2_1_A_AP_050   = 39374,
	INFO_AP_Twn_Isd_2_1_A_AP_060   = 39375,
	INFO_AP_Twn_Isd_2_1_B_AP_010   = 39376,
	INFO_AP_Twn_Isd_2_1_B_AP_020   = 39377,
	INFO_AP_Twn_Isd_2_1_B_AP_030   = 39378,
	INFO_AP_Twn_Mnt_2_1_A_AP_010   = 39390,
	INFO_AP_Twn_Mnt_2_1_A_AP_020   = 39391,
	INFO_AP_Twn_Mnt_2_1_A_AP_030   = 39392,
	INFO_AP_Twn_Mnt_2_1_A_AP_040   = 39393,
	INFO_AP_Twn_Mnt_2_1_A_AP_050   = 39394,
	INFO_AP_Twn_Mnt_2_1_B_AP_010   = 39395,
	INFO_AP_Twn_Mnt_2_1_B_AP_020   = 39396,
	INFO_AP_Twn_Mnt_2_1_B_AP_030   = 39397,
	INFO_AP_Twn_Mnt_2_1_C_AP_010   = 39398,
	INFO_AP_Twn_Mnt_2_1_C_AP_020   = 39399,
	INFO_AP_Twn_Sea_2_1_A_AP_010   = 39410,
	INFO_AP_Twn_Sea_2_1_A_AP_020   = 39411,
	INFO_AP_Twn_Sea_2_1_A_AP_030   = 39412,
	INFO_AP_Twn_Sea_2_1_A_AP_040   = 39413,
	INFO_AP_Twn_Sea_2_1_A_AP_050   = 39414,
	INFO_AP_Twn_Sea_2_1_A_AP_060   = 39415,
	INFO_AP_Twn_Sea_2_1_A_AP_070   = 39416,
	INFO_AP_Twn_Sea_2_1_B_AP_010   = 39417,
	INFO_AP_Twn_Sea_2_1_B_AP_020   = 39418,
	INFO_AP_Twn_Snw_2_1_A_AP_010   = 39430,
	INFO_AP_Twn_Snw_2_1_A_AP_020   = 39431,
	INFO_AP_Twn_Snw_2_1_A_AP_030   = 39432,
	INFO_AP_Twn_Snw_2_1_A_AP_040   = 39433,
	INFO_AP_Twn_Snw_2_1_A_AP_050   = 39434,
	INFO_AP_Twn_Snw_2_1_A_AP_060   = 39435,
	INFO_AP_Twn_Snw_2_1_B_AP_010   = 39436,
	INFO_AP_Twn_Snw_2_1_B_AP_020   = 39437,
	INFO_AP_Twn_Snw_2_1_B_AP_030   = 39438,
	INFO_AP_Twn_Snw_2_1_B_AP_040   = 39439,
	INFO_AP_Twn_Wld_2_1_A_AP_010   = 39450,
	INFO_AP_Twn_Wld_2_1_A_AP_020   = 39451,
	INFO_AP_Twn_Wld_2_1_A_AP_030   = 39452,
	INFO_AP_Twn_Wld_2_1_A_AP_040   = 39453,
	INFO_AP_Twn_Wld_2_1_A_AP_050   = 39454,
	INFO_AP_Twn_Wld_2_1_A_AP_060   = 39455,
	INFO_AP_Twn_Wld_2_1_A_AP_070   = 39456,
	INFO_AP_Twn_Wld_2_1_A_AP_080   = 39457,
	INFO_AP_Twn_Fst_3_2_A_AP_010   = 39470,
	INFO_AP_Twn_Fst_3_2_A_AP_020   = 39471,
	INFO_AP_Twn_Fst_3_2_A_AP_030   = 39472,
	INFO_AP_Twn_Fst_3_2_A_AP_040   = 39473,
	INFO_AP_Twn_Cty_3_1_A_AP_010   = 39480,
	INFO_AP_Twn_Cty_3_1_A_AP_020   = 39481,
	INFO_AP_Twn_Cty_3_1_A_AP_030   = 39482,
	INFO_AP_Twn_Cty_3_1_A_AP_040   = 39483,
	INFO_AP_Twn_Cty_3_1_A_AP_050   = 39484,
	INFO_AP_Twn_Dst_3_1_A_AP_010   = 39490,
	INFO_AP_Twn_Dst_3_1_A_AP_020   = 39491,
	INFO_AP_Twn_Dst_3_1_A_AP_030   = 39492,
	INFO_AP_Twn_Dst_3_1_A_AP_040   = 39493,
	INFO_AP_Twn_Dst_3_1_A_AP_050   = 39494,
	INFO_AP_Twn_Dst_3_1_A_AP_060   = 39495,
	INFO_AP_Twn_Dst_3_1_A_AP_070   = 39496,
	INFO_AP_Twn_Dst_3_1_A_AP_080   = 39497,
	INFO_AP_Twn_Dst_3_1_A_AP_090   = 39498,
	INFO_AP_Twn_Dst_3_1_A_AP_100   = 39499,
	INFO_AP_Twn_Dst_3_1_A_AP_110   = 39500,
	INFO_AP_Twn_Dst_3_1_A_AP_120   = 39501,
	INFO_AP_Twn_Dst_3_1_B_AP_010   = 39502,
	INFO_AP_Twn_Dst_3_1_B_AP_020   = 39503,
	INFO_AP_Twn_Dst_3_1_B_AP_030   = 39504,
	INFO_AP_Twn_Dst_3_1_B_AP_040   = 39505,
	INFO_AP_Twn_Dst_3_1_B_AP_050   = 39506,
	INFO_AP_Twn_Dst_3_1_B_AP_060   = 39507,
	INFO_AP_Twn_Dst_3_1_B_AP_070   = 39508,
	INFO_AP_Twn_Dst_3_1_B_AP_080   = 39509,
	INFO_AP_Twn_Dst_3_1_B_AP_090   = 39510,
	INFO_AP_Twn_Dst_3_1_C_AP_010   = 39511,
	INFO_AP_Twn_Dst_3_1_C_AP_020   = 39512,
	INFO_AP_Twn_Dst_3_1_C_AP_030   = 39513,
	INFO_AP_Twn_Dst_3_1_C_AP_040   = 39514,
	INFO_AP_Twn_Dst_3_1_C_AP_050   = 39515,
	INFO_AP_Twn_Dst_3_1_C_AP_060   = 39516,
	INFO_AP_Twn_Dst_3_1_C_AP_070   = 39517,
	INFO_AP_Twn_Dst_3_1_C_AP_080   = 39518,
	INFO_AP_Twn_Dst_3_1_C_AP_090   = 39519,
	INFO_AP_Twn_Fst_3_1_A_AP_010   = 39530,
	INFO_AP_Twn_Fst_3_1_A_AP_020   = 39531,
	INFO_AP_Twn_Fst_3_1_A_AP_030   = 39532,
	INFO_AP_Twn_Fst_3_1_A_AP_040   = 39533,
	INFO_AP_Twn_Fst_3_1_A_AP_050   = 39534,
	INFO_AP_Twn_Fst_3_1_A_AP_060   = 39535,
	INFO_AP_Twn_Fst_3_1_A_AP_070   = 39536,
	INFO_AP_Twn_Fst_3_1_A_AP_080   = 39537,
	INFO_AP_Twn_Fst_3_1_B_AP_010   = 39538,
	INFO_AP_Twn_Fst_3_1_B_AP_020   = 39539,
	INFO_AP_Twn_Fst_3_1_B_AP_030   = 39540,
	INFO_AP_Twn_Fst_3_1_B_AP_040   = 39541,
	INFO_AP_Twn_Isd_3_1_A_AP_010   = 39550,
	INFO_AP_Twn_Isd_3_1_A_AP_020   = 39551,
	INFO_AP_Twn_Isd_3_1_A_AP_030   = 39552,
	INFO_AP_Twn_Isd_3_1_A_AP_040   = 39553,
	INFO_AP_Twn_Isd_3_1_A_AP_050   = 39554,
	INFO_AP_Twn_Mnt_3_1_A_AP_010   = 39560,
	INFO_AP_Twn_Mnt_3_1_A_AP_020   = 39561,
	INFO_AP_Twn_Mnt_3_1_A_AP_030   = 39562,
	INFO_AP_Twn_Mnt_3_1_A_AP_040   = 39563,
	INFO_AP_Twn_Mnt_3_1_A_AP_050   = 39564,
	INFO_AP_Twn_Mnt_3_1_A_AP_060   = 39565,
	INFO_AP_Twn_Mnt_3_1_A_AP_070   = 39566,
	INFO_AP_Twn_Mnt_3_1_B_AP_010   = 39567,
	INFO_AP_Twn_Mnt_3_1_B_AP_020   = 39568,
	INFO_AP_Twn_Mnt_3_1_B_AP_030   = 39569,
	INFO_AP_Twn_Mnt_3_1_B_AP_040   = 39570,
	INFO_AP_Twn_Mnt_3_1_B_AP_050   = 39571,
	INFO_AP_Twn_Mnt_3_1_B_AP_060   = 39572,
	INFO_AP_Twn_Mnt_3_1_B_AP_070   = 39573,
	INFO_AP_Twn_Mnt_3_1_B_AP_080   = 39574,
	INFO_AP_Twn_Sea_3_1_A_AP_010   = 39580,
	INFO_AP_Twn_Sea_3_1_A_AP_020   = 39581,
	INFO_AP_Twn_Sea_3_1_A_AP_030   = 39582,
	INFO_AP_Twn_Sea_3_1_A_AP_040   = 39583,
	INFO_AP_Twn_Sea_3_1_A_AP_050   = 39584,
	INFO_AP_Fld_Sea_3_1_AP_010     = 39585,
	INFO_AP_Fld_Sea_3_1_AP_020     = 39586,
	INFO_AP_Fld_Sea_3_1_AP_030     = 39587,
	INFO_AP_Fld_Sea_3_1_AP_040     = 39588,
	INFO_AP_Twn_Snw_3_1_A_AP_010   = 39600,
	INFO_AP_Twn_Snw_3_1_A_AP_020   = 39601,
	INFO_AP_Twn_Snw_3_1_A_AP_030   = 39602,
	INFO_AP_Twn_Snw_3_1_A_AP_040   = 39603,
	INFO_AP_Twn_Snw_3_1_A_AP_050   = 39604,
	INFO_AP_Twn_Snw_3_1_A_AP_060   = 39605,
	INFO_AP_Twn_Snw_3_1_A_AP_070   = 39606,
	INFO_AP_Twn_Snw_3_1_B_AP_010   = 39607,
	INFO_AP_Twn_Snw_3_1_B_AP_020   = 39608,
	INFO_AP_Twn_Snw_3_1_B_AP_030   = 39609,
	INFO_AP_Twn_Snw_3_2_A_AP_010   = 39610,
	INFO_AP_Twn_Snw_3_2_A_AP_020   = 39611,
	INFO_AP_Twn_Wld_3_1_A_AP_010   = 39620,
	INFO_AP_Twn_Wld_3_1_A_AP_020   = 39621,
	INFO_AP_Twn_Wld_3_1_A_AP_030   = 39622,
	INFO_AP_Twn_Wld_3_1_A_AP_040   = 39623,
	INFO_AP_Twn_Wld_3_1_A_AP_050   = 39624,
	INFO_AP_Twn_Snw_1_1_A_AP_010   = 39630,
	INFO_AP_Twn_Snw_1_1_A_AP_020   = 39631,
	INFO_AP_Twn_Snw_1_1_A_AP_030   = 39632,
	INFO_AP_Twn_Snw_1_1_A_AP_040   = 39633,
	INFO_AP_Twn_Snw_1_1_A_AP_050   = 39634,
	INFO_AP_Twn_Snw_1_1_A_AP_060   = 39635,
	INFO_AP_Twn_Snw_1_1_B_AP_010   = 39636,
	INFO_AP_Twn_Snw_1_1_B_AP_020   = 39637,
	INFO_AP_Twn_Snw_1_1_B_AP_030   = 39638,
	INFO_AP_Twn_Snw_1_1_B_AP_040   = 39639,
	INFO_AP_Twn_Snw_1_1_B_AP_050   = 39640,
	INFO_AP_Twn_Snw_1_1_B_AP_060   = 39641,
	INFO_AP_Twn_Snw_1_1_B_AP_070   = 39642,
	INFO_AP_Fld_Wld_3_2_AP_010     = 39650,
	Dng_Isd_2_1_Elephant           = 40000,
	Dng_Wld_1_2_Plants             = 40001,
	Dng_Cty_1_3_Flowers            = 40002,
	Dng_Ocn_1_3_Iguana             = 40003,
	Dng_Mnt_2_1_Devil              = 40004,
	Dng_Snw_3_4_A_Lion             = 40005,
	Dng_Wld_3_2_Kraken             = 40006,
	Dng_Ocn_1_2_Dragon             = 40007,
	Dng_Fst_1_2_Moth               = 40008,
	Dng_Cty_2_3_Bird               = 40009,
	Dng_Dst_2_2_Warm               = 40010,
	Fld_Ocn_1_1_Shark              = 40011,
	Fld_Ocn_1_1_Umibozu            = 40012,
	Fld_Ocn_1_1_Shark_Umibozu      = 40013,
	FLAG_MAX                       = 65535,
	EKSBitFlag_MAX                 = 65536,
};

enum class EBPIsValidReturnCode : uint8
{
	IsValid                        = 0,
	IsNotValid                     = 1,
	EBPIsValidReturnCode_MAX       = 2,
};

enum class EBPFuncReturnCode : uint8
{
	Success                        = 0,
	Failed                         = 1,
	EBPFuncReturnCode_MAX          = 2,
};

enum class ECHARACTER_GRID_PANEL_WIDGET_STATE : uint8
{
	ENone                          = 0,
	EOpening                       = 1,
	ERunning                       = 2,
	EClosing                       = 3,
	ECHARACTER_GRID_PANEL_WIDGET_MAX = 4,
};

enum class ECharacterMoveModeForDB : uint8
{
	DEFAULT                        = 0,
	WALK                           = 1,
	LADDER                         = 2,
	CANOE                          = 3,
	ECharacterMoveModeForDB_MAX    = 4,
};

enum class ECHARACTER_PARAM_TYPE : uint8
{
	HP                             = 0,
	MP                             = 1,
	BP                             = 2,
	SP                             = 3,
	POT                            = 4,
	ATK                            = 5,
	DEF                            = 6,
	MATK                           = 7,
	MDEF                           = 8,
	ACC                            = 9,
	EVA                            = 10,
	CON                            = 11,
	AGI                            = 12,
	ECHARACTER_PARAM_MAX           = 13,
};

enum class ECHARACTER_SIZE : uint8
{
	ESMALL                         = 0,
	EMEDIUM                        = 1,
	ELARGE                         = 2,
	ELL                            = 3,
	EINVALID                       = 4,
	ECHARACTER_MAX                 = 5,
};

enum class ECommonNotificationType : uint8
{
	Normal                         = 0,
	BadConnection                  = 1,
	ECommonNotificationType_MAX    = 2,
};

enum class EACF_CATEGORY : uint8
{
	BGM                            = 0,
	SE_Sys                         = 1,
	SE_Bat                         = 2,
	SE_Char                        = 3,
	SE_Env                         = 4,
	SE_Etc                         = 5,
	SE_Env_Imp                     = 6,
	SE_Menu                        = 7,
	SE_Event                       = 8,
	SE_Map                         = 9,
	SE_Dsp                         = 10,
	Voice_Bat                      = 11,
	Voice_Event                    = 12,
	Voice_Etc                      = 13,
	Voice_Olb                      = 14,
	Voice_Alf                      = 15,
	Voice_Tre                      = 16,
	Voice_Cyr                      = 17,
	Voice_Han                      = 18,
	Voice_Ofe                      = 19,
	Voice_The                      = 20,
	Voice_Pri                      = 21,
	SE_Event_OneLimit              = 22,
	MAX                            = 23,
};

enum class EDB_LOAD_TIMING : uint8
{
	ULTRA_FIRST                    = 0,
	FIRST                          = 1,
	IN_GAME                        = 2,
	ANY_TIME                       = 3,
	EDB_LOAD_MAX                   = 4,
};

enum class EDBNoticeType : uint8
{
	LOADED                         = 0,
	UNLOADED                       = 1,
	EDBNoticeType_MAX              = 2,
};

enum class EDebugCanvasPrimType : uint8
{
	Line                           = 0,
	Triangle                       = 1,
	Box                            = 2,
	EDebugCanvasPrimType_MAX       = 3,
};

enum class EDEBUG_INFORMATION_COLOR_TYPE : uint8
{
	ENutoral                       = 0,
	EActive                        = 1,
	ENegative                      = 2,
	EDEBUG_INFORMATION_COLOR_MAX   = 3,
};

enum class EDEBUG_EDIT_TYPE : uint8
{
	EOnOff                         = 0,
	EList                          = 1,
	EIntValue                      = 2,
	EFloatValue                    = 3,
	EInfomation                    = 4,
	ESubMenu                       = 5,
	EDEBUG_EDIT_MAX                = 6,
};

enum class EDEBUG_FLAG : uint8
{
	EPLACEMENT_LABEL               = 0,
	ENPC_LABEL                     = 1,
	EPLACEMENT_RESOURCE            = 2,
	ENPC_ACTION_ID                 = 3,
	ENPC_INDEX                     = 4,
	ENPC_TEXT_LABEL                = 5,
	ENPC_FC_LABEL                  = 6,
	ECHARACTER_ACTION_INFO         = 7,
	ECHARACTER_TEXTURE_INFO        = 8,
	ENPC_SHOW_TRIGGER              = 9,
	EPLAYER_SHOW_TRIGGER           = 10,
	EIGNORE_PLACE_NOREACTION_NPC   = 11,
	EINPUT_PRIORITY_CONTROLLER     = 12,
	ESHOW_CHARA_SOCKET             = 13,
	EINVISIBLE_DEBUG_CHARA         = 14,
	EENEMY_NAME_OPEN               = 15,
	ESIMPLE_ACTION_LOAD            = 16,
	EBATTLE_ACTION_IGNORE_LOAD     = 17,
	ENPC_PATH_LABEL                = 18,
	EENDROLL_FIX_CAMERA_POS_NEAR   = 19,
	EENDROLL_FIX_CAMERA_FOCAL_LENGTH_NEAR = 20,
	EENDROLL_FIX_CAMERA_FOCUS_DISTANCE_NEAR = 21,
	EDEBUG_MAX                     = 22,
};

enum class EDiseaseData : uint8
{
	BE_THE_FIRST                   = 0,
	POISON                         = 1,
	SILENCE                        = 2,
	BLIND                          = 3,
	CONFUSION                      = 4,
	SLEEP                          = 5,
	FEAR                           = 6,
	STUN                           = 7,
	ANALYZE                        = 8,
	GUARD                          = 9,
	COVER                          = 10,
	ENCHANT_FIRE                   = 11,
	ENCHANT_ICE                    = 12,
	ENCHANT_THUNDER                = 13,
	ENCHANT_WIND                   = 14,
	ENCHANT_LIGHT                  = 15,
	ENCHANT_DARK                   = 16,
	BREAK_DOWN                     = 17,
	ATK_UP                         = 18,
	ATK_DOWN                       = 19,
	MATK_UP                        = 20,
	MATK_DOWN                      = 21,
	DEF_UP                         = 22,
	DEF_DOWN                       = 23,
	MDEF_UP                        = 24,
	MDEF_DOWN                      = 25,
	ACC_UP                         = 26,
	ACC_DOWN                       = 27,
	EVA_UP                         = 28,
	EVA_DOWN                       = 29,
	CON_UP                         = 30,
	CON_DOWN                       = 31,
	AGI_UP                         = 32,
	AGI_DOWN                       = 33,
	ATK_DOWN_NEEDLE                = 132,
	MATK_DOWN_NEEDLE               = 133,
	DEF_DOWN_NEEDLE                = 134,
	MDEF_DOWN_NEEDLE               = 135,
	ACC_DOWN_NEEDLE                = 136,
	EVA_DOWN_NEEDLE                = 137,
	CON_DOWN_NEEDLE                = 138,
	AGI_DOWN_NEEDLE                = 139,
	PROVOKE                        = 34,
	MAGIC_REFLECTION               = 35,
	COUNTER                        = 36,
	COUNTER_FEAR                   = 37,
	HIDE_OUT                       = 38,
	INVISIBLE                      = 39,
	HP_REGENERATION                = 40,
	MP_REGENERATION                = 41,
	BP_REGENERATION                = 42,
	RERAISE                        = 43,
	ITEM_ALL                       = 44,
	SKILL_ALL                      = 45,
	CONVERGENCE                    = 46,
	DIFFUSION                      = 47,
	HP_LIMIT_OVER                  = 48,
	MP_LIMIT_OVER                  = 49,
	ACTION_COPY                    = 50,
	MAGIC_REPEAT                   = 51,
	KAMIKAZE                       = 125,
	DEBUFF_GUARD                   = 52,
	DECONDITION_GUARD              = 53,
	DEBUFF_GUARD_COUNT             = 127,
	PERMANENT_CRITICAL             = 54,
	BLOW_AWAY                      = 55,
	MAGIC_CRITICAL                 = 56,
	STONE                          = 57,
	DOOM                           = 58,
	BLACK_EDGE                     = 59,
	RED_EDGE                       = 60,
	BLUE_EDGE                      = 61,
	PURPLE_EDGE                    = 62,
	DOOM_NO_ICON                   = 124,
	PROBABILITY_INVISIBLE          = 63,
	DISABLE_BUFF                   = 64,
	DRAG_IN                        = 65,
	HP_FIXED_REGENERATION          = 66,
	MP_FIXED_REGENERATION          = 67,
	SLOW                           = 68,
	SLOW_NO_ICON                   = 141,
	SIGN_OF_BOOST                  = 69,
	ESCAPE_FAILED                  = 70,
	EX_DISABLE_MAGIC_ABILITY       = 71,
	EX_CURSE_OF_DEAD               = 72,
	EX_ROTTEN                      = 73,
	AUTO_GUARD                     = 74,
	NORMAL_ATTACK_ALL              = 75,
	WAR_COUNTER                    = 76,
	ATTACK_HIT_FAILED              = 77,
	ATTACK_HIT_FAILED_NO_ICON      = 78,
	MASQUERADE                     = 79,
	WEAKNESS_POISON                = 80,
	SUPER_MAGIC                    = 81,
	HYPER_MAGIC                    = 82,
	HOLD_OUT                       = 83,
	GROGGY                         = 84,
	DAMAGE_CUT                     = 85,
	DAMAGE_CUT_00                  = 86,
	DAMAGE_CUT_01                  = 87,
	DAMAGE_CUT_02                  = 88,
	DAMAGE_CUT_03                  = 89,
	SEAL_ACTION                    = 90,
	REBOUND_SEAL_ACTION            = 91,
	SPECIAL_GUARD                  = 92,
	CHARGE_ACTION                  = 93,
	STEALTH                        = 94,
	STEALTH_NO_ICON                = 123,
	STEALTH_STEAM                  = 95,
	DARK_FLAME                     = 96,
	FROZEN                         = 97,
	DRAG_IN_DRAIN                  = 98,
	ROTTEN_SHIELD                  = 99,
	REFLECTION_SHIELD              = 100,
	DISEASE_GUARD_SHIELD           = 101,
	FEAR_WHIP                      = 102,
	DEADLY_SENSE                   = 103,
	BE_THE_FIRST_FOR_BATTLE_START  = 104,
	SLOW_IN_GROUP                  = 105,
	FORCE_CRITICAL                 = 106,
	LAST_ACT_BUFF                  = 107,
	LAST_ACT_SPECIAL               = 108,
	SEAL_ATTACK_ABILITY            = 109,
	SEAL_RECOVERY_ABILITY          = 110,
	STEALTH_SUPPORTER              = 111,
	STEALTH_POSSESSION             = 112,
	STEALTH_CHANGELING             = 113,
	STEALTH_NON_PARTICIPATION      = 114,
	STEALTH_ENVIRONMENT            = 115,
	POINTING_WEAPON_LANCE_DAGGER   = 116,
	POINTING_WEAPON_LANCE_BOW      = 117,
	POINTING_WEAPON_AXE_ROD        = 118,
	POINTING_WEAPON_DAGGER_ROD     = 119,
	RANDOM_POINTING_WEAPON         = 120,
	CHARM                          = 121,
	SLEEP_DOOM                     = 122,
	HOLD_OUT_WITH_TURN             = 126,
	DARK_AURA                      = 128,
	POSSESSION                     = 129,
	ULTIMATE_MAGIC                 = 130,
	FULL_BOOST_MODE                = 131,
	BE_THE_FIRST_NO_ICON           = 140,
	PHANTOM_AURA                   = 142,
	CRISIS_PERCEPTION              = 143,
	EDiseaseData_MAX               = 144,
};

enum class EDISEASE_RESIST_TYPE : uint8
{
	EPOISON                        = 0,
	ESILENCE                       = 1,
	EBLIND                         = 2,
	ECONFUSION                     = 3,
	ESLEEP                         = 4,
	EFEAR                          = 5,
	ESTUN                          = 6,
	EINSTANT_DEATH                 = 7,
	ETRANSFORM                     = 8,
	EDEBUFF                        = 9,
	EDISEASE_RESIST_MAX            = 10,
};

enum class EENDROLL_ENEMY_DISEASE_BITMASK : uint8
{
	ENONE                          = 0,
	EPOISON                        = 1,
	ESILENCE                       = 2,
	EBLIND                         = 3,
	ECONFUSION                     = 4,
	ESLEEP                         = 5,
	EFEAR                          = 6,
	EBREAKDOWN                     = 7,
	ESIGN_OF_BOOST                 = 8,
	EROTTEN                        = 9,
	ESTEAM                         = 10,
	EROTTEN_SHIELD                 = 11,
	EREFLECTION_SHIELD             = 12,
	EDISEASE_GUARD_SHIELD          = 13,
	EFEAR_WHIP                     = 14,
	EULT_MAGIC_LV0                 = 15,
	EULT_MAGIC_LV1                 = 16,
	EULT_MAGIC_LV2                 = 17,
	EULT_MAGIC_LV3                 = 18,
	EPOINTING_WEAPON               = 19,
	EVIDE_EFFECT                   = 20,
	EGALDERA_UPP_EFFECT            = 21,
	EGALDERA_LOW_EFFECT            = 22,
	EOBSIDIAN_STEAM_EFFECT         = 23,
	EOBSIDIAN_SMOKE_EFFECT         = 24,
	EENDROLL_ENEMY_DISEASE_MAX     = 25,
};

enum class EENDROLL_PARTY_DISEASE_BITMASK : uint8
{
	ENONE                          = 0,
	EPOISON                        = 1,
	ESILENCE                       = 2,
	EBLIND                         = 3,
	ECONFUSION                     = 4,
	ESLEEP                         = 5,
	EFEAR                          = 6,
	ESTUN                          = 7,
	ENEEDLE                        = 8,
	ESHIELD_LV0                    = 9,
	ESHIELD_LV1                    = 10,
	ESHIELD_LV2                    = 11,
	ESHIELD_LV3                    = 12,
	EREBOUND_SEAL                  = 13,
	EDARK_FLAME                    = 14,
	EFROZEN                        = 15,
	EDEADLY_SENSE                  = 16,
	ECHARM                         = 17,
	ESLEEP_DOOM                    = 18,
	EENDROLL_PARTY_DISEASE_MAX     = 19,
};

enum class EDISEASE_TYPE_BITMASK : uint8
{
	EPOISON                        = 0,
	ESILENCE                       = 1,
	EBLIND                         = 2,
	ECONFUSION                     = 3,
	ESLEEP                         = 4,
	EFEAR                          = 5,
	ESTUN                          = 6,
	EBREAKDOWN                     = 7,
	ESTONE                         = 8,
	EDOOM                          = 9,
	EDISABLE_NORMAL_ATTACK         = 10,
	EDISABLE_PHYSICS_ABILITY       = 11,
	EDISABLE_MAGIC_ABILITY         = 12,
	ESPAWN_EFFECT_SIGN_OF_BOOST    = 13,
	EDISEASE_TYPE_MAX              = 14,
};

enum class EAILMENT_REMOVE_DISEASE_TYPE : uint8
{
	EALL                           = 0,
	EDECONDITION_ALL               = 1,
	EBUFF_ALL                      = 2,
	EDEBUFF_ALL                    = 3,
	ESPECIFIED                     = 4,
	ESTONE                         = 5,
	ECOVER                         = 6,
	EGROGGY                        = 7,
	EDECONDITION_OLDEST            = 8,
	EBUFF_OLDEST                   = 9,
	EDEBUFF_OLDEST                 = 10,
	EDECONDITION_RANDOM            = 11,
	EBUFF_RANDOM                   = 12,
	EDEBUFF_RANDOM                 = 13,
	EAILMENT_REMOVE_DISEASE_MAX    = 14,
};

enum class ESTEALTH_DISEASE_TYPE : uint8
{
	ESTEALTH_NORMAL                = 0,
	ESTEALTH_STEAM                 = 1,
	ESTEALTH_SUPPORTER             = 2,
	ESTEALTH_POSSESSION            = 3,
	ESTEALTH_CHANGELING            = 4,
	ESTEALTH_NON_PARTICIPATION     = 5,
	ESTEALTH_ENVIRONMENT           = 6,
	ESTEALTH_MAX                   = 7,
};

enum class EFIELD_DISEASE_REMOVE_TYPE : uint8
{
	ENONE                          = 0,
	ETURN_COUNT                    = 1,
	EENFORCER_BREAK                = 2,
	EFIELD_DISEASE_REMOVE_MAX      = 3,
};

enum class EFIELD_DISEASE_TYPE : uint8
{
	ENONE                          = 0,
	EBURNING_FIELD                 = 1,
	EINTENSE_COLD_FIELD            = 2,
	EBURNING_FIELD_COUNTER         = 3,
	EINTENSE_COLD_FIELD_COUNTER    = 4,
	ESEAL_NORMAL_ATTACK            = 5,
	ESEAL_BASE_JOB                 = 6,
	ESEAL_BACKPACK                 = 7,
	ESEAL_REVIVE                   = 8,
	ESEAL_REVIVE_COUNTER           = 9,
	ERECOVERY_VALUE_CUT            = 10,
	ERECOVERY_VALUE_CUT_COUNTER    = 11,
	EBURNING_FIELD_BIRD            = 12,
	EBURNING_FIELD_GARUDERA        = 13,
	EINTENSE_COLD_FIELD_GARUDERA   = 14,
	EDISABLE_ITEM_MENU             = 15,
	EFIELD_DISEASE_MAX             = 16,
};

enum class EDISEASE_TYPE : uint8
{
	EPOISON                        = 0,
	ESILENCE                       = 1,
	EBLIND                         = 2,
	ECONFUSION                     = 3,
	ESLEEP                         = 4,
	EFEAR                          = 5,
	ESTUN                          = 6,
	EINSTANT_DEATH                 = 7,
	EPROVOKE                       = 8,
	EMAGIC_REFLECTION              = 9,
	ECOUNTER                       = 10,
	EHIDE_OUT                      = 11,
	EINVISIBLE                     = 12,
	ESHUTDOWN                      = 13,
	EBREAKDOWN                     = 14,
	EBE_THE_FIRST                  = 15,
	EANALYZE                       = 16,
	EGUARD                         = 17,
	ECOVER                         = 18,
	EENCHANT_ATTRIBUTE             = 19,
	EATK_UP                        = 20,
	EATK_DOWN                      = 21,
	EMATK_UP                       = 22,
	EMATK_DOWN                     = 23,
	EDEF_UP                        = 24,
	EDEF_DOWN                      = 25,
	EMDEF_UP                       = 26,
	EMDEF_DOWN                     = 27,
	EACC_UP                        = 28,
	EACC_DOWN                      = 29,
	EEVA_UP                        = 30,
	EEVA_DOWN                      = 31,
	ECON_UP                        = 32,
	ECON_DOWN                      = 33,
	EAGI_UP                        = 34,
	EAGI_DOWN                      = 35,
	EHP_REGENERATION               = 36,
	EMP_REGENERATION               = 37,
	EBP_REGENERATION               = 38,
	ERERAISE                       = 39,
	EITEM_ALL                      = 40,
	ESKILL_ALL                     = 41,
	ECONVERGENCE                   = 42,
	EDIFFUSION                     = 43,
	EHP_LIMIT_OVER                 = 44,
	EMP_LIMIT_OVER                 = 45,
	EACTION_COPY                   = 46,
	EMAGIC_REPEAT                  = 47,
	EDEBUFF_GUARD                  = 48,
	EDECONDITION_GUARD             = 49,
	EPERMANENT_CRITICAL            = 50,
	EBLOW_AWAY                     = 51,
	EMAGIC_CRITICAL                = 52,
	ESTONE                         = 53,
	EDOOM                          = 54,
	ESEAL_NORMAL_ATTACK            = 55,
	ESEAL_PHYSICS_ABILITY          = 56,
	ESEAL_MAGIC_ABILITY            = 57,
	EPROBABILITY_INVISIBLE         = 58,
	EDISABLE_BUFF                  = 59,
	EDRAG_IN                       = 60,
	ESLOW                          = 61,
	ESPAWN_EFFECT_SIGN_OF_BOOST    = 62,
	EESCAPE_FAILED                 = 63,
	EEX_DISABLE_MAGIC_ABILITY      = 64,
	ECURSE_OF_DEAD                 = 65,
	EEX_ROTTEN                     = 66,
	EORDER_COUNT_UP                = 67,
	EORDER_COUNT_DOWN              = 68,
	EAUTO_GUARD                    = 69,
	ENORMAL_ATTACK_ALL             = 70,
	EATTACK_HIT_FAILED             = 71,
	EMASQUERADE                    = 72,
	EWEAKNESS_POISON               = 73,
	ESUPER_MAGIC                   = 74,
	EHYPER_MAGIC                   = 75,
	EHOLD_OUT                      = 76,
	EDAMAGE_CUT                    = 77,
	EGROGGY                        = 78,
	ESEAL_ACTION                   = 79,
	EREBOUND_SEAL_ACTION           = 80,
	ESP_GUARD                      = 81,
	ECHARGE_ACTION                 = 82,
	ESTEALTH                       = 83,
	EDARK_FLAME                    = 84,
	EFROZEN                        = 85,
	EDRAG_IN_DRAIN                 = 86,
	EROTTEN_SHIELD                 = 87,
	EREFLECTION_SHIELD             = 88,
	EDISEASE_GUARD_SHIELD          = 89,
	EFEAR_WHIP                     = 90,
	EDEADLY_SENSE                  = 91,
	EBE_THE_FIRST_FOR_BATTLE_START = 92,
	ESLOW_IN_GROUP                 = 93,
	EFORCE_CRITICAL                = 94,
	ELAST_ACT                      = 95,
	ESEAL_ATTACK_ABILITY           = 96,
	ESEAL_RECOVERY_ABILITY         = 97,
	EPOINTING_WEAPON               = 98,
	ERANDOM_POINTING_WEAPON        = 99,
	ECHARM                         = 100,
	ESLEEP_DOOM                    = 101,
	EDEBUFF_GUARD_COUNT            = 102,
	ESPAWN_EFFECT                  = 103,
	EPOSSESSION                    = 104,
	EFULL_BOOST_MODE               = 105,
	ECRISIS_PERCEPTION             = 106,
	ERESISTANT_COUNTER             = 107,
	EINVISIBLE_FOR_DAMAGE          = 108,
	ECOUNTER_OF_FENCER             = 109,
	EDISEASE_MAX                   = 110,
};

enum class EDISEASE_CATEGORY : uint8
{
	EDECONDITION                   = 0,
	EBUFF                          = 1,
	EDEBUFF                        = 2,
	ESPECIAL                       = 3,
	ESPECIAL_EDGE                  = 4,
	ESIGN_OF_BOOST                 = 5,
	ESPECIAL_EX                    = 6,
	EDISEASE_CATEGORY_MAX          = 7,
	EDISEASE_MAX                   = 8,
};

enum class EDiseaseListState : uint8
{
	ENone                          = 0,
	EInOpening                     = 1,
	EInDisplaying                  = 2,
	EInClosing                     = 3,
	EDiseaseListState_MAX          = 4,
};

enum class EDismantlingData : uint8
{
	TEST_DISMANTLING_DATA          = 0,
	TEST_DISMANTLING_MAX           = 1,
};

enum class EEEFFECT_DB : uint8
{
	SCHOLAR_MAGIC_SARCH            = 0,
	MERCHANT_AVOIDANCE             = 1,
	MERCHANT_AVOIDANCE_M           = 2,
	MERCHANT_AVOIDANCE_L           = 3,
	LOCUS_AXE_ENFORCER             = 4,
	LOCUS_AXE_REACTION             = 5,
	LOCUS_AXE_ACTION               = 6,
	LOCUS_BOW_REACTION             = 7,
	LOCUS_BOW_ACTION               = 8,
	LOCUS_BOW_ENFORCER             = 9,
	LOCUS_SPEAR_ENFORCER           = 10,
	LOCUS_SPEAR_REACTION           = 11,
	LOCUS_SPEAR_ACTION             = 12,
	LOCUS_STAFF_ENFORCER           = 13,
	LOCUS_STAFF_REACTION           = 14,
	LOCUS_STAFF_ACTION             = 15,
	LOCUS_DAGGER_ENFORCER          = 16,
	LOCUS_DAGGER_REACTION          = 17,
	LOCUS_DAGGER_ACTION            = 18,
	LOCUS_SWORD_ENFORCER           = 19,
	LOCUS_SWORD_REACTION           = 20,
	LOCUS_SWORD_ACTION             = 21,
	ABILITY_START                  = 22,
	GUARD_EFFECT                   = 23,
	REFLEC_EFFECT                  = 24,
	COUNTER_EFFECT                 = 25,
	PARAMETERDOWN_ATTACK2          = 26,
	HP_RECOVERY                    = 27,
	MP_RECOVERY                    = 28,
	STATUS_CONFUSE                 = 29,
	STATUS_DARKNESS                = 30,
	STATUS_FEAR                    = 31,
	STATUS_POISON                  = 32,
	STATUS_SLEEP                   = 33,
	STATUS_BREAK                   = 34,
	STATUS_SILENCE                 = 35,
	STATUS_RED                     = 36,
	STATUS_BLUE                    = 37,
	STATUS_PURPLE                  = 38,
	STATUS_BLACK                   = 39,
	STATUS_POISON2                 = 40,
	STATUS_MOUJA_BLUE              = 41,
	STATUS_MOUJA_GREEN             = 42,
	STATUS_MOUJA_RED               = 43,
	EMOTION_SURPRISE_LOOP          = 44,
	EMOTION_JOY_LOOP               = 76,
	EMOTION_SWEAT_LOOP             = 77,
	EMOTION_SLEEP_LOOP             = 78,
	EMOTION_SILENCE_LOOP           = 79,
	EMOTION_CHEER_LOOP             = 80,
	EMOTION_FAINT_LOOP             = 81,
	EMOTION_SAVE_LOOP              = 82,
	EMOTION_MAINMISSION_LOOP       = 83,
	EMOTION_SUBMISSION_LOOP_       = 84,
	HIT_BREAKDOWN                  = 45,
	HIT_ENEMY_NORMAL               = 46,
	HIT_ENEMY_WEAKNESS             = 47,
	HIT_ENEMY_CRITICAL             = 48,
	HIT_ENEMY_BREAK                = 49,
	HIT_PC_NORMAL                  = 50,
	HIT_PC_WEAKNESS                = 51,
	HIT_PC_CRITICAL                = 52,
	SECRET_POINT                   = 53,
	ENEMY_DEAD_01                  = 54,
	ENEMY_DEAD_02                  = 55,
	ENEMY_DEAD_03                  = 56,
	ENEMY_DEAD_04                  = 57,
	ENEMY_DEAD_05                  = 58,
	ENEMY_OVERHEAT                 = 59,
	ANGEL_EFFECT                   = 60,
	BOSS_POWERUP                   = 61,
	BOSS_POWERUP2                  = 62,
	BOSS_POWERUP3                  = 63,
	LOCUS_DAGGER_ACTIONFIRE        = 64,
	LOCUS_DAGGER_ACTIONICE         = 65,
	LOCUS_DAGGER_ACTIONDARK        = 66,
	GUR_BOOST_STORM_LV1            = 67,
	GUR_BOOST_STORM_LV2            = 68,
	GUR_BOOST_STORM_LV3            = 69,
	FxPS_Env_CanoeWater_A          = 70,
	FxPS_Env_CanoeWater_B          = 71,
	FxPS_Env_CanoeWater_C          = 72,
	FxPS_Env_ShipWater_A           = 73,
	FxPS_Env_ShipWater_B           = 74,
	FxPS_Env_ShipWater_C           = 75,
	EEEFFECT_MAX                   = 85,
};

enum class EEncountTableType : uint8
{
	EET_VOLUME                     = 0,
	EET_TRIGGER                    = 1,
	EET_MAX                        = 2,
};

enum class EEncountTrigger : uint8
{
	ENT_EMPTY                      = 0,
	ENT_MAX                        = 1,
};

enum class EEndRollFlowState : uint8
{
	NONE                           = 0,
	INIT                           = 1,
	INIT_WAIT_SELF                 = 2,
	INIT_WAIT_OTHER                = 3,
	READY                          = 4,
	FIRST_BLANK                    = 5,
	RUNNING                        = 6,
	LAST_BLANK                     = 7,
	END                            = 8,
	EEndRollFlowState_MAX          = 9,
};

enum class EEndRollSegmentSet : uint8
{
	ER_NONE                        = 0,
	ER_SEGSET_KEN_00               = 1,
	ER_SEGSET_KEN_01               = 2,
	ER_SEGSET_KEN_02               = 3,
	ER_SEGSET_KEN_03               = 4,
	ER_SEGSET_KEN_04_A             = 5,
	ER_SEGSET_KEN_04_C             = 6,
	ER_SEGSET_KAR_00               = 7,
	ER_SEGSET_KAR_01               = 8,
	ER_SEGSET_KAR_02               = 9,
	ER_SEGSET_KAR_03               = 10,
	ER_SEGSET_KAR_04               = 11,
	ER_SEGSET_KUS_00               = 12,
	ER_SEGSET_KUS_01               = 13,
	ER_SEGSET_KUS_02               = 14,
	ER_SEGSET_KUS_03               = 15,
	ER_SEGSET_KUS_04               = 16,
	ER_SEGSET_SHO_00               = 17,
	ER_SEGSET_SHO_01               = 18,
	ER_SEGSET_SHO_02               = 19,
	ER_SEGSET_SHO_03               = 20,
	ER_SEGSET_SIN_00               = 21,
	ER_SEGSET_SIN_01               = 22,
	ER_SEGSET_SIN_02               = 23,
	ER_SEGSET_SIN_03               = 24,
	ER_SEGSET_SIN_04               = 25,
	ER_SEGSET_GAK_00               = 26,
	ER_SEGSET_GAK_01               = 27,
	ER_SEGSET_GAK_02               = 28,
	ER_SEGSET_GAK_03               = 29,
	ER_SEGSET_GAK_04               = 30,
	ER_SEGSET_TOU_00               = 31,
	ER_SEGSET_TOU_01               = 32,
	ER_SEGSET_TOU_02               = 33,
	ER_SEGSET_TOU_03               = 34,
	ER_SEGSET_TOU_04               = 35,
	ER_SEGSET_TOU_05               = 36,
	ER_SEGSET_ODO_00               = 37,
	ER_SEGSET_ODO_01               = 38,
	ER_SEGSET_ODO_02               = 39,
	ER_SEGSET_ODO_03               = 40,
	ER_SEGSET_ODO_04               = 41,
	ER_SEGSET_END_00               = 42,
	ER_SEGSET_END_05               = 44,
	ER_SEGSET_KEN_FIRST            = 45,
	ER_SEGSET_KAR_FIRST            = 46,
	ER_SEGSET_KUS_FIRST            = 47,
	ER_SEGSET_SHO_FIRST            = 48,
	ER_SEGSET_SIN_FIRST            = 49,
	ER_SEGSET_GAK_FIRST            = 50,
	ER_SEGSET_TOU_FIRST            = 51,
	ER_SEGSET_ODO_FIRST            = 52,
	MAX_SEGSET                     = 53,
	EEndRollSegmentSet_MAX         = 54,
};

enum class EEndRollSegmentState : uint8
{
	NONE                           = 0,
	WIPE_IN_EVENT_IMAGE            = 1,
	WIPE_OUT_1                     = 2,
	WIPE_IN_BATTLE                 = 3,
	WIPE_OUT_2                     = 4,
	END                            = 5,
	EEndRollSegmentState_MAX       = 6,
};

enum class EENEMY_DEAD_TYPE : uint8
{
	ENORMAL_S                      = 0,
	ENORMAL_M                      = 1,
	ENORMAL_L                      = 2,
	EBOSS_M                        = 3,
	EBOSS_L                        = 4,
	ERETURN                        = 5,
	ENO_KNOCKBACK_M                = 6,
	EDESTRUCTION                   = 7,
	EGALDERA_VANISH                = 8,
	EENEMY_DEAD_MAX                = 9,
};

enum class EEquipmentCategory : uint8
{
	ESWORD                         = 0,
	ELANCE                         = 1,
	EDAGGER                        = 2,
	EAXE                           = 3,
	EBOW                           = 4,
	EROD                           = 5,
	ESHIELD                        = 6,
	EHAT                           = 7,
	ECLOTH                         = 8,
	ELIGHT_HELMET                  = 9,
	ELIGHT_ARMOR                   = 10,
	EHEAVY_HELMET                  = 11,
	EHEAVY_ARMOR                   = 12,
	EACCESSORY                     = 13,
	EEquipmentCategory_MAX         = 14,
};

enum class EEQUIPMENT_ALL_CHARA_STATE : uint8
{
	ENONE                          = 0,
	ECATEGORY_SELECT               = 1,
	ESELECT_LIST                   = 2,
	ECONFIRM_RECOMMENDED_ALL       = 3,
	EWAIT                          = 4,
	EEQUIPMENT_ALL_CHARA_MAX       = 5,
};

enum class EEQUIPMENT_RECOMENNDED_TYPE : uint8
{
	ECHARA_RECOMENNDED             = 0,
	EALL_RECOMENNDED               = 1,
	ECHARA_RECOMENNDED_CATEGORY    = 2,
	EALL_RECOMENNDED_CATEGORY      = 3,
	EEQUIPMENT_RECOMENNDED_MAX     = 4,
};

enum class EEQUIPMENT_MENU_STATE : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	ECLOSE                         = 2,
	ESELECT_CHARA_EQUIP_PART       = 3,
	ECONFIRM_RECOMMENDED           = 4,
	ECONFIRM_RECOMMENDED_ALL       = 5,
	ECONFIRM_REMOVE_ALL            = 6,
	ESELECT_EQUIP_ITEM             = 7,
	ECLOSE_EQUIP_ITEM              = 8,
	EWAIT_DIALOG                   = 9,
	EEQUIPMENT_MENU_MAX            = 10,
};

enum class EEQUIPMENT_ITEM_PARAM : uint8
{
	EMAX_HP                        = 0,
	EMAX_MP                        = 1,
	EATK                           = 2,
	EMATK                          = 3,
	EDEF                           = 4,
	EMDEF                          = 5,
	EACC                           = 6,
	EAGI                           = 7,
	ECRI                           = 8,
	EEVA                           = 9,
	EEQUIPMENT_ITEM_MAX            = 10,
};

enum class ESTORY_NOTIFICATION_TYPE : uint8
{
	EMARCHANT                      = 0,
	ECOUPLING                      = 1,
	ESTORY_NOTIFICATION_MAX        = 2,
};

enum class EAWAKENING_MONSTER_PARAM : uint8
{
	NONE                           = 0,
	NORMAL                         = 1,
	AWAKENING                      = 2,
	AWAKENING_AFTER                = 3,
	MAX                            = 4,
};

enum class EInventorLearnAbility : uint8
{
	NONE                           = 0,
	LEARN_ABILITY                  = 1,
	LEARN_ABILITY_DIALOG           = 2,
	LEARN_SUPPORT_ABILITY          = 3,
	LEARN_SUPPORT_ABILITY_DIALOG   = 4,
	SUPPORT_ABILITY_TUTORIAL_END   = 5,
	MAX                            = 6,
};

enum class EInventorEventState : uint8
{
	NONE                           = 0,
	CHECK_RESOURCE                 = 1,
	OPEN_RESOURCE_NG_DIALOG        = 2,
	RESOURCE_NG_DIALOG             = 3,
	OPEN_INVENTION_CREATE_DIALOG   = 4,
	INVENTION_CREATE_DIALOG        = 5,
	SUB_MATERIAL                   = 6,
	OPEN_EQUIPPED_ITEM_NG_DIALOG   = 7,
	EQUIPPED_ITEM_NG_DIALOG        = 8,
	MAX                            = 9,
};

enum class ERICHEVENT_CMD : uint8
{
	ENONE                          = 0,
	EBALLON                        = 1,
	ENARRATION                     = 2,
	ETITLEWAIT                     = 3,
	EFADEIN                        = 4,
	EFADEOUT                       = 5,
	EEVENT_FADEIN                  = 6,
	EEVENT_FADEOUT                 = 7,
	EPLAY_BGM                      = 8,
	EPLAY_BGM_MAP                  = 9,
	EPLAY_BGM_BLOCK                = 10,
	ESTOP_BGM                      = 11,
	EPLAY_SE                       = 12,
	ECHANGE_VOLUME_ENV             = 13,
	EBATTLE                        = 14,
	EVISIBLE_OBJECT                = 15,
	EDIALOG                        = 16,
	EDIALOG_EVENT                  = 17,
	EEFFECT                        = 18,
	EMESSAGEWAIT                   = 19,
	ENARRATIONWAIT                 = 20,
	EOPEN_UI                       = 21,
	EOPEN_TUTORIAL                 = 22,
	EOPEN_ENDCARD                  = 23,
	EPOSTEFFECT                    = 24,
	EPLAY_FC                       = 25,
	EHOUSE                         = 26,
	ECHARA_SPAWN                   = 27,
	ECHARA_ACTION                  = 28,
	ECHARA_COLLISION               = 29,
	ECHARA_POSITION                = 30,
	ECHARA_BILLBOARD               = 31,
	EATTACH_PLAYER                 = 32,
	ESUB_SEQ                       = 33,
	ESUB_SEQ_END                   = 34,
	EDEEP_DIRECTING                = 35,
	ECAMERA                        = 36,
	EFLASH_BACK_LOAD               = 37,
	EFLASH_BACK                    = 38,
	EBITFLAG                       = 39,
	EEVENT_GAMEOVER                = 40,
	EADD_PPM                       = 41,
	ETIME                          = 42,
	EOTHER                         = 43,
	ERICHEVENT_MAX                 = 44,
};

enum class ESE_TYPE : uint8
{
	Whoosh_01                      = 0,
	Whoosh_03                      = 1,
	Whoosh_04                      = 2,
	Whoosh_05                      = 3,
	Whoosh_06                      = 4,
	Whoosh_11                      = 5,
	Whoosh_12                      = 6,
	Whoosh_13                      = 7,
	Down                           = 8,
	Cleave                         = 9,
	Bump                           = 10,
	HitWord                        = 11,
	HitWordHight                   = 12,
	HitWord2                       = 13,
	KenNuku                        = 14,
	SenchouSword                   = 15,
	SwingSwordS                    = 16,
	SwingSwordL                    = 17,
	AttackSowrdS                   = 18,
	AttackSowrdL                   = 19,
	WernerSword                    = 20,
	DrawSword                      = 21,
	AttackSword                    = 22,
	OlricSword                     = 23,
	DamageZangeki                  = 24,
	ESE_MAX                        = 25,
};

enum class EEventCounter : uint8
{
	SIN_FOREST                     = 0,
	MAX                            = 1,
};

enum class EEventPostEffect : uint8
{
	NONE                           = 0,
	DOF                            = 1,
	SEPIA                          = 2,
	MONO                           = 3,
	DEEP_THINKING                  = 4,
	MAX                            = 5,
};

enum class EEventPostProcess : uint8
{
	MONO                           = 0,
	DEEP_THINKING                  = 1,
	MAX                            = 2,
};

enum class EEventPlayBGM : uint8
{
	PLAY_MAP                       = 0,
	NOT_PLAY                       = 1,
	STOP                           = 2,
	PLAY_BGM                       = 3,
	EEventPlayBGM_MAX              = 4,
};

enum class EEventKind : uint8
{
	EVENT_OTHER                    = 0,
	EVENT_MAIN                     = 1,
	EVENT_SUB                      = 2,
	EVENT_ADDMEMBER                = 3,
	EVENT_SAVE                     = 4,
	EVNET_PARTYCHAT                = 5,
	OPEN_GUILD_MENU                = 6,
	EVENT_LINER_SHIP               = 7,
	EEventKind_MAX                 = 8,
};

enum class EEventUpdateType : uint8
{
	EVENT                          = 0,
	SKIP_FADEOUT                   = 1,
	SKIP                           = 2,
	SKIP_FADEIN                    = 3,
	START_FADEOUT                  = 4,
	EEventUpdateType_MAX           = 5,
};

enum class EEventTheater : uint8
{
	NONE                           = 0,
	UPDATE                         = 1,
	RESTORE                        = 2,
	FINISH_PRE                     = 3,
	FINISH                         = 4,
	EEventTheater_MAX              = 5,
};

enum class EKSEVENT_PLAY : uint8
{
	NORMAL                         = 0,
	SINGLE                         = 1,
	EKSEVENT_MAX                   = 2,
};

enum class EEVENT_FADE_TYPE : uint8
{
	SHORT                          = 0,
	MIDDLE                         = 1,
	LONG                           = 2,
	EEVENT_FADE_MAX                = 3,
};

enum class ESPAWN_CHARA_TYPE : uint8
{
	EACTION_ID                     = 0,
	ENPC_LABEL                     = 1,
	EPLACEMENT_LABEL               = 2,
	EPARTY_POSITION                = 3,
	ETHIEF                         = 4,
	ESPAWN_CHARA_MAX               = 5,
};

enum class EREMINISCENE_STATE : uint8
{
	ENONE                          = 0,
	EOPEN_REMINISCENE_CONFIRM_DIALOG = 1,
	EOPEN_PROFESSOR_CONFIRM_DIALOG = 2,
	EREMINISCENE_MAX               = 3,
};

enum class EADD_MEMBER_END_STATUS : uint8
{
	ENONE                          = 0,
	EOPEN_CHANGE_CHECK             = 1,
	EWAIT_CHANGE_CHECK             = 2,
	EOPEN_CHARACTER_CHANGE         = 3,
	EUPDATE_CHARACTER_CHANGE       = 4,
	EEND_CHARACTER_CHANGE          = 5,
	EWAIT_CHANGE_CANCEL            = 6,
	EFINISH                        = 7,
	EADD_MEMBER_END_MAX            = 8,
};

enum class EADD_MEMBER_STATUS : uint8
{
	ENONE                          = 0,
	EDIALOG                        = 1,
	EOPEN_CHARACTER_CHANGE         = 2,
	EUPDATE_CHARACTER_CHANGE       = 3,
	EEND_CHARACTER_CHANGE          = 4,
	ECHK_PARTYMEMBER               = 5,
	EADD_MEMBER                    = 6,
	EADD_MEMBER_MAX                = 7,
};

enum class EEventType : uint8
{
	NONE                           = 0,
	ENABLE_FIELD_OBJ               = 1,
	ENABLE_PLAYER                  = 2,
	ENABLE_EMOTION                 = 4,
	LABEL_JUMP                     = 5,
	WAIT                           = 10,
	WAIT_LOAD                      = 11,
	WAIT_LONG                      = 12,
	WAIT_MIDDLE                    = 13,
	WAIT_SHORT                     = 14,
	MOVE                           = 20,
	MOVE_POS                       = 21,
	MOVE_WAIT                      = 25,
	DIR                            = 30,
	TALK                           = 40,
	TALK_POS                       = 41,
	TALK_PARTY                     = 42,
	TALK_PARTNER                   = 43,
	TALK_GENERAL                   = 45,
	TALK_DELETE_ALL                = 49,
	FADE_IN                        = 50,
	FADE_IN_LONG                   = 51,
	FADE_IN_MIDDLE                 = 52,
	FADE_IN_SHORT                  = 53,
	EVENT_FADE_IN                  = 55,
	FADE_OUT                       = 60,
	FADE_OUT_LONG                  = 61,
	FADE_OUT_MIDDLE                = 62,
	FADE_OUT_SHORT                 = 63,
	EVENT_FADE_OUT                 = 65,
	SET_BIT_FLAG                   = 70,
	SET_MAINEVENT_FLAG             = 71,
	SET_SUBEVENT_FLAG              = 72,
	SET_LOCALEVENT_FLAG            = 73,
	SET_FORCE_LOCAL_EVENT_FLAG     = 79,
	SET_EVENT_CHECK                = 80,
	GAME_CHARA_ENABLE              = 100,
	NPC_CHARA_ENABLE               = 105,
	PLACEMENT_NPC_CHARA_ENABLE     = 106,
	EVENT_CHARA_ENABLE             = 110,
	CHARA_SPAWN                    = 200,
	PLAYER_SPAWN                   = 201,
	CHARA_SPAWN_NPC                = 202,
	CHARA_SPAWN_PLACEMENT          = 203,
	CHARA_SPAWN_PARTY_POSITION     = 205,
	CHARA_SPAWN_THIEF              = 206,
	CHARA_REMOVE                   = 210,
	CHARA_REMOVE_ALL               = 220,
	CHANGE_PLAYER_RES              = 221,
	RESET_PLYARE_RES               = 222,
	CHARA_POS                      = 230,
	CHARA_ACTION                   = 240,
	CHARA_PHYSICS                  = 250,
	CHARA_FORCE                    = 260,
	CHARA_MOVEMODE                 = 270,
	CHARA_FADE_IN                  = 280,
	CHARA_FADE_OUT                 = 281,
	CHARA_MOVE_START               = 290,
	CAMERA_SPAWN                   = 300,
	CAMERA_REMOVE                  = 310,
	CAMERA_TARGET                  = 320,
	CAMERA_POS                     = 330,
	CAMERA_FOLLOW                  = 340,
	CAMERA_TRACK                   = 400,
	CAMERA_MOVE                    = 401,
	CAMERA_PAN                     = 410,
	CAMERA_LOCK                    = 420,
	CAMERA_ROTATION                = 430,
	CAMERA_DECELERATE              = 440,
	CHANGE_MAP                     = 500,
	SET_NEXT_TRIGGER               = 503,
	CHANGE_AREA                    = 505,
	UNLOCK_FASTTRAVEL              = 507,
	CHANGE_TITLE                   = 510,
	ENDROLL_INIT                   = 520,
	ENDROLL                        = 521,
	BATTLE_START                   = 600,
	BATTLE_START_EIGHT_MEMBER      = 610,
	BATTLE_WIPE_HIDE               = 620,
	HIDE_WIPE_OR_FADE              = 630,
	EFFECT_SPAWN                   = 700,
	EFFECT_REMOVE                  = 701,
	EFFECT_REMOVE_ALL              = 702,
	EMOTION_START                  = 710,
	EMOTION_STOP                   = 711,
	EMOTION_STOP_ALL               = 712,
	PLAY_BGM                       = 900,
	STOP_BGM                       = 902,
	PLAY_MAPBGM                    = 903,
	PLAY_BGM_NEXTBLOCK             = 905,
	PLAY_SE                        = 910,
	SET_ENV_VOL                    = 920,
	PLAY_EVENT                     = 1000,
	PLAY_NARRATION                 = 1100,
	PLAY_SUB_TITLE                 = 1150,
	NEXT_BLOCK_SUB_TITLE           = 1160,
	POST_EFFECT_SETTING            = 1200,
	SET_HOUSE_IN                   = 1250,
	OPEN_DOOR                      = 1251,
	FLASHBACK_START                = 1260,
	FLASHBACK_END                  = 1270,
	OPEN_ENDCARD_UI                = 1280,
	OPEN_ENDCARD_EPILOGUE_UI       = 1281,
	SUBMISSION_START               = 1300,
	SUBMISSION_FINISH              = 1310,
	CONDITIONAL_SUBSTORY_JUMP      = 1320,
	PLAY_SEQ                       = 1500,
	STOP_SEQ                       = 1501,
	PLAY_SUBSEQ                    = 1510,
	STOP_SUBSEQ                    = 1511,
	CHANGE_TIMEZONE                = 1550,
	TIMEZONE_JUMP                  = 1560,
	CHANGE_DARKAREA                = 1570,
	RESET_DARKAREA                 = 1571,
	PARAM_CHANGE_ITEM              = 2000,
	PARAM_CHANGE_MONEY             = 2100,
	PARAM_MODIFY_HP                = 2200,
	PARAM_MODIFY_MP                = 2300,
	FULL_RECOVERY                  = 2310,
	FULL_RECOVERY_POTENTIALITY     = 2311,
	PARAM_DEL_FOLLOW               = 2400,
	PARAM_CANLCEL_FOLLOW           = 2410,
	PARAM_RECOVER_SWOON            = 2500,
	PARAM_RECOVER_SWOON_EVENT_CHARA = 2501,
	PARAM_SET_SWOON                = 2510,
	PARAM_SET_SWOON_EVENT_CHARA    = 2511,
	PARAM_CANCEL_SWOON             = 2520,
	ADD_MEMBER                     = 3000,
	ADD_MEMBER_END                 = 3005,
	ADD_MEMBER_DIALOG              = 3010,
	LEAVE_MEMBER                   = 3020,
	TEMP_PARTY_SETTING             = 3030,
	FINISH_TEMP_PARTY_SETTING      = 3031,
	BEGIN_REMINISCENCE             = 3100,
	END_REMINISCENCE               = 3110,
	REMINISCENCE_DIALOG            = 3120,
	REMINISCENCE_RESUME_MAP        = 3130,
	BEGIN_PLAY_REMINISCENCE        = 3200,
	END_PLAY_REMINISCENCE          = 3210,
	SET_HUNTER_PARTNER             = 3900,
	HUNTER_AWAKENING_BEFORE        = 3910,
	HUNTER_AWAKENING_AFTER         = 3911,
	BITFLAG_JUMP                   = 4000,
	FOLLOW_CHARA_JUMP              = 4100,
	HUNTER_PARTNER_JUMP            = 4110,
	HAVE_ITEM_JUMP                 = 4200,
	HAVE_MEAT_ITEM_JUMP            = 4210,
	MEMBER_COUNT_JUMP              = 4220,
	RANDOM_NUMBER_CREATE           = 4300,
	RANDOM_NUMBER_JUMP             = 4310,
	DIALOG                         = 5000,
	DIALOG_OK                      = 5001,
	DIALOG_GET_ITEM                = 5005,
	DIALOG_GET_JOB                 = 5006,
	DIALOG_JUMP                    = 5010,
	DIALOG_JUMP_EPILOGUE           = 5011,
	OPEN_CHALLENGE_DIALOG          = 5020,
	OPEN_FIELDCOMMAND_DIALOG       = 5030,
	OPEN_SELECT_MEMBER_DIALOG      = 5040,
	SELECT_MEMBER_JUMP             = 5041,
	DIALOG_HUNTER_PARTNER          = 5090,
	JUDGE_MONEY_JUMP               = 5100,
	RELEASE_TAME_MONSTER           = 5200,
	GET_TAME_MONSTER               = 5210,
	SUBEV_DELIVERY_DIALOG          = 5500,
	SUBEV_DELIVERY_DIALOG_01       = 5501,
	OBJ_SPAWN                      = 6000,
	OBJ_ALL_DESTROY                = 6001,
	OBJ_MOVE                       = 6002,
	OBJ_ENABLE                     = 6010,
	MAPOBJ_VISIBLE                 = 6200,
	UI_SAVE                        = 7000,
	AUTO_SAVE                      = 7010,
	UI_TUTORIAL                    = 7100,
	UI_TUTORIAL_FORCE              = 7101,
	UI_STORY_SELECT                = 7110,
	UI_BAR                         = 7200,
	UI_SHOP                        = 7210,
	UI_NOTE                        = 7220,
	UI_PARTY_EDIT                  = 7230,
	UI_GUILD                       = 7240,
	UI_MUSIC_PLAYER                = 7250,
	UI_STORY_NOTIFICATION_START    = 7260,
	UI_STORY_NOTIFICATION_END      = 7261,
	UI_RADARMAP                    = 7270,
	NOTIFICATION_COUNT_INIT        = 7300,
	NOTIFICATION_COUNT_SUB         = 7302,
	NOTIFICATION_COUNT_SHOW        = 7303,
	NOTIFICATION_MESSAGE           = 7310,
	SET_EVENT_COUNTER              = 7400,
	ADD_EVENT_COUNTER              = 7410,
	EVENT_COUNTER_JUMP             = 7420,
	TOP_CHARATYPE_JUMP             = 7450,
	SUCCESS_FC_TYPE_JUMP           = 7460,
	USE_MAINMENU                   = 8000,
	USE_PARTY_ENABLE               = 8010,
	ENABLE_AUTO_SAVE               = 8012,
	SET_INGAME_POSTPROCESS         = 8020,
	REFERSH_EVENT_OBJECT           = 8030,
	ENABLE_EVENT_OBJECT            = 8031,
	SELECT_SHIP_PARTS              = 8200,
	REFRESH_SHIP_OBJECT            = 8210,
	SHIP_PUT_UP_SAIL               = 8220,
	SET_SHIP_FIRST_CHOICE          = 8250,
	REFRESH_SHIP_OBJECT_FIRST_CHOICE = 8251,
	PARTYCHAT_MODE                 = 8300,
	PARTYCHAT_CHARA                = 8310,
	PARTYCHAT_DIR                  = 8311,
	PARTYCHAT_TALK                 = 8320,
	START_LAST_CHAPTER             = 8500,
	FINISH_LAST_CHAPTER            = 8510,
	START_EPILOGUE                 = 8550,
	FINISH_EPILOGUE                = 8560,
	EPILOGUE_ADD_MEMBER            = 8570,
	START_WEAPON_MASTER_FROW       = 8600,
	WPM_START                      = 8601,
	WPM_CHECK                      = 8602,
	WPM_REFLECTION                 = 8603,
	WPM_END                        = 8604,
	INVENTOR_EVENT_DIALOG          = 8610,
	INVENTOR_LEARN_ABILITY         = 8620,
	OPEN_PARTY_EDIT_UI             = 8800,
	PARTY_CHANGE_START             = 8801,
	PARTY_CHANGE_END               = 8802,
	OPEN_PARTY_EDIT_UI_SQUAD       = 8805,
	RECOVERY_PARTYMEMBER           = 8810,
	LEARN_PIRLO_ABILITY            = 8900,
	LEARN_ADVANCED_ABILITY         = 8910,
	CHANGE_TORCH_STATE             = 8920,
	LABEL_DEFINE                   = 9000,
	EVENT_SKIP_ENABLE              = 9100,
	EVENT_SKIP_STOP                = 9110,
	FINISH_THEATER                 = 9980,
	FINISH_PRE                     = 9990,
	END                            = 10000,
	EEventType_MAX                 = 10001,
};

enum class EFADE_USER : uint8
{
	EOTHER                         = 0,
	ETITLE_LOG                     = 1,
	EMAIN_TITLE                    = 2,
	EEVENT                         = 3,
	EFIELD_COMMAND                 = 4,
	EPARTY_CHAT                    = 5,
	EINN                           = 6,
	EBAR_STORY                     = 7,
	EIMPROVE_RELATIONSHIP          = 8,
	ECHANGE_PARTY                  = 9,
	ELEVEL_CHANGE                  = 10,
	ETITLE_LOGO                    = 11,
	EFADE_MAX                      = 12,
};

enum class EFADE_TYPE : uint8
{
	NONE                           = 0,
	FADE_IN                        = 1,
	FADE_OUT                       = 2,
	EFADE_MAX                      = 3,
};

enum class EWIPE_KIND : uint8
{
	BATTLE_START_WIPE              = 0,
	BATTLE_END_WIPE                = 1,
	BATTLE_MAX                     = 2,
};

enum class EFADE_KIND : uint8
{
	FADE                           = 0,
	EFADE_MAX                      = 1,
};

enum class EFIELDCOMMAND_SEARCH_STATE : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	EOPEN_SEARCH                   = 2,
	EOPEN_BRIBERY                  = 3,
	EOPEN_BRIBERY_FAILED           = 4,
	ESEARCH_CONFIRM                = 5,
	EBRIBERY_CONFIRM               = 6,
	EBRIBERY_FAILED                = 7,
	ECONFIRM_CLOSE                 = 8,
	EDETAIL                        = 9,
	ECLOSE                         = 10,
	EOPEN_SPECIAL                  = 11,
	EWAITING                       = 12,
	EFIELDCOMMAND_SEARCH_MAX       = 13,
};

enum class EFIELDCOMMAND_PURCHASE_STATE : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	ELIST                          = 2,
	EPURCHASE_CONFIRM              = 3,
	EPURCHASE_DISCOUNT             = 4,
	ESTEAL_CONFIRM                 = 5,
	ECLOSE                         = 6,
	EFIELDCOMMAND_PURCHASE_MAX     = 7,
};

enum class EFIELDCOMMAND_MONSTER_STATE : uint8
{
	ENONE                          = 0,
	EOPPONENT_DIALOG               = 1,
	ELEARN_ABILITY_CONFIRM_DIALOG  = 2,
	ESELECT_FORGET_ABILITY         = 3,
	ERELEASE_LIST_OPEN             = 4,
	ERELEASE_LIST                  = 5,
	ERELEASE_OPEN                  = 6,
	ERELEASE                       = 7,
	ERELEASE_CLOSE                 = 8,
	ECLOSE_UI                      = 9,
	EFAILED_DIALOG                 = 10,
	EDIALOG_WAITING                = 11,
	EPROCESS_OPEN                  = 12,
	EFIELDCOMMAND_MONSTER_MAX      = 13,
};

enum class EFIELDCOMMAND_MENUITEM_STATE : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	EUPDATE                        = 2,
	EDECIDE                        = 3,
	ECLOSE                         = 4,
	ESELECT                        = 5,
	EFIELDCOMMAND_MENUITEM_MAX     = 6,
};

enum class EFIELDCOMMAND_LURE_STATE : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	EDIALOG                        = 2,
	ECHANGE_DIALOG                 = 3,
	ECLOSE                         = 4,
	EFAILED_DIALOG_OPEN            = 5,
	EFAILED_DIALOG                 = 6,
	EFIELDCOMMAND_LURE_MAX         = 7,
};

enum class E_FIELDCOMMAND_BATTLE_DIALOG_TYPE : uint8
{
	EBATTLE_CONFIRM                = 0,
	EBATTLE_FAILED                 = 1,
	ELEARN_ABILITY_CONFIRM         = 2,
	E_FIELDCOMMAND_BATTLE_DIALOG_MAX = 3,
};

enum class EFIELDCOMMAND_BEG_STATE : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	ELIST                          = 2,
	EEXEC_BEG                      = 3,
	EFAILED_DIALOG                 = 4,
	ECLOSE                         = 5,
	EFIELDCOMMAND_BEG_MAX          = 6,
};

enum class EFieldCommandSpecialPopupType : uint8
{
	ENone                          = 0,
	EPartner_Akara                 = 1,
	EPartner_Mahina                = 2,
	EFieldCommandSpecialPopupType_MAX = 3,
};

enum class ENpcSwoonType : uint8
{
	ENone                          = 0,
	ESwoon                         = 1,
	ESleep                         = 2,
	ENpcSwoonType_MAX              = 3,
};

enum class EFieldCommandCategory : uint8
{
	ERight                         = 0,
	EEvil                          = 1,
	ENight                         = 2,
	EFieldCommandCategory_MAX      = 3,
};

enum class EMJFieldCommandType : uint8
{
	EGeneric                       = 0,
	EPurchase                      = 1,
	ESteal                         = 2,
	EBattle                        = 3,
	EMonster                       = 4,
	ELure                          = 5,
	ESearch                        = 6,
	EHire                          = 7,
	EReveal                        = 8,
	EHear                          = 9,
	ELead                          = 10,
	EBribery                       = 11,
	EBeg                           = 12,
	ERob                           = 13,
	EAssassinate                   = 14,
	EDose                          = 15,
	EPlacate                       = 16,
	MJFieldCommandType_MAX         = 17,
};

enum class EFieldCommandPreviewMenuState : uint8
{
	ENone                          = 0,
	EOpen                          = 1,
	EInTab                         = 2,
	EInPanel                       = 3,
	EClose                         = 4,
	ESpecial                       = 5,
	EFieldCommandPreviewMenuState_MAX = 6,
};

enum class EFieldCommandStatus : uint8
{
	ENone                          = 0,
	ESuccess                       = 1,
	ECancel                        = 2,
	EFailed                        = 3,
	ESuccess_Release               = 4,
	EAlreadyCompleted              = 5,
	FieldCommandStatus_MAX         = 6,
};

enum class EFlagRandomControlTrigger : uint8
{
	ELevelChange                   = 0,
	ETimeZoneChange                = 1,
	EFlagRandomControlTrigger_MAX  = 2,
};

enum class EGameColor : uint8
{
	ENONE                          = 0,
	ETEXT_COLOR_DARK               = 10,
	ETEXT_COLOR_RED                = 11,
	ETEXT_COLOR_WHITE              = 12,
	ETEXT_BUTTON_COLOR             = 15,
	ETEXT_BUTTON_COLOR_FC_POPUP    = 16,
	ETEXT_PARAM_UP_COLOR           = 17,
	ETEXT_PARAM_DOWN_COLOR         = 18,
	ERADARMAP_SUB_STORY_ICON       = 20,
	ERADARMAP_GRAY_ICON            = 21,
	ERADARMAP_ADDMEMBER_ICON       = 22,
	ERADARMAP_MAIN_STORY_DELAYED   = 23,
	ERADARMAP_SUB_STORY_GRAY_ICON  = 24,
	ERADARMAP_MARCHANT_SUB_STORAY_GRAY_ICON = 25,
	EWORLDMAP_STORY_ICON           = 30,
	EWORLDMAP_CURRENT_LOCATION_ICON = 31,
	EWORLDMAP_DEFAULT_ICON         = 32,
	EWORLDMAP_DESTINATION_ICON     = 33,
	EWORLDMAP_MERCHANT_SUB_STORY_ICON = 34,
	ELIST_ENABLE_ICON              = 40,
	ELIST_UNENABLE_ICON            = 41,
	EFC_HEAR_FADE_COLOR            = 50,
	EFC_ICON_COLOR_RIGHT           = 51,
	EFC_ICON_COLOR_EVIL            = 52,
	EFC_ICON_COLOR_NIGHT           = 53,
	EBATTLE_HELP_TEXT              = 70,
	EBATTLE_GAG_HELP_TEXT          = 71,
	EBATTLE_TEXT_WHITE             = 75,
	EBATTLE_TEXT_DARK              = 76,
	ETBATTLE_SUCCESS_RATE_DISABLE  = 77,
	ENO_EQUIP_WEAPON_ITEM_TEXT     = 80,
	EENCHANT_FIRE_BASE             = 90,
	EENCHANT_ICE_BASE              = 91,
	EENCHANT_THUNDER_BASE          = 92,
	EENCHANT_WIND_BASE             = 93,
	EENCHANT_LIGHT_BASE            = 94,
	EENCHANT_DARK_BASE             = 95,
	EENCHANT_FIRE_SUB              = 96,
	EENCHANT_ICE_SUB               = 97,
	EENCHANT_THUNDER_SUB           = 98,
	EENCHANT_WIND_SUB              = 99,
	EENCHANT_LIGHT_SUB             = 100,
	EENCHANT_DARK_SUB              = 101,
	EENCHANT_NONE                  = 102,
	EEVENT_FLASHBACK_BLACK         = 150,
	EEVENT_FLASHBACK_WHITE         = 151,
	EEVENT_FLASHBACK_GLAY          = 152,
	EEVENT_FLSHBACK_BLUE           = 153,
	EEVENT_FLSHBACK_RED            = 154,
	EEVENT_FLSHBACK_YELLOW         = 155,
	EEVENT_FLSHBACK_GREEN          = 156,
	EEVENT_SKIP_DARK               = 170,
	EEVENT_SKIP_SPEED_ICON_ENABLE_COLOR = 171,
	EEVENT_SKIP_SPEED_ICON_DISABLE_COLOR = 172,
	EJOB_LICENSE_DISABLE           = 180,
	EDEBUG_NONLOCALISE_COLOR       = 250,
	EDEBUG_LOCALISE_CLIPPING_COLOR = 251,
	EGameColor_MAX                 = 252,
};

enum class EGAME_CONDITION_TYPE : uint8
{
	ENONE                          = 0,
	ESOLO                          = 1,
	EPARTY                         = 2,
	EPLAYER_MALE                   = 3,
	EPLAYER_FEMALE                 = 4,
	EPLAYER_NUTORAL                = 5,
	ETARGET_MALE                   = 6,
	ETARGET_FEMALE                 = 7,
	ETAEGET_NUTORAL                = 8,
	EGAME_CONDITION_MAX            = 9,
};

enum class EGAMEMODE_STATE : uint8
{
	ENONE                          = 0,
	ECREATE_MANAGER                = 1,
	ECOMPLETE                      = 2,
	EGAMEMODE_MAX                  = 3,
};

enum class EGAMEOVER_TYPE : uint8
{
	EDEFAULT                       = 0,
	EEVENT_RESTART                 = 1,
	EGAMEOVER_MAX                  = 2,
};

enum class EEVENT_MODE : uint8
{
	ENORMAL                        = 0,
	EAUTO                          = 1,
	EDOUBLE_SPEED                  = 2,
	EMODE_MAX                      = 3,
	EEVENT_MAX                     = 4,
};

enum class EGENDER_TYPE : uint8
{
	ENONE                          = 0,
	EMALE                          = 1,
	EFEMALE                        = 2,
	ENUTORAL                       = 3,
	EGENDER_MAX                    = 4,
};

enum class EGiftType : uint8
{
	PreOrder                       = 0,
	DLC                            = 1,
	EGiftType_MAX                  = 2,
};

enum class EGUILD_MENU_STATE : uint8
{
	ENONE                          = 0,
	EFIRST_FLOW                    = 1,
	ETOP                           = 2,
	ELICENSE_MENU                  = 3,
	ESUB_MENU                      = 4,
	EEXIT                          = 5,
	EEVENT_VIEW                    = 6,
	EGET_LICENSE                   = 7,
	EAFTER_GET_LICENSE             = 8,
	EREOPEN_SUBMENU                = 9,
	EREOPEN_LICENSE_MENU           = 10,
	ETUTORIAL_WAIT                 = 11,
	EWAIT                          = 12,
	EGUILD_MENU_MAX                = 13,
};

enum class EHOLY_TORCH_SHINING_STATE : uint8
{
	ENONE                          = 0,
	ESMALL                         = 1,
	EMIDIUM                        = 2,
	ELARGE                         = 3,
	EHOLY_TORCH_SHINING_MAX        = 4,
};

enum class EHOLY_TORCH_STATE : uint8
{
	INITIAL                        = 0,
	BURN_OUT                       = 1,
	REBURN                         = 2,
	EHOLY_TORCH_MAX                = 3,
};

enum class EHOLY_TORCH_TYPE : uint8
{
	DESERT                         = 0,
	WILDERNESS                     = 1,
	MOUNTAIN                       = 2,
	ISLAND                         = 3,
	MAX_NUM                        = 4,
	EHOLY_TORCH_MAX                = 5,
};

enum class EHUNTER_PARTNER_ID : uint8
{
	NONE                           = 0,
	MONSTER_A                      = 1,
	MONSTER_B                      = 2,
	EHUNTER_PARTNER_MAX            = 3,
};

enum class EINITIAL_OPTION_WIDGET_STATE : uint8
{
	ENone                          = 0,
	EOpening                       = 1,
	EOpend                         = 2,
	EWaitingSave                   = 3,
	EClosing                       = 4,
	EClosed                        = 5,
	EDialog                        = 6,
	EINITIAL_OPTION_WIDGET_MAX     = 7,
};

enum class EItemCategoryData : uint8
{
	ECONSUMABLE                    = 0,
	EMATERIAL_A                    = 1,
	EMATERIAL_B                    = 2,
	ETRADING                       = 3,
	ETREASURE                      = 4,
	EEQUIPMENT                     = 5,
	EINFORMATION                   = 6,
	EMATERIAL_C                    = 7,
	EItemCategoryData_MAX          = 8,
};

enum class ESPECIAL_ITEM_TYPE : uint8
{
	NONE                           = 0,
	HOLY_TORCH_KEY                 = 1,
	ADVANCED_ABILITY               = 2,
	MUSIC_RECORD                   = 3,
	RUSTED_WEAPON                  = 4,
	LEGEND_WEAPON                  = 5,
	BATTLE_TESTED_WEAPON           = 6,
	MEAT_ITEM                      = 7,
	NOTE                           = 8,
	ESPECIAL_ITEM_MAX              = 9,
};

enum class EWEAPON_CATEGORY : uint8
{
	ESWORD                         = 0,
	ELANCE                         = 1,
	EDAGGER                        = 2,
	EAXE                           = 3,
	EBOW                           = 4,
	EROD                           = 5,
	ENONE                          = 6,
	EWEAPON_MAX                    = 7,
};

enum class EEQUIPMENT_PART : uint8
{
	ESWORD                         = 0,
	ELANCE                         = 1,
	EDAGGER                        = 2,
	EAXE                           = 3,
	EBOW                           = 4,
	EROD                           = 5,
	ESHIELD                        = 6,
	EHEAD                          = 7,
	EBODY                          = 8,
	EACCESSORY_00                  = 9,
	EACCESSORY_01                  = 10,
	EEQUIPMENT_MAX                 = 11,
};

enum class EITEM_DISPLAY_TYPE : uint8
{
	EDISABLE                       = 0,
	EITEM_USE                      = 1,
	EON_HIT                        = 2,
	EBATTLE_START                  = 3,
	EON_TAKE_DAMAGE                = 4,
	EITEM_DISPLAY_MAX              = 5,
};

enum class EITEM_USE_TYPE : uint8
{
	EDISABLE                       = 0,
	EALWAYS                        = 1,
	EFIELD_ONLY                    = 2,
	EBATTLE_ONLY                   = 3,
	EITEM_USE_MAX                  = 4,
};

enum class EITEM_SPECIAL_EFFECT : uint8
{
	NONE                           = 0,
	EUnrecoverable                 = 1,
	EHpAndMpAll                    = 2,
	EPoisonSolve                   = 3,
	EDarknessSolve                 = 4,
	ESilenceSolve                  = 5,
	ESleepSolve                    = 6,
	EConfusionSolve                = 7,
	EBerserkerSolve                = 8,
	ECurseSolve                    = 9,
	EStateAbnormalSolve            = 10,
	EDanshonEscape                 = 11,
	ELibrary                       = 12,
	EReflect                       = 13,
	EAsupiru                       = 14,
	EBerserk                       = 15,
	EReraise                       = 16,
	EMirrorTreasureKey             = 17,
	EITEM_SPECIAL_MAX              = 18,
};

enum class EITEM_ATTRIBUTE : uint8
{
	NONE                           = 0,
	EHp                            = 1,
	EHpAndRevival                  = 2,
	EMp                            = 3,
	EHpAndMp                       = 4,
	ESpecial                       = 5,
	EFire                          = 6,
	EWater                         = 7,
	EThunder                       = 8,
	EWind                          = 9,
	ESoil                          = 10,
	ENothing                       = 11,
	EStop                          = 12,
	ESlow                          = 13,
	ECatch                         = 14,
	EHpUp                          = 15,
	EMpUp                          = 16,
	EPowerUp                       = 17,
	EPhysicalUp                    = 18,
	EBrainUp                       = 19,
	ESpiritUp                      = 20,
	EDexterityUp                   = 21,
	EAgilityUp                     = 22,
	EStatusRecover                 = 23,
	EDamage                        = 24,
	EITEM_MAX                      = 25,
};

enum class EITEM_EFFECT_RANGE : uint8
{
	NONE                           = 0,
	EMy                            = 1,
	EPartyOne                      = 2,
	EPartyAll                      = 3,
	ESpecial                       = 4,
	EEnemyOne                      = 5,
	EEnemyAll                      = 6,
	EITEM_EFFECT_MAX               = 7,
};

enum class EITEM_USE_POINT : uint8
{
	NONE                           = 0,
	EMenuAndBattle                 = 1,
	EMenu                          = 2,
	EBattle                        = 3,
	EITEM_USE_MAX                  = 4,
};

enum class EKSCameraType : uint8
{
	CAMERA_DEFAULT                 = 0,
	CAMERA_FOLLOW                  = 1,
	CAMERA_EVENT                   = 2,
	CAMERA_RICH_EVENT              = 3,
	CAMERA_BATTLE                  = 4,
	CAMERA_EVENT_FOLLOW            = 5,
	CAMERA_3D_WORLD_MAP            = 6,
	MAX                            = 7,
};

enum class EKSCharacterAction : uint8
{
	F_IDLE                         = 0,
	N_IDLE_TORCH                   = 2,
	N_WALK                         = 3,
	N_WALK_TORCH                   = 4,
	N_DASH                         = 5,
	N_DASH_TORCH                   = 6,
	N_DASH_B                       = 78,
	N_DASH_B_TOACH                 = 79,
	LADDER_WALK                    = 87,
	LADDER_DASH                    = 88,
	CANOE_IDLE                     = 89,
	CANOE_WALK                     = 90,
	CANOE_DASH                     = 91,
	CANOE_DASH_B                   = 105,
	IDLE_EV                        = 1,
	SLEEP                          = 36,
	EV_000                         = 8,
	EV_010                         = 9,
	EV_020                         = 10,
	EV_030                         = 11,
	EV_040                         = 12,
	EV_050                         = 13,
	EV_060                         = 14,
	EV_070                         = 15,
	EV_080                         = 16,
	EV_090                         = 17,
	EV_100                         = 18,
	EV_110                         = 19,
	BAT_IDLE                       = 20,
	BAT_CHANGE_SWORD               = 44,
	BAT_CHANGE_LANCE               = 45,
	BAT_CHANGE_DAGGER              = 46,
	BAT_CHANGE_AXE                 = 47,
	BAT_CHANGE_BOW                 = 48,
	BAT_CHANGE_ROD                 = 49,
	ATK_SWORD                      = 37,
	ATK_LANCE                      = 38,
	ATK_DAGGER                     = 39,
	ATK_AXE                        = 40,
	ATK_BOW                        = 41,
	ATK_ROD                        = 42,
	BAT_BOOST_ATK_SWORD            = 159,
	BAT_BOOST_ATK_SWORD_FIN        = 160,
	BAT_BOOST_ATK_LANCE            = 161,
	BAT_BOOST_ATK_LANCE_FIN        = 162,
	BAT_BOOST_ATK_DAGGER           = 163,
	BAT_BOOST_ATK_DAGGER_FIN       = 164,
	BAT_BOOST_ATK_AXE              = 165,
	BAT_BOOST_ATK_AXE_FIN          = 166,
	BAT_BOOST_ATK_BOW              = 167,
	BAT_BOOST_ATK_BOW_FIN          = 168,
	BAT_BOOST_ATK_ROD              = 169,
	BAT_BOOST_ATK_ROD_FIN          = 170,
	ABI_00                         = 33,
	ABI_01                         = 28,
	ABI_02                         = 29,
	ABI_03                         = 30,
	ABI_04                         = 31,
	ABI_05                         = 32,
	ABI_06                         = 70,
	ABI_07                         = 71,
	ABI_08                         = 72,
	ABI_09                         = 73,
	ABI_10                         = 120,
	ABI_11                         = 121,
	ABI_12                         = 122,
	ABI_13                         = 123,
	ABI_14                         = 124,
	ABI_15                         = 125,
	ABI_16                         = 126,
	ABI_17                         = 127,
	ABI_18                         = 128,
	ABI_19                         = 129,
	IDLE_GUARD                     = 22,
	BAT_IDLE_CHARGE                = 7,
	BAT_IDLE_GUARD_SP              = 25,
	BAT_IDEL_PREPARATION           = 26,
	USE_ITEM                       = 34,
	USE_ITEM_SELF                  = 27,
	DAMAGE                         = 35,
	BAT_IDLE_BAD                   = 86,
	IDLE_DYING                     = 23,
	IDLE_DEAD                      = 24,
	BAT_WIN                        = 52,
	BAT_WIN_IDLE                   = 103,
	BAT_LEVELUP                    = 53,
	BAT_LEVELUP_IDLE               = 104,
	FC_START_DAYTIME               = 92,
	FC_START_NIGHT                 = 93,
	BAT_IDLE_ST                    = 94,
	BAT_CHANGE_ST                  = 95,
	BAT_CHANGE_SWORD_ST            = 96,
	BAT_CHANGE_LANCE_ST            = 97,
	BAT_CHANGE_DAGGER_ST           = 98,
	BAT_CHANGE_AXE_ST              = 99,
	BAT_CHANGE_BOW_ST              = 100,
	BAT_CHANGE_ROD_ST              = 101,
	BAT_STEPIN                     = 43,
	IDLE_BOOST                     = 21,
	BAT_BOOST_START                = 50,
	BAT_BOOST_CANCEL               = 51,
	CHR_SELECT_01                  = 74,
	CHR_SELECT_02                  = 75,
	CHAT_01                        = 76,
	CHAT_02                        = 77,
	USE_BUSINESS_SUPPORT           = 80,
	USE_SESSION_SUPPORT            = 81,
	ABI_NOWPN_00                   = 106,
	ABI_NOWPN_01                   = 107,
	ABI_NOWPN_02                   = 108,
	ABI_NOWPN_03                   = 109,
	ABI_NOWPN_04                   = 110,
	ABI_NOWPN_05                   = 111,
	ABI_NOWPN_06                   = 112,
	ABI_NOWPN_07                   = 113,
	ABI_NOWPN_08                   = 114,
	ABI_NOWPN_09                   = 115,
	ABI_NOWPN_10                   = 171,
	ABI_NOWPN_11                   = 172,
	ABI_NOWPN_12                   = 173,
	ABI_NOWPN_13                   = 174,
	ABI_NOWPN_14                   = 175,
	ABI_NOWPN_15                   = 176,
	ABI_NOWPN_16                   = 177,
	ABI_NOWPN_17                   = 178,
	ABI_NOWPN_18                   = 179,
	ABI_NOWPN_19                   = 180,
	BAT_GENERAL_00                 = 116,
	BAT_GENERAL_01                 = 117,
	BAT_GENERAL_02                 = 118,
	BAT_GENERAL_03                 = 119,
	BAT_GENERAL_04                 = 134,
	BAT_GENERAL_05                 = 135,
	BAT_GENERAL_06                 = 136,
	BAT_GENERAL_07                 = 137,
	BAT_GENERAL_08                 = 138,
	BAT_GENERAL_09                 = 139,
	BAT_GENERAL_10                 = 181,
	BAT_GENERAL_11                 = 182,
	BAT_GENERAL_12                 = 183,
	BAT_GENERAL_13                 = 184,
	BAT_GENERAL_14                 = 185,
	BAT_GENERAL_15                 = 186,
	BAT_GENERAL_16                 = 187,
	BAT_GENERAL_17                 = 188,
	BAT_GENERAL_18                 = 189,
	BAT_GENERAL_19                 = 190,
	BAT_IDLE_ENEMY                 = 130,
	BAT_ATK_ENEMY                  = 131,
	BAT_SP_IDLE_ENEMY              = 132,
	BAT_SP_ATK_ENEMY               = 133,
	BAT_FULLBOOST                  = 140,
	ABI_MSAQUERADE                 = 141,
	ABI_HIDEOUT                    = 142,
	RESERVE_02                     = 143,
	RESERVE_03                     = 144,
	UNIEV_000                      = 54,
	UNIEV_001                      = 55,
	UNIEV_002                      = 56,
	UNIEV_003                      = 57,
	UNIEV_004                      = 58,
	UNIEV_005                      = 59,
	UNIEV_006                      = 60,
	UNIEV_007                      = 61,
	UNIEV_008                      = 62,
	UNIEV_009                      = 63,
	UNIEV_010                      = 64,
	UNIEV_011                      = 65,
	UNIEV_012                      = 66,
	UNIEV_013                      = 67,
	UNIEV_014                      = 68,
	UNIEV_015                      = 69,
	UNIEV_016                      = 145,
	UNIEV_017                      = 146,
	UNIEV_018                      = 147,
	UNIEV_019                      = 148,
	UNIEV_020                      = 149,
	UNIEV_021                      = 150,
	UNIEV_022                      = 151,
	UNIEV_023                      = 152,
	UNIEV_024                      = 153,
	UNIEV_025                      = 154,
	UNIEV_026                      = 155,
	UNIEV_027                      = 156,
	UNIEV_028                      = 157,
	UNIEV_029                      = 158,
	MAX_ACTION                     = 191,
	EKSCharacterAction_MAX         = 192,
};

enum class EHUNTER_PARTNER_OFFSET_TYPE : uint8
{
	CANOE_FR                       = 0,
	CANOE_BK                       = 1,
	CANOE_L                        = 2,
	CANOE_R                        = 3,
	LADDER_FR                      = 4,
	LADDER_BK                      = 5,
	LADDER_L                       = 6,
	LADDER_R                       = 7,
	EHUNTER_PARTNER_OFFSET_MAX     = 8,
};

enum class EDEBUFF_ATTACHSOCKET_TYPE : uint8
{
	EBLIND                         = 0,
	ESTUN                          = 1,
	EETC                           = 2,
	EUI_DAMAGE                     = 3,
	EUI_STATUS                     = 4,
	EADDEFF01                      = 5,
	ESIGN                          = 6,
	EDEBUFF_ATTACHSOCKET_MAX       = 7,
};

enum class ETRANSPORT_EFFECT : uint8
{
	WALK                           = 0,
	DASH                           = 1,
	EX_DASH                        = 2,
	STOP                           = 3,
	ETRANSPORT_MAX                 = 4,
};

enum class ECANOE_MOVE_EFFECT : uint8
{
	WALK                           = 0,
	DASH                           = 1,
	EX_DASH                        = 2,
	STOP                           = 3,
	MAX_NUM                        = 4,
	ECANOE_MOVE_MAX                = 5,
};

enum class EEMOTION_TYPE : uint8
{
	SURPRISE                       = 0,
	QUESTION                       = 1,
	JOY                            = 2,
	SWEAT                          = 3,
	INSPRATION                     = 4,
	ANGRY                          = 5,
	SLEEP                          = 6,
	IMPATIENCE                     = 7,
	SILENCE                        = 8,
	SHOCK                          = 9,
	LOL                            = 10,
	CHEER                          = 11,
	FAINT                          = 12,
	DRUNK                          = 13,
	SAVE                           = 14,
	MAIN_MISSION                   = 15,
	SUB_MISSION                    = 16,
	SHOP                           = 17,
	INN                            = 18,
	LINER_SHIP                     = 19,
	BAR                            = 20,
	GUILD                          = 21,
	MUSIC_RECORD                   = 22,
	EEMOTION_MAX                   = 23,
};

enum class ECHARACTER_MODE : uint8
{
	FIELD                          = 0,
	BATTLE                         = 1,
	ECHARACTER_MAX                 = 2,
};

enum class EKSCharacterMoveMode : uint8
{
	WALK                           = 0,
	DASH                           = 1,
	EX_DASH                        = 2,
	LADDER                         = 3,
	LADDER_DASH                    = 4,
	CANOE_WALK                     = 5,
	CANOE_DASH                     = 6,
	CANOE_EX_DASH                  = 7,
	ENCOUNT                        = 8,
	MAX_MOVE_MODE                  = 9,
	EKSCharacterMoveMode_MAX       = 10,
};

enum class EKSCharacterAnimationLoop : uint8
{
	NONE                           = 0,
	ONESHOT                        = 1,
	LOOP                           = 2,
	ONESHOT_STOP                   = 3,
	EKSCharacterAnimationLoop_MAX  = 4,
};

enum class EATTRIBUTE_RESIST : uint8
{
	ENONE                          = 0,
	EWEAK                          = 1,
	EREDUCE                        = 2,
	EINVALID                       = 3,
	EABSORB                        = 4,
	EATTRIBUTE_MAX                 = 5,
};

enum class EKSPartyMember : uint8
{
	MEMBER_00                      = 0,
	MEMBER_01                      = 1,
	MEMBER_02                      = 2,
	MEMBER_03                      = 3,
	FOLLOWER_00                    = 4,
	FOLOOWER_01                    = 5,
	FOLLOWER_02                    = 6,
	FOLOOWER_03                    = 7,
	PARTY_MEMBER_MAX               = 8,
	EKSPartyMember_MAX             = 9,
};

enum class EKSCharacterDir : uint8
{
	FRONT                          = 0,
	REAR                           = 1,
	LEFT                           = 2,
	RIGHT                          = 3,
	MAX_DIR                        = 4,
	EKSCharacterDir_MAX            = 5,
};

enum class ECharacterRole : uint8
{
	NONE                           = 0,
	MAIN                           = 1,
	GUEST                          = 2,
	ECharacterRole_MAX             = 3,
};

enum class EKSCharacterCategory : uint8
{
	NONE                           = 0,
	PLAYER                         = 1,
	NPC                            = 2,
	EVENT                          = 4,
	PARTY                          = 8,
	BAR                            = 16,
	PARTNER                        = 32,
	PARTY_ALL                      = 57,
	ALL                            = 127,
	EKSCharacterCategory_MAX       = 128,
};

enum class ECharacterState : uint8
{
	None                           = 0,
	Active                         = 1,
	FadeOutBeforeDestroy           = 2,
	WaitDestroy                    = 3,
	ECharacterState_MAX            = 4,
};

enum class EDEBUGMENU_STATE : uint8
{
	ENONE                          = 0,
	ETOP                           = 1,
	EPARAM                         = 2,
	ECLOSING                       = 3,
	EDEBUGMENU_MAX                 = 4,
};

enum class EKSFontType : uint8
{
	Common                         = 0,
	Talk                           = 1,
	CustomTalk                     = 2,
	NonLocalization                = 3,
	MelDir_Only                    = 4,
	EKSFontType_MAX                = 5,
};

enum class EDebugFixMoveMode : uint8
{
	NONE                           = 0,
	WALK                           = 1,
	RUN                            = 2,
	DASH                           = 3,
	EDebugFixMoveMode_MAX          = 4,
};

enum class EPauseType : uint8
{
	PT_NONE                        = 0,
	PT_MENU                        = 1,
	PT_SUB_MENU                    = 2,
	PT_DEBUG                       = 16,
	PT_SUSPEND                     = 17,
	PT_ALL                         = 255,
	PT_MAX                         = 256,
};

enum class EGameModeDebugPage : uint8
{
	GAME                           = 0,
	EVENT                          = 1,
	CAMERA                         = 2,
	INDOOR                         = 3,
	STORY                          = 4,
	REMINISCENCE                   = 5,
	UI                             = 6,
	GUILD                          = 7,
	LOCALIZALTION                  = 8,
	NPC                            = 9,
	CHARA                          = 10,
	SOUND                          = 11,
	SOUND_SUB                      = 12,
	KEY_CONFIG                     = 13,
	TARGET_ACTOR                   = 14,
	MPC                            = 15,
	TIMEZONE                       = 16,
	OPTION                         = 17,
	BATTLE_ACTION_ORDER            = 18,
	UIRESOURCE                     = 19,
	ENCOUNT                        = 20,
	BATTLE_WIPE                    = 21,
	BALLOON                        = 22,
	BATTTLE_MEMORY                 = 23,
	PLATFORM                       = 24,
	SYSTEM                         = 25,
	MAX_NUM                        = 26,
	EGameModeDebugPage_MAX         = 27,
};

enum class ECHANGE_TIME_DILATION : uint8
{
	ENONE                          = 0,
	EGAME_DEFAULT_SPEED            = 1,
	EEVENT_NORMAL_SPEED            = 2,
	EEVENT_HIGH_SPEED              = 3,
	EBATTLE_BREAK_CAMERA           = 4,
	EBATTLE_FINISH_BLOW            = 5,
	EBATTLE_ENEMY_DEAD             = 6,
	ECHANGE_TIME_MAX               = 7,
};

enum class EKSGC_TYPE : uint8
{
	ENONE                          = 0,
	ETITLE                         = 1,
	EFIELD                         = 2,
	EFC                            = 3,
	EMENU                          = 4,
	EEVENT                         = 5,
	EBATTLE                        = 6,
	EGAME_OVER                     = 7,
	EEND_ROLL                      = 8,
	EMAX                           = 9,
	EKSGC_MAX                      = 10,
};

enum class EKSInputMode : uint8
{
	MODE_CHARA                     = 0,
	MODE_UI                        = 1,
	MODE_MAX                       = 2,
};

enum class EKSUseInputType : uint8
{
	CONTROLLER                     = 0,
	KEYBOARD                       = 1,
	TYPE_MOUSE                     = 2,
	EKSUseInputType_MAX            = 3,
};

enum class EKSKeyConfigElement : uint8
{
	KEYCONFIG_CONTROLLER_00        = 0,
	KEYCONFIG_CONTROLLER_01        = 1,
	KEYCONFIG_CONTROLLER_02        = 2,
	KEYCONFIG_CONTROLLER_03        = 3,
	KEYCONFIG_CONTROLLER_04        = 4,
	KEYCONFIG_CONTROLLER_05        = 5,
	KEYCONFIG_CONTROLLER_06        = 6,
	KEYCONFIG_CONTROLLER_07        = 7,
	KEYCONFIG_CONTROLLER_08        = 8,
	KEYCONFIG_CONTROLLER_09        = 9,
	KEYCONFIG_CONTROLLER_10        = 10,
	KEYCONFIG_CONTROLLER_11        = 11,
	KEYCONFIG_KEYBOARD_00          = 12,
	KEYCONFIG_KEYBOARD_01          = 13,
	KEYCONFIG_KEYBOARD_02          = 14,
	KEYCONFIG_KEYBOARD_03          = 15,
	KEYCONFIG_KEYBOARD_04          = 16,
	KEYCONFIG_KEYBOARD_05          = 17,
	KEYCONFIG_KEYBOARD_06          = 18,
	KEYCONFIG_KEYBOARD_07          = 19,
	KEYCONFIG_KEYBOARD_08          = 20,
	KEYCONFIG_KEYBOARD_09          = 21,
	KEYCONFIG_KEYBOARD_10          = 22,
	KEYCONFIG_KEYBOARD_11          = 23,
	KEYCONFIG_KEYBOARD_12          = 24,
	KEYCONFIG_KEYBOARD_13          = 25,
	KEYCONFIG_KEYBOARD_14          = 26,
	KEYCONFIG_KEYBOARD_15          = 27,
	KEYCONFIG_KEYBOARD_16          = 28,
	KEYCONFIG_KEYBOARD_17          = 29,
	KEYCONFIG_KEYBOARD_18          = 30,
	KEYCONFIG_KEYBOARD_19          = 31,
	KEYCONFIG_KEYBOARD_20          = 32,
	KEYCONFIG_KEYBOARD_21          = 33,
	KEYCONFIG_KEYBOARD_22          = 34,
	KEYCONFIG_KEYBOARD_23          = 35,
	KEYCONFIG_KEYBOARD_24          = 36,
	KEYCONFIG_KEYBOARD_25          = 37,
	KEYCONFIG_KEYBOARD_26          = 38,
	KEYCONFIG_MOUSE_00             = 39,
	KEYCONFIG_MOUSE_01             = 40,
	KEYCONFIG_MOUSE_02             = 41,
	KEYCONFIG_MOUSE_03             = 42,
	KEYCONFIG_MOUSE_04             = 43,
	KEYCONFIG_MOUSE_05             = 44,
	KEYCONFIG_NONE                 = 45,
	MAX                            = 46,
};

enum class EKSKeyConfigType : uint8
{
	TYPE_CONTROLLER                = 0,
	TYPE_KEYBOARD                  = 1,
	TYPE_MOUSE                     = 2,
	TYPE_MAX                       = 3,
};

enum class EKSLanguage : uint8
{
	EJA                            = 0,
	EEN                            = 1,
	EIT                            = 2,
	EFR                            = 3,
	EDE                            = 4,
	EES                            = 5,
	EZH_TW                         = 6,
	EZH_CN                         = 7,
	EKR                            = 8,
	EKSLanguage_MAX                = 9,
};

enum class ELOADING_REASON : uint8
{
	SINGLE                         = 0,
	FADE                           = 1,
	ELOADING_MAX                   = 2,
};

enum class EKSPartySet : uint8
{
	Set1                           = 0,
	Set2                           = 1,
	Set3                           = 2,
	Set4                           = 3,
	Set5                           = 4,
	EKSPartySet_MAX                = 5,
};

enum class ESaveDataManagerState : uint8
{
	NONE                           = 0,
	WAIT                           = 1,
	AUTO_SAVING                    = 2,
	ESaveDataManagerState_MAX      = 3,
};

enum class EKSSaveSlotName : uint8
{
	AUTO_SAVE                      = 0,
	SLOT_1                         = 1,
	SLOT_2                         = 2,
	SLOT_3                         = 3,
	SLOT_4                         = 4,
	SLOT_5                         = 5,
	SLOT_6                         = 6,
	SLOT_7                         = 7,
	SLOT_8                         = 8,
	SLOT_9                         = 9,
	EKSSaveSlotName_MAX            = 10,
};

enum class ESOUND_STATE : uint8
{
	ESTOP                          = 0,
	ECHANGE_BGM                    = 1,
	EFADEIN                        = 2,
	EFADEOUT                       = 3,
	EPLAYING                       = 4,
	ESOUND_MAX                     = 5,
};

enum class EKSDeviceVolumeType : uint8
{
	TV                             = 0,
	BUILT_IN_SPEAKER               = 1,
	STEREO_JACK                    = 2,
	EKSDeviceVolumeType_MAX        = 3,
};

enum class EKSDspBusType : uint8
{
	DEFAULT                        = 0,
	REVERB_DUNGEON                 = 1,
	EKSDspBusType_MAX              = 2,
};

enum class EKSVolumeType : uint8
{
	MASTER                         = 0,
	BGM                            = 1,
	SE                             = 2,
	SE_ENV                         = 3,
	VOICE                          = 4,
	MAX                            = 5,
};

enum class EKSSaveDataFlagType : uint8
{
	CREATED_SYS_DATA               = 0,
	VOICE_LANGUAGE                 = 1,
	SAVE_BATTLE_CURSOR             = 2,
	VIBRATION                      = 3,
	CORNER_DARKNESS                = 4,
	CLEARED_FINAL_CHAPTER          = 5,
	CLEARED_SECRET_BOSS            = 6,
	END_TRIAL_PLAY                 = 7,
	VSYNC                          = 8,
	MOVE_MOUSE                     = 9,
	ENCOUNT_CAMERA_PERFFORM        = 10,
	BOOST_ATTACK_CAMERA_PERFORM    = 11,
	SAVE_FC_CURSOR                 = 12,
	MAX                            = 13,
};

enum class EKSSaveDataParamType : uint8
{
	VOLUME_VOICE                   = 0,
	VOLUME_BGM                     = 1,
	VOLUME_SE                      = 2,
	VOLUME_SE_ENV                  = 3,
	BALLOON_SPEED                  = 4,
	BALLOON_WAIT_TIME              = 5,
	SCREEN_BRIGHTNESS              = 6,
	TEXT_LANGUAGE                  = 7,
	FRAME_RATE                     = 8,
	RENDER_PROFILE                 = 9,
	UI_TEXTURE_RESOLUTION          = 10,
	ANTI_ALIASING_QUALITY          = 11,
	POST_PROCESSING_QUALITY        = 12,
	SHADOW_QUALITY                 = 13,
	TEXTURE_QUALITY                = 14,
	EFFECT_QUALITY                 = 15,
	VOLUME_SOUND_MASTER            = 16,
	MAX                            = 17,
};

enum class EKSTriggerType : uint8
{
	NONE                           = 0,
	ETRIGGER_EVENT                 = 1,
	ETRIGGER_CAMERA_LOCK           = 2,
	ETRIGGER_HOUSEIN               = 3,
	ETRIGGER_SHOP                  = 4,
	ETRIGGER_TIMEZONE              = 5,
	ETRIGGER_ENCOUNT               = 6,
	ETRIGGER_LANTERN               = 7,
	ETRIGGER_CANOE_DOCK            = 8,
	MAX                            = 9,
};

enum class EDIALOG_STATE : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	ECLOSE                         = 2,
	EUPDATE                        = 3,
	EUPDATE_WAIT                   = 4,
	EDIALOG_MAX                    = 5,
};

enum class ELIST_ITEM_STATUS : uint8
{
	EENABLE                        = 0,
	EDISABLE                       = 1,
	ENOT_FOR_SALE                  = 2,
	ELIST_ITEM_MAX                 = 3,
};

enum class ECOMMON_NOTIFICATION_STATE : uint8
{
	EUI_NONE                       = 0,
	EUI_OPEN                       = 1,
	EUI_WAIT                       = 2,
	EUI_MESSAGE_IN                 = 3,
	EUI_MESSAGE_WAIT               = 4,
	EUI_MESSAGE_OUT                = 5,
	EUI_CLOSE                      = 6,
	EUI_TUTORIAL_WAIT              = 7,
	EUI_PAUSE                      = 8,
	EUI_MAX                        = 9,
};

enum class EUITitleFlow : uint8
{
	ELogo                          = 0,
	ESystemLoad                    = 1,
	EDemo                          = 2,
	E1stTitle                      = 3,
	E2ndTitle                      = 4,
	EPlayerSelect                  = 5,
	ELoadScene                     = 6,
	EOptionScene                   = 7,
	EInitialOptionScene            = 8,
	EEnd                           = 9,
	EUITitleFlow_MAX               = 10,
};

enum class ESAVELOAD_STATE : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	ECLOSE                         = 2,
	ESELECT_SLOT                   = 3,
	ECONFIRM                       = 4,
	EInSaveSystemData              = 5,
	EInSaveGame                    = 6,
	EInLoadGame                    = 7,
	EWAITING                       = 8,
	EWAITING2                      = 9,
	EEMPTY_UPDATE                  = 10,
	ECOMPLETE                      = 11,
	ESAVELOAD_MAX                  = 12,
};

enum class ESAVELOAD_RESULT : uint8
{
	ELOAD_SUCCEEDED                = 0,
	ESAVE_SUCCEEDED                = 1,
	ELOAD_FAILED                   = 2,
	ESAVE_FAILED                   = 3,
	ECANCEL                        = 4,
	EIS_RUNNING                    = 5,
	ESAVELOAD_MAX                  = 6,
};

enum class EMAINMENU_ABILITYSETTING_STATE : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	ESUBMENU                       = 2,
	ECOMMAND_ABILITY_GET           = 3,
	ESUPPORT_ABILITY_CHANGE        = 4,
	ECLOSE                         = 5,
	ECOMMAND_ABILITY_GET_CONFIRM   = 6,
	ECOMMAND_ABILITY_GET_SUPPORT   = 7,
	ECOMMAND_ABILITY_GET_CLOSE     = 8,
	EMAINMENU_ABILITYSETTING_MAX   = 9,
};

enum class ECONTROL_GUIDE_BUTTON_TYPE : uint8
{
	ENONE                          = 0,
	EBUTTON_A                      = 1,
	EBUTTON_B                      = 2,
	EBUTTON_Y                      = 3,
	EBUTTON_X                      = 4,
	ECURSOR_UD                     = 5,
	ECURSOR_LR                     = 6,
	ECURSOR_ALL                    = 7,
	EBUTTON_L                      = 8,
	EBUTTON_R                      = 9,
	ESTICK_L                       = 10,
	ESTICK_R                       = 11,
	ESTICK_R_UP                    = 12,
	ESTICK_R_DOWN                  = 13,
	EDIR_UD                        = 14,
	EDIR_LR                        = 15,
	EDIR_ALL                       = 16,
	EBUTTON_PLUS                   = 17,
	EBUTTON_MINUS                  = 18,
	EBUTTON_ZL                     = 19,
	EBUTTON_ZR                     = 20,
	EBUTTON_ZL_ZR                  = 21,
	EBUTTON_LSTICK                 = 22,
	EBUTTON_DASH_B                 = 23,
	EBUTTON_RADAR_R                = 24,
	EBUTTON_PARTY_CHANGE_ZL        = 25,
	EBUTTON_KEYBORARD_CURSOR_LR    = 26,
	ECONTROL_GUIDE_BUTTON_MAX      = 27,
};

enum class EUI_FIELD_COMMAND_TYPE : uint8
{
	EDAYTIME                       = 0,
	ENIGHT                         = 1,
	EUI_FIELD_COMMAND_MAX          = 2,
};

enum class EUIVisibleType : uint8
{
	EFIELD_COMMAND                 = 0,
	ETREASURE_BOX                  = 1,
	ESHOP                          = 2,
	EHOUSE                         = 3,
	EBATTLE                        = 4,
	EEVENT                         = 5,
	EPARTY_CHAT                    = 6,
	EMAIN_MENU                     = 7,
	EUIVisibleType_MAX             = 8,
};

enum class EUIResType : uint8
{
	TEXTURE2D                      = 0,
	STATICMESH                     = 1,
	EUIResType_MAX                 = 2,
};

enum class EUIResCategory : uint8
{
	COMMON                         = 0,
	IN_GAME                        = 1,
	MAINMENU                       = 2,
	EVENT                          = 3,
	BATTLE                         = 4,
	TUTORIAL                       = 5,
	STAFF_ROLL                     = 6,
	TEMPORARY                      = 7,
	FIRST                          = 8,
	EUIResCategory_MAX             = 9,
};

enum class EKSUIPartsKind : uint8
{
	MENU_HEADER                    = 0,
	MENU_FOOTER                    = 1,
	PARTY_LIST                     = 10,
	CHARA_STANDING                 = 20,
	EKSUIPartsKind_MAX             = 21,
};

enum class EKSUIKind : uint8
{
	TITLE                          = 0,
	MAIN_MENU                      = 10,
	SHOP                           = 11,
	COMMON_DIALOG                  = 12,
	FIELD_COMMAND_MENU             = 13,
	FIELD_COMMAND_PURCHASE         = 14,
	FIELD_COMMAND_BATTLE           = 15,
	FIELD_COMMAND_LEAD             = 16,
	FIELD_COMMAND_LURE             = 33,
	FIELD_COMMAND_HEAR             = 17,
	FIELD_COMMAND_HIRE             = 34,
	FIELD_COMMAND_REVEAL           = 35,
	FIELD_COMMAND_BRIBERY          = 36,
	FIELD_COMMAND_STEAL            = 37,
	FIELD_COMMAND_MONSTER          = 38,
	FIELD_COMMAND_SEARCH           = 39,
	MINI_MAP                       = 18,
	TUTORIAL                       = 19,
	GAMEOVER                       = 20,
	NARRATION                      = 21,
	RADAR_MAP                      = 22,
	SINGLE_MENU                    = 23,
	PARTY_CHAT                     = 24,
	FLASHBACK                      = 25,
	COMMON_NOTIFICATION            = 26,
	MAP_NOTIFICATION               = 27,
	PARTY_CHAT_NOTIFICATION        = 28,
	PARTY_CHARACTER_CHANGE         = 29,
	STAFF_CREDIT                   = 30,
	TIMEZONE_CHANGE                = 31,
	FORGET_ABILITY                 = 32,
	BALLOON_BUNDLE                 = 40,
	EVENT_BACKGROUND_FADE          = 41,
	OPTION                         = 50,
	EQUIPMENT                      = 51,
	SAVE_LOAD                      = 52,
	STATUS                         = 53,
	ITEM_LIST                      = 54,
	ABILITY_LIST                   = 55,
	TUTORIAL_LIST                  = 56,
	JOB_CHANGE                     = 57,
	MISSION_RECORD                 = 58,
	STORY_SELECT                   = 59,
	EVENT_FIELDCOMMAND_BATTLE      = 60,
	PARTY_SPLIT                    = 61,
	ABILITY_SETTING                = 62,
	HEADER_FOOTER                  = 63,
	SCREEN_CAPTURE                 = 64,
	PARTNER_SELECT                 = 65,
	GUILD_MENU                     = 66,
	BUSINESS_NOTIFICATION          = 67,
	SUB_TITLE                      = 68,
	MUSIC_PLAYER                   = 69,
	KS_PARTY_SPLIT                 = 70,
	FIELDCOMMAND_PREVIEW_MENU      = 71,
	DISEASE_LIST                   = 72,
	STORY_NOTIFICATION             = 73,
	ACTION_POPUP                   = 100,
	EVENT_SKIP                     = 101,
	AUTO_SAVING                    = 103,
	HELP_WINDOW                    = 104,
	FIELD_COMMAND_BEG              = 204,
	FIELD_COMMAND_ASSASSINATE      = 205,
	FIELD_COMMAND_DOSE             = 206,
	FIELD_COMMAND_ROB              = 207,
	FIELD_COMMAND_PLACATE          = 208,
	FIELD_COMMAND_POPUP            = 230,
	EKSUIKind_MAX                  = 231,
};

enum class EPLAYER_JOB_FB_TYPE : uint8
{
	EIDLE                          = 0,
	ESELECT                        = 1,
	ESELECT_LOOP                   = 2,
	EPLAYER_JOB_FB_MAX             = 3,
};

enum class EPLAYER_SELECT_FB_PATTERN : uint8
{
	EDEFAULT                       = 0,
	EPATTERN_1                     = 1,
	EPATTERN_2                     = 2,
	EPLAYER_SELECT_FB_MAX          = 3,
};

enum class EPLAYER_SELECT_FB_TYPE : uint8
{
	EIDLE                          = 0,
	EIDLE_LOOP                     = 1,
	ESELECT_DAY                    = 2,
	ESELECT_NIGHT                  = 3,
	EPLAYER_SELECT_FB_MAX          = 4,
};

enum class ELEVEL_DARK_STATE : uint8
{
	NORMAL                         = 0,
	LOST_WAY                       = 1,
	DARK                           = 2,
	ELEVEL_DARK_MAX                = 3,
};

enum class ELevelLoaderRequest : uint8
{
	NONE                           = 0,
	LOAD                           = 1,
	UNLOAD                         = 2,
	SHOW                           = 3,
	HIDE                           = 4,
	ELevelLoaderRequest_MAX        = 5,
};

enum class EPLACEMENT_TYPE : uint8
{
	ENONE                          = 0,
	ENPC                           = 1,
	EOBJECT                        = 2,
	EEVENT_TRIGGER                 = 3,
	ESEQUENCER                     = 4,
	EPLACEMENT_MAX                 = 5,
};

enum class ELEVEL_AREA_TYPE : uint8
{
	NONE                           = 0,
	AREA_A                         = 1,
	AREA_B                         = 2,
	AREA_C                         = 3,
	AREA_D                         = 4,
	AREA_E                         = 5,
	LEVEL_AREA_MAX                 = 6,
};

enum class ELevelTriggerID : uint8
{
	Start                          = 0,
	Trigger_01                     = 1,
	Trigger_02                     = 2,
	Trigger_03                     = 3,
	Trigger_04                     = 4,
	Trigger_05                     = 5,
	Trigger_06                     = 6,
	Trigger_07                     = 7,
	Trigger_08                     = 8,
	Trigger_09                     = 9,
	Trigger_10                     = 10,
	Trigger_11                     = 11,
	Trigger_12                     = 12,
	Trigger_13                     = 13,
	Trigger_14                     = 14,
	Trigger_15                     = 15,
	Trigger_16                     = 16,
	Trigger_17                     = 17,
	Trigger_18                     = 18,
	Trigger_19                     = 19,
	Trigger_20                     = 20,
	Invalid                        = 254,
	ELevelTriggerID_MAX            = 255,
};

enum class EColor : uint8
{
	White                          = 0,
	Gray                           = 1,
	Black                          = 2,
	Transparent                    = 3,
	Red                            = 4,
	Green                          = 5,
	Blue                           = 6,
	Yellow                         = 7,
	Orange                         = 8,
	MerchantSubStory               = 9,
	EColor_MAX                     = 10,
};

enum class EGET_DATATABLE_RESULT : uint8
{
	Success                        = 0,
	NotFound                       = 1,
	NotMatch                       = 2,
	EGET_DATATABLE_MAX             = 3,
};

enum class EKSImageFormats : uint8
{
	JPG                            = 0,
	PNG                            = 1,
	EKSImageFormats_MAX            = 2,
};

enum class EControllerInputType : uint8
{
	TYPE_UNKNOWN                   = 0,
	TYPE_STEAM_CONTROLLER          = 1,
	TYPE_XBOX_360                  = 2,
	TYPE_XBOX_ONE                  = 3,
	TYPE_GENERIC_XINPUT            = 4,
	TYPE_PS4                       = 5,
	TYPE_NINTENDO_SWITCH_PRO       = 6,
	TYPE_STADIA                    = 7,
	TYPE_MAX                       = 8,
};

enum class EKeyboardLayoutType : uint8
{
	TYPE_NORMAL                    = 0,
	TYPE_ITALIAN                   = 1,
	TYPE_FRENCH                    = 2,
	TYPE_SPANISH                   = 3,
	TYPE_GERMAN                    = 4,
	TYPE_DVOROK                    = 5,
	TYPE_UNITED_KINGDOM            = 6,
	TYPE_US                        = 7,
	TYPE_MAX                       = 8,
};

enum class ELogErrorType : uint8
{
	Display                        = 0,
	Warning                        = 1,
	Error                          = 2,
	ELogErrorType_MAX              = 3,
};

enum class ELISTWIDGET_STATE : uint8
{
	NONE                           = 0,
	OPEN                           = 1,
	UPDATE                         = 2,
	CLOSE                          = 3,
	ELISTWIDGET_MAX                = 4,
};

enum class ELISTWIDGET_SE_TYPE : uint8
{
	OPEN                           = 0,
	DECIDE_CLOSE                   = 1,
	CANCEL_CLOSE                   = 2,
	SELECT                         = 3,
	DECIDE                         = 4,
	CANCEL                         = 5,
	FAILED                         = 6,
	ELISTWIDGET_SE_MAX             = 7,
};

enum class ELIST_NUM_UNIT_TYPE : uint8
{
	EPRICE                         = 0,
	EPERCENT                       = 1,
	ELEVEL                         = 2,
	ENONE                          = 3,
	ERANK                          = 4,
	ELIST_NUM_UNIT_MAX             = 5,
};

enum class ELIST_ITEM_NEXT_SPACE : uint8
{
	ENONE                          = 0,
	ESPACE                         = 1,
	EDIVIDER                       = 2,
	ELIST_ITEM_NEXT_MAX            = 3,
};

enum class ERECOVERY_EFFECT_TYPE : uint8
{
	ENONE                          = 0,
	EHP                            = 1,
	EMP                            = 2,
	EPOTENTIAL                     = 3,
	ERECOVERY_EFFECT_MAX           = 4,
};

enum class ESTATUS_MENU_STATE : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	ECLOSE                         = 2,
	ESELECT_CHARA_STATUS_PART      = 3,
	ESTATUS_MENU_MAX               = 4,
};

enum class EMAINMENUSTATE : uint8
{
	EMAIN                          = 0,
	EItemList                      = 1,
	EAbilityList                   = 2,
	EEquipmentMenu                 = 3,
	EClassMenu                     = 4,
	EStatus                        = 5,
	EOption                        = 6,
	EWorldMap                      = 7,
	EMissionRecord                 = 8,
	ETutorial                      = 9,
	EChangeFormation               = 10,
	EBackToTitle                   = 11,
	EAbilitySetting                = 12,
	EChangeMember                  = 13,
	EEtc                           = 14,
	EQuitGame                      = 15,
	EMAINMENUSTATE_MAX             = 16,
};

enum class EMAINMENU_SUBJOB_COMFIRMRETURN : uint8
{
	ECURSOR_LEFT                   = 0,
	ECANCEL_EVENT                  = 1,
	ESHOULDER_R                    = 2,
	ESHOULDER_L                    = 3,
	EMENU_CLOSE                    = 4,
	EMAINMENU_SUBJOB_MAX           = 5,
};

enum class EMAINMENU_SEQ_STATE : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	EUPDATE                        = 2,
	ECLOSE                         = 3,
	EMAINMENU_SEQ_MAX              = 4,
};

enum class ELIST_EVENT_TYPE : uint8
{
	EDECIDE                        = 0,
	ETOGGLE_DETAIL                 = 1,
	EFOCUS                         = 2,
	EOUT_FOCUS                     = 3,
	ECHANGE_CATEGORY               = 4,
	ECATEGORY_PLUS                 = 5,
	EINPUT_LEFT                    = 6,
	EINPUT_RIGHT                   = 7,
	EINPUT_Y                       = 8,
	EINPUT_LB                      = 9,
	EINPUT_RB                      = 10,
	ECATEGORY_SELECT               = 11,
	EINPUT_PLUS                    = 12,
	EINPUT_MINUS                   = 13,
	EINPUT_L3                      = 14,
	ECLOSE                         = 15,
	ELIST_EVENT_MAX                = 16,
};

enum class EMAINMENU_SEQ_JOB : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	ESELECT_CHARACTER              = 2,
	EMAIN_JOB                      = 3,
	EMAIN_JOB_ABILITY              = 4,
	ESUB_JOB                       = 5,
	ESUB_JOB_SELECT_MOVE           = 6,
	ESUB_JOB_CHANGE_CONFIRM        = 7,
	ESUB_JOB_REMOVE_SELECTED_CHARA = 8,
	ESUB_JOB_ABILITY               = 9,
	ESET_SUPPORT_ABILITY           = 10,
	ESELECT_SUPPORT_ABILITY        = 11,
	EJOB_ABILITY_CONFIRM           = 12,
	EJOB_ABILITY_SUPPORT           = 13,
	EBACK_TO_JOB_CHANGE_CONFIRM    = 14,
	ECLOSE                         = 15,
	EWAIT                          = 16,
	EMAINMENU_SEQ_MAX              = 17,
};

enum class EMAINMENU_SEQ_BASE : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	EUPDATE                        = 2,
	EPAUSE                         = 3,
	ECLOSE                         = 4,
	EMAINMENU_SEQ_MAX              = 5,
};

enum class EMainScenarioChapter : uint8
{
	NONE                           = 0,
	CHAPTER1                       = 1,
	CHAPTER1_COMPLETE              = 2,
	CHAPTER2                       = 3,
	CHAPTER2_COMPLETE              = 4,
	CHAPTER3                       = 5,
	CHAPTER3_COMPLETE              = 6,
	CHAPTER4                       = 7,
	CHAPTER4_COMPLETE              = 8,
	EMainScenarioChapter_MAX       = 9,
};

enum class EMAINSEQ_TYPE : uint8
{
	ENONE                          = 0,
	EOUT_GAME                      = 1,
	EFIELD                         = 2,
	EFIELD_TRANDITION              = 3,
	EBATTLE_READY                  = 4,
	EBATTLE                        = 5,
	EGAMEOVER                      = 6,
	EEVENT                         = 7,
	EFIELDCOMMAND_MENU             = 8,
	EFIELDCOMMAND_UNIQUE_MENU      = 9,
	EMAINMENU                      = 10,
	EMAINMENU_FAST_WORLD_MAP       = 11,
	EPARTY_CHAT                    = 12,
	ETUTORIAL                      = 13,
	EMAX                           = 14,
	EMAINSEQ_MAX                   = 15,
};

enum class EMapChipDirection : uint8
{
	EDIR_EAST                      = 0,
	EDIR_WEST                      = 1,
	EDIR_SOUTH                     = 2,
	EDIR_NORTH                     = 3,
	EDIR_SOUTH_EAST                = 4,
	EDIR_SOUTH_WEST                = 5,
	EDIR_NORTH_EAST                = 6,
	EDIR_NORTH_WEST                = 7,
	EDIR_CENTER                    = 8,
	EDIR_MAX                       = 9,
};

enum class EMAP_NAME_NOTIFICATION_OPEN_OWNER : uint8
{
	EDEFAULT                       = 0,
	EEVENT                         = 1,
	EMAP_NAME_NOTIFICATION_OPEN_MAX = 2,
};

enum class EMISSIONRECORD_PARTYCHAT_STATE : uint8
{
	ENONE                          = 0,
	ESELECT                        = 1,
	ECONFIRM_DIALOG                = 2,
	EMISSIONRECORD_PARTYCHAT_MAX   = 3,
};

enum class EMISSIONRECORD_TYPE : uint8
{
	ENONE                          = 0,
	EMAIN_MISSION                  = 1,
	ESUB_MISSION                   = 2,
	EEXTRA_MISSION                 = 3,
	EMISSIONRECORD_MAX             = 4,
};

enum class EMAINMENU_SEQ_MISSIONRECORD : uint8
{
	ENONE                          = 0,
	EWAIT                          = 1,
	EOPEN                          = 2,
	EMAIN_SELECT                   = 3,
	EMAIN_LIST                     = 4,
	ESUB_SELECT                    = 5,
	ESUB_LIST                      = 6,
	EEXTRA_SELECT                  = 7,
	EEXTRA_LIST                    = 8,
	EGAUGE_MOVE                    = 9,
	EGAUGE_TYPE_CHANGE             = 10,
	EEVENT_PREVIEW                 = 11,
	EEVENT_PREVIEW_WAIT            = 12,
	EPROLOUGE_DIALOG               = 13,
	EPROLOUGE_FAILED_DIALOG        = 14,
	EPROLOUGE_PROCESSOR_DIALOG     = 15,
	EPARTYCHAT_LIST                = 16,
	ECLOSE                         = 17,
	EMAINMENU_SEQ_MAX              = 18,
};

enum class EMISSION_RECORD_GAUGE_COLOR : uint8
{
	EAREA                          = 0,
	EBLUE                          = 1,
	ERED                           = 2,
	EGREEN                         = 3,
	EPURPLE                        = 4,
	EPINK                          = 5,
	EGRAY                          = 6,
	EBLACK                         = 7,
	EYELLOW                        = 8,
	EMISSION_RECORD_GAUGE_MAX      = 9,
};

enum class ELevelTransitionType : uint8
{
	WAIT                           = 0,
	CHANGE_FIELD                   = 1,
	SAME_FIELD                     = 2,
	FIELD_TO_BATTLE                = 3,
	BATTLE_TO_FIELD                = 4,
	ELevelTransitionType_MAX       = 5,
};

enum class EMJRegion : uint8
{
	EUnknown                       = 0,
	EJapan                         = 1,
	EAmerica                       = 2,
	EEurope                        = 3,
	EAsia                          = 4,
	EMJRegion_MAX                  = 5,
};

enum class ESaveDataLoadTarget : uint8
{
	Normal                         = 0,
	Trial                          = 1,
	PS4                            = 2,
	ESaveDataLoadTarget_MAX        = 3,
};

enum class ETameMonsterMode : uint8
{
	Manual                         = 0,
	Auto                           = 1,
	ETameMonsterMode_MAX           = 2,
};

enum class ELISTENER_TYPE : uint8
{
	ENONE                          = 0,
	EFIELD                         = 1,
	EBATTLE                        = 2,
	ESCRIPT_EVENT                  = 3,
	ESEQ_EVENT                     = 4,
	ELISTENER_MAX                  = 5,
};

enum class EMUSIC_PLAYER_WIDGET_STATE : uint8
{
	ENone                          = 0,
	EOpening                       = 1,
	EOpend                         = 2,
	EPlaying                       = 3,
	EStopped                       = 4,
	EClosing                       = 5,
	EClosed                        = 6,
	EMUSIC_PLAYER_WIDGET_MAX       = 7,
};

enum class EMYSHIP_CUSTOM_TYPE : uint8
{
	NONE                           = 0,
	TYPE_A                         = 1,
	TYPE_B                         = 2,
	TYPE_C                         = 3,
	TYPE_D                         = 4,
	MAX_NUM                        = 5,
	EMYSHIP_CUSTOM_MAX             = 6,
};

enum class EMYSHIP_CUSTOM_PART : uint8
{
	COLOR                          = 0,
	SAIL                           = 1,
	MAX_NUM                        = 2,
	EMYSHIP_CUSTOM_MAX             = 3,
};

enum class ENARRATION_MESSAGE_STATE : uint8
{
	ENONE                          = 0,
	EUPDATE                        = 1,
	EFADE_UPDATE                   = 2,
	EFADE_UPDATE_FINISH            = 3,
	EFADEOUT                       = 4,
	ENARRATION_MESSAGE_MAX         = 5,
};

enum class ENARRATION_STATE : uint8
{
	ENone                          = 0,
	EOpen                          = 1,
	EUPDATE                        = 2,
	ESHOW_FLASKBACK                = 3,
	ENEXT_PAGE_START               = 4,
	ENEXT_PAGE                     = 5,
	EPAGE_END                      = 6,
	ECLOSE                         = 7,
	EINPUT_WAITING                 = 8,
	EFADE_WAITING                  = 9,
	ENARRATION_MAX                 = 10,
};

enum class ENextPurposeDataType : uint8
{
	ENP_DATA                       = 0,
	ENP_DATA_LIST                  = 1,
	ENP_MAX                        = 2,
};

enum class ENPC_DB_TYPE : uint8
{
	EHEAR                          = 0,
	EHEAR_INFO                     = 1,
	ELEAD                          = 2,
	EPURCHASE                      = 3,
	EBattle                        = 4,
	ENPC_DB_MAX                    = 5,
};

enum class ENPC_INFO_TYPE : uint8
{
	HEAR                           = 0,
	SEARCH                         = 1,
	BRIBERY                        = 2,
	REVEAL                         = 3,
	NPC_INFO_MAX                   = 4,
};

enum class ENPC_ITEM_OBTAIN_TYPE : uint8
{
	PURCHASE                       = 0,
	STEAL                          = 1,
	BEG                            = 2,
	ROB                            = 3,
	NPC_ITEM_OBTAIN_MAX            = 4,
};

enum class ENPC_BATTLE_TYPE : uint8
{
	BATTLE                         = 0,
	MONSTER                        = 1,
	ASSASSINATE                    = 2,
	DOSE                           = 3,
	NPC_BATTLE_MAX                 = 4,
};

enum class ENPC_FOLLOW_TYPE : uint8
{
	LEAD                           = 0,
	LURE                           = 1,
	HIRE                           = 2,
	PLACATE                        = 3,
	NPC_FOLLOW_MAX                 = 4,
};

enum class ENPCEVENT_TYPE : uint8
{
	ENONE                          = 0,
	ENORMAL_TALK                   = 1,
	EDELIVERY_ITEM                 = 2,
	ELEAD_TARGET_NPC               = 3,
	EWIN_NPC                       = 4,
	EWIN_ENEMY                     = 5,
	EACHIEVEMENT_MAP               = 6,
	EFC_PURCHASE_ITEM              = 7,
	EFC_BATTLE_WIN                 = 8,
	ELEAD_OTHER_TARGET_NPC         = 9,
	EFC_BATTLE_LOSE                = 10,
	EFC_MONSTER_WIN                = 11,
	EFC_MONSTER_LOSE               = 12,
	EFC_SEARCH                     = 13,
	EHAVE_ITEM                     = 14,
	ENOT_HAVE_ITEM                 = 15,
	EDELIVERY_INFO_AND_ITEM        = 16,
	EDELIVERY_NPC_AND_ITEM         = 17,
	EFC_FOLLOW_SUCCESS             = 18,
	EFC_DOSE_SUCCESS               = 19,
	EFC_ASSASSINATE_SUCCESS        = 20,
	ENORMAL_TALK_WITH_PC           = 21,
	EPARTY_MEMBER                  = 22,
	EFC_STUN_SUCCESS               = 23,
	EJOIN_TARGET_PC                = 24,
	ENOT_JOIN_TARGET_PC            = 25,
	EFC_PURCHASE_ALL               = 26,
	EFC_REVEAL_LOSE                = 27,
	ENPCEVENT_MAX                  = 28,
};

enum class EOBJ_TYPE : uint8
{
	NORMAL_OBJ                     = 0,
	WOOD_TREASURE_BOX              = 1,
	TREASURE_BOX                   = 2,
	THIEF_TREASURE_BOX             = 3,
	HIDDEN_POINT                   = 4,
	STORY_ITEM                     = 5,
	OCEAN_TREASURE_BOX             = 6,
	OCEAN_WOOD_TREASURE_BOX        = 7,
	ENV_SE_GAYA                    = 8,
	EOBJ_MAX                       = 9,
};

enum class EOPTION_MENU_STATE : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	ECLOSE                         = 2,
	ESETTING                       = 3,
	ESAVING                        = 4,
	ECATEGORY_SELECT               = 5,
	EKEY_CONFIG                    = 6,
	EAPPLY_SKIP_DIALOG             = 7,
	EAPPLY_DIALOG                  = 8,
	EAPPLY_FINISH_DIALOG           = 9,
	EWAIT                          = 10,
	EOPTION_MENU_MAX               = 11,
};

enum class EOPTION_WIDGET_KIND : uint8
{
	EToggleButton                  = 0,
	ESlider                        = 1,
	EButton                        = 2,
	ESliderAndThumbnail            = 3,
	EItemSelect                    = 4,
	EItemSelectAndItemName         = 5,
	EItemSelectFromResolution      = 6,
	EItemSelectFromLangage         = 7,
	EConfig                        = 8,
	EOPTION_WIDGET_MAX             = 9,
};

enum class EOPTION_ITEM_KIND : uint8
{
	ELANGUAGE                      = 0,
	EVOICE_LANGUAGE                = 1,
	EVOLUME_MASTER                 = 2,
	EVOLUME_VOICE                  = 3,
	EVOLUME_BGM                    = 4,
	EVOLUME_SE                     = 5,
	ESAVE_CURSOR_IN_BATTLE         = 6,
	ESAVE_CURSOR_IN_FC             = 7,
	EVIBRATION                     = 8,
	ERESET_TO_DEFAULT              = 9,
	EVOLUME_SE_ENV                 = 10,
	ETEXT_SPEED                    = 11,
	EBALLOON_WAIT_TIME             = 12,
	EDARKNESS_CORNER               = 13,
	EBRIGHTNESS_SCREEN             = 14,
	EFRAME_RATE                    = 15,
	EVSYNC                         = 16,
	EWINDOW_RESOLUTION             = 17,
	EDISPLAY_MODE                  = 18,
	ERENDER_PROFILE                = 19,
	EUI_TEXTURE_RESOLUTION         = 20,
	EANTI_ALIASING_QUALITY         = 21,
	EPOST_PROCESS_QUALITY          = 22,
	ESHADOW_QUALITY                = 23,
	ETEXTURE_QUALITY               = 24,
	EEFFECT_QUALITY                = 25,
	ERENDER_QUALITY_AUTO           = 26,
	EENCOUNT_CAMERA_PERFORM        = 27,
	EBOOST_ATTACK_PERFORM          = 28,
	ECONTROLLER_CINFIG_00          = 29,
	ECONTROLLER_CINFIG_01          = 30,
	ECONTROLLER_CINFIG_02          = 31,
	ECONTROLLER_CINFIG_03          = 32,
	ECONTROLLER_CINFIG_04          = 33,
	ECONTROLLER_CINFIG_05          = 34,
	ECONTROLLER_CINFIG_06          = 35,
	ECONTROLLER_CINFIG_07          = 36,
	ECONTROLLER_CINFIG_08          = 37,
	ECONTROLLER_CINFIG_09          = 38,
	ECONTROLLER_CINFIG_10          = 39,
	ECONTROLLER_CONFIG_11          = 40,
	EKEYBOARD_CONFIG_00            = 41,
	EKEYBOARD_CONFIG_01            = 42,
	EKEYBOARD_CONFIG_02            = 43,
	EKEYBOARD_CONFIG_03            = 44,
	EKEYBOARD_CONFIG_04            = 45,
	EKEYBOARD_CONFIG_05            = 46,
	EKEYBOARD_CONFIG_06            = 47,
	EKEYBOARD_CONFIG_07            = 48,
	EKEYBOARD_CONFIG_08            = 49,
	EKEYBOARD_CONFIG_09            = 50,
	EKEYBOARD_CONFIG_10            = 51,
	EKEYBOARD_CONFIG_11            = 52,
	EKEYBOARD_CONFIG_12            = 53,
	EKEYBOARD_CONFIG_13            = 54,
	EKEYBOARD_CONFIG_14            = 55,
	EKEYBOARD_CONFIG_15            = 56,
	EKEYBOARD_CONFIG_16            = 57,
	EKEYBOARD_CONFIG_17            = 58,
	EKEYBOARD_CONFIG_18            = 59,
	EKEYBOARD_CONFIG_19            = 60,
	EKEYBOARD_CONFIG_20            = 61,
	EMOUSE_MOVE_ENABLE             = 62,
	EMOUSE_CONFIG_00               = 63,
	EMOUSE_CONFIG_01               = 64,
	EMOUSE_CONFIG_02               = 65,
	EMOUSE_CONFIG_03               = 66,
	EMOUSE_CONFIG_04               = 67,
	EMOUSE_CONFIG_05               = 68,
	ERESET_TO_DEFAULT_CONTROLLER_CONFIG = 69,
	ERESET_TO_DEFAULT_KEYBOARD_CONFIG = 70,
	ERESET_TO_DEFAULT_MOUSE_CONFIG = 71,
	ERESET_TO_DEFAULT_AUDIO_CONFIG = 72,
	ERESET_TO_DEFAULT_GRAPHIC_CONFIG = 73,
	EOPTION_ITEM_MAX               = 74,
};

enum class EPARTYCHANGE_FADE_STATE : uint8
{
	ENONE                          = 0,
	FADE_OUT_START                 = 1,
	FADE_OUT_WAIT                  = 2,
	ON_FADE_OUT_PROC               = 3,
	FADE_IN_START                  = 4,
	FADE_IN_WAIT                   = 5,
	EPARTYCHANGE_FADE_MAX          = 6,
};

enum class EPARTYCHANGE_CHARACTERCHANGE_STATE : uint8
{
	ENONE                          = 0,
	FADE_OUT_START                 = 1,
	FADE_OUT_WAIT                  = 2,
	FADE_IN_START                  = 3,
	FADE_IN_WAIT                   = 4,
	EPARTYCHANGE_CHARACTERCHANGE_MAX = 5,
};

enum class EPARTY_PANEL_CHARA_COLOR_TYPE : uint8
{
	EDEFAULT                       = 0,
	EDISABLE                       = 1,
	EPARTY_PANEL_CHARA_COLOR_MAX   = 2,
};

enum class EPARTY_SPLIT_STATE : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	ECHARACTER_SELECT              = 2,
	ECHARACTER_DECISION            = 3,
	ECHARACTER_CHANGE_ANIME        = 4,
	ECLOSE                         = 5,
	EFIX_DIALOG                    = 6,
	ECANCEL_DIALOG                 = 7,
	EPARTY_SPLIT_MAX               = 8,
};

enum class ELIST_CHARACTER_CHANGE_STATE : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	ECHARACTER_SELECT              = 2,
	ECHARACTER_DECISION            = 3,
	ECHARACTER_CHANGE_ANIME        = 4,
	ECONFIRM_REMOVE_CHARACTER      = 5,
	EFADE                          = 6,
	EERROR_MESSAGE                 = 7,
	ECLOSE                         = 8,
	EEND                           = 9,
	ELIST_CHARACTER_CHANGE_MAX     = 10,
};

enum class EPARTY_CHAT_TYPE : uint8
{
	MAIN_STORY                     = 0,
	BAR                            = 1,
	FINAL_CHAPTER_HINT             = 2,
	EPARTY_CHAT_MAX                = 3,
};

enum class EPARTY_CHAT_STATE : uint8
{
	UNRELEASE                      = 0,
	RELEASED                       = 1,
	PLAYED                         = 2,
	EPARTY_CHAT_MAX                = 3,
};

enum class EPartyFollowState : uint8
{
	Wait                           = 0,
	BeginWalk                      = 1,
	BeginRun                       = 2,
	KeepWalk                       = 3,
	KeepRun                        = 4,
	PartnerWait                    = 5,
	EPartyFollowState_MAX          = 6,
};

enum class EPARTY_SPLIT_WIDGET_STATE : uint8
{
	ENone                          = 0,
	ESelectingPosition             = 1,
	ESelectingCharater             = 2,
	EWaitingCloseDialog            = 3,
	EOpeningResult                 = 4,
	EOpening                       = 100,
	EClosing                       = 101,
	EPARTY_SPLIT_WIDGET_MAX        = 102,
};

enum class EPATH_TYPE : uint8
{
	ENone                          = 0,
	EPath_A                        = 1,
	EPath_B                        = 2,
	EPath_C                        = 3,
	EPath_D                        = 4,
	EPath_E                        = 5,
	EPath_F                        = 6,
	EPath_G                        = 7,
	EPath_H                        = 8,
	EPath_I                        = 9,
	EPath_J                        = 10,
	EPATH_MAX                      = 11,
};

enum class EJOB_TYPE : uint8
{
	EMERCHANT                      = 0,
	ETHIEF                         = 1,
	EFENCER                        = 2,
	EHUNTER                        = 3,
	EPRIEST                        = 4,
	EDANCER                        = 5,
	EPROFESSOR                     = 6,
	EALCHEMIST                     = 7,
	EWEAPON_MASTER                 = 8,
	EWIZARD                        = 9,
	ESHAMAN                        = 10,
	EINVENTOR                      = 11,
	EGUEST_JOB_000                 = 12,
	EGUEST_JOB_001                 = 13,
	EGUEST_JOB_002                 = 14,
	EGUEST_JOB_003                 = 15,
	EGUEST_JOB_004                 = 16,
	EGUEST_JOB_005                 = 17,
	EGUEST_JOB_006                 = 18,
	EGUEST_JOB_007                 = 19,
	EGUEST_JOB_008                 = 20,
	EGUEST_JOB_009                 = 21,
	EGUEST_JOB_010                 = 22,
	EGUEST_JOB_011                 = 23,
	EGUEST_JOB_012                 = 24,
	EGUEST_JOB_013                 = 25,
	EGUEST_JOB_014                 = 26,
	EGUEST_JOB_015                 = 27,
	EGUEST_JOB_016                 = 28,
	EGUEST_JOB_017                 = 29,
	EGUEST_JOB_018                 = 30,
	EGUEST_JOB_019                 = 31,
	EGUEST_JOB_020                 = 32,
	EGUEST_JOB_021                 = 33,
	EGUEST_JOB_022                 = 34,
	EJOB_MAX                       = 35,
};

enum class EPOTENTIALITY_ACTION_TYPE : uint8
{
	ENONE                          = 0,
	EADD_ABILITY                   = 1,
	ESKILL_ALL                     = 2,
	ECONVERGENCE                   = 3,
	EREPEAT                        = 4,
	EBP_MAX                        = 5,
	EFORCE_WEAKNESS                = 6,
	EDOUBLE_ACTION                 = 7,
	ENO_USE_MATERIAL               = 8,
	EPOTENTIALITY_ACTION_MAX       = 9,
};

enum class EBuildingPartsGroup : uint8
{
	BPG_Wall_Btm_North             = 0,
	BPG_Wall_Btm_South             = 1,
	BPG_Wall_Btm_West              = 2,
	BPG_Wall_Btm_East              = 3,
	BPG_Post_Btm_NW                = 4,
	BPG_Post_Btm_NE                = 5,
	BPG_Post_Btm_SW                = 6,
	BPG_Post_Btm_SE                = 7,
	BPG_Wall_Mdl_North             = 8,
	BPG_Wall_Mdl_South             = 9,
	BPG_Wall_Mdl_West              = 10,
	BPG_Wall_Mdl_East              = 11,
	BPG_Wall_Top_North             = 12,
	BPG_Wall_Top_South             = 13,
	BPG_Post_Mdl_NW                = 14,
	BPG_Post_Mdl_NE                = 15,
	BPG_Post_Mdl_SW                = 16,
	BPG_Post_Mdl_SE                = 17,
	BPG_Roof_Btm_West              = 18,
	BPG_Roof_Btm_East              = 19,
	BPG_Roof_Mdl_West              = 20,
	BPG_Roof_Mdl_East              = 21,
	BPG_Roof_Top                   = 22,
	BPG_Roof_North                 = 23,
	BPG_Roof_South                 = 24,
	BPG_Roof_TopAll                = 25,
	BPG_MAX                        = 26,
};

enum class ELineupTime : uint8
{
	EAlways                        = 0,
	EDayOnly                       = 1,
	ENightOnly                     = 2,
	ELineupTime_MAX                = 3,
};

enum class ESUB_STORY_RADAR_ICON_TYPE : uint8
{
	SUB_STORY                      = 0,
	MERCHANT                       = 1,
	EX_MAIN_STORY                  = 2,
	ESUB_STORY_RADAR_ICON_MAX      = 3,
};

enum class ERADARMAP_ICONANIMATION_STATE : uint8
{
	ENONE_STATE                    = 0,
	ETO_INSIDE_STATE               = 1,
	ETO_INSIDE_WAIT_STATE          = 2,
	EINSIDE_LOOP_STATE             = 3,
	ETO_OUTSIDE_STATE              = 4,
	ETO_OUTSIDE_WAIT_STATE         = 5,
	EOUTSIDE_LOOP_STATE            = 6,
	ERADARMAP_ICONANIMATION_MAX    = 7,
};

enum class EMAPCHANGE_TYPE : uint8
{
	ENONE                          = 0,
	EVILLAGE                       = 1,
	ETOWN                          = 2,
	ECITY                          = 3,
	ETOWN_CATHEDRAL                = 4,
	EFIELD                         = 5,
	EDUNGEON_CAVE                  = 6,
	EDUNGEON_WOODS                 = 7,
	EDUNGEON_REMAINS               = 8,
	EDUNGEON_UNDERPASS             = 9,
	EDUNGEON_MANSION               = 10,
	EDUNGEON_JOB                   = 11,
	EDUNGEON_LAST                  = 12,
	EDUNGEON_SHIP                  = 13,
	EDUNGEON_MOUNTAIN              = 14,
	EOCEAN                         = 15,
	EMAPCHANGE_MAX                 = 16,
};

enum class ERADARMAP_ICON_OBJ_TYPE : uint8
{
	NONE                           = 0,
	FIELD_NPC                      = 1,
	MAP_OBJECT                     = 2,
	EVENT_TRIGGER                  = 3,
	LEVEL_TRIGGER                  = 4,
	ERADARMAP_ICON_OBJ_MAX         = 5,
};

enum class ERADARMAP_ICON_TYPE : uint8
{
	EPLAYER                        = 0,
	ESAVEPOINT                     = 1,
	ETREASUREBOX                   = 2,
	ETHIEF_TREASUREBOX             = 3,
	ETREASUREBOX_EMPTY             = 4,
	ETHDDEN_POINT                  = 5,
	EMAIN_SCENARIO                 = 6,
	ESUB_SCENARIO                  = 7,
	EITEM_SHOP                     = 8,
	EWEAPON_SHOP                   = 9,
	EGENRAL_SHOP                   = 10,
	EINN                           = 11,
	EMAIN_BAR                      = 12,
	EBAR                           = 13,
	EMAIN_MAPCHANGE                = 14,
	EMAPCHANGE                     = 15,
	ESAVE                          = 16,
	EADDMAMBER                     = 17,
	ESUB_STORY_MERCHANT            = 18,
	EGUILD                         = 19,
	ESUB_MAPCHANGE                 = 20,
	ELINER_SHIP                    = 21,
	ENO_ICON                       = 22,
	ERADARMAP_ICON_MAX             = 23,
};

enum class EREMINISCENCE_MERGE_DATA : uint8
{
	MONEY                          = 0,
	ITEM                           = 1,
	EQUIPMENT                      = 2,
	EQUIP_JOB                      = 3,
	EQUIP_ABILITY                  = 4,
	EXP                            = 5,
	JP                             = 6,
	DOPING_STATUS                  = 7,
	LEARN_ABILITY                  = 8,
	FOLLOW_NPC                     = 9,
	TAME_MONSTER                   = 10,
	TIME_ZONE                      = 11,
	POT                            = 12,
	EREMINISCENCE_MERGE_MAX        = 13,
};

enum class EREMINISCENCE_MERGE_TYPE : uint8
{
	NO_MERGE                       = 0,
	MERGE                          = 1,
	EREMINISCENCE_MERGE_MAX        = 2,
};

enum class EREQUEST_TYPE : uint8
{
	ENONE                          = 0,
	EFIELD_TO_BATTLE               = 1,
	EBATTLE_TO_FIELD               = 2,
	EFIELD_TO_FIELD                = 3,
	EGAMEOVER                      = 4,
	EGO_TO_TITLE                   = 5,
	EEVENT_START                   = 6,
	EEVENT_END                     = 7,
	EBACK_TO_EVENT                 = 8,
	EEVENT_START_FROM_MAIN_MENU    = 9,
	ETHEATER_EVENT_START           = 10,
	ETHEATER_EVENT_END             = 11,
	ETHEATER_PROLOGUE_START        = 12,
	ETHEATER_PROLOGUE_END          = 13,
	ETHEATER_PARTCHAT_START        = 14,
	EOPEN_MAINMENU                 = 15,
	ECLOSE_MAINMENU                = 16,
	EOPEN_WORLDMAP                 = 17,
	ECLOSE_WORLDMAP                = 18,
	EOPEN_PARTYCHAT                = 19,
	EFIELDCOMMAND_MENU_OPEN        = 20,
	EFIELDCOMMAND_MENU_CLOSE       = 21,
	EFIELDCOMMAND_UNIQUE_MENU_OPEN = 22,
	EFIELDCOMMAND_UNIQUE_MENU_CLOSE = 23,
	EEVENT_TO_FIELDCOMMAND         = 24,
	EBATTLE_TO_FIELDCOMMAND        = 25,
	EFAST_TRAVEL                   = 26,
	ETUTORIAL_START_FROM_TRIGGER   = 27,
	EMAX                           = 28,
	EREQUEST_MAX                   = 29,
};

enum class ERESOLUTION_TYPE : uint8
{
	EHD                            = 0,
	E2K                            = 1,
	E4K                            = 2,
	ERESOLUTION_MAX                = 3,
};

enum class EEVENTGAMEOVER_STATE : uint8
{
	EINIT                          = 0,
	ESTART_FADE                    = 1,
	EWAIT                          = 2,
	EFINISH_FADE                   = 3,
	EEVENTGAMEOVER_MAX             = 4,
};

enum class EEVENTDIALOG_MODE : uint8
{
	ENONE                          = 0,
	ESUB_SEQ                       = 1,
	ELABEL_JUMP                    = 2,
	ECHOICE_ANSWER                 = 3,
	ECLOSE_WAIT                    = 4,
	EEVENTDIALOG_MAX               = 5,
};

enum class ESEX_TYPE : uint8
{
	EMAN                           = 0,
	EWOMAN                         = 1,
	SEX_MAX                        = 2,
};

enum class ERELATION_TYPE : uint8
{
	EOneFeeling                    = 0,
	EBothFeeling                   = 1,
	RELATION_MAX                   = 2,
};

enum class ESEQ_CAMERA_MODE : uint8
{
	ENONE                          = 0,
	ESEPIA_START                   = 1,
	ESEPIA_END                     = 2,
	EMONOCHROME                    = 3,
	EMONOCHROME_START              = 4,
	EMONOCHROME_END                = 5,
	ESEQ_CAMERA_MAX                = 6,
};

enum class ESequencerResourceData : uint8
{
	SEQ_TEST                       = 0,
	AutoTalk_KEN_10_01             = 1,
	TIMEZONE_CHANGE_KEN_00_A       = 2,
	TIMEZONE_CHANGE_KEN_00_B       = 46,
	TIMEZONE_CHANGE_KEN_00_C       = 50,
	RI_MS_KEN_10_0100              = 3,
	RI_MS_KEN_10_0200              = 4,
	RI_MS_KEN_10_0300              = 5,
	RI_MS_KEN_10_0400              = 6,
	RI_MS_KEN_10_0500              = 7,
	RI_MS_KEN_10_0600              = 8,
	RI_MS_KEN_10_0700              = 9,
	RI_MS_KEN_10_0800              = 10,
	RI_MS_KEN_10_0900              = 11,
	RI_MS_KEN_10_1000              = 12,
	RI_MS_KEN_10_1100              = 13,
	RI_MS_KEN_10_1101              = 14,
	RI_MS_KEN_10_1200              = 15,
	RI_MS_KEN_10_1200A             = 48,
	RI_MS_KEN_10_1200B             = 49,
	RI_MS_KEN_10_1300              = 16,
	RI_MS_KEN_10_1400              = 17,
	RI_MS_KEN_10_1500              = 18,
	RI_MS_KEN_10_1600              = 19,
	RI_MS_KEN_10_1700              = 20,
	RI_MS_KEN_10_1800              = 21,
	RI_MS_KEN_10_1900              = 22,
	RI_MS_KEN_10_2000              = 23,
	RI_MS_SIN_10_0100              = 24,
	RI_MS_SIN_10_0200              = 25,
	RI_MS_SIN_10_0300              = 26,
	RI_MS_SIN_10_0400              = 27,
	RI_MS_SIN_10_0500              = 28,
	RI_MS_SIN_10_0600              = 29,
	RI_MS_SIN_10_0700              = 30,
	RI_MS_SIN_10_0800              = 31,
	RI_MS_SIN_10_0900              = 32,
	RI_MS_SIN_10_1000              = 33,
	RI_MS_SIN_10_1100              = 34,
	RI_MS_SIN_10_1200              = 35,
	RI_MS_SIN_10_1300              = 36,
	RI_MS_SIN_10_13A0              = 37,
	RI_MS_SIN_10_13B0              = 38,
	RI_MS_SIN_10_13C0              = 39,
	RI_MS_SIN_10_1400              = 40,
	RI_MS_SIN_10_1500              = 41,
	RI_MS_SIN_10_1600              = 42,
	RI_MS_SIN_10_1700              = 43,
	RI_MS_SIN_10_1800              = 44,
	RichEvent_DeepThinking         = 45,
	Sub_MS_KEN_10_1900_ScrollBG    = 47,
	ESequencerResourceData_MAX     = 51,
};

enum class EShopDataType : uint8
{
	ESD_SHOP_LIST                  = 0,
	ESD_SHOP_INFO                  = 1,
	ESD_PURCHASE_ITEM              = 2,
	ESD_MAX                        = 3,
};

enum class ESHOPMENU_RECEIVE_GIFT_STATE : uint8
{
	EWAIT_DIALOG                   = 0,
	EOPEN_SUCCESS_DIALOG           = 1,
	EOPEN_COMPLETED_DIALOG         = 2,
	EOPEN_OVER_DIALOG              = 3,
	ESHOPMENU_RECEIVE_GIFT_MAX     = 4,
};

enum class ESHOPMENU_STATE : uint8
{
	ESHOP_NONE                     = 0,
	ESHOP_OPEN_TOP                 = 1,
	ESHOP_CLOSE_TOP                = 2,
	ESHOP_SELECT_TRADE             = 3,
	ESHOP_BUY                      = 4,
	ESHOP_SELL                     = 5,
	ESHOP_SELECT_NUM               = 6,
	ESHOP_SKIP_SELECT_NUM          = 7,
	ESHOP_DISABLE_TRADE_MSG        = 8,
	ESHOP_CONFIRM                  = 9,
	ESHOP_QUICK_EQUIP_CONFIRM      = 10,
	ESHOP_QUICK_EQUIPMENT          = 11,
	ESHOP_EQUIPMENT                = 12,
	ESHOP_INN                      = 13,
	ESHOP_CHANGE_MEMBER            = 14,
	ESHOP_STORY                    = 15,
	ESHOP_TOWN_RELATIONSHIP        = 16,
	ESHOP_LINER_SHIP               = 17,
	ESHOP_RECEIVE_GIFT             = 18,
	ESHOP_MAX                      = 19,
};

enum class ESHOPMENU_MODE : uint8
{
	EBUY                           = 0,
	ESELL                          = 1,
	EINN                           = 2,
	EEQUIP                         = 3,
	ECHANGE_MEMBER                 = 4,
	ESTORY                         = 5,
	ERELATIONSHIP                  = 6,
	EEXIT                          = 7,
	EEXIT_INN                      = 8,
	EEXIT_BAR                      = 9,
	ELINER_SHIP                    = 10,
	EANIMAL_BUY                    = 11,
	ERECEIVE_PRE_ORDER_GIFT        = 12,
	ERECIEVE_DLC_GIFT              = 13,
	ESHOPMENU_MAX                  = 14,
};

enum class ESHOP_CATEGORY_TYPE : uint8
{
	EAll                           = 0,
	EItem                          = 1,
	EWeapon                        = 2,
	EShield                        = 3,
	EArmor                         = 4,
	EHelmet                        = 5,
	EAccessory                     = 6,
	EMaterial                      = 7,
	EInfoItem                      = 8,
	ETreasure                      = 9,
	ESHOP_CATEGORY_MAX             = 10,
};

enum class ESHOP_TYPE : uint8
{
	WEAPON                         = 0,
	ITEM                           = 1,
	GENERAL                        = 2,
	INN                            = 3,
	BAR                            = 4,
	EX_BAR                         = 5,
	LINER_SHIP                     = 6,
	ANIMAL_ITEM                    = 7,
	ANIMAL_INN                     = 8,
	ESHOP_MAX                      = 9,
};

enum class ESKILL_INVOKE : uint8
{
	ENONE                          = 0,
	EPASSIVE                       = 1,
	EBATTLE                        = 2,
	EFIELD                         = 3,
	SKILL_MAX                      = 4,
};

enum class EKSAudioComponentType : uint8
{
	BGM_Common                     = 0,
	BGM_Interrupt                  = 1,
	SE                             = 2,
	SE_Env                         = 3,
	Voice                          = 4,
	SE_Battle                      = 5,
	Voice_Battle                   = 6,
	SE_Event                       = 7,
	EKSAudioComponentType_MAX      = 8,
};

enum class ESoundTableType : uint8
{
	ST_BGM                         = 0,
	ST_CUE_SHEET                   = 1,
	ST_SE                          = 2,
	ST_VOICE_JA                    = 3,
	ST_VOICE_EN                    = 4,
	ST_MAX                         = 5,
};

enum class ESPACT_MERCHANT_TYPE : uint8
{
	SPACT_MER_DUMMY                = 0,
	SPACT_MER_BUY_ITEM_LOW         = 1,
	SPACT_MER_BUY_ITEM_LOW_LOT     = 2,
	SPACT_MER_SELL_ITEM_HIGH       = 3,
	SPACT_MER_GET_ITEM_LOT         = 4,
	SPACT_MER_BUY_ITEM_LOW_HIGH    = 5,
	SPACT_MER_FARE_LOW             = 6,
	SPACT_MER_INN_LOW              = 7,
	SPACT_MER_BTL_CALL_MERCENARY   = 8,
	SPACT_MER_BTL_BRIBE            = 9,
	SPACT_MER_BTL_COLLECT_MONEY    = 10,
	SPACT_MER_BUY_ITEM_LOW_01      = 11,
	SPACT_MER_BUY_ITEM_LOW_02      = 12,
	SPACT_MER_BUY_ITEM_LOW_03      = 13,
	SPACT_MER_BUY_ITEM_LOW_04      = 25,
	SPACT_MER_BUY_ITEM_LOW_05      = 26,
	SPACT_MER_BUY_ITEM_LOW_06      = 27,
	SPACT_MER_BUY_ITEM_LOW_LOT_01  = 14,
	SPACT_MER_BUY_ITEM_LOW_LOT_02  = 15,
	SPACT_MER_SELL_ITEM_HIGH_01    = 16,
	SPACT_MER_SELL_ITEM_HIGH_02    = 17,
	SPACT_MER_SELL_ITEM_HIGH_03    = 18,
	SPACT_MER_BUY_ITEM_LOW_HIGH_01 = 19,
	SPACT_MER_INN_LOW_01           = 20,
	SPACT_MER_BTL_CALL_MERCENARY_01 = 21,
	SPACT_MER_BTL_CALL_MERCENARY_02 = 22,
	SPACT_MER_BTL_BRIBE_01         = 23,
	SPACT_MER_BTL_COLLECT_MONEY_01 = 24,
	SPACT_MER_MAX                  = 28,
};

enum class ESPACT_MER_RESULT_TYPE : uint8
{
	NONE                           = 0,
	SUCCESS                        = 1,
	FAILURE                        = 2,
	ESPACT_MER_RESULT_MAX          = 3,
};

enum class ESPACT_MER_TRIGGER_TYPE : uint8
{
	SHOP_BUY                       = 0,
	SHOP_SELL                      = 1,
	FC_PURCHASE                    = 2,
	INN                            = 3,
	LINER_SHIP                     = 4,
	BTL_MERCENARY                  = 5,
	BTL_BRIBE                      = 6,
	BTL_DRAIN_MONEY                = 7,
	ESPACT_MER_TRIGGER_MAX         = 8,
};

enum class ESPACT_MER_RESULT_PARAM_TYPE : uint8
{
	RESULT_NONE                    = 0,
	RESULT_LEAF                    = 1,
	RESULT_ITEM                    = 2,
	RESULT_MAX                     = 3,
};

enum class ESPACT_MER_DESC_PARAM_TYPE : uint8
{
	PARAM_NONE                     = 0,
	PARAM_INT_0                    = 1,
	PARAM_INT_1                    = 2,
	PARAM_INT_2                    = 3,
	PARAM_INT_3                    = 4,
	PARAM_ITEM_0                   = 5,
	PARAM_ITEM_1                   = 6,
	PARAM_ITEM_2                   = 7,
	PARAM_MAX                      = 8,
};

enum class ESpecialActionType : uint8
{
	ENONE                          = 0,
	EUSE_LEARN_ABILITY             = 1,
	ESPECIAL_ACTION_002            = 2,
	ECALL_SUPPORTER_HUN            = 3,
	ESPECIAL_ACTION_003            = 4,
	ESPECIAL_ACTION_004            = 5,
	ECALL_SUPPORTER_MER            = 6,
	ECALL_SUPPORTER_PRI            = 7,
	EPARTY_BUFF_IN_DAYTIME         = 8,
	ESPECIAL_ACTION_006            = 9,
	ESPECIAL_ACTION_007            = 10,
	EPARTY_BUFF_IN_NIGHT           = 11,
	ECALL_SUPPORTER_DAN            = 12,
	ESPECIAL_ACTION_009            = 13,
	ESPECIAL_ACTION_010            = 14,
	EGOD_POWER                     = 15,
	EENEMY_DEBUFF_IN_NIGHT         = 16,
	EUSE_SESSION_SUPPORT           = 17,
	EUSE_BUSINESS_SUPPORT          = 18,
	ESpecialActionType_MAX         = 19,
};

enum class ECreditFadeState : uint8
{
	NONE                           = 0,
	HIDDEN                         = 1,
	WIPE_IN                        = 2,
	SHOW                           = 3,
	WIPE_OUT                       = 4,
	ECreditFadeState_MAX           = 5,
};

enum class ECreditBgType : uint8
{
	BLACK_MASK                     = 0,
	EVENT_IMAGE                    = 1,
	FOR_BATTLE                     = 2,
	ECreditBgType_MAX              = 3,
};

enum class ECreditFontSize : uint8
{
	SMALL                          = 0,
	MIDDLE                         = 1,
	LARGE                          = 2,
	ECreditFontSize_MAX            = 3,
};

enum class ECreditFontType : uint8
{
	NORMAL                         = 0,
	TITLE                          = 1,
	ECreditFontType_MAX            = 2,
};

enum class ECreditFontColor : uint8
{
	COLOR_A                        = 0,
	COLOR_B                        = 1,
	COLOR_MAX                      = 2,
};

enum class ECreditAlignment : uint8
{
	CENTER                         = 0,
	LEFT                           = 1,
	RIGHT                          = 2,
	LEFT_RIGHT                     = 3,
	ECreditAlignment_MAX           = 4,
};

enum class ECreditWidgetStyle : uint8
{
	NO_STYLE                       = 0,
	TEXT_TITLE                     = 1,
	TEXT_SUBTITLE                  = 2,
	TEXT_SUBTITLE_2                = 3,
	TEXT_COL_1                     = 4,
	TEXT_COL_2                     = 5,
	IMAGE                          = 6,
	SPACE                          = 7,
	LINE_1                         = 8,
	LINE_2                         = 9,
	TEXT_COL_1_1                   = 10,
	TEXT_COL_2_1                   = 11,
	LINE_3                         = 12,
	ECreditWidgetStyle_MAX         = 13,
};

enum class ECreditWidgetType : uint8
{
	NONE                           = 0,
	TEXT_SCROLL                    = 1,
	IMAGE_SCROLL                   = 2,
	IMAGE_DISOLVE                  = 3,
	SPACE                          = 4,
	ECreditWidgetType_MAX          = 5,
};

enum class EStaffCreditRunningState : uint8
{
	NONE                           = 0,
	SCROLL                         = 1,
	TO_DISOLVE                     = 2,
	DISOLVE                        = 3,
	END                            = 4,
	EStaffCreditRunningState_MAX   = 5,
};

enum class EStaffCreditState : uint8
{
	NONE                           = 0,
	INIT                           = 1,
	INIT_WAIT                      = 2,
	START_WAIT                     = 3,
	RUNNING                        = 4,
	END                            = 5,
	EStaffCreditState_MAX          = 6,
};

enum class EStaffCreditStyle : uint8
{
	NO_STYLE                       = 0,
	TEXT_TITLE                     = 1,
	TEXT_SUBTITLE                  = 2,
	TEXT_SUBTITLE_2                = 3,
	TEXT_COL_1                     = 4,
	TEXT_COL_2                     = 5,
	IMAGE                          = 6,
	SPACE                          = 7,
	LINE_1                         = 8,
	LINE_2                         = 9,
	TEXT_COL_1_1                   = 10,
	TEXT_COL_2_1                   = 11,
	LINE_3                         = 12,
	EStaffCreditStyle_MAX          = 13,
};

enum class EPRIORITY : uint8
{
	ENONE                          = 0,
	ELOW                           = 1,
	EMIDDLE                        = 2,
	EHIGH                          = 3,
	EPRIORITY_MAX                  = 4,
};

enum class EStateMachineAction : uint8
{
	ENTRY                          = 0,
	UPDATE                         = 1,
	EXIT                           = 2,
	EStateMachineAction_MAX        = 3,
};

enum class ESUB_STORY_STATE : uint8
{
	NO_PLAY                        = 0,
	PLAYING                        = 1,
	COMPLETE                       = 2,
	ESUB_STORY_MAX                 = 3,
};

enum class ESUB_STORY_CATEGORY : uint8
{
	NONE                           = 0,
	COMMON                         = 1,
	MERCHANT                       = 2,
	ESUB_STORY_MAX                 = 3,
};

enum class ESTORY_TASK_TYPE : uint8
{
	NONE                           = 0,
	NORMAL                         = 1,
	SUB                            = 2,
	INTERLUDE                      = 3,
	ESTORY_TASK_MAX                = 4,
};

enum class EEXTRA_STORY_CATEGORY : uint8
{
	NONE                           = 0,
	CPL_GAK_SHO                    = 1,
	CPL_KUS_KAR                    = 2,
	CPL_ODO_KEN                    = 3,
	CPL_SIN_TOU                    = 4,
	FINAL                          = 5,
	MAX_NUM                        = 6,
	EEXTRA_STORY_MAX               = 7,
};

enum class EMAIN_STORY_CATEGORY : uint8
{
	NONE                           = 0,
	COMMON                         = 1,
	CHARA_PROLOGUE                 = 2,
	CHARA_FINAL                    = 3,
	COUPLING                       = 4,
	OVERALL_FINAL                  = 5,
	EPILOGUE                       = 6,
	MERCHANT                       = 7,
	EXTRA                          = 8,
	EMAIN_STORY_MAX                = 9,
};

enum class EStoryState : uint8
{
	UNRELEASED                     = 0,
	RELEASED                       = 1,
	PLAYING                        = 2,
	INTERRUPTION                   = 3,
	TEMP_COMPLETED                 = 4,
	COMPLETED                      = 5,
	SEALED                         = 6,
	HALF_SEALED                    = 7,
	EStoryState_MAX                = 8,
};

enum class ESUB_TITLE_STATE : uint8
{
	ENONE                          = 0,
	EOPEN                          = 1,
	EPLAY_SUBTITLE                 = 2,
	ECLOSE                         = 3,
	EFINISH                        = 4,
	ESUB_TITLE_MAX                 = 5,
};

enum class ESUPPORT_AILMENT_TYPE : uint8
{
	ENONE                          = 0,
	EENCOUNT_DOWN                  = 1,
	EATK_BUFF_ON_BREAK             = 2,
	ESP_RECOVERY_ON_BREAK          = 3,
	ESP_RECOVERY_ON_DAMAGE         = 4,
	EGET_POTENTIALITY_POINT_UP     = 5,
	EDAMAGE_LIMIT_OVER             = 6,
	EENCOUNT_RARE_MONSTER_UP       = 7,
	EHIDE_OUT_ON_REVIVE            = 8,
	ERECOVERY_HP_UP                = 9,
	ERECOVERY_HP_SP_ON_BATTLE_END  = 10,
	EPOTENTIALITY_POINT_MAX_ON_BATTLE_START = 11,
	EEVASION_UP                    = 12,
	ECRITICAL_UP_TO_BREAK          = 13,
	EDAMAGE_UP_WITH_FULL_HP        = 14,
	EDEBUFF_RECOVERY_COUNT_UP      = 15,
	EACCESSORY_UP                  = 16,
	EBP_PLUS_ON_PINCH              = 17,
	ESUPER_MAGIC_ON_BATTLE_START   = 18,
	EPOTENTIALITY_POINT_UP_ON_WEEK_ATTACK = 19,
	EGET_BACK_BP                   = 20,
	EBUFF_MEMORY_ON_DEAD           = 21,
	ECOMPENSATION_MAGIC            = 22,
	EPARAMETER_UP_ATK              = 23,
	EPARAMETER_UP_AGI              = 24,
	EPARAMETER_UP_HPMAX            = 25,
	EPARAMETER_UP_MATK             = 26,
	EPARAMETER_UP_CON              = 27,
	EPARAMETER_UP_SPMAX            = 28,
	ERESULT_MONEY_UP               = 29,
	ERESULT_EXP_UP                 = 30,
	ERESULT_JP_UP                  = 31,
	EBP_PLUS_ON_BATTLE_START       = 32,
	EHOLD_OUT_ON_DEAD              = 33,
	ECHASE_ATTACK                  = 34,
	EADVANTAGE_BATTLE_UP           = 35,
	EBREAK_ACT                     = 36,
	EESCAPE_SUCCESS_UP             = 37,
	ERERAISE                       = 38,
	EBUFF_TURN_COUNT_PLUS          = 39,
	ESP_COST_DOWN                  = 40,
	EDEBUFF_COUNTER_ON_DAMAGE      = 41,
	EDEBUFF_COUNTER_ON_DEAD        = 42,
	EHIGHER_PARAMTER_COPY_ATKMATK  = 43,
	EADD_BATTLE_FIRST_ACTION       = 44,
	EBUFF_PREVENTION               = 45,
	EEXCITEMENT                    = 46,
	EHP_RECOVERY_ON_BREAK          = 47,
	EBUFF_ABILITY_NUM              = 48,
	EMAGIC_BUFF_COUNT_PLUS         = 49,
	ERESULT_EXPJP_UP_IN_NIGHT      = 50,
	ESUPPORT_AILMENT_MAX           = 51,
};

enum class ESWITCH_INDOOR_TENPLATE_TYPE : uint8
{
	EMANUAL                        = 0,
	EBASIC                         = 1,
	ECROSS_FLOOR                   = 2,
	ESAME_FLOOR                    = 3,
	EOUTDOOR                       = 4,
	EMANSION                       = 5,
	ESWITCH_INDOOR_TENPLATE_MAX    = 6,
};

enum class ESWITCH_INDOOR_ANIM_STATE : uint8
{
	NONE                           = 0,
	INDOOR                         = 1,
	OUTDOOR                        = 2,
	ESWITCH_INDOOR_ANIM_MAX        = 3,
};

enum class EDIALOG_TEXT_TYPE : uint8
{
	EDIALOG_TEXT_YESNO             = 0,
	EDIALOG_TEXT_YES               = 1,
	EDIALOG_TEXT_OK                = 2,
	EDIALOG_TEXT_CANCEL            = 3,
	EDIALOG_TEXT_CLOSE             = 4,
	EDIALOG_TEXT_MAX               = 5,
};

enum class ETIMEZONE_TRIGGER_TYPE : uint8
{
	None                           = 0,
	EDAYTIME                       = 1,
	ENIGHT                         = 2,
	EALL                           = 3,
	EMORNING                       = 4,
	EEVENING                       = 5,
	ETIMEZONE_TRIGGER_MAX          = 6,
};

enum class ETimeZoneObjectType : uint8
{
	ENONE                          = 0,
	ELIGHT                         = 1,
	EEMITTER                       = 2,
	ESOUND                         = 3,
	ETimeZoneObjectType_MAX        = 4,
};

enum class ETimeZoneType : uint8
{
	NONE                           = 0,
	MORNING                        = 1,
	DAYTIME                        = 2,
	EVENING                        = 3,
	NIGHT                          = 4,
	MAX                            = 5,
};

enum class ETitleMovieState : uint8
{
	EWaiting                       = 0,
	EOnFirstPlay                   = 1,
	EOnResumePlay                  = 2,
	ESeeking                       = 3,
	EPreparing                     = 4,
	EPlaying                       = 5,
	EStopProcessing                = 6,
	ELoopEnd                       = 7,
	ETitleMovieState_MAX           = 8,
};

enum class ETRANSPORTATION_TYPE : uint8
{
	NORMAL                         = 0,
	SHIP                           = 1,
	ETRANSPORTATION_MAX            = 2,
};

enum class ETutorialAutoCaptureActorState : uint8
{
	None                           = 0,
	Initialize                     = 1,
	PreCapture                     = 2,
	Capture                        = 3,
	PostCapture                    = 4,
	Finalize                       = 5,
	ETutorialAutoCaptureActorState_MAX = 6,
};

enum class ETUTORIAL_SEQ : uint8
{
	ENONE                          = 0,
	ESHOW                          = 1,
	ECHANGE                        = 2,
	EFADE_WAIT                     = 3,
	ETUTORIAL_MAX                  = 4,
};

enum class ETutorialCanDisplayFlag : uint8
{
	NONE                           = 0,
	BLANCH_MAIN_STORY_FENCER       = 1,
	BLANCH_MAIN_STORY_HUNTER       = 2,
	BLANCH_MAIN_STORY_ALCHEMIST    = 4,
	BLANCH_MAIN_STORY_MERCHANT     = 8,
	BLANCH_MAIN_STORY_PRIEST       = 16,
	BLANCH_MAIN_STORY_PROFESSOR    = 32,
	BLANCH_MAIN_STORY_THIEF        = 64,
	BLANCH_MAIN_STORY_DANCER       = 128,
	SUB_STORY_MERCHANT             = 256,
	MAIN_STORY_COUPLING_GAK        = 512,
	MAIN_STORY_COUPLING_ODO        = 1024,
	MAIN_STORY_COUPLING_SIN        = 2048,
	MAIN_STORY_COUPLING_KUS        = 4096,
	PROLOUGE_CLEAR                 = 8192,
	ETutorialCanDisplayFlag_MAX    = 8193,
};

enum class EINNER_SEQUENCE : uint8
{
	INIT                           = 0,
	FADE_OUT                       = 1,
	FADE_IN                        = 2,
	EINNER_MAX                     = 3,
};

enum class EFlashbackSequence : uint8
{
	INIT                           = 0,
	START                          = 1,
	FINISH                         = 2,
	EFlashbackSequence_MAX         = 3,
};

enum class EUI_INPUT_TYPE : uint8
{
	EDECIDE                        = 0,
	ECANCEL                        = 1,
	ECURSOR_UP                     = 2,
	ECURSOR_DOWN                   = 3,
	ECURSOR_RIGHT                  = 4,
	ECURSOR_LEFT                   = 5,
	EBUTTON_X                      = 6,
	EBUTTON_Y                      = 7,
	EPLUS_BUTTON                   = 8,
	EMINUS_BUTTON                  = 9,
	ELB                            = 10,
	ERB                            = 11,
	EL_STICK_BUTTON                = 12,
	ER_STICK_BUTTON                = 13,
	EUI_INPUT_MAX                  = 14,
};

enum class EPARTNER_SELECT_SEQ : uint8
{
	ENONE                          = 0,
	EOPEN_PROCESS                  = 1,
	EDIALOG_RUNNING                = 2,
	ECLOSE_SELF                    = 3,
	EWAIT                          = 4,
	EPARTNER_SELECT_MAX            = 5,
};

enum class EWIDGET_CREATE_PHASE : uint8
{
	NONE                           = 0,
	FIRST                          = 1,
	IN_GAME                        = 2,
	TEMPORARY                      = 3,
	DEPRECATED                     = 4,
	EWIDGET_CREATE_MAX             = 5,
};

enum class EVibrationPower : uint8
{
	LOW                            = 0,
	MID                            = 1,
	HIGH                           = 2,
	EVibrationPower_MAX            = 3,
};

enum class EWEAPON_STANCE : uint8
{
	NONE                           = 0,
	MALE                           = 1,
	MALE_LARGE                     = 2,
	FEMALE                         = 3,
	EWEAPON_MAX                    = 4,
};

enum class EWIDGET_TEMPORARY_HIDE_USER : uint8
{
	EOther                         = 0,
	EFieldCommand                  = 1,
	ETreasureBox                   = 2,
	EShop                          = 3,
	EBattle                        = 4,
	EEvent                         = 5,
	EPartyChat                     = 6,
	EMainMenu                      = 7,
	ESaveLoad                      = 8,
	EStoryNotification             = 9,
	EMapNotification               = 10,
	EDialog                        = 11,
	EPartySplit                    = 12,
	EWIDGET_TEMPORARY_HIDE_MAX     = 13,
};

enum class EJudgeFastTravelAvailableResponse : uint8
{
	Available                      = 0,
	UnAvailable_OpenDialog         = 1,
	UnAvailable_NoOpenDialog       = 2,
	EJudgeFastTravelAvailableResponse_MAX = 3,
};

enum class EWorldMapIconType : uint8
{
	ENONE                          = 0,
	ETOWN                          = 1,
	ETown_GUILD                    = 2,
	ETOWN_PORT                     = 3,
	ECITY                          = 4,
	ECITY_PORT                     = 5,
	ECITY_GUILD                    = 6,
	EVILLAGE                       = 7,
	EVILLAGE_PORT                  = 8,
	EVILLAGE_GUILD                 = 9,
	EFIELD                         = 40,
	EFIELD_GUILD                   = 41,
	EFIELD_PORT                    = 42,
	EDUNGEON_CAVE                  = 80,
	EDUNGEON_FOREST                = 81,
	EDUNGEON_RUIN                  = 82,
	EDUNGEON_UNDERGROUND           = 83,
	EDUNGEON_MANSION               = 84,
	EDUNGEON_JOB                   = 85,
	EDUNGEON_SHIP                  = 86,
	EDUNGEON_MOUNTAIN              = 87,
	ECATHEDRAL                     = 150,
	ESHIP                          = 151,
	EWorldMapIconType_MAX          = 152,
};

enum class EWorldMapIslandLayerArea : uint8
{
	ENONE                          = 0,
	EISLAND_LAYER_01               = 1,
	EISLAND_LAYER_02               = 2,
	EISLAND_LAYER_03               = 3,
	EISLAND_LAYER_04               = 4,
	EISLAND_LAYER_05               = 5,
	EISLAND_LAYER_06               = 6,
	EISLAND_LAYER_07               = 7,
	EISLAND_LAYER_08               = 8,
	EISLAND_LAYER_09               = 9,
	EWorldMapIslandLayerArea_MAX   = 10,
};

enum class EWorldMapMaskArea : uint8
{
	ENONE                          = 0,
	ESNOW_INNER                    = 1,
	ESNOW_MIDDLE                   = 2,
	ESNOW_OUTER                    = 3,
	ECITY_INNER                    = 4,
	ECITY_MIDDLE_1                 = 5,
	ECITY_MIDDLE_2                 = 6,
	ECITY_OUTER                    = 7,
	ESEA_INNER                     = 8,
	ESEA_MIDDLE                    = 9,
	ESEA_OUTER                     = 10,
	EMOUNTAIN_INNER                = 11,
	EMOUNTAIN_MIDDLE               = 12,
	EMOUNTAIN_OUTER                = 13,
	EDESERT_INNER                  = 14,
	EDESERT_MIDDLE                 = 15,
	EDESERT_OUTER                  = 16,
	EISLAND_INNER                  = 17,
	EISLAND_MIDDLE                 = 18,
	EISLAND_OUTER_1                = 19,
	EISLAND_OUTER_2                = 20,
	EWILDERNESS_INNER              = 21,
	EWILDERNESS_MIDDLE             = 22,
	EWILDERNESS_OUTER              = 23,
	EFOREST_INNER                  = 24,
	EFOREST_MIDDLE                 = 25,
	EFOREST_OUTER_1                = 26,
	EFOREST_OUTER_2                = 27,
	EWorldMapMaskArea_MAX          = 28,
};

enum class EWorldMapPrologueMaskArea : uint8
{
	ENONE                          = 0,
	EDESERT_PROLOGUE               = 1,
	ESNOW_PROLOGUE                 = 2,
	EWorldMapPrologueMaskArea_MAX  = 3,
};


//---------------------------------------------------------------------------------------------------------------------
// STRUCTS
//---------------------------------------------------------------------------------------------------------------------

// 0x20 (0x20 - 0x0)
// ScriptStruct Majesty.NoticeArgs
struct FNoticeArgs
{
public:
	int32                                        IntParam0;                                         // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NameParam0;                                        // 0x4(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F3D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                IntParams;                                         // 0x10(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct Majesty.DebugListMenuItem
struct FDebugListMenuItem
{
public:
	uint8                                        Pad_1F3E[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.WidgetAnimationGroupData
struct FWidgetAnimationGroupData
{
public:
	TArray<class UWidgetAnimation*>              Animations;                                        // 0x0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.AcqListViewWidgetEventPayload
struct FAcqListViewWidgetEventPayload
{
public:
	int32                                        SelectedIndex;                                     // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F3F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAcqListViewEntryItemBase*             SelectedEntryItem;                                 // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct Majesty.WorldMapDarkAreaEffectParam
struct FWorldMapDarkAreaEffectParam : public FTableRowBase
{
public:
	class FName                                  WorldMapLabel;                                     // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DarkAreaLabel;                                     // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWorldMapEffectType               EffectType;                                        // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F40[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LocationOffset;                                    // 0x1C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RotationOffset;                                    // 0x28(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               ScaleOffset;                                       // 0x34(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.VectorsToIcon
struct FVectorsToIcon
{
public:
	struct FVector2D                             BetweenIconAndCursor;                              // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BetweenIconAndAreaLabel;                           // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct Majesty.OnClosedPartySplitParam
struct FOnClosedPartySplitParam
{
public:
	TMap<enum class EPlayableCharacterID, enum class EPARTY_SPLIT_PLACEMENT_POSITION> PlacementResult;                                   // 0x0(0x50)(BlueprintVisible, NativeAccessSpecifierPublic)
	enum class EPARTY_SPLIT_CLOSE_REASON         CloseReason;                                       // 0x50(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F41[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct Majesty.AilmentHandler
struct FAilmentHandler
{
public:
	class FName                                  AilmentName;                                       // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InvocationValue;                                   // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InvocationTurn;                                    // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DiseaseRate;                                       // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xE8 (0xF0 - 0x8)
// ScriptStruct Majesty.AbilityDataBase
struct FAbilityDataBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AbilityID;                                         // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DisplayName;                                       // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Detail;                                            // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActionCommandBase>      CommandActor;                                      // 0x20(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EABILITY_TYPE                     AbilityType;                                       // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EABILITY_USE_TYPE                 AbilityUseType;                                    // 0x49(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AlwaysDisable;                                     // 0x4A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EATTRIBUTE_TYPE                   Attribute;                                         // 0x4B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DependWeapon;                                      // 0x4C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWEAPON_CATEGORY                  RestrictWeapon;                                    // 0x4D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBATTLE_TARGET_TYPE               TargetType;                                        // 0x4E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ExceptEnforcer;                                    // 0x4F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EABILITY_COST_TYPE                CostType;                                          // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F42[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CostValue;                                         // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HitRatio;                                          // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CriticalRatio;                                     // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CriticalPower;                                     // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AbilityRatio;                                      // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BaseCount;                                         // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinimumCount;                                      // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RandomCountMin;                                    // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RandomCountMax;                                    // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBATTLE_ACTION_ORDER_ESTIMATE_TYPE EstimateOrderType;                                 // 0x78(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F43[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        EstimateOrderCount;                                // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAilmentHandler>               Ailment;                                           // 0x80(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         KeepBoostEffect;                                   // 0x90(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableItemAll;                                     // 0x91(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableSkillAll;                                    // 0x92(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableConvergence;                                 // 0x93(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableDiffusion;                                   // 0x94(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableReflection;                                  // 0x95(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableCounter;                                     // 0x96(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableHideOut;                                     // 0x97(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableRepeat;                                      // 0x98(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableCover;                                       // 0x99(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableProvoke;                                     // 0x9A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableDisableMagic;                                // 0x9B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableEnchant;                                     // 0x9C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableChaseAttack;                                 // 0x9D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableWeakCheckAll;                                // 0x9E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableNormalAttackAll;                             // 0x9F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableSession;                                     // 0xA0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableBusinessSupport;                             // 0xA1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableForceWeakness;                               // 0xA2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableNoUseMaterial;                               // 0xA3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableSwitchWeapon;                                // 0xA4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableCompensationMagic;                           // 0xA5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableExcitement;                                  // 0xA6(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SongAbilityFlag;                                   // 0xA7(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DanceAbilityFlag;                                  // 0xA8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableAutoTameMonster;                             // 0xA9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseAbilityCamera;                                  // 0xAA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F44[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class ULevelSequence>         ActionCommandSequencer;                            // 0xB0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          AbilitySE;                                         // 0xD8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        SlideFrame;                                        // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F45[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x68 - 0x8)
// ScriptStruct Majesty.AbilitySetDataBase
struct FAbilitySetDataBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AbilitySetID;                                      // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NoBoost;                                           // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BoostLv1;                                          // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BoostLv2;                                          // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BoostLv3;                                          // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECOMMAND_MENU_TYPE                MenuType;                                          // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECOMMAND_SUB_MENU_TYPE            SubMenuType;                                       // 0x31(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EABILITY_ICON_TYPE                MenuIconType;                                      // 0x32(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F46[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MenuInfoLv;                                        // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SuperMagicLabel;                                   // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HyperMagicLabel;                                   // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RestrictWeaponLabel;                               // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDivineAbility;                                   // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F47[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InventorTurn;                                      // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                 CommandSealingSwitch;                              // 0x58(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x58 (0x60 - 0x8)
// ScriptStruct Majesty.AchievementData
struct FAchievementData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAchievementType                  AchievementType;                                   // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F48[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        IntParam;                                          // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NameParam;                                         // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F49[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                IntParams;                                         // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          NameParams;                                        // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsPlatinumAchievement;                             // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F4A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Key_PS4;                                           // 0x44(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  Key_PS5;                                           // 0x4C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  Key_Steam;                                         // 0x54(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F4B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xD0 (0xD0 - 0x0)
// ScriptStruct Majesty.AchievementSaveData
struct FAchievementSaveData
{
public:
	TMap<enum class EMJFieldCommandType, int32>  FieldCommandSuccessCount;                          // 0x0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<int32>                                SwoonNpcUniqueIds;                                 // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        LinerShipCount;                                    // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F4C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EBOOST_LEVEL, int32>         BosstAttackCount;                                  // 0x68(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        BreakCount;                                        // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxDamageValue;                                    // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AcquisitionAbilityCount;                           // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AcquisitionAdvancedAbilityCount;                   // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AcquisitionDevineAbilityCount;                     // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F4D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.AchievementTypeData
struct FAchievementTypeData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F4E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          ExcludeEnemyGroups;                                // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.MateriaTextureLabel
struct FMateriaTextureLabel
{
public:
	class FName                                  Acq_LabelForRuntime_AutoFill;                      // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Acq_LabelForRuntime;                               // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x50 - 0x8)
// ScriptStruct Majesty.AcqManagerData
struct FAcqManagerData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F4F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                BaseClassPath;                                     // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                InstancePath;                                      // 0x20(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMANAGER_CREATE_PHASE             CreatePhase;                                       // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F50[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct Majesty.BattleAdditiveOrderData
struct FBattleAdditiveOrderData
{
public:
	enum class EADDITIVE_ORDER_TYPE              M_eOrderType;                                      // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F51[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ABattleCharacterBase*                  M_cOrderEnforcer;                                  // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ABattleCharacterBase*>          M_acTarget;                                        // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  M_strExecAbilityName;                              // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  M_strExecAilmentName;                              // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EATTRIBUTE_TYPE                   M_eAttributeType;                                  // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F52[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        M_nAddValue01;                                     // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.RequestActionOrderData
struct FRequestActionOrderData
{
public:
	enum class EACTION_ORDER_TYPE                M_eOrderType;                                      // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F53[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        M_fDelayRatio;                                     // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         M_bUseIcon;                                        // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F54[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct Majesty.ActionOrderData
struct FActionOrderData
{
public:
	enum class EACTION_ORDER_TYPE                M_eOrderType;                                      // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F55[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        M_fDelayRatio;                                     // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActionOrderIcon*                      M_cCurrentOrderIcon;                               // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActionOrderIcon*                      M_cNextOrderIcon_DEPLICATED;                       // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABattleCharacterBase*                  M_cOrderCharacter;                                 // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABattleCharacterBase*                  M_cSubOrderCharacter;                              // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         M_bUseIcon;                                        // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F56[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        M_nCurrentIndex;                                   // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        M_nNextIndex;                                      // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        M_nOrderCount;                                     // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         M_bIsOrderChange;                                  // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         M_bIsOrderBuff;                                    // 0x39(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         M_bSaved_IsOrderChange;                            // 0x3A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F57[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.ActivityData
struct FActivityData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TitleText;                                         // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F58[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.ActivitySubTaskData
struct FActivitySubTaskData
{
public:
	class FName                                  SubTaskLabel;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MainStoryLabel;                                    // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.ActivityTaskData
struct FActivityTaskData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActivityLabelId;                                   // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FActivitySubTaskData>          SubTaskData;                                       // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.AdvancedAbility
struct FAdvancedAbility
{
public:
	class FName                                  AbilityID;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HiddenText;                                        // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA8 - 0x8)
// ScriptStruct Majesty.AilmentDataBase
struct FAilmentDataBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F59[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AilmentType;                                       // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Target;                                            // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CalcType;                                          // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Attribute;                                         // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DiseaseRatio;                                      // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F5A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TargetDiseaseType;                                 // 0x58(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TargetDiseaseName;                                 // 0x68(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FieldDiseaseType;                                  // 0x78(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OrderChangeType;                                   // 0x88(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AdvValue1;                                         // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AdvValue2;                                         // 0x9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AdvValue3;                                         // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AdvValue4;                                         // 0xA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct Majesty.AISACCtrlParam
struct FAISACCtrlParam
{
public:
	class FString                                AISACName;                                         // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FVolume;                                           // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F5B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x30 - 0x8)
// ScriptStruct Majesty.AreaInfoData
struct FAreaInfoData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MiddleTownIconID;                                  // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AreaNameID;                                        // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AreaNameID_ForMissionRecord;                       // 0x1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AreaEmblemID;                                      // 0x24(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F5C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x60 - 0x8)
// ScriptStruct Majesty.TalkText
struct FTalkText : public FTableRowBase
{
public:
	enum class EBalloonType                      Type;                                              // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F5D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<bool>                                 Reset;                                             // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                Height;                                            // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                Width;                                             // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          Names;                                             // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        Text;                                              // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct Majesty.AddBalloonParam
struct FAddBalloonParam
{
public:
	struct FTalkText                             Text;                                              // 0x0(0x60)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<class FName>                          VoiceLabel;                                        // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class AActor*                                TargetActor;                                       // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             Offset;                                            // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableTail;                                        // 0x80(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F5E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             UnderOffset;                                       // 0x84(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEventBalloonDir                  BalloonDir;                                        // 0x8C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F5F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BalloonOffsetScale;                                // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBALLOON_TEXT_POS                 TextPosition;                                      // 0x94(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableCustomFadeTime;                              // 0x95(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F60[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FadeOutTime;                                       // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F61[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x70 - 0x0)
// ScriptStruct Majesty.BarMenuStoryItem
struct FBarMenuStoryItem
{
public:
	int32                                        CharacterID;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F62[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EPlayableCharacterID>      RelationCharaId;                                   // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        Chapter;                                           // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F63[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ChapterText;                                       // 0x20(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  SubTitleText;                                      // 0x38(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                  DetailLabel;                                       // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEnable;                                          // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBARMENU_STORY_PROGRESSTYPE       ProgressType;                                      // 0x59(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBARMENU_STORY_SELECT_ITEM_TYPE   ItemType;                                          // 0x5A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F64[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  StartEvent;                                        // 0x5C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RecommandationLV;                                  // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NewFlag;                                           // 0x68(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F65[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MainStoryId;                                       // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct Majesty.BarTalkDefine
struct FBarTalkDefine : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F66[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          ItemEventList;                                     // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          NormalEventList;                                   // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.BattleAICommandData
struct FBattleAICommandData : public FTableRowBase
{
public:
	class FName                                  M_strCommandname;                                  // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        M_nRate;                                           // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F67[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct Majesty.WeaponTexutreUnloadManage
struct FWeaponTexutreUnloadManage
{
public:
	TArray<class FName>                          M_strLoadWeaponLabel;                              // 0x0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          M_strUnLoadWaitWeaponLabel;                        // 0x10(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EWEAPON_UNLOAD_GC_TYPE            M_eUnlaodGCType;                                   // 0x20(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        M_uUnloadWeaponCnt;                                // 0x21(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        M_uUnloadWeaponCntMax;                             // 0x22(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F68[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x80 (0x88 - 0x8)
// ScriptStruct Majesty.DebugBattleLog
struct FDebugBattleLog : public FTableRowBase
{
public:
	int32                                        M_nIndex;                                          // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDEBUG_BATTLE_LOG_CATEGORY        M_eCategory;                                       // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F69[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  M_strTitle;                                        // 0x10(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  M_strIssuer;                                       // 0x28(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  M_strComment;                                      // 0x40(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  M_strDetail;                                       // 0x58(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  M_astrTagList;                                     // 0x70(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct Majesty.EncountFlagStartEndData
struct FEncountFlagStartEndData
{
public:
	class FName                                  EncountTriggerLabel;                               // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                StartFlag;                                         // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                EndFlag;                                           // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.EncountFlagData
struct FEncountFlagData
{
public:
	class FName                                  EncountTriggerLabel;                               // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventFlag;                                         // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x48 - 0x8)
// ScriptStruct Majesty.BattleCameraInitData
struct FBattleCameraInitData : public FTableRowBase
{
public:
	struct FVector                               DefaultPosition;                                   // 0x8(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              DafaultRotate;                                     // 0x14(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               StartPosition;                                     // 0x20(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              StartRotate;                                       // 0x2C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        FieldOfView;                                       // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ManualFocusDistance;                               // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentFocalLength;                                // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentAperture;                                   // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.BattleEncountData
struct FBattleEncountData : public FTableRowBase
{
public:
	class FName                                  GroupID;                                           // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Appearance;                                        // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F6A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x70 - 0x8)
// ScriptStruct Majesty.BattleVoiceSetData
struct FBattleVoiceSetData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBATTLE_VOICE_TYPE                BattleVoiceType;                                   // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TargetSelf;                                        // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F6B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TargetID;                                          // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  InvadeID;                                          // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SupporterID;                                       // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyID;                                           // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyGroupID;                                      // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDISEASE_CATEGORY                 DiseaseCategory;                                   // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F6C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AbilityID;                                         // 0x3C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventFlag;                                         // 0x44(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BossFlag;                                          // 0x4C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FieldCommandFlag;                                  // 0x4D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PinchFlag;                                         // 0x4E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         JustBreakFlag;                                     // 0x4F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CounterFlag;                                       // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SongFlag;                                          // 0x51(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DanceFlag;                                         // 0x52(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         MeatFlag;                                          // 0x53(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Border;                                            // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PlayOnce;                                          // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F6D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        VoiceRate;                                         // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Priority;                                          // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  VoiceLabel;                                        // 0x64(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F6E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.BattleVoiceDataList
struct FBattleVoiceDataList : public FTableRowBase
{
public:
	enum class EBATTLE_VOICE_TYPE                M_eBattleVoiceType;                                // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F6F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FBattleVoiceSetData>           M_acBattleVoiceData;                               // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.BattleVoiceSetList
struct FBattleVoiceSetList : public FTableRowBase
{
public:
	class FName                                  M_strCharacterID;                                  // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          M_astrBattleVoiceLabel;                            // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.BattleEncounterBase
struct FBattleEncounterBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FirstEncount;                                      // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBattleEncountData>            Group;                                             // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.BattlePlacementListBase
struct FBattlePlacementListBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Placement;                                         // 0xC(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Priority;                                          // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F70[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.BattlePlacementTypeBase
struct FBattlePlacementTypeBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBATTLE_CAMERA_TYPE               CameraType;                                        // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F71[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          Placement;                                         // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x120 (0x128 - 0x8)
// ScriptStruct Majesty.BattleReplayData
struct FBattleReplayData : public FTableRowBase
{
public:
	bool                                         Enable;                                            // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F72[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                PlayerID;                                          // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                PlayerJob;                                         // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVector>                       PlayerPos;                                         // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                PlayerDisease;                                     // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                PlayerStatus;                                      // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                PlayerWeapon;                                      // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        MasqueradeTargetID;                                // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MasqueradeJobID;                                   // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                EnemyID;                                           // 0x78(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVector>                       EnemyPos;                                          // 0x88(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                EnemyDisease;                                      // 0x98(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                EnemyDiseaseParam;                                 // 0xA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                EnemyStatus;                                       // 0xB8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                EnemyActionMode;                                   // 0xC8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                SupportID;                                         // 0xD8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                SupportStatus;                                     // 0xE8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        ActionID;                                          // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActionEnforcer;                                    // 0xFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PotentialityActionStatus;                          // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActionTarget;                                      // 0x104(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                ActionParam;                                       // 0x108(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        FieldStatus;                                       // 0x118(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FinishType;                                        // 0x11C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CameraType;                                        // 0x120(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F73[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x40 - 0x8)
// ScriptStruct Majesty.BattleSupportCharaInfoData
struct FBattleSupportCharaInfoData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HP;                                                // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PhysicalAttack;                                    // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MagicalPower;                                      // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PhysicalDefense;                                   // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MagicDefense;                                      // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HitRate;                                           // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EvasionRate;                                       // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActionSpeed;                                       // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AttackActionRate;                                  // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ProtectActionRate;                                 // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SuccessRate;                                       // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RelationDecrease;                                  // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F74[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.BattleResultItemDropData
struct FBattleResultItemDropData : public FTableRowBase
{
public:
	class FName                                  ItemId;                                            // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Num;                                               // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F75[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.ShieldChangeData
struct FShieldChangeData : public FTableRowBase
{
public:
	int32                                        M_nShieldPointMax;                                 // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  M_strInfomationText;                               // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F76[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.WeakChangeData
struct FWeakChangeData : public FTableRowBase
{
public:
	int32                                        M_eWeakAttributeType;                              // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  M_strInfomationText;                               // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F77[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.WeakLockData
struct FWeakLockData : public FTableRowBase
{
public:
	int32                                        M_eWeakLockType;                                   // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  M_strInfomationText;                               // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F78[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x50 - 0x8)
// ScriptStruct Majesty.BgmInfoData
struct FBgmInfoData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F79[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Label;                                             // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CueSheetName;                                      // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundAtomCue>          Asset;                                             // 0x28(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct Majesty.BitFlagDefine
struct FBitFlagDefine : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F7A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x88 (0x90 - 0x8)
// ScriptStruct Majesty.ButtonTextData
struct FButtonTextData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F7B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                BaseText;                                          // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ItalianText;                                       // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FrenchText;                                        // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SpanishText;                                       // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                GermanText;                                        // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UKText;                                            // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                USText;                                            // 0x70(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DvorokText;                                        // 0x80(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.CameraLockParams
struct FCameraLockParams
{
public:
	bool                                         bLock;                                             // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLockEnableX;                                      // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLockEnableY;                                      // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLockEnableZ;                                      // 0x3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LockOffset;                                        // 0x4(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.CharacterCostumeInfo
struct FCharacterCostumeInfo
{
public:
	int32                                        EventFlag;                                         // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ResourceLabel;                                     // 0x4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct Majesty.CharacterFormData
struct FCharacterFormData
{
public:
	float                                        BalloonOffsetX;                                    // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BalloonOffsetY;                                    // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollisionOffsetX;                                  // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollisionOffsetY;                                  // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollisionOffsetZ;                                  // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollisionExtentX;                                  // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollisionExtentY;                                  // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollisionExtentZ;                                  // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct Majesty.CharacterFormDataSet
struct FCharacterFormDataSet : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CharaResourceLabel;                                // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterAction                CharaActionLabel;                                  // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F7C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCharacterFormData>            FormData;                                          // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x2 (0x2 - 0x0)
// ScriptStruct Majesty.CharacterGridPanelParam
struct FCharacterGridPanelParam
{
public:
	enum class EPlayableCharacterID              PlayerID;                                          // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsGrayOut;                                         // 0x1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x34 (0x34 - 0x0)
// ScriptStruct Majesty.CharacterParam
struct FCharacterParam
{
public:
	int32                                        HP;                                                // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MP;                                                // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BP;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SP;                                                // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        POT;                                               // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ATK;                                               // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DEF;                                               // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MATK;                                              // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MDEF;                                              // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ACC;                                               // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EVA;                                               // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CON;                                               // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AGI;                                               // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct Majesty.FieldCommandParam
struct FFieldCommandParam : public FTableRowBase
{
public:
	float                                        RefundSuccess;                                     // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RefundRate;                                        // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TameRate;                                          // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TameCount;                                         // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TameMonsterRank;                                   // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TameMonsterParamRatio;                             // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LureRate;                                          // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SearchRate;                                        // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x68 (0x70 - 0x8)
// ScriptStruct Majesty.CharacterGrowData
struct FCharacterGrowData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NextExp;                                           // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TotalExp;                                          // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterParam                       Parameter;                                         // 0x14(0x34)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FFieldCommandParam                    FCParameter;                                       // 0x48(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct Majesty.CharacterParamBeforeAfterData
struct FCharacterParamBeforeAfterData
{
public:
	class FText                                  ParamText;                                         // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        BeforeParam;                                       // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AfterParam;                                        // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct Majesty.CharResource_BattleReductionTable
struct FCharResource_BattleReductionTable : public FTableRowBase
{
public:
	TArray<class FString>                        M_strBattleTextureNameList;                        // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        M_strBattleMaterialNameList;                       // 0x18(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.ActionDelaySEData
struct FActionDelaySEData
{
public:
	int32                                        DelayFrame;                                        // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlaySEID;                                          // 0x4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC0 (0xC8 - 0x8)
// ScriptStruct Majesty.CharacterResourceData
struct FCharacterResourceData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActionLabel;                                       // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F7D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTexture2D>             ActionOrderIconL;                                  // 0x18(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             ActionOrderIconS;                                  // 0x40(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             FieldCommandIcon;                                  // 0x68(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BattleStartVoiceID;                                // 0x90(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BattleVoiceCharacterID;                            // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WaitEnemyActionFrame;                              // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F7E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FActionDelaySEData>            ActionDelaySEData;                                 // 0xA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class ESESSION_SE_TYPE                  BattleSessionSEID;                                 // 0xB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F7F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               BattleCursorOffset;                                // 0xBC(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct Majesty.SimpleActionLoad
struct FSimpleActionLoad
{
public:
	class FName                                  CharaResLabel;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class EKSCharacterAction>        ActionLabels;                                      // 0x8(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.LoadedObject
struct FLoadedObject
{
public:
	TArray<class UObject*>                       LoadedObject;                                      // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.CommonControllerConfigData
struct FCommonControllerConfigData : public FTableRowBase
{
public:
	TArray<class FName>                          KeyList;                                           // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x38 - 0x0)
// ScriptStruct Majesty.CommonNotificationParam
struct FCommonNotificationParam
{
public:
	class FText                                  MessageText;                                       // 0x0(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                  MessageTextLabel;                                  // 0x18(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MessageTextLabel_Param0;                           // 0x20(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECommonNotificationType           CommonNotificationType;                            // 0x30(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F80[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.DarkAreaData
struct FDarkAreaData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActiveFlag;                                        // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHOLY_TORCH_TYPE                  HolyTorchType;                                     // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F81[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TorchLevel;                                        // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F82[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x38 - 0x8)
// ScriptStruct Majesty.DatabaseInfo
struct FDatabaseInfo : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDB_LOAD_TIMING                   LoadTiming;                                        // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F83[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       DataTable;                                         // 0x10(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DBClassPath;                                       // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA0 - 0x0)
// ScriptStruct Majesty.RowNameIdSet
struct FRowNameIdSet
{
public:
	TMap<int32, class FName>                     IdToRowName;                                       // 0x0(0x50)(NativeAccessSpecifierPublic)
	TMap<class FName, int32>                     RowNameToId;                                       // 0x50(0x50)(NativeAccessSpecifierPublic)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct Majesty.DebugPrimitiveData
struct FDebugPrimitiveData
{
public:
	enum class EDebugCanvasPrimType              PrimitiveType;                                     // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F84[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector2D>                     Position;                                          // 0x8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color;                                             // 0x18(0x10)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LineThickness;                                     // 0x28(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F85[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x50 (0x50 - 0x0)
// ScriptStruct Majesty.DebugTextData
struct FDebugTextData
{
public:
	class FText                                  Text;                                              // 0x0(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	struct FVector2D                             Position;                                          // 0x18(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          Color;                                             // 0x20(0x10)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FontSize;                                          // 0x30(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F86[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct Majesty.DebugListMenuFilter
struct FDebugListMenuFilter
{
public:
	uint8                                        Pad_1F87[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x130 (0x130 - 0x0)
// ScriptStruct Majesty.DebugParam
struct FDebugParam
{
public:
	class FString                                DebugName;                                         // 0x0(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDEBUG_EDIT_TYPE                  EditType;                                          // 0x10(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F88[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FText>                          ListLabel;                                         // 0x18(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                DebugInformation;                                  // 0x28(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDEBUG_INFORMATION_COLOR_TYPE     InformationColorType;                              // 0x38(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DefaultToggle;                                     // 0x39(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F89[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DefaultIndex;                                      // 0x3C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NDefaultValue;                                     // 0x40(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NDefaultMin;                                       // 0x44(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NDefaultMax;                                       // 0x48(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NDigit;                                            // 0x4C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FDefaultValue;                                     // 0x50(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FDefaultMin;                                       // 0x54(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FDefaultMax;                                       // 0x58(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FDigit;                                            // 0x5C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F8A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NItemCounter;                                      // 0x70(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NHierarchy;                                        // 0x74(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NParentHierarchy;                                  // 0x78(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NChildHierarchy;                                   // 0x7C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F8B[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC8 (0xD0 - 0x8)
// ScriptStruct Majesty.DiseaseDataBase
struct FDiseaseDataBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DisplayName;                                       // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Detail;                                            // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DisplayOrder;                                      // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DiseaseType;                                       // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableResist;                                      // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F8C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ResistType;                                        // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableTurnCount;                                   // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F8D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                DiseaseCategory;                                   // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                StealthType;                                       // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BattleEndContinue;                                 // 0x70(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableBuffExtension;                               // 0x71(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableDebuffExtension;                             // 0x72(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableDeconditionExtension;                        // 0x73(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableChangePermanent;                             // 0x74(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableDiseaseCopy;                                 // 0x75(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F8E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AdvValue1;                                         // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AdvValue2;                                         // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AdvValue3;                                         // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AdvValue4;                                         // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AdvLabel1;                                         // 0x88(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ResorceLabel;                                      // 0x98(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EffectLabel;                                       // 0xA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AttachEffect;                                      // 0xB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         GroundEffect;                                      // 0xB9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F8F[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AttachSocketName;                                  // 0xC0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct Majesty.DiseaseListItemData
struct FDiseaseListItemData
{
public:
	class FName                                  IconLabel;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DetailTextLabel;                                   // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDISEASE_CATEGORY                 DiseaseCategory;                                   // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F90[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DisplayOrder;                                      // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct Majesty.DismantlingDataBase
struct FDismantlingDataBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F91[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAilmentHandler>               Ailment;                                           // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EDISMANTLING_EFFECT_TYPE          EFFECT;                                            // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F92[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x28 - 0x0)
// ScriptStruct Majesty.EffectComponentList
struct FEffectComponentList
{
public:
	TArray<class UParticleSystemComponent*>      EffectList;                                        // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        MaxNum;                                            // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LoopEffect;                                        // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F93[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               EffectOffset;                                      // 0x18(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F94[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x50 - 0x8)
// ScriptStruct Majesty.EffectData
struct FEffectData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F95[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        EffectAsset;                                       // 0x10(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnMax;                                          // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LoopEffect;                                        // 0x3C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stationary;                                        // 0x3D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F96[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               EffectOffset;                                      // 0x40(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F97[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct Majesty.RareEnemyParam
struct FRareEnemyParam
{
public:
	bool                                         RareEnemyFlag;                                     // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F98[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RareEnemyRate;                                     // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RareEnemyCnt_Low;                                  // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RareEnemyCnt_Middle;                               // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RareEnemyCnt_High;                                 // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.EncountData
struct FEncountData : public FTableRowBase
{
public:
	int32                                        ProgressBorder;                                    // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DisplayLevel;                                      // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DangerLevel;                                       // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterName;                                     // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F99[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x60 - 0x8)
// ScriptStruct Majesty.EncountVolume
struct FEncountVolume : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StartFlag;                                         // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EndFlag;                                           // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UseMapIndex;                                       // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EncountStepMin;                                    // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RandomStepA;                                       // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RandomStepB;                                       // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WaterSide;                                         // 0x24(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAreaID                           Area;                                              // 0x25(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F9A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRareEnemyParam                       RareCatlinParam;                                   // 0x28(0x14)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRareEnemyParam                       RareOctlinParam;                                   // 0x3C(0x14)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FEncountData>                  EncounterList;                                     // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x58 - 0x8)
// ScriptStruct Majesty.EncountTriggerData
struct FEncountTriggerData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StartFlag;                                         // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StartFlag_2;                                       // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StartFlag_3;                                       // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EndFlag;                                           // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EndFlag_2;                                         // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EndFlag_3;                                         // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DayTimeDecreaseValue;                              // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DayTimeEncountVolumeName;                          // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NightDecreaseValue;                                // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NightEncountVolumeName;                            // 0x34(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LostWayDecreaseValue;                              // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LostWayEncountVolumeName;                          // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DarkAreaDecreaseValue;                             // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DarkAreaEncountVolumeName;                         // 0x4C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F9B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x30 - 0x8)
// ScriptStruct Majesty.EndRollSegmentData
struct FEndRollSegmentData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventImageLabelPartnerA;                           // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventImageLabelPartnerB;                           // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BattleRevivalFlag;                                 // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F9C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BattleEnemyGroupA;                                 // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BattleEnemyGroupB;                                 // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x130 (0x138 - 0x8)
// ScriptStruct Majesty.EnemyDataBase
struct FEnemyDataBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F9D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EnemyID;                                           // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DisplayNameID;                                     // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ResourceLabel;                                     // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DisplayRank;                                       // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EnemyLevel;                                        // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageRatio;                                       // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F9E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Size;                                              // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NPCFlag;                                           // 0x60(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F9F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                WeaponStance;                                      // 0x68(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                WeaponItemLabel;                                   // 0x78(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DeadEffectSlow;                                    // 0x88(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         MainEnemy;                                         // 0x89(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NonPartBattle;                                     // 0x8A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseCatDamageType;                                  // 0x8B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisableDeadKnockBack;                              // 0x8C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisableBreakSlow;                                  // 0x8D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LegendTameMonster;                                 // 0x8E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FA0[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Exp;                                               // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        JobPoint;                                          // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Money;                                             // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         StealMoneyGuard;                                   // 0x9C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FA1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        StealMoney;                                        // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FA2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                HaveItemID;                                        // 0xA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DropProbability;                                   // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         StealGuard;                                        // 0xBC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FA3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                StealItemID;                                       // 0xC0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TameEnable;                                        // 0xD0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FA4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultTameRate;                                   // 0xD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                InvadeMonsterID;                                   // 0xD8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FirstBP;                                           // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FA5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                DeadType;                                          // 0xF0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BribeGuard;                                        // 0x100(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FA6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BribeMoney;                                        // 0x104(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbilitySEDelay;                                    // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RevealShieldPoint;                                 // 0x10C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TextInfoLabel;                                     // 0x110(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DismantlingLabel;                                  // 0x120(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WaitEnemyActionFrame;                              // 0x130(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FA7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x70 - 0x8)
// ScriptStruct Majesty.EnemyGroupBase
struct FEnemyGroupBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BattleStartEnemyVoiceEnable;                       // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FA8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  VoiceID;                                           // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TalkPlayerID;                                      // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlayerVoiceID;                                     // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BattleStartEvent;                                  // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BattleStartDashEnable;                             // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FA9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BGMID;                                             // 0x34(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseBattleBGM;                                      // 0x3C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseVictoryBGM;                                     // 0x3D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ResumeBGM;                                         // 0x3E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ViewResult;                                        // 0x3F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseVictoryAction;                                  // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ResultDashEnable;                                  // 0x41(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BoostFinishResultEnable;                           // 0x42(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BossBattle;                                        // 0x43(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EscapeEnable;                                      // 0x44(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ItemEnable;                                        // 0x45(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         GuardEnable;                                       // 0x46(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BoostEnable;                                       // 0x47(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlacementType;                                     // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          EnemyID;                                           // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                SaveEndrollSegment;                                // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.EnvSoundFadeData
struct FEnvSoundFadeData
{
public:
	float                                        FadeOutStartVolume;                                // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOutTime;                                       // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeInTime;                                        // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeInVolume;                                      // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct Majesty.LanternCheckData
struct FLanternCheckData
{
public:
	int32                                        EventFlag;                                         // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Equip;                                             // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FAA[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct Majesty.EquipLanternData
struct FEquipLanternData
{
public:
	TArray<struct FLanternCheckData>             EquipLanternDayTime;                               // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FLanternCheckData>             EquipLanternNight;                                 // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct Majesty.EquipmentCategoryBase
struct FEquipmentCategoryBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DisplayNameID;                                     // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FAB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            IconTexture;                                       // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  IconLabel;                                         // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TwoHanded;                                         // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CounterEnable;                                     // 0x29(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FAC[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          EffectiveRace;                                     // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct Majesty.EquippedItemData
struct FEquippedItemData : public FTableRowBase
{
public:
	int32                                        EquippedCount;                                     // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EquipCHaracterIdMask;                              // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.EquipmentTextureInfo
struct FEquipmentTextureInfo
{
public:
	class FName                                  PCResourceLabel;                                   // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCResourceLabel;                                  // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.EquipmentTextureData
struct FEquipmentTextureData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FAD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FEquipmentTextureInfo>         WeaponStanceTextures;                              // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct Majesty.EventCheckData
struct FEventCheckData : public FTableRowBase
{
public:
	int32                                        Index;                                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CheckCount;                                        // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LogicalType;                                       // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FAE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                FlagList;                                          // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<bool>                                 FlagEnableList;                                    // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct Majesty.EventEmotion
struct FEventEmotion
{
public:
	bool                                         Loop;                                              // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FAF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LifeTime;                                          // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AKSCharacterBase>       Target;                                            // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TargetTag;                                         // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x24 (0x24 - 0x0)
// ScriptStruct Majesty.EventEffect
struct FEventEffect
{
public:
	bool                                         Loop;                                              // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FB0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UParticleSystemComponent> EffectData;                                        // 0x4(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LifeTime;                                          // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Position;                                          // 0x10(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 Target;                                            // 0x1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x48 - 0x8)
// ScriptStruct Majesty.EventData
struct FEventData : public FTableRowBase
{
public:
	int32                                        Command;                                           // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Target;                                            // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Pos;                                               // 0x10(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Dir;                                               // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Text;                                              // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Async;                                             // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FB1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        OptAry;                                            // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct Majesty.FadeDataBase
struct FFadeDataBase : public FTableRowBase
{
public:
	enum class EEVENT_FADE_TYPE                  EventFadeType;                                     // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FB2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FadeTime;                                          // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct Majesty.EventFlagData
struct FEventFlagData
{
public:
	int32                                        EventFlag;                                         // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FlagStatus;                                        // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FB3[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x90 (0x98 - 0x8)
// ScriptStruct Majesty.EventListData
struct FEventListData : public FTableRowBase
{
public:
	int32                                        EventIndex;                                        // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ExecCode;                                          // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CueSheetName;                                      // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RadarMapExitCode;                                  // 0x1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MapID;                                             // 0x24(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEventKind                        Kind;                                              // 0x2C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FB4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EventSoundLabel;                                   // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MissionLabel;                                      // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventSkip;                                         // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELevelTriggerID                   LevelTriggerID;                                    // 0x44(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FB5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LanthanumFlag;                                     // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncountTrigger;                                    // 0x4C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CameraLockTrigger1;                                // 0x54(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CameraLockTrigger2;                                // 0x5C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CameraLockTrigger3;                                // 0x64(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StartFadeOutFlag;                                  // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ChengeTimeSequencer;                               // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ChengeFinishTimeSequencer;                         // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TargetChara;                                       // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EncountReset;                                      // 0x84(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FB6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        Args;                                              // 0x88(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.EventAtomSoundData
struct FEventAtomSoundData
{
public:
	class USoundAtomCue*                         UAtomCue;                                          // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FB7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.EventCommandData
struct FEventCommandData
{
public:
	uint8                                        Pad_1FB8[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct Majesty.SubSeqData
struct FSubSeqData
{
public:
	uint8                                        Pad_1FB9[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ALevelSequenceActor*                   Sequence;                                          // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct Majesty.EventPlayData
struct FEventPlayData
{
public:
	class AKSCharacterBase*                      TargetCharacter;                                   // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FBA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         TheaterMode;                                       // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FBB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  OverrideMapID;                                     // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ForcePlayEvent;                                    // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PartyChat;                                         // 0x1D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FBC[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct Majesty.EventSaveData
struct FEventSaveData
{
public:
	TArray<int32>                                EventCheckCount;                                   // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<bool>                                 EventFlag;                                         // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct Majesty.EventSoundData
struct FEventSoundData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BgmPlayTypeOnStart;                                // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BgmLabelOnStart;                                   // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BgmPlayTypeOnEnd;                                  // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BgmLabelOnEnd;                                     // 0x1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FixedFieldBgmLabel;                                // 0x24(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FBD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          FixedFieldBgmLevels;                               // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.FastTravelChangeDestination
struct FFastTravelChangeDestination : public FTableRowBase
{
public:
	class FName                                  From;                                              // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  To;                                                // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BeginEventFlag;                                    // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EndEventFlag;                                      // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.FlipbookPlayParam
struct FFlipbookPlayParam : public FTableRowBase
{
public:
	class FName                                  CharacterName;                                     // 0x8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterAction                ActionType;                                        // 0x10(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterDir                   Dir;                                               // 0x11(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLoop;                                            // 0x12(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FBE[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.ForceFeedbackEffectVibrationData
struct FForceFeedbackEffectVibrationData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FBF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UForceFeedbackEffect*                  VibrationAsset;                                    // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA0 (0xA8 - 0x8)
// ScriptStruct Majesty.PurchaseListItem
struct FPurchaseListItem : public FTableRowBase
{
public:
	int32                                        PurchaseIndex;                                     // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            ItemIcon;                                          // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ItemListNameText;                                  // 0x18(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  ItemDialogNameText;                                // 0x30(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  PriceText;                                         // 0x48(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  InHandText;                                        // 0x60(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FLinearColor                          PriceTextColor;                                    // 0x78(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowPriceUnit;                                     // 0x88(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Price;                                             // 0x8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSelect;                                          // 0x90(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        StealProbability;                                  // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBonusLottery;                                    // 0x98(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ItemLabel;                                         // 0x9C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.MonsterListData
struct FMonsterListData : public FTableRowBase
{
public:
	class FName                                  MonsterLabel;                                      // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MonsterCount;                                      // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUnlimited;                                       // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPartner;                                         // 0x15(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC5[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.FieldCommandAssistItem
struct FFieldCommandAssistItem
{
public:
	class FName                                  ItemLabel;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BenefitValue;                                      // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x148 (0x150 - 0x8)
// ScriptStruct Majesty.FieldCommandData
struct FFieldCommandData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMJFieldCommandType               FieldCommandType;                                  // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFieldCommandCategory             FieldCommandCategory;                              // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  NameTextLabel;                                     // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DetailTextLabel;                                   // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DetailTextLabel_PlayerSelect;                      // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HelpTextLabel;                                     // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HelpTextLabel_NoNpc;                               // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HelpTextLabel_Special;                             // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HeaderTextLabel;                                   // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HeaderTextLabel_Special;                           // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FooterTextLabel;                                   // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  UnavailableTextLabel;                              // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SELabel;                                           // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  IconLabel;                                         // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  IconLabel_Large;                                   // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StatusMenuIconLabel;                               // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActionWaitTime;                                    // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                BranchEventWeight;                                 // 0x88(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          BeforeEventLabel;                                  // 0x98(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          SuccessEventLabel;                                 // 0xA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          FailedEventLabel;                                  // 0xB8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          BadConnectionEventLabel;                           // 0xC8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFieldCommandFlowBase>   FlowClass;                                         // 0xD8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFieldCommandFlowBase>   FlowClassV2;                                       // 0x100(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AFieldCommandFlowBase>   SubFlowClassV2;                                    // 0x128(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.FieldCommandInfo
struct FFieldCommandInfo : public FTableRowBase
{
public:
	enum class EMJFieldCommandType               DayTimeFC;                                         // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DayTimeFCImpossibleFlag;                           // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMJFieldCommandType               NightFC;                                           // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NightFCImpossibleFlag;                             // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x2 (0x2 - 0x0)
// ScriptStruct Majesty.FieldCommandResult
struct FFieldCommandResult
{
public:
	enum class EMJFieldCommandType               Type;                                              // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFieldCommandStatus               Status;                                            // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x98 (0xA0 - 0x8)
// ScriptStruct Majesty.FieldPathInfoData
struct FFieldPathInfoData : public FTableRowBase
{
public:
	int32                                        NID;                                               // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FCA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Name;                                              // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPATH_TYPE                        UniqueId;                                          // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FCB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        StartIndex;                                        // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FinishIndex;                                       // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LoopFlg;                                           // 0x2C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TurnFlg;                                           // 0x2D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         MoveStartFlg;                                      // 0x2E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FCC[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        StartLoopIndex;                                    // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartWaitTime;                                     // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETIMEZONE_TRIGGER_TYPE            StartTimeZoneType;                                 // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FCD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitTime1;                                         // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterDir                   WaitDir1;                                          // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterAction                WaitMotion1;                                       // 0x41(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FCE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitTime2;                                         // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterDir                   WaitDir2;                                          // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterAction                WaitMotion2;                                       // 0x49(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FCF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitTime3;                                         // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterDir                   WaitDir3;                                          // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterAction                WaitMotion3;                                       // 0x51(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FD0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitTime4;                                         // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterDir                   WaitDir4;                                          // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterAction                WaitMotion4;                                       // 0x59(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FD1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitTime5;                                         // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterDir                   WaitDir5;                                          // 0x60(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterAction                WaitMotion5;                                       // 0x61(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FD2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitTime6;                                         // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterDir                   WaitDir6;                                          // 0x68(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterAction                WaitMotion6;                                       // 0x69(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FD3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitTime7;                                         // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterDir                   WaitDir7;                                          // 0x70(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterAction                WaitMotion7;                                       // 0x71(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterMoveMode              MoveMotion1;                                       // 0x72(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FD4[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveSpeed1;                                        // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterMoveMode              MoveMotion2;                                       // 0x78(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FD5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveSpeed2;                                        // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterMoveMode              MoveMotion3;                                       // 0x80(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FD6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveSpeed3;                                        // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterMoveMode              MoveMotion4;                                       // 0x88(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FD7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveSpeed4;                                        // 0x8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterMoveMode              MoveMotion5;                                       // 0x90(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FD8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveSpeed5;                                        // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterMoveMode              MoveMotion6;                                       // 0x98(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FD9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveSpeed6;                                        // 0x9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct Majesty.FlagOverrideData
struct FFlagOverrideData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FDA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                TargetEventFlags;                                  // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         PeriodPlayingEvent;                                // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PeriodPlayingTheater;                              // 0x21(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PeriodReminiPrologue;                              // 0x22(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PeriodReminiPast;                                  // 0x23(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         OverrideValue;                                     // 0x24(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FDB[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct Majesty.FlagRandomControlCandidate
struct FFlagRandomControlCandidate
{
public:
	int32                                        Flag;                                              // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Rate;                                              // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct Majesty.FlagRandomControlGroup
struct FFlagRandomControlGroup : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ControlBeginFlag;                                  // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ControlEndFlag;                                    // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFlagRandomControlTrigger         ControlTrigger;                                    // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ApplyValue;                                        // 0x15(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FDC[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFlagRandomControlCandidate>   ControlCandidate;                                  // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct Majesty.FontItemData
struct FFontItemData
{
public:
	TArray<class UObject*>                       FontObjList;                                       // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         Loaded;                                            // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FDD[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.FootStepData
struct FFootStepData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WalkSELabel;                                       // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DashSELabel;                                       // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FDE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.GameColorData
struct FGameColorData : public FTableRowBase
{
public:
	struct FLinearColor                          ColorValue;                                        // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct Majesty.GameConditionInfo
struct FGameConditionInfo
{
public:
	class FName                                  PlayerLabel;                                       // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TargetLabel;                                       // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ItemLabel;                                         // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemCount;                                         // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSolo;                                            // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FDF[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.TransitionData
struct FTransitionData
{
public:
	TArray<enum class EMAINSEQ_TYPE>             NextFlowData;                                      // 0x0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x58 (0x60 - 0x8)
// ScriptStruct Majesty.GameParamInfo
struct FGameParamInfo : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FE0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                VarType;                                           // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Min;                                               // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Max;                                               // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Init;                                              // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Param;                                             // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x48 - 0x8)
// ScriptStruct Majesty.GameTextCharaInfo
struct FGameTextCharaInfo : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Name;                                              // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGENDER_TYPE                      Type;                                              // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FE1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Singular;                                          // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SingularIndefinite;                                // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SingularName;                                      // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Plural;                                            // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PluralIndefinite;                                  // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PluralName;                                        // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x48 - 0x8)
// ScriptStruct Majesty.GameTextItemInfo
struct FGameTextItemInfo : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Name;                                              // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Singular;                                          // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SingularIndefinite;                                // 0x1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SingularName;                                      // 0x24(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Plural;                                            // 0x2C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PluralIndefinite;                                  // 0x34(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PluralName;                                        // 0x3C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FE2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x28 - 0x8)
// ScriptStruct Majesty.GameTextInfoData
struct FGameTextInfoData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FE3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Text;                                              // 0x10(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.GiftItemDataSet
struct FGiftItemDataSet
{
public:
	class FName                                  ItemLabel;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemNum;                                           // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct Majesty.GiftData
struct FGiftData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GiftTitle;                                         // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGiftType                         GiftType;                                          // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FE4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ReceivedFlag;                                      // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FE5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGiftItemDataSet>              ItemDataSets;                                      // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x2C (0x2C - 0x0)
// ScriptStruct Majesty.JobLicenseData
struct FJobLicenseData
{
public:
	class FName                                  TaskTitle;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NeedItemLabel;                                     // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NeedItemNum;                                       // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NeedMoney;                                         // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NeedAbility;                                       // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LearnedCount;                                      // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TaskDescription;                                   // 0x24(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.GuildTalkData
struct FGuildTalkData
{
public:
	class FName                                  Title;                                             // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TalkEvent;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x80 (0x88 - 0x8)
// ScriptStruct Majesty.GuildData
struct FGuildData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GuildName;                                         // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GuildNpcLabel;                                     // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WorldMapLocation;                                  // 0x1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LicenseItem;                                       // 0x24(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GuildStampLabel;                                   // 0x2C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  JobIconLabel;                                      // 0x34(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FistTaskEvent;                                     // 0x3C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FirstReconfirm;                                    // 0x44(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FE6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FJobLicenseData>               JobLicenseData;                                    // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FGuildTalkData>                GuildTalkData;                                     // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          CompleteEvent;                                     // 0x70(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         OpenGuildMenu;                                     // 0x80(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UnVisitedShowRadarIcon;                            // 0x81(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FE7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        OverrideEmotion;                                   // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct Majesty.ProcessEnemyEventData
struct FProcessEnemyEventData
{
public:
	class FName                                  EventLabel;                                        // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventFlagBegin;                                    // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventFlagEnd;                                      // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlayingMainStoryLabel;                             // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x120 (0x128 - 0x8)
// ScriptStruct Majesty.InvadeData
struct FInvadeData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InvadeID;                                          // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DisplayName;                                       // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DetailText;                                        // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ResourceLabel;                                     // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         InverseFlipBook;                                   // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FE8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Voice;                                             // 0x2C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DisplayLevel;                                      // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CountMin;                                          // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CountMax;                                          // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UnlimitedFlag;                                     // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECHARACTER_SIZE                   Size;                                              // 0x41(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         PartnerFlag;                                       // 0x42(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NPCFlag;                                           // 0x43(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LegendFlag;                                        // 0x44(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         JuvenileFlg;                                       // 0x45(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LSizeFlag;                                         // 0x46(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         InventorItemFlag;                                  // 0x47(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWEAPON_STANCE                    WeaponStance;                                      // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FE9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  WeaponLabel;                                       // 0x4C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterParam                       Parameter;                                         // 0x54(0x34)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               EffectOffset;                                      // 0x88(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FEA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          AbilityList;                                       // 0x98(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class EWEAPON_CATEGORY                  WeaponType;                                        // 0xA8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FEB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UBattleAIBase>           BattleAIPartner;                                   // 0xB0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MonsterUIOffset;                                   // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MonsterUISize;                                     // 0xE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableProcess;                                     // 0xE8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FEC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ProcessedItem;                                     // 0xEC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ProcessNumID;                                      // 0xF4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WaitEnemyActionFrame;                              // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  InvadeAwakingLabel;                                // 0xFC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AwakingBoost0;                                     // 0x104(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AwakingBoost1;                                     // 0x105(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AwakingBoost2;                                     // 0x106(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AwakingBoost3;                                     // 0x107(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisableAttackCommand;                              // 0x108(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisableRecoveryCommand;                            // 0x109(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisableReviveCommand;                              // 0x10A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FED[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FProcessEnemyEventData                ProcessEnemyEventData;                             // 0x10C(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FEE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.InventionMaterial
struct FInventionMaterial
{
public:
	class FName                                  ItemLabel;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RequiredCount;                                     // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct Majesty.InventionData
struct FInventionData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  InventionItemlabel;                                // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LearnAbilitylabel;                                 // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FEF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FInventionMaterial>            Materials;                                         // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.InventorItemData
struct FInventorItemData : public FTableRowBase
{
public:
	bool                                         M_bInventorItemReady;                              // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         M_bExecCreate;                                     // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FF0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        M_nInventorTurn;                                   // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        M_nInventorTurnMax;                                // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FF1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.ItemAcquisitionHistory
struct FItemAcquisitionHistory
{
public:
	TArray<int32>                                History;                                           // 0x0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct Majesty.ItemCategory
struct FItemCategory : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FF2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                DisplayNameID;                                     // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            IconTexture;                                       // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x118 (0x120 - 0x8)
// ScriptStruct Majesty.ItemData
struct FItemData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ItemNameID;                                        // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DetailTextID;                                      // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  IconLabel;                                         // 0x1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EItemCategoryData                 ItemCategory;                                      // 0x24(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FF3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SortCategory;                                      // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BackpackPriority;                                  // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EITEM_DISPLAY_TYPE                DisplayType;                                       // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EITEM_USE_TYPE                    UseType;                                           // 0x31(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FF4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxNum;                                            // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpecialItemLabel;                                  // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBATTLE_TARGET_TYPE               TargetType;                                        // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EATTRIBUTE_TYPE                   Attribute;                                         // 0x41(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FF5[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAilmentHandler>               Ailment;                                           // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         ValuableFlag;                                      // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FF6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BuyPrice;                                          // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SellPrice;                                         // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BuyMeetCount;                                      // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SellMeetCount;                                     // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEquipmentCategory                EquipmentCategory;                                 // 0x6C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FF7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EquipmentTextureLabel;                             // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterParam                       EquipmentRevision;                                 // 0x78(0x34)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FF8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EATTRIBUTE_RESIST>         AttributeResist;                                   // 0xB0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<bool>                                 DiseaseResist;                                     // 0xC0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UDataTable*                            CommandEffecter;                                   // 0xD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ULevelSequence>         ActionCommandSequencer;                            // 0xD8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TextInfoLabel;                                     // 0x100(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisableAttackCommand;                              // 0x110(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisableRecoveryCommand;                            // 0x111(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisableReviveCommand;                              // 0x112(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FF9[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AbilityLabel;                                      // 0x114(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DebugRecommendLv;                                  // 0x11C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.ItemDataForMenu
struct FItemDataForMenu : public FTableRowBase
{
public:
	class UTexture2D*                            IconTexture;                                       // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  IconLabel;                                         // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct Majesty.EquipmentRecommendedCalcData
struct FEquipmentRecommendedCalcData
{
public:
	int32                                        CharaID;                                           // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ItemLabel;                                         // 0x4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EvalautionValue;                                   // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SkipFlag;                                          // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FFA[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x34 (0x34 - 0x0)
// ScriptStruct Majesty.EquipmentRecommendedData
struct FEquipmentRecommendedData
{
public:
	class FName                                  ItemLabel;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HP;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MP;                                                // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PAtk;                                              // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PDef;                                              // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MATK;                                              // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MDEF;                                              // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ACC;                                               // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EVA;                                               // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CON;                                               // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AGI;                                               // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct Majesty.ItemIconText
struct FItemIconText : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FFB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  IconText;                                          // 0x10(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x70 (0x78 - 0x8)
// ScriptStruct Majesty.ItemInfoData
struct FItemInfoData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FFC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Label;                                             // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DisplayName;                                       // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FFD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTexture2D*                            IconTexture;                                       // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Detail;                                            // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Category;                                          // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UsePoint;                                          // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EffectRange;                                       // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Attribute;                                         // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FFE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                EffectValue;                                       // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        SpecialEffect;                                     // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SaleMoney;                                         // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SellHitDetail;                                     // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FFF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                CalcSellHitValue;                                  // 0x68(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct Majesty.JobCalcData
struct FJobCalcData
{
public:
	class FName                                  ItemLabel;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ReleaseFlag;                                       // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2000[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                EquipCharaIDs;                                     // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        Num;                                               // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxNum;                                            // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct Majesty.JobEvalautionValueData
struct FJobEvalautionValueData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HP;                                                // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MP;                                                // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ATK;                                               // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DEF;                                               // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MATK;                                              // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MDEF;                                              // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ACC;                                               // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EVA;                                               // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CON;                                               // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AGI;                                               // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2001[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.JobLearnAbility
struct FJobLearnAbility : public FTableRowBase
{
public:
	class FName                                  AbilityName;                                       // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GetParam;                                          // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2002[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC0 (0xC8 - 0x8)
// ScriptStruct Majesty.JobData
struct FJobData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        JobID;                                             // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DisplayName;                                       // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Detail;                                            // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DisplayOrder;                                      // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MenuJobIcon;                                       // 0x24(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AbilityJobIcon;                                    // 0x2C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PermissionFlag;                                    // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EquipJobItem;                                      // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                 ProperEquipment;                                   // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FCharacterParam                       ParameterRevision;                                 // 0x50(0x34)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  JobCommandName;                                    // 0x84(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  JobCommandDetail;                                  // 0x8C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2003[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FJobLearnAbility>              JobCommandAbility;                                 // 0x98(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FJobLearnAbility>              JobSupportAbility;                                 // 0xA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                JPCost;                                            // 0xB8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.FollowNpcObjectData
struct FFollowNpcObjectData
{
public:
	enum class EMJFieldCommandType               FieldCommandType;                                  // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2004[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AKSCharacterBase*                      FollowCharacter;                                   // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.MJSpriteSocketData
struct FMJSpriteSocketData
{
public:
	TArray<struct FPaperSpriteSocket>            SocketList;                                        // 0x0(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct Majesty.FlipbookCalcData
struct FFlipbookCalcData
{
public:
	struct FVector2D                             MaxSpriteSize;                                     // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightMaxOffset;                                    // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftMaxOffset;                                     // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TopMaxOffset;                                      // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BottomMaxOffset;                                   // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             CustomPivot;                                       // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x88 (0x90 - 0x8)
// ScriptStruct Majesty.KSSpriteData
struct FKSSpriteData : public FTableRowBase
{
public:
	TSoftObjectPtr<class UTexture2D>             SrcTexture;                                        // 0x8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             SrcUV;                                             // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             SrcSize;                                           // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UTexture2D>>     AddTexArray;                                       // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<struct FVector4>                      VertArray;                                         // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          SocketNameArray;                                   // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FVector>                       SocketPosArray;                                    // 0x70(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector2D                             CharaFootPivot;                                    // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasAdditionalTexture;                              // 0x88(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2005[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CustomPixelsPerUnrealUnit;                         // 0x8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.KSFlipbookKeyFrame
struct FKSFlipbookKeyFrame
{
public:
	class FName                                  SpriteName;                                        // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FrameRun;                                          // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x50 - 0x8)
// ScriptStruct Majesty.KSUIFlipbookData
struct FKSUIFlipbookData : public FTableRowBase
{
public:
	float                                        Fps;                                               // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2006[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FKSFlipbookKeyFrame>           KeyFrames;                                         // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     Material;                                          // 0x20(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPaperFlipbook*                        Flipbook;                                          // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x48 - 0x8)
// ScriptStruct Majesty.KSFlipbookData
struct FKSFlipbookData : public FTableRowBase
{
public:
	float                                        Fps;                                               // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2007[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FKSFlipbookKeyFrame>           KeyFrames;                                         // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     Material;                                          // 0x20(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x58 - 0x8)
// ScriptStruct Majesty.KSCharaFlipbook
struct FKSCharaFlipbook : public FTableRowBase
{
public:
	TArray<class FName>                          FlipbookNames;                                     // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<bool>                                 Loop;                                              // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        Height;                                            // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WalkFootstep;                                      // 0x2C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2008[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UTexture2D>>     Textures;                                          // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UMaterialInterface>> Materials;                                         // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct Majesty.KSKeyConfigMappingDatum
struct FKSKeyConfigMappingDatum
{
public:
	class FName                                  Name;                                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Scale;                                             // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Axis;                                              // 0xC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2009[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Category;                                          // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x2C (0x2C - 0x0)
// ScriptStruct Majesty.KSLevelPostProcessData
struct FKSLevelPostProcessData
{
public:
	TWeakObjectPtr<class APostProcessVolume>     Volume;                                            // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VignetteWeak;                                      // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VignetteNormal;                                    // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FocalRegionWide;                                   // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FocalRegionNormal;                                 // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DofScaleWeak;                                      // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DofScaleNormal;                                    // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ColorGradingGainNormal;                            // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ColorGradingGainMin;                               // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ColorGradingGainMax;                               // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.MissionLabelList
struct FMissionLabelList : public FTableRowBase
{
public:
	TArray<class FName>                          LabelArray;                                        // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.RandomItemData
struct FRandomItemData
{
public:
	class FName                                  ItemLabel;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemNum;                                           // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Rate;                                              // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct Majesty.KSObjectData
struct FKSObjectData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ObjectType;                                        // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_200A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ObjResLabel;                                       // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCollision;                                       // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPutOnGround;                                     // 0x19(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMoney;                                           // 0x1A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_200B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HaveItemLabel;                                     // 0x1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HaveItemCnt;                                       // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HideDialog;                                        // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRevivalByLevelChange;                            // 0x29(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_200C[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRandomItemData>               RandomItemCandidates;                              // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x68 (0x68 - 0x0)
// ScriptStruct Majesty.KSSaveSlotData
struct FKSSaveSlotData
{
public:
	int32                                        PlayTime;                                          // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SaveDate_Year;                                     // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SaveDate_Month;                                    // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SaveDate_Day;                                      // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SaveDate_Hour;                                     // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SaveDate_Minute;                                   // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SaveDate_Second;                                   // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelId;                                           // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelAreaID;                                       // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ClearFlag;                                         // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LeaderCharaLevel;                                  // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_200D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                MainMemberCharacterID;                             // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<int32>                                MainMemberJobID;                                   // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<uint8>                                CharaForm;                                         // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	bool                                         IsEnabled;                                         // 0x60(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAutoSaveLine;                                    // 0x61(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsForcusAnimImmideate;                             // 0x62(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInReminiscence;                                  // 0x63(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ReminiscenceStoryIndex;                            // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x50 - 0x8)
// ScriptStruct Majesty.SoundVoiceData
struct FSoundVoiceData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_200E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Label;                                             // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CueSheetName;                                      // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundAtomCue>          Resource;                                          // 0x28(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x48 - 0x8)
// ScriptStruct Majesty.SoundData
struct FSoundData : public FTableRowBase
{
public:
	class USoundAtomCue*                         SoundCri;                                          // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BgmLabel;                                          // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BGMID;                                             // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Priority;                                          // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeIn;                                            // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOut;                                           // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Volume;                                            // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Time;                                              // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StateChangeBgm;                                    // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_200F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAtomComponent*                        TargetSoundComponent;                              // 0x38(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsInterupt;                                        // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPlayedMusicRecord;                               // 0x41(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2010[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x50 - 0x8)
// ScriptStruct Majesty.SoundSEData
struct FSoundSEData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2011[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Label;                                             // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CueSheetName;                                      // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USoundAtomCue>          Resource;                                          // 0x28(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.LoopSeData
struct FLoopSeData : public FTableRowBase
{
public:
	class UAtomComponent*                        Component;                                         // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUsed;                                            // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2012[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct Majesty.KSSysSaveData
struct FKSSysSaveData
{
public:
	TArray<int32>                                BitFlags;                                          // 0x0(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<int32>                                Params;                                            // 0x10(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	TArray<int32>                                KeyConfigParam;                                    // 0x20(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
	int32                                        KeyConfigKeyboardLayoutType;                       // 0x30(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2013[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC8 (0xC8 - 0x0)
// ScriptStruct Majesty.MJUICommonDialogParam
struct FMJUICommonDialogParam
{
public:
	class FText                                  CaptionText;                                       // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  DetailText;                                        // 0x18(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<class FText>                          ButtonText;                                        // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        DefaultButton;                                     // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableCancelKey;                                   // 0x44(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2014[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CancelKeyValue;                                    // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AutoSelectClose;                                   // 0x4C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2015[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FDelegateProperty_                           OnSelectCallback;                                  // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnCloseFinishCallback;                             // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	class UUserWidget*                           AttachDetailWidget;                                // 0x70(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DetailOnTop;                                       // 0x78(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2016[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           AttachCaptionWidget;                               // 0x80(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CaptionOnTop;                                      // 0x88(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseCaptionSeparation;                              // 0x89(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RequestFlag;                                       // 0x8A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DuplicationFlag;                                   // 0x8B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         InputReceptionFlag;                                // 0x8C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseSelectWidget;                                   // 0x8D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SelectWidgetOnTop;                                 // 0x8E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2017[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UUserWidget*>                   SelectWidgetList;                                  // 0x90(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         BloodFlag;                                         // 0xA0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2018[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<bool>                                 BloodList;                                         // 0xA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         EnableOpenSe;                                      // 0xB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2019[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  OpenSeLabel;                                       // 0xBC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_201A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x60 - 0x0)
// ScriptStruct Majesty.KSUICommonDialogParam
struct FKSUICommonDialogParam
{
public:
	class FText                                  CaptionText;                                       // 0x0(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         UseCaption;                                        // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_201B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  DetailText;                                        // 0x20(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         UseDetail;                                         // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_201C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FText>                          ButtonText;                                        // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        DefaultButton;                                     // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableCancelKey;                                   // 0x54(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_201D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CancelKeyValue;                                    // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AutoSelectClose;                                   // 0x5C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AutoClosePop;                                      // 0x5D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_201E[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.CustomMissionFlipbookJobData
struct FCustomMissionFlipbookJobData
{
public:
	TArray<class FName>                          LabelList;                                         // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x148 (0x150 - 0x8)
// ScriptStruct Majesty.CustomMissionFlipbookList
struct FCustomMissionFlipbookList : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_201F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, class FName>                     PlayerSelectList;                                  // 0x10(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<int32, struct FCustomMissionFlipbookJobData> PlayerJobList;                                     // 0x60(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<int32, struct FCustomMissionFlipbookJobData> PlayerJobList_01;                                  // 0xB0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<int32, class FName>                     PlayerCostumeList;                                 // 0x100(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.LabelListData
struct FLabelListData : public FTableRowBase
{
public:
	TArray<class FName>                          LabelList;                                         // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct Majesty.WorldMapNameOverride
struct FWorldMapNameOverride
{
public:
	class FName                                  NameLabel;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActiveFlag;                                        // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EncounterLevelLabel;                               // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x88 (0x90 - 0x8)
// ScriptStruct Majesty.WorldMapTable
struct FWorldMapTable : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWorldMapIconType                 MapIconType;                                       // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2020[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          RefLevelName;                                      // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  RegionName;                                        // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MapName;                                           // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWorldMapNameOverride>         MapNameOverrides;                                  // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  EmblemLabel;                                       // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWorldMapMaskArea                 WorldMapMaskArea;                                  // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWorldMapIslandLayerArea          WorldMapIslandLayerArea;                           // 0x49(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWorldMapPrologueMaskArea         WorldMapPrologueMaskArea;                          // 0x4A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2021[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DarkAreaLabel;                                     // 0x4C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAllowLostWay;                                    // 0x54(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2022[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        VisibleFlag;                                       // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanFastTravel;                                     // 0x5C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2023[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TemporaryBanFastTravelFlag;                        // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BanFastTravelInterruptMainStory;                   // 0x64(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MoveLevelName;                                     // 0x6C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TriggerID;                                         // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerDir;                                         // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayableCharacterID              PlayerCharaId;                                     // 0x7C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2024[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PlayerSwitchOrder;                                 // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PlayerChraraPosOffset;                             // 0x84(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2025[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x158 (0x160 - 0x8)
// ScriptStruct Majesty.LevelInfoData
struct FLevelInfoData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        LevelKind;                                         // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        AreaID;                                            // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2026[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TownLabel;                                         // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SubTownLabel;                                      // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MapChangeType;                                     // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        TransportationType;                                // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2027[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        EncountStepMin;                                    // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RandomStepA;                                       // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RandomStepB;                                       // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FirstEncountStepRatio;                             // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BgmLabelDayTime;                                   // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BgmLabelNight;                                     // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BgmLabelDarkness;                                  // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Bgm2Label;                                         // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Bgm2EnableFlag;                                    // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Bgm3Label;                                         // 0x54(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Bgm3EnableFlag;                                    // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Bgm4Label;                                         // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Bgm4EnableFlag;                                    // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Bgm5Label;                                         // 0x6C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Bgm5EnableFlag;                                    // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TimeZoneChangeSeLabel;                             // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TimeZoneChangeSe2Label;                            // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TimeZoneChangeSe2EnableFlag;                       // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ScreenFadeInTime;                                  // 0x8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ScreenFadeOutTime;                                 // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EncountOffset;                                     // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          BattleMapNameList;                                 // 0x98(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          EncountVolumeNameList;                             // 0xA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  DarkAreaEncountVolumeName;                         // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Intencity;                                         // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttenuationRadius;                                 // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          LightColor;                                        // 0xC8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SourceRadius;                                      // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TorchFlag;                                         // 0xDC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ImpossibleTimeZoneChangeFlag;                      // 0xDD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2028[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TimeZoneSeqChangeFlag;                             // 0xE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ReplaceTimeZoneSeqLabel;                           // 0xE4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ReverbFlag;                                        // 0xEC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ImpossibleFCFlag;                                  // 0xED(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2029[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<bool>                                 BarPlacementChara;                                 // 0xF0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                BarPCPos1;                                         // 0x100(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        BarPCDir1;                                         // 0x110(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_202A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                BarPCPos2;                                         // 0x118(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        BarPCDir2;                                         // 0x128(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_202B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BarItemLabel1;                                     // 0x12C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BarItemCnt1;                                       // 0x134(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BarItemLabel2;                                     // 0x138(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BarItemCnt2;                                       // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BarItemLabel3;                                     // 0x144(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BarItemCnt3;                                       // 0x14C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BarEventLabel;                                     // 0x150(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BanLostWay;                                        // 0x158(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BanMainMenuPartyMemberChange;                      // 0x159(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_202C[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct Majesty.LevelLoaderRequest
struct FLevelLoaderRequest
{
public:
	uint8                                        Pad_202D[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.LevelResolutioData
struct FLevelResolutioData : public FTableRowBase
{
public:
	float                                        SwitchHandheldScreenPercentage;                    // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwitchHandheldSeparateTranslucencyScreenPercentage; // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwitchTVScreenPercentage;                          // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwitchTVSeparateTranslucencyScreenPercentage;      // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PS4ScreenPercentage;                               // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PS4SeparateTranslucencyScreenPercentage;           // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1C (0x1C - 0x0)
// ScriptStruct Majesty.LevelTransitionData
struct FLevelTransitionData
{
public:
	int32                                        EnableFlag;                                        // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NextMapName;                                       // 0x4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELevelTriggerID                   NextLevelTriggerID;                                // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterDir                   MapInCharaDir;                                     // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECharacterMoveModeForDB           MapInCharaMoveMode;                                // 0xE(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_202E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  NextMapNoticeText;                                 // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableAutoSave;                                    // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_202F[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x48 - 0x8)
// ScriptStruct Majesty.LevelTriggerParams
struct FLevelTriggerParams : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NextMapName;                                       // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELevelTriggerID                   NextLevelTriggerID;                                // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterDir                   MapInCharaDir;                                     // 0x15(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECharacterMoveModeForDB           MapInCharaMoveMode;                                // 0x16(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2030[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  NextMapNoticeText;                                 // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableAutoSave;                                    // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2031[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FLevelTransitionData>          ConditionalTransitionData;                         // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                FlagList;                                          // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct Majesty.AsyncLoad
struct FAsyncLoad
{
public:
	uint8                                        Pad_2032[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x50 - 0x8)
// ScriptStruct Majesty.LinerShipRouteData
struct FLinerShipRouteData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ContinentA;                                        // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ContinentB;                                        // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LevelA;                                            // 0x1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LevelB;                                            // 0x24(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LevelTriggerA;                                     // 0x2C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LevelTriggerB;                                     // 0x34(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Price;                                             // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventRouteAtoB;                                    // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventRouteBtoA;                                    // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x50 (0x58 - 0x8)
// ScriptStruct Majesty.ListWidgetCategory
struct FListWidgetCategory : public FTableRowBase
{
public:
	class UTexture2D*                            TabIcon;                                           // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            TitleIcon;                                         // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseCaptionFormat;                                  // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2033[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ListCaptionFormat;                                 // 0x1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ListCaption;                                       // 0x24(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Column1_Title;                                     // 0x2C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Column2_Title;                                     // 0x34(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Column2_Visible;                                   // 0x3C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2034[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Column3_Title;                                     // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Column3_Visible;                                   // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2035[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CategoryId;                                        // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowAllItem;                                       // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowAlways;                                        // 0x51(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowNewItems;                                      // 0x52(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HolyTorchFlag;                                     // 0x53(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableCategoryUpdate;                              // 0x54(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2036[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xB0 (0xB8 - 0x8)
// ScriptStruct Majesty.MJListWidgetItemData
struct FMJListWidgetItemData : public FTableRowBase
{
public:
	class FText                                  ItemName;                                          // 0x8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                  ItemNameLabel;                                     // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  ItemData_0;                                        // 0x28(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  ItemData_1;                                        // 0x40(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UTexture2D*                            ItemIcon;                                          // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            ItemIcon_0;                                        // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  DetailText;                                        // 0x68(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                  DetailTextLabel;                                   // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELIST_ITEM_STATUS                 Status;                                            // 0x88(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2037[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CategoryId;                                        // 0x8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         StrikeThrough;                                     // 0x90(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2038[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ItemNum_0;                                         // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemNum_1;                                         // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELIST_ITEM_NEXT_SPACE             NextSpace;                                         // 0x9C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2039[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Option_0;                                          // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NotShowAllCategory;                                // 0xA4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DontSelectable;                                    // 0xA5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NoHelp;                                            // 0xA6(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ItemData_1_Dark;                                   // 0xA7(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            FixedEquipIcon;                                    // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HolyTorchFlag;                                     // 0xB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsItemDetailText;                                  // 0xB1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUseSubItem;                                      // 0xB2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSoldOutItem;                                     // 0xB3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_203A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x78 (0x80 - 0x8)
// ScriptStruct Majesty.MainMissionData
struct FMainMissionData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MainStoryLabel;                                    // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESTORY_TASK_TYPE                  TaskType;                                          // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayableCharacterID              TargetPCIndex;                                     // 0x15(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMissionList;                                     // 0x16(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_203B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ViewEventFlag;                                     // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddAchive;                                         // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MemoryEventLabel;                                  // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TitleTextLabel;                                    // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DetailTextLabel;                                   // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WorldMapIcon;                                      // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ProgressValue;                                     // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UnavailableFastTravel;                             // 0x44(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_203C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  AuthorizationFastTravel;                           // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventSoundLabel;                                   // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEndRollSegmentSet                EndRollSegment;                                    // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_203D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        EventObjectFlag1;                                  // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventObjectFlag2;                                  // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventObjectFlag3;                                  // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventObjectFlag4;                                  // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventObjectFlag5;                                  // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventObjectFlag6;                                  // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventObjectFlag7;                                  // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventObjectFlag8;                                  // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_203E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.MainSequenceStateParam
struct FMainSequenceStateParam
{
public:
	class UObject*                               Object;                                            // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Param0;                                            // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_203F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x38 - 0x0)
// ScriptStruct Majesty.MainSequneceRequestParam
struct FMainSequneceRequestParam
{
public:
	FDelegateProperty_                           Delegate;                                          // 0x0(0x10)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2040[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMainSequenceStateParam               StateParam;                                        // 0x20(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         IsHold;                                            // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EREQUEST_TYPE                     Type;                                              // 0x31(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2041[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct Majesty.StartWorldMapData
struct FStartWorldMapData
{
public:
	class FName                                  WMapLocation;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          RelationLevel;                                     // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        StartFlag;                                         // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EndFlag;                                           // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xD8 (0xE0 - 0x8)
// ScriptStruct Majesty.MainStoryData
struct FMainStoryData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayableCharacterID              PlayerCharaId;                                     // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2042[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  StartWMapLocation;                                 // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FStartWorldMapData>            SwitchWMapLocation;                                // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<enum class EPlayableCharacterID>      RelationCharaId;                                   // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                ReleaseFlag;                                       // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         ReleaseNoticeFlag;                                 // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2043[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SealFlag;                                          // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMAIN_STORY_CATEGORY              StoryCategory;                                     // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEXTRA_STORY_CATEGORY             ExStoryCategory;                                   // 0x51(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2044[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ChapterIndex;                                      // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ChapterText;                                       // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SubTitleText;                                      // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StoryDetailText;                                   // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OpeningEvent;                                      // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                RecommendationPoint;                               // 0x78(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        ClearDifficultyPoint;                              // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RecoverSwoonOnClear;                               // 0x8C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2045[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          RelationLevel;                                     // 0x90(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                EventFlagRange;                                    // 0xA0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                OffEventFlagRange;                                 // 0xB0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          NotVisitedOnClear;                                 // 0xC0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          VisitedOnClear;                                    // 0xD0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.MapChipBlockPosition
struct FMapChipBlockPosition
{
public:
	int32                                        M_nPosX;                                           // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        M_nPosY;                                           // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        M_nPosZ;                                           // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x60 (0x68 - 0x8)
// ScriptStruct Majesty.MapInfoData
struct FMapInfoData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2046[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Label;                                             // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MapNameID;                                         // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2047[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LevelName;                                         // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            MiniMapAsset;                                      // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RecommendMinLevel;                                 // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RecommendMaxLevel;                                 // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BGMID;                                             // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ScreenFadeInTime;                                  // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ScreenFadeOutTime;                                 // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EncountOffset;                                     // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        BattleMapNameList;                                 // 0x58(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.MillionaireModeData
struct FMillionaireModeData : public FTableRowBase
{
public:
	class FName                                  ActiveEventFlag;                                   // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                        Price;                                             // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct Majesty.MAINMENU_MISSION_RECORD_DATA
struct FMAINMENU_MISSION_RECORD_DATA
{
public:
	class FName                                  MissionLabel;                                      // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        State;                                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ClearIdx;                                          // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SaveDataIndex;                                     // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNewFlag;                                          // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsReminiscence;                                   // 0x15(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2048[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DetailTextLabel;                                   // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WorldMapIconLabel;                                 // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.StoryRecordTaskInfo
struct FStoryRecordTaskInfo
{
public:
	TArray<struct FMAINMENU_MISSION_RECORD_DATA> StoryRecordList;                                   // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct Majesty.MJActivitySaveData
struct FMJActivitySaveData
{
public:
	TMap<int32, int32>                           SubTaskStatus;                                     // 0x0(0x50)(Edit, EditConst, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.GuideData
struct FGuideData
{
public:
	enum class ECONTROL_GUIDE_BUTTON_TYPE        M_eButtonType;                                     // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2049[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  M_Name;                                            // 0x4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         M_IsForceDisplay;                                  // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_204A[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x14 (0x14 - 0x0)
// ScriptStruct Majesty.NextMapInfo
struct FNextMapInfo
{
public:
	class FName                                  MapName;                                           // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELevelTriggerID                   ReqTrigger;                                        // 0x8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_204B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MapIndex;                                          // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseFadeUI;                                         // 0x10(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELEVEL_TYPE                       LevelType;                                         // 0x11(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ChangeBGM;                                         // 0x12(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSwichActive;                                     // 0x13(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1 (0x1 - 0x0)
// ScriptStruct Majesty.SoldOutShopItemData
struct FSoldOutShopItemData
{
public:
	bool                                         IsSoldOut;                                         // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct Majesty.RevivalObjectSaveData
struct FRevivalObjectSaveData
{
public:
	int32                                        ObjectId;                                          // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentLevelChangeCount;                           // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct Majesty.PartyChatSaveData
struct FPartyChatSaveData
{
public:
	int32                                        PartyChatFlg;                                      // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        State;                                             // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Flag;                                              // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_204C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PlayedTimeZone;                                    // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayedLevelId;                                     // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.SaveDataSubTitle
struct FSaveDataSubTitle
{
public:
	int32                                        SubTitleId;                                        // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StartIndex;                                        // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ViewFlag;                                          // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_204D[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.SaveDataGuild
struct FSaveDataGuild
{
public:
	int32                                        GuildId;                                           // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AcquiredLicense;                                   // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Visited;                                           // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_204E[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.SaveFollowNpcData
struct FSaveFollowNpcData
{
public:
	int32                                        NpcUniqueID;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SupportLimit;                                      // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FieldCommandType;                                  // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MasterCharacterID;                                 // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct Majesty.MainStoryTaskSaveData
struct FMainStoryTaskSaveData
{
public:
	int32                                        PlayedTimeZone;                                    // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        State;                                             // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Flag;                                              // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_204F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                EventFlagList;                                     // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.MainStorySaveData
struct FMainStorySaveData
{
public:
	int32                                        StoryID;                                           // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentTaskID;                                     // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        State;                                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ConfirmedFlag;                                     // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2050[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct Majesty.SaveEquipmentDataID
struct FSaveEquipmentDataID
{
public:
	int32                                        Sword;                                             // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SwordFixed;                                        // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2051[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Lance;                                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         LanceFixed;                                        // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2052[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Dagger;                                            // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DaggerFixed;                                       // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2053[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Axe;                                               // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AxeFixed;                                          // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2054[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Bow;                                               // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BowFixed;                                          // 0x24(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2055[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Rod;                                               // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RodFixed;                                          // 0x2C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2056[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Shield;                                            // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShieldFixed;                                       // 0x34(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2057[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Head;                                              // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HeadFixed;                                         // 0x3C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2058[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Body;                                              // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BodyFixed;                                         // 0x44(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2059[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Accessory_00;                                      // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Accessory_00_Fixed;                                // 0x4C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_205A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Accessory_01;                                      // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Accessory_01_Fixed;                                // 0x54(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_205B[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.AcquisitionAbilityData
struct FAcquisitionAbilityData
{
public:
	TArray<bool>                                 AcquisitionFlag;                                   // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xF0 (0xF0 - 0x0)
// ScriptStruct Majesty.SavePlayerCharacterData
struct FSavePlayerCharacterData
{
public:
	int32                                        CharacterID;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Exp;                                               // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RawHP;                                             // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RawMP;                                             // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RawPOT;                                            // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FirstJobID;                                        // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SecondJobID;                                       // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        JobPoint;                                          // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSaveEquipmentDataID                  Equipment;                                         // 0x24(0x58)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_205C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                EquipSupportSkill;                                 // 0x80(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAcquisitionAbilityData>       AcquisitionAbilityList;                            // 0x90(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FAcquisitionAbilityData               AcquisitionAdvancedAbility;                        // 0xA0(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FCharacterParam                       DopingParam;                                       // 0xB0(0x34)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        PlayingMainStoryID;                                // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InterruptedMainStoryID;                            // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MainMissionProgressCnt;                            // 0xEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct Majesty.NpcEventData
struct FNpcEventData
{
public:
	bool                                         IsSwoon;                                           // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ENpcSwoonType                     SwoonType;                                         // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_205D[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<bool>                                 IsPurchasedItem;                                   // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        PurchaseRestock;                                   // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HearFlag;                                          // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETimeZoneType                     SwoonTimeZone;                                     // 0x1D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_205E[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.SubMissionMarkerData
struct FSubMissionMarkerData
{
public:
	int32                                        MapID;                                             // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MarkerPos;                                         // 0x4(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct Majesty.SaveMissionData
struct FSaveMissionData
{
public:
	TArray<int32>                                MissionState;                                      // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                ClearIndex;                                        // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<bool>                                 SubMissionNewFlag;                                 // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FSubMissionMarkerData>         SubMissionMaker;                                   // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.SaveEnemyData
struct FSaveEnemyData
{
public:
	bool                                         IsAnalyse;                                         // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_205F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        WeaknessOpen;                                      // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPreparation;                                     // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2060[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.MenuData
struct FMenuData
{
public:
	int32                                        MissionRecord_MainStartSelect;                     // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MissionRecord_ExtraStartSelect;                    // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MissionRecord_SubStartSelect;                      // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.TameMonsterData
struct FTameMonsterData
{
public:
	int32                                        EnemyID;                                           // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Count;                                             // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Used;                                              // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2061[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.MapData
struct FMapData
{
public:
	TArray<uint8>                                TreasureStateArray;                                // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x4 (0x4 - 0x0)
// ScriptStruct Majesty.TownData
struct FTownData
{
public:
	int32                                        ConnectionValue;                                   // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct Majesty.SaveBackPackItem
struct FSaveBackPackItem
{
public:
	int32                                        ItemId;                                            // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Num;                                               // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct Majesty.PlayerBackpack
struct FPlayerBackpack
{
public:
	int32                                        Money;                                             // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2062[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSaveBackPackItem>             ItemList;                                          // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.BackPackItemData
struct FBackPackItemData
{
public:
	class FName                                  ItemLabel;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Num;                                               // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct Majesty.PlayerParty
struct FPlayerParty
{
public:
	TArray<int32>                                MainMemberID;                                      // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                SubMemberID;                                       // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FVector                               CameraLockPos;                                     // 0x20(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastBgmID;                                         // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelId;                                           // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Position;                                          // 0x34(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Dir;                                               // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2063[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x28 - 0x8)
// ScriptStruct Majesty.MyShipFlipbookData
struct FMyShipFlipbookData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMYSHIP_CUSTOM_TYPE               ColorType;                                         // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMYSHIP_CUSTOM_TYPE               SailType;                                          // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2064[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FlipbookName;                                      // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MeshResourceLabel;                                 // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  OpenSailMeshResourceLabel;                         // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct Majesty.NarrationTextGroup
struct FNarrationTextGroup
{
public:
	int32                                        GroupID;                                           // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Text;                                              // 0x4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Justification;                                     // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DisableFadeAnimation;                              // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2065[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x38 (0x40 - 0x8)
// ScriptStruct Majesty.NarrationDataBase
struct FNarrationDataBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NarrationSet;                                      // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HeightCentering;                                   // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFrame;                                         // 0x15(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowBackground;                                    // 0x16(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2066[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FlashbackLabel;                                    // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FlashbackColor;                                    // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2067[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FNarrationTextGroup>           TextGroup;                                         // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        AutoNextTime;                                      // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2068[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x30 - 0x8)
// ScriptStruct Majesty.NextPurposeData
struct FNextPurposeData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BelongMainStory;                                   // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShowStartFlag;                                     // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShowEndFlag;                                       // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TextLabel;                                         // 0x1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowMessage;                                       // 0x24(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2069[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ShowFlag;                                          // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_206A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.NoticeDelegateBP_Data
struct FNoticeDelegateBP_Data
{
public:
	uint8                                        Pad_206B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xE0 (0xE8 - 0x8)
// ScriptStruct Majesty.NPCBattleData
struct FNPCBattleData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CommandEnable;                                     // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyGroupID;                                      // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                WinEventFlag;                                      // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                LoseEventFlag;                                     // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         CanSwoon;                                          // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_206C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SwoonTalkID;                                       // 0x3C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SleepTalkID;                                       // 0x44(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_206D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          SwoonRecLevel;                                     // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         SwoonRecTimeZoneChange;                            // 0x60(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_206E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                SwooningFlags;                                     // 0x68(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        BattleNeedLevel;                                   // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BattlePCTalk;                                      // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PreBattleTalkID;                                   // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PreBattleEventID;                                  // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LoseBattleTalkID;                                  // 0x90(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LearnAbility;                                      // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDeathMatch;                                      // 0xA0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsGameOverWhenLoose;                               // 0xA1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_206F[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          AdditionalTargetNpc;                               // 0xA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IsIgnoreLeanAbility;                               // 0xB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2070[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BeforeMonsterEventID;                              // 0xBC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PreMonsterTalkID;                                  // 0xC4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LooseMonsterTalkID;                                // 0xCC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AssassinateNeedLevel;                              // 0xD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DoseItemID;                                        // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DoseItemNum;                                       // 0xE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2071[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x28 (0x30 - 0x8)
// ScriptStruct Majesty.NPCCheckData
struct FNPCCheckData : public FTableRowBase
{
public:
	int32                                        LogicalType;                                       // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2072[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                FlagList;                                          // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<bool>                                 FlagEnableList;                                    // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x78 (0x80 - 0x8)
// ScriptStruct Majesty.NPCData
struct FNPCData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TextLabel;                                         // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NPC_UnqIndex;                                      // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActionID;                                          // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FaintAction;                                       // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2073[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                UsePathLabel;                                      // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IgnoreRelation;                                    // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2074[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  WorseRelationTextLabel;                            // 0x3C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FCmd_Purchase_ID;                                  // 0x44(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FCmd_Lure_ID;                                      // 0x4C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FCmd_Battle_ID;                                    // 0x54(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FCmd_Search_ID;                                    // 0x5C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FCmd_RecoverArea;                                  // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FCmd_EnemyGroup;                                   // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FCmd_UseBattleMapIndex;                            // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TextInfoLabel;                                     // 0x74(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsNotWorsenRelation;                               // 0x7C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFieldCommandSpecialPopupType     FcSpecialPopupType;                                // 0x7D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2075[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xA0 (0xA8 - 0x8)
// ScriptStruct Majesty.NPCHearDataBase
struct FNPCHearDataBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CommandEnable;                                     // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          HearInfoIDs;                                       // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        Age;                                               // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HistoryTextID;                                     // 0x24(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HearNeedLevel;                                     // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SpecialFlag;                                       // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2076[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SearchBaseProbability;                             // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SearchLockLevel;                                   // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SearchFailedTalkID;                                // 0x3C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BriberyBuyPrice;                                   // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RevealBeforeEventID;                               // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RevealEnemyGroupID;                                // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                RevealWinEventFlag;                                // 0x58(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                RevealLoseEventFlag;                               // 0x68(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  RevealSwapTargetPlacementLabel;                    // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SetHiddenAfterReveal;                              // 0x80(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2077[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SpecialHearDay_01;                                 // 0x84(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpecialHearDay_02;                                 // 0x8C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpecialHearEvening_01;                             // 0x94(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpecialHearEvening_02;                             // 0x9C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2078[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.NPCHearInfoDataBase
struct FNPCHearInfoDataBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ItemId;                                            // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventFlag;                                         // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NotificationID;                                    // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x60 - 0x8)
// ScriptStruct Majesty.NPCInfoData
struct FNPCInfoData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CharacterID;                                       // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Name;                                              // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            FaceIconTexture;                                   // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActionID;                                          // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TownID;                                            // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IgnoreConnection;                                  // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2079[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        ConnectionTalkList;                                // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        ConnectionBalloonType;                             // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PurchaseID;                                        // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BattleID;                                          // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SearchID;                                          // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LureID;                                            // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_207A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xA0 (0xA8 - 0x8)
// ScriptStruct Majesty.NPCLureInfoData
struct FNPCLureInfoData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FollowFlag;                                        // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LeadNeedLevel;                                     // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LureBaseProbability;                               // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SubRelation;                                       // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_207B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        LeadSuccessTalkList;                               // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        LeadSuccessBalloonType;                            // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_207C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        LeadReleaseTalkList;                               // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        LeadReleaseTalkBalloonType;                        // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_207D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        SuccessTalkList;                                   // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        SuccessBalloonType;                                // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_207E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        FailedTalkList;                                    // 0x68(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        FailedTalkBalloonType;                             // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_207F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        ReleaseTalkList;                                   // 0x80(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        ReleaseTalkBalloonType;                            // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2080[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                BattleDataID;                                      // 0x98(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x40 (0x48 - 0x8)
// ScriptStruct Majesty.NPCSearchInfoData
struct FNPCSearchInfoData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InfoFlag;                                          // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HearNeedLevel;                                     // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SearchBase;                                        // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SubRelation;                                       // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SearchLock;                                        // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                InfoDataList;                                      // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        SearchFailedTalkList;                              // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        SearchFailedBalloonType;                           // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2081[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x120 (0x128 - 0x8)
// ScriptStruct Majesty.NPCBattleInfoData
struct FNPCBattleInfoData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BattleFlag;                                        // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SubRelation;                                       // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2082[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          EnemyID;                                           // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                PositionID;                                        // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        NeedLevel;                                         // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanSwoon;                                          // 0x3C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2083[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SwoonOffsetPosX;                                   // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwoonOffsetPosY;                                   // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwoonOffsetPosZ;                                   // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2084[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<bool>                                 FlagList;                                          // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                        NotBattleTalkList;                                 // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        NotBattleBalloonType;                              // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2085[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        ShortageLevelTalkList;                             // 0x78(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        ShortageLevelBalloonType;                          // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2086[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        PreBattleTalkList;                                 // 0x90(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        PreBattleBalloonType;                              // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2087[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        LoseTalkList;                                      // 0xA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        LoseBalloonType;                                   // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2088[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        WinTalkList;                                       // 0xC0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        WinBalloonType;                                    // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2089[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        PreMonsterTalkList;                                // 0xD8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        PreMonsterBalloonType;                             // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_208A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        WinAMonsterTalkList;                               // 0xF0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        WinAMonsterBalloonType;                            // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_208B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        SwoontTalkList;                                    // 0x108(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        SwoontBalloonType;                                 // 0x118(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSwoonPlayerTalk;                                 // 0x11C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_208C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        EventFlagIndex;                                    // 0x120(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EventFlagSwitch;                                   // 0x124(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_208D[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x70 - 0x8)
// ScriptStruct Majesty.NPCPurchaseInfoData
struct FNPCPurchaseInfoData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_208E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                PurchaseItemList;                                  // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        SubRelation;                                       // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_208F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        BuyTalkList;                                       // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        BuyBalloonType;                                    // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2090[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        StealSuccessTalkList;                              // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        StealSuccessBalloonType;                           // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2091[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        StealFailedTalkList;                               // 0x58(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        StealFailedBalloonType;                            // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2092[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.PlacateNeedItem
struct FPlacateNeedItem
{
public:
	class FName                                  ItemLabel;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemNum;                                           // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xA8 (0xB0 - 0x8)
// ScriptStruct Majesty.NPCLeadDataBase
struct FNPCLeadDataBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CommandEnable;                                     // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SupporterID;                                       // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BanFastTravelInFollowing;                          // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2093[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                UnFollowingFlags;                                  // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                FollowingFlags;                                    // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IgnoreFollowProcess;                               // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         StoryNpc;                                          // 0x41(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2094[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LeadNeedLevel;                                     // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeadSuccessTalkID;                                 // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeadReleaseTalkID;                                 // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LureBaseProbability;                               // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LureSuccesTalkID;                                  // 0x5C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LureFailedTalkID;                                  // 0x64(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LureReleaseTalkID;                                 // 0x6C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HirePrice;                                         // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HireSuccesTalkID;                                  // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HireReleaseTalkID;                                 // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPlacateNeedItem>              PlacateNeedItems;                                  // 0x88(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  PlacateSuccesTalkID;                               // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlacateReleaseTalkID;                              // 0xA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpActionMerchant;                                  // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x50 - 0x8)
// ScriptStruct Majesty.NPCPurchaseDataBase
struct FNPCPurchaseDataBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CommandEnable;                                     // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ShopID;                                            // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PurchaseBuyTalkID;                                 // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StealSuccessTalkID;                                // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StealFailedTalkID;                                 // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BegSuccessTalkID;                                  // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RobEnemyGroupID;                                   // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RobBeforeTalkID;                                   // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RobBeforeEventID;                                  // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct Majesty.NPCSpawnEventFlag
struct FNPCSpawnEventFlag
{
public:
	int32                                        Index;                                             // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Flag;                                              // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2095[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x30 (0x38 - 0x8)
// ScriptStruct Majesty.NPCSpawnData
struct FNPCSpawnData : public FTableRowBase
{
public:
	TArray<struct FNPCSpawnEventFlag>            EventFlag;                                         // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         CheckOR;                                           // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDelete;                                          // 0x19(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2096[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Offset;                                            // 0x1C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventID;                                           // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventName;                                         // 0x2C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2097[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x20 - 0x0)
// ScriptStruct Majesty.ObjectVisibilityData
struct FObjectVisibilityData
{
public:
	uint8                                        Pad_2098[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x48 - 0x8)
// ScriptStruct Majesty.OptionItemData
struct FOptionItemData : public FTableRowBase
{
public:
	enum class EOPTION_ITEM_KIND                 OptionKind;                                        // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         OnlyPC;                                            // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2099[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ItemText1;                                         // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ItemText2;                                         // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DescriptionText;                                   // 0x1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOPTION_WIDGET_KIND               WidgetKind;                                        // 0x24(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_209A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DefaultValue;                                      // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Icon;                                              // 0x2C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_209B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          ItemTextList;                                      // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.OptionGroupData
struct FOptionGroupData : public FTableRowBase
{
public:
	class FName                                  GroupTitle;                                        // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOptionItemData>               ItemData;                                          // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.OptionItemLabelSet
struct FOptionItemLabelSet : public FTableRowBase
{
public:
	class FName                                  ItemText1;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ItemText2;                                         // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.WidgetFlipbookAnimeInfo
struct FWidgetFlipbookAnimeInfo : public FTableRowBase
{
public:
	enum class EKSCharacterAction                Action;                                            // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterDir                   Dir;                                               // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_209C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             DrawSize;                                          // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_209D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x60 (0x68 - 0x8)
// ScriptStruct Majesty.PartyChat
struct FPartyChat : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventLabel;                                        // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPARTY_CHAT_TYPE                  PartyChatType;                                     // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_209E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MainStoryTaskBegin;                                // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MainStoryTaskEnd;                                  // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          OccurLevelLabels;                                  // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  TitleTextLabel;                                    // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RelatedMainStory;                                  // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class EPlayableCharacterID>      RequiredCharacter;                                 // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         IgnoreRequiredCharacter;                           // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_209F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NeedLevelChangeCount;                              // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BurnTorchCountLimit;                               // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsIgnoreFixedPartyMode;                            // 0x64(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20A0[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x94 (0x94 - 0x0)
// ScriptStruct Majesty.PartyFollowData
struct FPartyFollowData
{
public:
	uint8                                        Pad_20A1[0x94];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x6F8 (0x700 - 0x8)
// ScriptStruct Majesty.PlacementData
struct FPlacementData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        PlacementType;                                     // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20A2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MainScenarioType;                                  // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MainScenarioID;                                    // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ResourceLabel;                                     // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         InvalidRadarIcon;                                  // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IgnoreGravity;                                     // 0x21(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IndoorFlag;                                        // 0x22(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20A3[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        HouseInFloor;                                      // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TriggerScaleX;                                     // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TriggerScaleY;                                     // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TriggerScaleZ;                                     // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnStartFlag;                                    // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnEndFlag;                                      // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETIMEZONE_TRIGGER_TYPE            TimeZoneSpawnType;                                 // 0x3C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20A4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SpawnStartDelayCount;                              // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnEndDelayCount;                                // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayableCharacterID              CompProloguePlayerID;                              // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NorSpawnPrologue;                                  // 0x49(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NotSpawnFinal;                                     // 0x4A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20A5[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          NotCoexistencePlacementLabel;                      // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                SpawnDir;                                          // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnPosX;                                         // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnPosY;                                         // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnPosZ;                                         // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FaintSpawnPosX;                                    // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FaintSpawnPosY;                                    // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FaintSpawnPosZ;                                    // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EmotionOffsetX;                                    // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EmotionOffsetY;                                    // 0x8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EmotionOffsetZ;                                    // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CaptionTextLabel;                                  // 0x94(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        SinglePlayMotion;                                  // 0x9C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20A6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Emotion;                                           // 0xA0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Permission_FCmd;                                   // 0xB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20A7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AllowBanFlag_FCmd;                                 // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FixDirInFieldCommand;                              // 0xB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20A8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EventType_A;                                       // 0xC0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventStartFlag_A;                                  // 0xD0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventEndFlag_A;                                    // 0xD4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETIMEZONE_TRIGGER_TYPE            TimeZoneTriggerType_A;                             // 0xD8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20A9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EventParam_A_1_ID;                                 // 0xDC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_1;                                    // 0xE4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_2_ID;                                 // 0xEC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_2;                                    // 0xF4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_3_ID;                                 // 0xFC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_3;                                    // 0x104(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_4_ID;                                 // 0x10C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_4;                                    // 0x114(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_5_ID;                                 // 0x11C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_5;                                    // 0x124(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_6_ID;                                 // 0x12C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_6;                                    // 0x134(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_7_ID;                                 // 0x13C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_7;                                    // 0x144(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_8_ID;                                 // 0x14C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_8;                                    // 0x154(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_9_ID;                                 // 0x15C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_9;                                    // 0x164(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_10_ID;                                // 0x16C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_A_10;                                   // 0x174(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventLabel_A;                                      // 0x17C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20AA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EventType_B;                                       // 0x188(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventStartFlag_B;                                  // 0x198(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventEndFlag_B;                                    // 0x19C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETIMEZONE_TRIGGER_TYPE            TimeZoneTriggerType_B;                             // 0x1A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20AB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EventParam_B_1_ID;                                 // 0x1A4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_1;                                    // 0x1AC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_2_ID;                                 // 0x1B4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_2;                                    // 0x1BC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_3_ID;                                 // 0x1C4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_3;                                    // 0x1CC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_4_ID;                                 // 0x1D4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_4;                                    // 0x1DC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_5_ID;                                 // 0x1E4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_5;                                    // 0x1EC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_6_ID;                                 // 0x1F4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_6;                                    // 0x1FC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_7_ID;                                 // 0x204(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_7;                                    // 0x20C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_8_ID;                                 // 0x214(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_8;                                    // 0x21C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_9_ID;                                 // 0x224(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_9;                                    // 0x22C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_10_ID;                                // 0x234(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_B_10;                                   // 0x23C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventLabel_B;                                      // 0x244(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20AC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EventType_C;                                       // 0x250(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventStartFlag_C;                                  // 0x260(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventEndFlag_C;                                    // 0x264(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETIMEZONE_TRIGGER_TYPE            TimeZoneTriggerType_C;                             // 0x268(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20AD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EventParam_C_1_ID;                                 // 0x26C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_1;                                    // 0x274(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_2_ID;                                 // 0x27C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_2;                                    // 0x284(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_3_ID;                                 // 0x28C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_3;                                    // 0x294(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_4_ID;                                 // 0x29C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_4;                                    // 0x2A4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_5_ID;                                 // 0x2AC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_5;                                    // 0x2B4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_6_ID;                                 // 0x2BC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_6;                                    // 0x2C4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_7_ID;                                 // 0x2CC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_7;                                    // 0x2D4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_8_ID;                                 // 0x2DC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_8;                                    // 0x2E4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_9_ID;                                 // 0x2EC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_9;                                    // 0x2F4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_10_ID;                                // 0x2FC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_C_10;                                   // 0x304(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventLabel_C;                                      // 0x30C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20AE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EventType_D;                                       // 0x318(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventStartFlag_D;                                  // 0x328(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventEndFlag_D;                                    // 0x32C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETIMEZONE_TRIGGER_TYPE            TimeZoneTriggerType_D;                             // 0x330(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20AF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EventParam_D_1_ID;                                 // 0x334(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_1;                                    // 0x33C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_2_ID;                                 // 0x344(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_2;                                    // 0x34C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_3_ID;                                 // 0x354(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_3;                                    // 0x35C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_4_ID;                                 // 0x364(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_4;                                    // 0x36C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_5_ID;                                 // 0x374(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_5;                                    // 0x37C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_6_ID;                                 // 0x384(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_6;                                    // 0x38C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_7_ID;                                 // 0x394(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_7;                                    // 0x39C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_8_ID;                                 // 0x3A4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_8;                                    // 0x3AC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_9_ID;                                 // 0x3B4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_9;                                    // 0x3BC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_10_ID;                                // 0x3C4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_D_10;                                   // 0x3CC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventLabel_D;                                      // 0x3D4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EventType_E;                                       // 0x3E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventStartFlag_E;                                  // 0x3F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventEndFlag_E;                                    // 0x3F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETIMEZONE_TRIGGER_TYPE            TimeZoneTriggerType_E;                             // 0x3F8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EventParam_E_1_ID;                                 // 0x3FC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_1;                                    // 0x404(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_2_ID;                                 // 0x40C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_2;                                    // 0x414(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_3_ID;                                 // 0x41C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_3;                                    // 0x424(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_4_ID;                                 // 0x42C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_4;                                    // 0x434(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_5_ID;                                 // 0x43C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_5;                                    // 0x444(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_6_ID;                                 // 0x44C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_6;                                    // 0x454(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_7_ID;                                 // 0x45C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_7;                                    // 0x464(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_8_ID;                                 // 0x46C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_8;                                    // 0x474(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_9_ID;                                 // 0x47C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_9;                                    // 0x484(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_10_ID;                                // 0x48C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_E_10;                                   // 0x494(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventLabel_E;                                      // 0x49C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EventType_F;                                       // 0x4A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventStartFlag_F;                                  // 0x4B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventEndFlag_F;                                    // 0x4BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETIMEZONE_TRIGGER_TYPE            TimeZoneTriggerType_F;                             // 0x4C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EventParam_F_1;                                    // 0x4C4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_F_2;                                    // 0x4CC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_F_3;                                    // 0x4D4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_F_4;                                    // 0x4DC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_F_5;                                    // 0x4E4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_F_6;                                    // 0x4EC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_F_7;                                    // 0x4F4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_F_8;                                    // 0x4FC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_F_9;                                    // 0x504(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_F_10;                                   // 0x50C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventLabel_F;                                      // 0x514(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EventType_G;                                       // 0x520(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventStartFlag_G;                                  // 0x530(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventEndFlag_G;                                    // 0x534(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETIMEZONE_TRIGGER_TYPE            TimeZoneTriggerType_G;                             // 0x538(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EventParam_G_1;                                    // 0x53C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_G_2;                                    // 0x544(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_G_3;                                    // 0x54C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_G_4;                                    // 0x554(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_G_5;                                    // 0x55C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_G_6;                                    // 0x564(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_G_7;                                    // 0x56C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_G_8;                                    // 0x574(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_G_9;                                    // 0x57C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_G_10;                                   // 0x584(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventLabel_G;                                      // 0x58C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EventType_H;                                       // 0x598(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventStartFlag_H;                                  // 0x5A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventEndFlag_H;                                    // 0x5AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETIMEZONE_TRIGGER_TYPE            TimeZoneTriggerType_H;                             // 0x5B0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EventParam_H_1;                                    // 0x5B4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_H_2;                                    // 0x5BC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_H_3;                                    // 0x5C4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_H_4;                                    // 0x5CC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_H_5;                                    // 0x5D4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_H_6;                                    // 0x5DC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_H_7;                                    // 0x5E4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_H_8;                                    // 0x5EC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_H_9;                                    // 0x5F4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_H_10;                                   // 0x5FC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventLabel_H;                                      // 0x604(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EventType_I;                                       // 0x610(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventStartFlag_I;                                  // 0x620(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventEndFlag_I;                                    // 0x624(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETIMEZONE_TRIGGER_TYPE            TimeZoneTriggerType_I;                             // 0x628(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20B9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EventParam_I_1;                                    // 0x62C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_I_2;                                    // 0x634(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_I_3;                                    // 0x63C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_I_4;                                    // 0x644(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_I_5;                                    // 0x64C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_I_6;                                    // 0x654(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_I_7;                                    // 0x65C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_I_8;                                    // 0x664(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_I_9;                                    // 0x66C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_I_10;                                   // 0x674(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventLabel_I;                                      // 0x67C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20BA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EventType_J;                                       // 0x688(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventStartFlag_J;                                  // 0x698(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventEndFlag_J;                                    // 0x69C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETIMEZONE_TRIGGER_TYPE            TimeZoneTriggerType_J;                             // 0x6A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20BB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EventParam_J_1;                                    // 0x6A4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_J_2;                                    // 0x6AC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_J_3;                                    // 0x6B4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_J_4;                                    // 0x6BC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_J_5;                                    // 0x6C4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_J_6;                                    // 0x6CC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_J_7;                                    // 0x6D4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_J_8;                                    // 0x6DC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_J_9;                                    // 0x6E4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_J_10;                                   // 0x6EC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventLabel_J;                                      // 0x6F4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20BC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.PlacementLabelInfo
struct FPlacementLabelInfo : public FTableRowBase
{
public:
	TArray<class FName>                          PlaceLabelArray;                                   // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.RefereshFlagChangeParam
struct FRefereshFlagChangeParam
{
public:
	class FName                                  FlagLabel;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FlagStaus;                                         // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20BD[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x80 (0x80 - 0x0)
// ScriptStruct Majesty.PlacementEventParamSet
struct FPlacementEventParamSet
{
public:
	int32                                        ParamSetIndex;                                     // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20BE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EventType;                                         // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventStartFlag;                                    // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EventEndFlag;                                      // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETIMEZONE_TRIGGER_TYPE            TimeZoneTriggerType;                               // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20BF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EventParam_1;                                      // 0x24(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_2;                                      // 0x2C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_3;                                      // 0x34(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_4;                                      // 0x3C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_5;                                      // 0x44(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_6;                                      // 0x4C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_7;                                      // 0x54(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_8;                                      // 0x5C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_9;                                      // 0x64(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventParam_10;                                     // 0x6C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventLabel;                                        // 0x74(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20C0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x60 - 0x8)
// ScriptStruct Majesty.SaveEquipmentData
struct FSaveEquipmentData : public FTableRowBase
{
public:
	class FName                                  Sword;                                             // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Lance;                                             // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Dagger;                                            // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Axe;                                               // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Bow;                                               // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Rod;                                               // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Shield;                                            // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Head;                                              // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Body;                                              // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Accessory_00;                                      // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Accessory_01;                                      // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x1B0 (0x1B8 - 0x8)
// ScriptStruct Majesty.PlayableCharacterData
struct FPlayableCharacterData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DisplayName;                                       // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECharacterRole                    CharacterRole;                                     // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20C1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          ResourceLabel;                                     // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  GuestResourceLabel;                                // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          VoiceCueSheet_ja;                                  // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          VoiceCueSheet_en;                                  // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  VoiceSet;                                          // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class ESpecialActionType>        SpecialActionList;                                 // 0x58(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  PotentialityActionLabel;                           // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SecondPotentialityActionLabel;                     // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SecondPotentialityActionFlag;                      // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBATTLE_STYLE_TYPE                UniqueStyle;                                       // 0x7C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20C2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ReleaseStyleFlag;                                  // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StyleAvailableCount;                               // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InitLevel;                                         // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterParam                       ParameterRevision;                                 // 0x8C(0x34)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	enum class EWEAPON_STANCE                    WeaponStance;                                      // 0xC0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWEAPON_CATEGORY                  MainWeapon;                                        // 0xC1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20C3[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSaveEquipmentData                    FirstEquipment;                                    // 0xC8(0x60)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	enum class EJOB_TYPE                         FirstJob;                                          // 0x128(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20C4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFieldCommandInfo                     FieldCommandInfo;                                  // 0x130(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        MainMissionPlayingFlag;                            // 0x148(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SymbolLabel;                                       // 0x14C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SymbolWhLabel;                                     // 0x154(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DayPortraitLabel;                                  // 0x15C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DayPortraitBgLabel;                                // 0x164(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NightPortraitLabel;                                // 0x16C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NightPortraitBgLabel;                              // 0x174(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PortraitNameLabel;                                 // 0x17C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20C5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAdvancedAbility>              AdvancedAbility;                                   // 0x188(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  TextInfoLabel;                                     // 0x198(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterCostumeInfo>         CostumeList;                                       // 0x1A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  CharmEnemyLabel;                                   // 0x1B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.PlayAction
struct FPlayAction
{
public:
	enum class EKSCharacterAction                ActionID;                                          // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20C6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        StartFrame;                                        // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Force;                                             // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterAnimationLoop         ManualLoop;                                        // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20C7[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xB8 (0xC0 - 0x8)
// ScriptStruct Majesty.CharacterActionResource
struct FCharacterActionResource : public FTableRowBase
{
public:
	TArray<TSoftObjectPtr<class UPaperFlipbook>> FrActionList;                                      // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UPaperFlipbook>> ReActionList;                                      // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UPaperFlipbook>> LeActionList;                                      // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UPaperFlipbook>> RiActionList;                                      // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<bool>                                 Loop;                                              // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        Height;                                            // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TemplateSocket;                                    // 0x5C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20C8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  WalkFootstep;                                      // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedWalk;                                         // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedRun;                                          // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          ActionFootStep;                                    // 0x70(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<float>                                ActionFootStepInterval;                            // 0x80(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                        LargeIconOffsetX;                                  // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LargeIconOffsetY;                                  // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LargeIconInvertOffsetX;                            // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SmallIconOffsetX;                                  // 0x9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SmallIconOffsetY;                                  // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SmallIconInvertOffsetX;                            // 0xA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TabIconOffsetX;                                    // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TabIconOffsetY;                                    // 0xAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InvadeListOffsetX;                                 // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InvadeListOffsetY;                                 // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InvadeListScale;                                   // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20C9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x1C (0x1C - 0x0)
// ScriptStruct Majesty.PlayerLocation
struct FPlayerLocation
{
public:
	class FName                                  LevelName;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               Position;                                          // 0x8(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LevelId;                                           // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        RecentLevelTriggerId;                              // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EKSCharacterDir                   Dir;                                               // 0x19(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20CA[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct Majesty.PlayerMoveHistory
struct FPlayerMoveHistory
{
public:
	struct FVector                               VLocation;                                         // 0x0(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        NDir;                                              // 0xC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20CB[0x9];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EKSCharacterMoveMode              EMoveMode;                                         // 0x16(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20CC[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.PlayerVoiceList
struct FPlayerVoiceList : public FTableRowBase
{
public:
	TArray<class FName>                          VoiceLabel;                                        // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.PlayerVoiceSet
struct FPlayerVoiceSet : public FTableRowBase
{
public:
	TArray<struct FPlayerVoiceList>              VoiceList;                                         // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x78 (0x80 - 0x8)
// ScriptStruct Majesty.PotentialityActionData
struct FPotentialityActionData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ReleaseFlag;                                       // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NameTextInMenu;                                    // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DetailTextInMenu;                                  // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NameTextinBattle;                                  // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DetailTextInBattle;                                // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DetailTextInPlayerSelect;                          // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPOTENTIALITY_ACTION_TYPE         ActionType;                                        // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20CD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ActionPointInit;                                   // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActionPointMax;                                    // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20CE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          AddAbilityList;                                    // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FLinearColor                          EffectColor;                                       // 0x58(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GageIconLabel;                                     // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  GageEffectTexLabel;                                // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AuraEffectLabel;                                   // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xC8 (0xD0 - 0x8)
// ScriptStruct Majesty.PreparationData
struct FPreparationData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PreparationID;                                     // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DisplayName;                                       // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BuildUpDisplayName;                                // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Detail;                                            // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Material;                                          // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EATTRIBUTE_TYPE                   Attribute;                                         // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20CF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BaseCount;                                         // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBATTLE_ACTION_ORDER_ESTIMATE_TYPE EstimateOrderType;                                 // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBATTLE_ACTION_ORDER_ESTIMATE_TYPE BuildUpEstimateOrderType;                          // 0x39(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        EstimateOrderCount;                                // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAilmentHandler>               Ailment;                                           // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAilmentHandler>               BuildUpAilment;                                    // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ULevelSequence>         ActionCommandSequencer;                            // 0x60(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class ULevelSequence>         BuildUpSequencer;                                  // 0x88(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsBuildUp;                                         // 0xB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSpread;                                          // 0xB1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsRandom;                                          // 0xB2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D1[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          AbilitySE;                                         // 0xB8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class ETIMEZONE_TRIGGER_TYPE            TimeZoneTrigger;                                   // 0xC8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x58 - 0x0)
// ScriptStruct Majesty.OptionalParts
struct FOptionalParts
{
public:
	class UStaticMesh*                           M_cOptionalParts;                                  // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cOptionalPartsLeft;                              // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cOptionalPartsRight;                             // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               M_vPosition;                                       // 0x18(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         M_bIsSnapGrid;                                     // 0x24(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               M_vOffset;                                         // 0x28(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              M_qRotate;                                         // 0x34(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         M_bIsPatternX;                                     // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         M_bIsPatternY;                                     // 0x41(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         M_bIsPatternAround;                                // 0x42(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         M_bIsPatternBack;                                  // 0x43(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               M_vInterval;                                       // 0x44(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         M_bIsOverlapPost;                                  // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xE8 (0xE8 - 0x0)
// ScriptStruct Majesty.ProceduralBuildingMeshDataSet
struct FProceduralBuildingMeshDataSet
{
public:
	class UStaticMesh*                           M_cGroundPost;                                     // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cGroundLoopX;                                    // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cGroundLoopY;                                    // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cWallPost;                                       // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cWallLoopX;                                      // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cWallLoopY;                                      // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofEdgeStart;                                  // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofEdgeLoop;                                   // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofEdgeLoop2;                                  // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofEdgeEnd;                                    // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofCenterStart;                                // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofCenterLoop;                                 // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofCenterLoop2;                                // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofCenterEnd;                                  // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofTopEventStart;                              // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofTopEventLoop;                               // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofTopEventLoop2;                              // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofTopEventEnd;                                // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofTopOddStart;                                // 0x90(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofTopOddLoop;                                 // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofTopOddLoop2;                                // 0xA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofTopOddEnd;                                  // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofSideLeft;                                   // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofSideLoop;                                   // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofSideRight;                                  // 0xC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofSidePost;                                   // 0xC8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofSideTop;                                    // 0xD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofSideLoopRight;                              // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           M_cRoofSideLoopLeft;                               // 0xE0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.PlantResourceData
struct FPlantResourceData
{
public:
	class UStaticMesh*                           M_Mesh;                                            // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        M_Ratio;                                           // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        M_GenerateNum;                                     // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.ProcessItemNum
struct FProcessItemNum : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                NumTable;                                          // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.PS5VibrationData
struct FPS5VibrationData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoundWave*                            VibrationAsset;                                    // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x58 (0x60 - 0x8)
// ScriptStruct Majesty.PurchaseItemInfoData
struct FPurchaseItemInfoData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ItemLabel;                                         // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FCPrice;                                           // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PossibleItemLabel;                                 // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ObtainFlag;                                        // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ProperSteal;                                       // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ProperBeg;                                         // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELineupTime                       LineupTime;                                        // 0x2C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                VisibleFlags;                                      // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                HiddenFlags;                                       // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  MillionaireModeLavel;                              // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUnlimited;                                       // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BeSoldOut;                                         // 0x59(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D8[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct Majesty.DestinationData
struct FDestinationData
{
public:
	enum class ELevelTriggerID                   TriggerID;                                         // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20D9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                HideIconFlag;                                      // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct Majesty.RadarMapDestinationData
struct FRadarMapDestinationData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MainStoryTask;                                     // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LevelName;                                         // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ELEVEL_AREA_TYPE                  LevelAreaType;                                     // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20DA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FDestinationData>              DestinationList;                                   // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x2C (0x2C - 0x0)
// ScriptStruct Majesty.RadarMapDisplayData
struct FRadarMapDisplayData
{
public:
	class FName                                  PlacementLabel;                                    // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EOBJ_TYPE                         ObjectType;                                        // 0x8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20DB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Location;                                          // 0xC(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETIMEZONE_TRIGGER_TYPE            TimezoneType;                                      // 0x18(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20DC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        IconIndex;                                         // 0x1C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventLabel;                                        // 0x20(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EEventKind                        EventKind;                                         // 0x28(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20DD[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0xC (0xC - 0x0)
// ScriptStruct Majesty.RadarMapNextTargetData
struct FRadarMapNextTargetData
{
public:
	bool                                         IsFirstTrigger;                                    // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        NextTriggerID;                                     // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20DE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ProgressLabel;                                     // 0x4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x48 (0x48 - 0x0)
// ScriptStruct Majesty.RadarMapIconParam
struct FRadarMapIconParam
{
public:
	uint8                                        IconType;                                          // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ERADARMAP_ICON_OBJ_TYPE           ObjType;                                           // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20DF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  IconName;                                          // 0x4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NextFieldName;                                     // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RegistObjectName;                                  // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        LevelTriggerID;                                    // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Position;                                          // 0x20(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGameColor                        GameColorType;                                     // 0x2C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGameColor                        RippleColorType;                                   // 0x2D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TargetFrameIndex;                                  // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TreasureBoxIndex;                                  // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsVisibility;                                      // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TargetCharaID;                                     // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DestinationLabel;                                  // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct Majesty.RadarMapSubStoryData
struct FRadarMapSubStoryData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        StartEventFlag;                                    // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EndEventFlag;                                      // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TargetLevelLabel;                                  // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESUB_STORY_RADAR_ICON_TYPE        RadarMapIconType;                                  // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ELevelTriggerID>           TriggerID;                                         // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct Majesty.ReminiscenceCharaData
struct FReminiscenceCharaData
{
public:
	enum class EPlayableCharacterID              StartCharaID;                                      // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayableCharacterID              MergeCharaID;                                      // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Level;                                             // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.ReminiscenceMergeSetting
struct FReminiscenceMergeSetting : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EREMINISCENCE_MERGE_TYPE>  MergeType;                                         // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x58 (0x60 - 0x8)
// ScriptStruct Majesty.ReminiscenceSetting
struct FReminiscenceSetting : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPrologue;                                        // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FReminiscenceCharaData>        CharacterData;                                     // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        FirstMoney;                                        // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          FirstBackpackItemLabel;                            // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                FirstBackpackItemNum;                              // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          ItemOnSkipReminiscence;                            // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  MergeSettingLabel;                                 // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x20 - 0x0)
// ScriptStruct Majesty.JumpFrameSet
struct FJumpFrameSet
{
public:
	int32                                        KEN;                                               // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        KAR;                                               // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        KUS;                                               // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Sin;                                               // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SHO;                                               // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GAK;                                               // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TOU;                                               // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ODO;                                               // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x8 - 0x0)
// ScriptStruct Majesty.ReminiscenceBufferBase
struct FReminiscenceBufferBase
{
public:
	uint8                                        Pad_20E8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.ReminiscenceBufferPOT
struct FReminiscenceBufferPOT : public FReminiscenceBufferBase
{
public:
	TArray<int32>                                Org_POT;                                           // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.ReminiscenceBufferTimeZone
struct FReminiscenceBufferTimeZone : public FReminiscenceBufferBase
{
public:
	enum class ETimeZoneType                     Org_TimeZoneType;                                  // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20E9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Org_TimeZonePos;                                   // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELEVEL_DARK_STATE                 Org_LevelDarkState;                                // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20EA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x20 (0x28 - 0x8)
// ScriptStruct Majesty.ReminiscenceBufferTameMonster
struct FReminiscenceBufferTameMonster : public FReminiscenceBufferBase
{
public:
	TArray<struct FTameMonsterData>              Org_TameMonster;                                   // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTameMonsterData>              Org_LegendTameMonster;                             // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct Majesty.ReminiscenceBufferFollowNpc
struct FReminiscenceBufferFollowNpc : public FReminiscenceBufferBase
{
public:
	TArray<struct FSaveFollowNpcData>            Org_FollowNpc;                                     // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSaveFollowNpcData>            Org_FollowWaitingNpc;                              // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.ReminiscenceBufferLearnAbility
struct FReminiscenceBufferLearnAbility : public FReminiscenceBufferBase
{
public:
	TArray<int32>                                Org_LearnAbility;                                  // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.ReminiscenceBufferDopingParam
struct FReminiscenceBufferDopingParam : public FReminiscenceBufferBase
{
public:
	TArray<struct FCharacterParam>               Org_DopingParam;                                   // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct Majesty.ReminiscenceBufferJP
struct FReminiscenceBufferJP : public FReminiscenceBufferBase
{
public:
	TArray<int32>                                Org_JP;                                            // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                Start_JP;                                          // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.ReminiscenceBufferExp
struct FReminiscenceBufferExp : public FReminiscenceBufferBase
{
public:
	TArray<int32>                                Org_Exp;                                           // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x30 (0x30 - 0x0)
// ScriptStruct Majesty.ReminiscenceBuf_EquipAbility
struct FReminiscenceBuf_EquipAbility
{
public:
	TArray<int32>                                Support;                                           // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAcquisitionAbilityData>       AbilityList;                                       // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FAcquisitionAbilityData               AdvancedAbility;                                   // 0x20(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.ReminiscenceBufferAbility
struct FReminiscenceBufferAbility : public FReminiscenceBufferBase
{
public:
	TArray<struct FReminiscenceBuf_EquipAbility> Org_EquipAbility;                                  // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.ReminiscenceBufferJob
struct FReminiscenceBufferJob : public FReminiscenceBufferBase
{
public:
	TArray<int32>                                Org_SecondJobId;                                   // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.ReminiscenceBufferEquipment
struct FReminiscenceBufferEquipment : public FReminiscenceBufferBase
{
public:
	TArray<struct FSaveEquipmentDataID>          Org_Equipment;                                     // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct Majesty.ReminiscenceBufferItem
struct FReminiscenceBufferItem : public FReminiscenceBufferBase
{
public:
	TArray<int32>                                Org_ItemID;                                        // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<int32>                                Org_ItemNum;                                       // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct Majesty.ReminiscenceBufferMoney
struct FReminiscenceBufferMoney : public FReminiscenceBufferBase
{
public:
	int32                                        Org_Money;                                         // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20EB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x68 (0x68 - 0x0)
// ScriptStruct Majesty.ReminiscenceRestorePlacement
struct FReminiscenceRestorePlacement
{
public:
	enum class EKSCharacterMoveMode              MoveMode;                                          // 0x0(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20EC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LadderUpEndPos;                                    // 0x4(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LadderDownEndPos;                                  // 0x10(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MoveLadderPosition;                                // 0x1C(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PlayerLocation;                                    // 0x28(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EncountTriggerId;                                  // 0x34(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEquipLanternData                     EquipLantern;                                      // 0x38(0x20)(Edit, EditConst, NativeAccessSpecifierPublic)
	TArray<int32>                                EnableSwitchIndoorTrigger;                         // 0x58(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct Majesty.SearchInfomationData
struct FSearchInfomationData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20ED[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                InfoText;                                          // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AccessPoint;                                       // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsEffective;                                       // 0x24(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20EE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                NotificationText;                                  // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct Majesty.SearchRelationInfoData
struct FSearchRelationInfoData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20EF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                PersonalInfoList;                                  // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                DiagramList;                                       // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x48 - 0x8)
// ScriptStruct Majesty.NPCDiagramData
struct FNPCDiagramData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VisibleLevel;                                      // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlaceID;                                           // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NPCID;                                             // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                TargetNPCID;                                       // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                RelationType;                                      // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                Detail;                                            // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x48 - 0x8)
// ScriptStruct Majesty.NPCPersonalData
struct FNPCPersonalData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VisibleLevel;                                      // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Sex;                                               // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Age;                                               // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CategoryTopName;                                   // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20F0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                CategoryTopDetailList;                             // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        CategoryBottomName;                                // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20F1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                CategoryBottomDetailList;                          // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct Majesty.SequencerResourceData
struct FSequencerResourceData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20F2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UObject>                ResourcePath;                                      // 0x10(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct Majesty.SeVibrationData
struct FSeVibrationData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20F3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x70 (0x78 - 0x8)
// ScriptStruct Majesty.EquipParamBeforeAfter
struct FEquipParamBeforeAfter : public FTableRowBase
{
public:
	TArray<int32>                                CharacterParam;                                    // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                EquipAllBefore;                                    // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                EquipTargetBefore;                                 // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                EquipTargetAfter;                                  // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                ParamAllBefore;                                    // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                ParamAllAfter;                                     // 0x58(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<bool>                                 IsEffective;                                       // 0x68(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x28 (0x30 - 0x8)
// ScriptStruct Majesty.ShopInfoData
struct FShopInfoData : public FTableRowBase
{
public:
	class FName                                  ShopName;                                          // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESHOP_TYPE                        ShopType;                                          // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20F4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ShopBGM;                                           // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InnBasePrice;                                      // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  InnDiscountItem;                                   // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InnDiscountBasePrice;                              // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ID;                                                // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct Majesty.FShopInfoDataBase
struct FFShopInfoDataBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ShopName;                                          // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20F5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ShopType;                                          // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ShopBGM;                                           // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InnBasePrice;                                      // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  InnDiscountItem;                                   // 0x34(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InnDiscountBasePrice;                              // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct Majesty.SkillInfoData
struct FSkillInfoData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Name;                                              // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Detail;                                            // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InvokeType;                                        // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                Values;                                            // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct Majesty.KSCueSheetData
struct FKSCueSheetData : public FTableRowBase
{
public:
	class FName                                  AssetPath;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x28 (0x28 - 0x0)
// ScriptStruct Majesty.KSCategoryVolumeData
struct FKSCategoryVolumeData
{
public:
	uint8                                        Pad_20F6[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x48 (0x50 - 0x8)
// ScriptStruct Majesty.SpActionMerchant_Data
struct FSpActionMerchant_Data : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESPACT_MERCHANT_TYPE              SPEffectType;                                      // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20F7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SPEffectName;                                      // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SPEffectOverView;                                  // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ResultTextSuccess;                                 // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ResultTextFailure;                                 // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                EffectIntParam;                                    // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FName>                          EffectItemLabel;                                   // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct Majesty.SpActionMerchant_Type
struct FSpActionMerchant_Type : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ResultParamType;                                   // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                 ExecTrigger;                                       // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  EffectDescription;                                 // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class ESPACT_MER_DESC_PARAM_TYPE> DescTextParam;                                     // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x50 (0x50 - 0x0)
// ScriptStruct Majesty.SpActMerchantResult
struct FSpActMerchantResult
{
public:
	enum class ESPACT_MER_RESULT_TYPE            Result;                                            // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20F8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ResultTextLabel;                                   // 0x4(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20F9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ResultTextLabel_Param0;                            // 0x10(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PriceBefore;                                       // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PriceAfter;                                        // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          AcquiredItemLabel;                                 // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                AcquiredItemNum;                                   // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        NPCID;                                             // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20FA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x40 (0x40 - 0x0)
// ScriptStruct Majesty.SpActionMerchant_MenuData
struct FSpActionMerchant_MenuData
{
public:
	int32                                        SPActionID;                                        // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20FB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SPActionName;                                      // 0x8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	enum class ESPACT_MERCHANT_TYPE              EffectType;                                        // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20FC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  EffectOverview;                                    // 0x28(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.SpecialAbilityInfoData
struct FSpecialAbilityInfoData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DesplayName;                                       // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Detail;                                            // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20FD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x58 (0x60 - 0x8)
// ScriptStruct Majesty.SpecialActionData
struct FSpecialActionData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MenuName;                                          // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MenuDetail;                                        // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BattleCommandName;                                 // 0x1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BattleCommandDetail;                               // 0x24(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PlayerSelectDetail;                                // 0x2C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20FE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SpecialActionType;                                 // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          AbilityID;                                         // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         UniqueCommandFlag;                                 // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20FF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BanFlag;                                           // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct Majesty.SpecialItemData
struct FSpecialItemData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESPECIAL_ITEM_TYPE                SpecialType;                                       // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UsableSpItem;                                      // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2100[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ShowInItemListFlag;                                // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HideInItemListFlag;                                // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayableCharacterID              RelativeCharacterId;                               // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2101[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RelativeItemLabel;                                 // 0x1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BgmLabel;                                          // 0x24(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2102[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          CommonText;                                        // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x8 (0x10 - 0x8)
// ScriptStruct Majesty.StaffCreditPartsTable
struct FStaffCreditPartsTable : public FTableRowBase
{
public:
	enum class ECreditAlignment                  Alignment;                                         // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECreditFontColor                  FontColor;                                         // 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECreditFontType                   FontType;                                          // 0xA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECreditFontSize                   FontSize;                                          // 0xB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2103[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x10 - 0x8)
// ScriptStruct Majesty.StaffCreditStyleTable
struct FStaffCreditStyleTable : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECreditAlignment                  Alignment;                                         // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECreditFontColor                  FontColor;                                         // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECreditFontType                   FontType;                                          // 0xE(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECreditFontSize                   FontSize;                                          // 0xF(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct Majesty.StaffCreditTable
struct FStaffCreditTable : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECreditWidgetType                 PartsType;                                         // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2104[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  Style;                                             // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        Resource;                                          // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x18 - 0x0)
// ScriptStruct Majesty.MainStoryEventObjectData
struct FMainStoryEventObjectData
{
public:
	uint8                                        Pad_2105[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct Majesty.RelatedFlagSection
struct FRelatedFlagSection
{
public:
	int32                                        Begin;                                             // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        End;                                               // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x88 (0x90 - 0x8)
// ScriptStruct Majesty.SubMissionData
struct FSubMissionData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AreaIndex;                                         // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESUB_STORY_CATEGORY               StoryCategory;                                     // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2106[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MissionIndex;                                      // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WorldMapIcon;                                      // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class EPlayableCharacterID>      StartConditionParty;                               // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  TitleTextLabel;                                    // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DetailTextLabel;                                   // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          ClearTextLabel;                                    // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  NPCName;                                           // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  NPCLabel;                                          // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RewardMoney;                                       // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2107[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          RewardParam;                                       // 0x68(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  RelatedMainStoryTask;                              // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRelatedFlagSection>           RelatedFlagSections;                               // 0x80(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x14 (0x14 - 0x0)
// ScriptStruct Majesty.SubTitleBlockData
struct FSubTitleBlockData
{
public:
	class FName                                  TalkLabel;                                         // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ViewTime;                                          // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaitTime;                                          // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BlockIndex;                                        // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct Majesty.SubTitleDataBase
struct FSubTitleDataBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MapInWaitTime;                                     // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeInTime;                                        // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOutTime;                                       // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BeginMainStoryTaskLabel;                           // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EndMainStoryTaskLabel;                             // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseBackground;                                     // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2108[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSubTitleBlockData>            BlockData;                                         // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x38 (0x40 - 0x8)
// ScriptStruct Majesty.SupportAbilityDataBase
struct FSupportAbilityDataBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SupportAbilityID;                                  // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DisplayName;                                       // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Detail;                                            // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESUPPORT_AILMENT_TYPE             SupportAilmentType;                                // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2109[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InvocationValue;                                   // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AddtionalInVocationValue00;                        // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AddtionalInVocationValue01;                        // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AddtionalInVocationValue02;                        // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ExecAbilityLabel;                                  // 0x34(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_210A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x10 - 0x0)
// ScriptStruct Majesty.SupporterCommandData
struct FSupporterCommandData
{
public:
	class FName                                  CommandName;                                       // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Rate;                                              // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Cost;                                              // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0xB0 (0xB8 - 0x8)
// ScriptStruct Majesty.SupportCharacterData
struct FSupportCharacterData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SupporterID;                                       // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DisplayNameID;                                     // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DisplayRank;                                       // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ActionLabel;                                       // 0x1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SupportPoint;                                      // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsUnlimitedSupporter;                              // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_210B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SupportLimit;                                      // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterParam                       Parameter;                                         // 0x30(0x34)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	enum class EWEAPON_CATEGORY                  WeaponType;                                        // 0x64(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWEAPON_STANCE                    WeaponStance;                                      // 0x65(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_210C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  WeaponItemLabel;                                   // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CoverRate;                                         // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_210D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UBattleAIBase>           SupporterAI;                                       // 0x78(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSupporterCommandData>         CommandTable;                                      // 0xA0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  SessionAbility;                                    // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct Majesty.SwitchIndoorTriggerParam
struct FSwitchIndoorTriggerParam : public FTableRowBase
{
public:
	float                                        FCameraDistanceIndoor;                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FManualFocusDistanceIndoor;                        // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FManualFocusDistanceOutdoor;                       // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FCharacterScaleIndoor;                             // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FCharacterScaleOutdoor;                            // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FCharacterHeightIndoor;                            // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FCharacterHeightOutdoor;                           // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NIndoorFloorNum;                                   // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NOutdoorFloorNum;                                  // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceOutdoor;                                     // 0x2C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_210E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NProcessOrder;                                     // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_210F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x10 (0x18 - 0x8)
// ScriptStruct Majesty.TalkVoice
struct FTalkVoice : public FTableRowBase
{
public:
	TArray<class FName>                          Voice;                                             // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x58 (0x58 - 0x0)
// ScriptStruct Majesty.MJGameTextMap
struct FMJGameTextMap
{
public:
	TMap<class FString, class FName>             TextMap;                                           // 0x0(0x50)(NativeAccessSpecifierPublic)
	bool                                         IsReady;                                           // 0x50(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2110[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x8 (0x8 - 0x0)
// ScriptStruct Majesty.TimeZoneSaveData
struct FTimeZoneSaveData
{
public:
	enum class ETimeZoneType                     M_eTimeZoneType;                                   // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2111[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        M_nTimeZoneChangeValue;                            // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x90 (0x98 - 0x8)
// ScriptStruct Majesty.TownInfoData
struct FTownInfoData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TownLabel;                                         // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TownName;                                          // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ConnectionInit;                                    // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ConnectionMax;                                     // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ConnectionPrice;                                   // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                ConnectionRate;                                    // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFieldCommandAssistItem               StealFcAssistItem;                                 // 0x38(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FFieldCommandAssistItem               BattleFcAssistItem;                                // 0x44(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FFieldCommandAssistItem               MonsterFcAssistItem;                               // 0x50(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FFieldCommandAssistItem               LeadFcAssistItem;                                  // 0x5C(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FFieldCommandAssistItem               LureFcAssistItem;                                  // 0x68(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FFieldCommandAssistItem               HearFcAssistItem;                                  // 0x74(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FFieldCommandAssistItem               HireFcAssistItem;                                  // 0x80(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FFieldCommandAssistItem               RobFcAssistItem;                                   // 0x8C(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};

// 0xA8 (0xA8 - 0x0)
// ScriptStruct Majesty.TransportCameraParam
struct FTransportCameraParam
{
public:
	struct FVector                               CameraLocationOffset;                              // 0x0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              CameraRotation;                                    // 0xC(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               CharacterScale;                                    // 0x18(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCameraFilmbackSettings               Filmback;                                          // 0x24(0xC)(Edit, BlueprintVisible, Interp, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraLensSettings                   LensSettings;                                      // 0x30(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraFocusSettings                  FocusSettings;                                     // 0x48(0x58)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        CurrentFocalLength;                                // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentAperture;                                   // 0xA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct Majesty.TutorialFlagPart
struct FTutorialFlagPart : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETUTORIAL_TYPE                    TutorialType;                                      // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2112[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TutorialListFlag;                                  // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TutorialOpenedFlag;                                // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          PageDataLabel;                                     // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x20 (0x28 - 0x8)
// ScriptStruct Majesty.DataTableTutorialList
struct FDataTableTutorialList : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ListName;                                          // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2113[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          FlagPartLabel;                                     // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x30 (0x38 - 0x8)
// ScriptStruct Majesty.DataTableTutorialPageData
struct FDataTableTutorialPageData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TemplateType;                                      // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          PageImage;                                         // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FName                                  TitleText;                                         // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          PageText;                                          // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.UIButtonData
struct FUIButtonData : public FTableRowBase
{
public:
	class UImage*                                Image_Active;                                      // 0x8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Image_DeActive;                                    // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UButton*                               Button;                                            // 0x18(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.UIResourceData
struct FUIResourceData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EUIResType                        ResType;                                           // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EUIResCategory                    Category;                                          // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2114[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UObject>>        ResList;                                           // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
};

// 0x78 (0x80 - 0x8)
// ScriptStruct Majesty.UIResourceReferenceData
struct FUIResourceReferenceData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EUIResType                        ResType;                                           // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EUIResCategory                    Category;                                          // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2115[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                ResMap;                                            // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<int32>                                LangMap;                                           // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<int32, TSoftObjectPtr<class UObject>>   AssetMap;                                          // 0x30(0x50)(Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)
};

// 0x48 (0x50 - 0x8)
// ScriptStruct Majesty.UIWidgetReferenceData
struct FUIWidgetReferenceData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2116[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                BaseClassPath;                                     // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UObject>                InstancePath;                                      // 0x20(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ZOrder;                                            // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWIDGET_CREATE_PHASE              CreatePhase;                                       // 0x4C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAddViewport;                                     // 0x4D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2117[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x18 - 0x0)
// ScriptStruct Majesty.PlayRequest
struct FPlayRequest
{
public:
	int32                                        PlayIndex;                                         // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Label;                                             // 0x4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Loop;                                              // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2118[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LoopInterval;                                      // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Power;                                             // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.WeaponMasterEventDataBase
struct FWeaponMasterEventDataBase : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EventLabel;                                        // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DialogText;                                        // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2119[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.WidgetTemporaryHiddenData
struct FWidgetTemporaryHiddenData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWIDGET_TEMPORARY_HIDE_USER       HiddenUser;                                        // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_211A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EKSUIKind>                 UiList;                                            // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};

// 0x40 (0x40 - 0x0)
// ScriptStruct Majesty.WorldMapDestinationData
struct FWorldMapDestinationData
{
public:
	class FName                                  WorldMapLocation;                                  // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WorldMapDestination;                               // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMAIN_STORY_CATEGORY              StoryCategory;                                     // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_211B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ChapterNumber;                                     // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ChapterText;                                       // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPlayableCharacterID              PlayerCharaId;                                     // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_211C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EPlayableCharacterID>      RelationCharaId;                                   // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                        RecommendationLevel;                               // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_211D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

// 0x18 (0x20 - 0x8)
// ScriptStruct Majesty.WorldMapIconData
struct FWorldMapIconData : public FTableRowBase
{
public:
	int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NearVisibility;                                    // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         MiddleVisibility;                                  // 0xD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         FarVisibility;                                     // 0xE(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsDisplayOnlyCurrentLocation;                      // 0xF(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  IconTexLabel;                                      // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsGuildIcon;                                       // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsShipIcon;                                        // 0x19(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_211E[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
};

}


